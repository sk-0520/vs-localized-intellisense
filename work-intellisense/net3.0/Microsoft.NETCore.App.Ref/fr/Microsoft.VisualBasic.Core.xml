<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>Fournit des propriétés, méthodes et événements en rapport avec l'application actuelle.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>Change la culture utilisée par le thread actuel pour le traitement et la mise en forme de chaînes.</summary>
      <param name="cultureName">
        <see langword="String" />. Nom de la culture sous la forme d'une chaîne. Pour obtenir la liste des noms possibles, consultez <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> n’est pas un nom de culture valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>Change la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</summary>
      <param name="cultureName">
        <see langword="String" />. Nom de la culture sous la forme d'une chaîne. Pour obtenir la liste des noms possibles, consultez <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> n’est pas un nom de culture valide.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>Obtient la culture que le thread actuel utilise pour le traitement et la mise en forme de chaînes.</summary>
      <returns>Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture que le thread actuel utilise pour le traitement et la mise en forme de chaînes.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>Retourne la valeur de la variable d'environnement spécifiée.</summary>
      <param name="name">
        <see langword="String" /> contenant le nom de la variable d'environnement.</param>
      <returns>
        <see langword="String" /> contenant la valeur de la variable d'environnement avec le nom <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">La variable d'environnement spécifiée par <paramref name="name" /> n'existe pas.</exception>
      <exception cref="T:System.Security.SecurityException">Le code appelant ne dispose pas de <see cref="T:System.Security.Permissions.EnvironmentPermission" /> avec un accès <see langword="Read" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>Obtient un objet qui fournit des propriétés destinées à obtenir des informations à propos de l'assembly de l'application, telles que le numéro de version, la description, et ainsi de suite.</summary>
      <returns>Objet <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> pour l'application en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>Obtient la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</summary>
      <returns>Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>Fournit des propriétés pour obtenir des informations relatives à l'application, telles que le numéro de version, la description, les assemblys chargés, et ainsi de suite.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> à l'aide des informations d'assembly spécifiées.</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. Assembly pour lequel obtenir ces informations.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>Obtient le nom, sans extension, du fichier d'assembly pour l'application.</summary>
      <returns>
        <see langword="String" /> contenant le nom du fichier.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>Obtient le nom de la société associée à l'application.</summary>
      <returns>
        <see langword="String" /> qui contient le nom de la société associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyCompanyAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>Obtient la mention des droits d'auteur associée à l'application.</summary>
      <returns>
        <see langword="String" /> contenant la mention des droits d'auteur associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>Obtient la description associée à l'application.</summary>
      <returns>
        <see langword="String" /> contenant la description associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>Obtient le répertoire dans lequel l'application est stockée.</summary>
      <returns>
        <see langword="String" /> qui contient le répertoire dans lequel l'application est stockée.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>Obtient une collection de tous les assemblys chargés par l'application.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see cref="T:System.Reflection.Assembly" /> contenant tous les assemblys chargés par l'application.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Le domaine d'application n'est pas chargé.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>Obtient le nom du produit associé à l'application.</summary>
      <returns>
        <see langword="String" /> contenant le nom du produit associé à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyProductAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>Obtient les informations actuelles sur la trace de la pile.</summary>
      <returns>
        <see langword="String" /> contenant les informations actuelles sur la trace de la pile. La valeur de retour peut être <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Les informations de trace de la pile demandées sont hors limites.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>Obtient le titre associé à l'application.</summary>
      <returns>
        <see langword="String" /> contenant le <see cref="T:System.Reflection.AssemblyTitleAttribute" /> associé à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyTitleAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>Obtient la mention de marque associée à l'application.</summary>
      <returns>
        <see langword="String" /> contenant la mention de marque associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>Obtient le numéro de version de l'application.</summary>
      <returns>Objet <see cref="T:System.Version" /> contenant le numéro de version de l'application.</returns>
      <exception cref="T:System.Security.SecurityException">L'application n'a pas les autorisations suffisantes pour accéder à la version de l'assembly.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>Obtient la quantité de mémoire physique mappée au contexte du processus.</summary>
      <returns>
        <see langword="Long" /> contenant le nombre d'octets de mémoire physique mappée au contexte du processus.</returns>
      <exception cref="T:System.Security.SecurityException">Il existe une situation de confiance partielle et l'utilisateur ne dispose pas des autorisations nécessaires.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>Fournit des propriétés, méthodes et événements en rapport avec l'application actuelle.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>Obtient une collection contenant les arguments de ligne de commande sous la forme de chaînes pour l'application actuelle.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see langword="String" />, contenant les arguments de ligne de commande sous la forme de chaînes pour l'application actuelle.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>Définit les valeurs à utiliser comme arguments de ligne de commande de l'application actuelle.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see langword="String" />, contenant les chaînes à utiliser comme arguments de ligne de commande pour l'application actuelle.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.Startup" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />.</summary>
      <param name="args">Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>Obtient les arguments de ligne de commande de l'application.</summary>
      <returns>Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'application.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.StartupNextInstance" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="args">Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'instance d'application suivante.</param>
      <param name="bringToForegroundFlag">
        <see cref="T:System.Boolean" /> qui indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>Indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>Obtient les arguments de ligne de commande de l'instance d'application suivante.</summary>
      <returns>Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'instance d'application suivante.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.UnhandledException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</summary>
      <param name="exitApplication">
        <see cref="T:System.Boolean" /> qui indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</param>
      <param name="exception">
        <see cref="T:System.Exception" /> survenue.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>Indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>Fournit l'accès aux informations concernant l'utilisateur actuel.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>Obtient ou définit l'entité de sécurité en cours (pour une sécurité basée sur les rôles).</summary>
      <returns>Valeur <see cref="T:System.Security.Principal.IPrincipal" /> représentant le contexte de sécurité.</returns>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation nécessaire pour définir le principal.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>Obtient ou définit l'objet d'entité de sécurité représentant l'utilisateur en cours.</summary>
      <returns>Objet <see cref="T:System.Security.Principal.IPrincipal" /> représentant l'utilisateur en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>Obtient une valeur qui indique si l'utilisateur a été authentifié.</summary>
      <returns>
        <see langword="True" /> si l'utilisateur a été identifié ; sinon <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>Détermine si l'utilisateur actuel appartient au rôle spécifié.</summary>
      <param name="role">Nom du rôle pour lequel l'appartenance (membership) doit être vérifiée.</param>
      <returns>
        <see langword="True" /> si l'utilisateur actuel est un membre du rôle spécifié ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>Obtient le nom de l'utilisateur en cours.</summary>
      <returns>
        <see langword="String" />. Nom de l'utilisateur actuel.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary vsli:raw="Indicates the window style to use for the invoked program when calling the &lt;see langword=&quot;Shell&quot; /&gt; function.">Indique le style de fenêtre à utiliser pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary vsli:raw="Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHide&quot; /&gt;.">La fenêtre est cachée et le focus est passé à la fenêtre cachée. Ce membre est équivalent à la constante Visual Basic <see langword="vbHide" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary vsli:raw="Window is maximized with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMaximizedFocus&quot; /&gt;.">La fenêtre est agrandie et activée. Ce membre est équivalent à la constante Visual Basic <see langword="vbMaximizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary vsli:raw="Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedFocus&quot; /&gt;.">La fenêtre est affichée sous forme d'icône et activée. Ce membre est équivalent à la constante Visual Basic <see langword="vbMinimizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary vsli:raw="Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedNoFocus&quot; /&gt;.">La fenêtre est affichée sous forme d'icône. La fenêtre actuellement active reste active. Ce membre est équivalent à la constante Visual Basic <see langword="vbMinimizedNoFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary vsli:raw="Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalFocus&quot; /&gt;.">La fenêtre a le focus et est restaurée à sa taille et à sa position d'origine. Ce membre est équivalent à la constante Visual Basic <see langword="vbNormalFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary vsli:raw="Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalNoFocus&quot; /&gt;.">La fenêtre est restaurée à sa taille et à sa position la plus récentes. La fenêtre actuellement active reste active. Ce membre est équivalent à la constante Visual Basic <see langword="vbNormalNoFocus" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary vsli:raw="Indicates the type of procedure being invoked when calling the &lt;see langword=&quot;CallByName&quot; /&gt; function.">Indique le type de la procédure qui est appelée lors de l'appel à la fonction <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary vsli:raw="A property value is being retrieved.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGet&quot; /&gt;.">Une valeur de propriété est récupérée.  Ce membre est équivalent à la constante Visual Basic <see langword="vbGet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary vsli:raw="An Object property value is being determined. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLet&quot; /&gt;.">Une valeur de propriété Objet est déterminée. Ce membre est équivalent à la constante Visual Basic <see langword="vbLet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary vsli:raw="A method is being invoked.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMethod&quot; /&gt;.">Une méthode est appelée.  Ce membre est équivalent à la constante Visual Basic <see langword="vbMethod" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary vsli:raw="A property value is being determined.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSet&quot; /&gt;.">Une valeur de propriété est déterminée.  Ce membre est équivalent à la constante Visual Basic <see langword="vbSet" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary vsli:raw="A Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; is an ordered set of items that can be referred to as a unit.">Une <see langword="Collection" /> Visual Basic est un jeu ordonné d’éléments qui peut être considéré collectivement comme une unité.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary vsli:raw="Creates and returns a new Visual Basic &lt;see cref=&quot;T:Microsoft.VisualBasic.Collection&quot; /&gt; object.">Crée et retourne un objet <see cref="T:Microsoft.VisualBasic.Collection" /> Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary vsli:raw="Adds an element to a &lt;see langword=&quot;Collection&quot; /&gt; object.">Ajoute un élément à un objet <see langword="Collection" />.</summary>
      <param name="Item" vsli:raw="Required. An object of any type that specifies the element to add to the collection.">Obligatoire. Objet de tout type qui spécifie les erreurs à ajouter à la collection.</param>
      <param name="Key" vsli:raw="Optional. A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.">Optionnel. Expression <see langword="String" /> unique qui spécifie une chaîne clé qui peut être utilisée au lieu d'un index de position pour accéder à ce nouvel élément dans la collection.</param>
      <param name="Before" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the &lt;paramref name=&quot;Before&quot; /&gt; argument. If &lt;paramref name=&quot;Before&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. If &lt;paramref name=&quot;Before&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">Facultatif. Expression qui spécifie une position relative dans la collection. L'élément à ajouter est placé dans la collection avant l'élément identifié par l'argument <paramref name="Before" />. Si <paramref name="Before" /> est une expression numérique, ce doit être un nombre entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection. Si <paramref name="Before" /> est une expression <see langword="String" />, il doit correspondre à la chaîne clé spécifiée au moment où l'élément auquel il est fait référence a été ajouté à la collection. Vous ne pouvez pas spécifier <paramref name="Before" /> et <paramref name="After" />.</param>
      <param name="After" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the &lt;paramref name=&quot;After&quot; /&gt; argument. If &lt;paramref name=&quot;After&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see langword=&quot;Count&quot; /&gt; property. If &lt;paramref name=&quot;After&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">Optionnel. Expression qui spécifie une position relative dans la collection. L'élément à ajouter est placé dans la collection après l'élément identifié par l'argument <paramref name="After" />. Si <paramref name="After" /> est une expression numérique, ce doit être un nombre entre 1 et la valeur de la propriété <see langword="Count" /> de la collection. Si <paramref name="After" /> est une expression <see langword="String" />, il doit correspondre à la chaîne clé spécifiée au moment où l'élément auquel il est fait référence a été ajouté à la collection. Vous ne pouvez pas spécifier <paramref name="Before" /> et <paramref name="After" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary vsli:raw="Deletes all elements of a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object.">Supprime tous les éléments d'un objet Visual Basic <see langword="Collection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key.">Retourne une valeur indiquant si un objet Visual Basic <see langword="Collection" /> contient un élément avec une clé spécifique.</summary>
      <param name="Key" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; expression that specifies the key for which to search the elements of the collection.">Obligatoire. Une expression <see langword="String" /> qui spécifie la clé à rechercher dans les éléments de la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un objet Visual Basic <see langword="Collection" /> contient un élément avec une clé spécifique ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary vsli:raw="Gets the number of elements in a collection.">Obtient le nombre d’éléments d’une collection.</summary>
      <returns vsli:raw="The number of elements in a collection.">Nombre d'éléments d'une collection.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Énumérateur permettant d'effectuer une itération au sein de la collection.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Obtient un élément spécifique d’un objet <see langword="Collection" /> en fonction de sa position ou de sa clé.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">Expression numérique qui spécifie la position d'un élément de la collection. <paramref name="Index" /> doit être un nombre compris entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection. Ou (B) Une expression <see langword="Object" /> qui spécifie la position ou la chaîne clé d'un élément de la collection.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Élément spécifique d’un <see langword="Collection" /> objet par position ou par clé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Obtient un élément spécifique d’un objet <see langword="Collection" /> en fonction de sa position ou de sa clé.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">Expression numérique qui spécifie la position d'un élément de la collection. <paramref name="Index" /> doit être un nombre compris entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection. Ou (B) Une expression <see langword="Object" /> qui spécifie la position ou la chaîne clé d'un élément de la collection.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Élément spécifique d’un <see langword="Collection" /> objet par position ou par clé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Obtient un élément spécifique d’un objet <see langword="Collection" /> en fonction de sa position ou de sa clé.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">Expression <see langword="String" /> unique qui spécifie une chaîne clé qui peut être utilisée au lieu d'un index de position pour accéder à un élément de la collection. <paramref name="Key" /> doit correspondre à l'argument <paramref name="Key" /> spécifié lorsque l'élément a été ajouté à la collection.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Élément spécifique d’un <see langword="Collection" /> objet par position ou par clé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">Supprime un élément d'un objet <see langword="Collection" />.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property.">Expression numérique qui spécifie la position d'un élément de la collection. <paramref name="Index" /> doit être un nombre compris entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">Supprime un élément d'un objet <see langword="Collection" />.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">Expression <see langword="String" /> unique qui spécifie une chaîne clé qui peut être utilisée au lieu d'un index de position pour accéder à un élément de la collection. <paramref name="Key" /> doit correspondre à l'argument <paramref name="Key" /> spécifié lorsque l'élément a été ajouté à la collection.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;ComClassAttribute&quot; /&gt; attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.">L'attribut <see langword="ComClassAttribute" /> donne instruction au compilateur d'ajouter des métadonnées qui autorisent une classe à être exposée comme un objet COM.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Initialise la valeur de la propriété <see langword="ClassID" /> utilisée pour identifier une classe de manière unique.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Initialise la valeur de la propriété <see langword="ClassID" /> utilisée pour identifier une classe de manière unique.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">Initialise la valeur de la propriété <see langword="InterfaceID" /> utilisée pour identifier une interface de manière unique.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Initialise la valeur de la propriété <see langword="ClassID" /> utilisée pour identifier une classe de manière unique.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">Initialise la valeur de la propriété <see langword="InterfaceID" /> utilisée pour identifier une interface de manière unique.</param>
      <param name="_EventId" vsli:raw="Initializes the value of the &lt;see langword=&quot;EventID&quot; /&gt; property that is used to uniquely identify an event.">Initialise la valeur de la propriété <see langword="EventID" /> utilisée pour identifier un événement de manière unique.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary vsli:raw="Gets a class ID used to uniquely identify a class.">Obtient un ID de classe utilisé pour identifier une classe de manière unique.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.">Lecture seule. Chaîne qui peut être utilisée par le compilateur pour identifier la classe de manière unique lorsqu'un objet COM est créé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary vsli:raw="Gets an event ID used to uniquely identify an event.">Obtient un ID d'événement utilisé pour identifier un événement de manière unique.</summary>
      <returns vsli:raw="Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.">En lecture seule. Chaîne qui peut être utilisée par le compilateur pour identifier un événement pour la classe de manière unique lorsqu'un objet COM est créé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary vsli:raw="Gets an interface ID used to uniquely identify an interface.">Obtient un ID d'interface utilisé pour identifier une interface de manière unique.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.">Lecture seule. Chaîne qui peut être utilisée par le compilateur pour identifier une interface pour la classe de manière unique lorsqu'un objet COM est créé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary vsli:raw="Indicates that the COM interface name shadows another member of the class or base class.">Indique que le nom de l'interface COM occulte un autre membre de la classe ou de la classe de base.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates that the COM interface name shadows another member of the class or base class.">Valeur <see langword="Boolean" /> qui indique que le nom de l'interface COM occulte un autre membre de la classe ou de la classe de base.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary vsli:raw="Indicates how to compare strings when calling comparison functions.">Indique comment comparer des chaînes lors de l'appel de fonctions de comparaison.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary vsli:raw="Performs a binary comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBinaryCompare&quot; /&gt;.">Effectue une comparaison binaire. Ce membre est équivalent à la constante Visual Basic <see langword="vbBinaryCompare" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary vsli:raw="Performs a textual comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTextCompare&quot; /&gt;.">Effectue une comparaison textuelle. Ce membre est équivalent à la constante Visual Basic <see langword="vbTextCompare" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Boolean" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Boolean" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Boolean" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Boolean" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Boolean" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Boolean" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Byte" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Byte" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Byte" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Byte" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Byte" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Byte" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="CharArray" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="CharArray" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="CharArray" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="CharArray" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="CharArray" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="CharArray" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Char" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Char" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Char" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Char" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Char" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Char" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary vsli:raw="Provides methods that perform various type conversions.">Fournit des méthodes qui exécutent différentes conversions de types.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Convertit un objet dans le type spécifié.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objet à convertir.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Type dans lequel convertir l'objet.</param>
      <returns vsli:raw="An object of the specified target type.">Objet du type cible spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Convertit un objet dans le type spécifié.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objet à convertir.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Type dans lequel convertir l'objet.</param>
      <returns vsli:raw="An object of the specified target type.">Objet du type cible spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a string, given a byte count.">Convertit une valeur <see cref="T:System.Char" /> en chaîne, en fonction d'un nombre d'octets.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">Valeur <see langword="Char" /> à convertir.</param>
      <param name="Count" vsli:raw="The byte count of the &lt;see langword=&quot;Char&quot; /&gt; value.">Nombre d'octets de la valeur <see langword="Char" />.</param>
      <returns vsli:raw="The string representation of the specified value.">Représentation sous forme de chaîne de la valeur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">Convertit un tableau <see cref="T:System.Char" /> en chaîne.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">Tableau <see langword="Char" /> à convertir.</param>
      <returns vsli:raw="The string representation of the specified array.">Représentation sous forme de chaîne du tableau spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Converts a subset of a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">Convertit un sous-ensemble d'un tableau <see cref="T:System.Char" /> en chaîne.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">Tableau <see langword="Char" /> à convertir.</param>
      <param name="StartIndex" vsli:raw="Zero-based index of the start position.">Index de base zéro de la position de départ.</param>
      <param name="Length" vsli:raw="Length of the subset in bytes.">Longueur du sous-ensemble en octets.</param>
      <returns vsli:raw="The string representation of the specified array from the start position to the specified length.">Représentation sous forme de chaîne du tableau spécifié de la position de départ à la longueur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.Boolean" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the object is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Valeur <see langword="Boolean" />. Retourne <see langword="False" /> si l'objet est null ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Convertit une chaîne en valeur <see cref="T:System.Boolean" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the string is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Valeur <see langword="Boolean" />. Retourne <see langword="False" /> si la chaîne est null ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.Byte" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the object.">Valeur <see langword="Byte" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Convertit une chaîne en valeur <see cref="T:System.Byte" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the string.">Valeur <see langword="Byte" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.Char" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the object.">Valeur <see langword="Char" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Convertit une chaîne en valeur <see cref="T:System.Char" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the string.">Valeur <see langword="Char" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary vsli:raw="Converts an object to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Convertit un objet en tableau <see cref="T:System.Char" /> unidimensionnel.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">Tableau <see langword="Char" /> unidimensionnel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary vsli:raw="Converts a string to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Convertit une chaîne en tableau <see cref="T:System.Char" /> unidimensionnel.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">Tableau <see langword="Char" /> unidimensionnel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.DateTime" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the object.">Valeur <see langword="DateTime" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Convertit une chaîne en valeur <see cref="T:System.DateTime" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the string.">Valeur <see langword="DateTime" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Convertit une valeur <see cref="T:System.Boolean" /> en valeur <see cref="T:System.Decimal" />.</summary>
      <param name="Value" vsli:raw="A Boolean value to convert.">Valeur Boolean à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the Boolean value.">Valeur <see langword="Decimal" /> de la valeur Boolean.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.Decimal" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the object.">Valeur <see langword="Decimal" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Convertit une chaîne en valeur <see cref="T:System.Decimal" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the string.">Valeur <see langword="Decimal" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.Double" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the object.">Valeur <see langword="Double" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Convertit une chaîne en valeur <see cref="T:System.Double" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the string.">Valeur <see langword="Double" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary vsli:raw="Converts an object to a generic type &lt;paramref name=&quot;T&quot; /&gt;.">Convertit un objet en type générique <paramref name="T" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <typeparam name="T" vsli:raw="The type to convert &lt;paramref name=&quot;Value&quot; /&gt; to.">Type dans lequel convertir <paramref name="Value" />.</typeparam>
      <returns vsli:raw="A structure or object of generic type &lt;paramref name=&quot;T&quot; /&gt;.">Structure ou objet de type générique <paramref name="T" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary vsli:raw="Converts an object to an integer value.">Convertit un objet en valeur entière.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the object.">Valeur <see langword="int" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary vsli:raw="Converts a string to an integer value.">Convertit une chaîne en valeur entière.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the string.">Valeur <see langword="int" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Long&quot; /&gt; value.">Convertit un objet en valeur <see langword="Long" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the object.">Valeur <see langword="Long" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Long&quot; /&gt; value.">Convertit une chaîne en valeur <see langword="Long" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the string.">Valeur <see langword="Long" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary vsli:raw="Converts an object to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.SByte" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the object.">Valeur <see langword="SByte" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">Convertit une chaîne en valeur <see cref="T:System.SByte" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the string.">Valeur <see langword="SByte" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Short&quot; /&gt; value.">Convertit un objet en valeur <see langword="Short" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the object.">Valeur <see langword="Short" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Short&quot; /&gt; value.">Convertit une chaîne en valeur <see langword="Short" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the string.">Valeur <see langword="Short" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.Single" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the object.">Valeur <see langword="Single" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Convertit <see cref="T:System.String" /> en valeur <see cref="T:System.Single" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the string.">Valeur <see langword="Single" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une valeur <see cref="T:System.Boolean" /> en <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value to convert.">Valeur <see langword="Boolean" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Boolean&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une valeur <see cref="T:System.Byte" /> en <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value to convert.">Valeur <see langword="Byte" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Byte&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une valeur <see cref="T:System.Char" /> en <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">Valeur <see langword="Char" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Char&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see cref="T:System.DateTime" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value to convert.">Valeur <see langword="DateTime" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;DateTime&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see cref="T:System.Decimal" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value to convert.">Valeur <see langword="Decimal" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Convertit une valeur <see cref="T:System.Decimal" /> en valeur <see cref="T:System.String" />, à l'aide du format numérique spécifié.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; value to convert.">Valeur <see langword="decimal" /> à convertir.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Format numérique à utiliser, en fonction de <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see cref="T:System.Double" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">Valeur <see langword="Double" /> à convertir.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Convertit une valeur <see cref="T:System.Double" /> en valeur <see cref="T:System.String" />, à l'aide du format numérique spécifié.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">Valeur <see langword="Double" /> à convertir.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Format numérique à utiliser, en fonction de <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Short&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see langword="Short" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value to convert.">Valeur <see langword="Short" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Short&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary vsli:raw="Converts an integer value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur entière en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value to convert.">Valeur <see langword="int" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;int&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Long&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see langword="Long" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value to convert.">Valeur <see langword="Long" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Long&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit un objet en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the object.">Représentation <see langword="String" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value (a single-precision floating point number) to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see cref="T:System.Single" /> (nombre à virgule flottante simple précision) en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">Valeur <see langword="Single" /> à convertir.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Convertit une valeur <see cref="T:System.Single" /> en valeur <see cref="T:System.String" />, à l'aide du format numérique spécifié.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">Valeur <see langword="Single" /> à convertir.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Format numérique à utiliser, en fonction de <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;uint&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see langword="uint" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value to convert.">Valeur <see langword="Uint" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Uint&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Ulong&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit une valeur <see langword="Ulong" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value to convert.">Valeur <see langword="Ulong" /> à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Ulong&quot; /&gt; value.">Représentation <see langword="String" /> de la valeur <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Uint&quot; /&gt; value.">Convertit un objet en valeur <see langword="Uint" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the object.">Valeur <see langword="Uint" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Uint&quot; /&gt; value.">Convertit une chaîne en valeur <see langword="Uint" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the string.">Valeur <see langword="Uint" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">Convertit un objet en valeur <see langword="Ulong" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the object.">Valeur <see langword="Ulong" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">Convertit une chaîne en valeur <see langword="Ulong" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the string.">Valeur <see langword="Ulong" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">Convertit un objet en valeur <see langword="Ushort" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the object.">Valeur <see langword="Ushort" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">Convertit une chaîne en valeur <see langword="Ushort" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the string.">Valeur <see langword="Ushort" /> de la chaîne.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Date" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Date" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Date" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Date" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Date" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Date" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string and culture information.">Retourne une valeur <see langword="Date" /> qui correspond à la chaîne spécifiée et aux informations de culture.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Date" />.</param>
      <param name="culture" vsli:raw="Required. A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object that defines how date values are formatted and displayed, depending on the culture.">Obligatoire. Objet <see cref="T:System.Globalization.CultureInfo" /> qui définit la mise en forme et l'affichage des valeurs de date en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Date" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt; value.">Retourne une valeur <see langword="Decimal" /> correspondant à la valeur <see langword="Boolean" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; value to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatoire. Valeur <see langword="Boolean" /> à convertir en valeur <see langword="Decimal" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Decimal" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Decimal" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object and number format information.">Retourne une valeur <see langword="Decimal" /> correspondant à l'objet spécifié et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Decimal" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Decimal" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Decimal" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">Retourne une valeur <see langword="Decimal" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Decimal" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">Retourne une valeur <see langword="Decimal" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Decimal" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary vsli:raw="When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.">Lorsqu'il est appliqué à une classe, le compilateur appelle implicitement une méthode d'initialisation de composant à partir du constructeur synthétique par défaut.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute&quot; /&gt; attribute.">Initialise une nouvelle instance de l'attribut <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Double" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Double" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Double" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Double" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary vsli:raw="The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.">Le compilateur Visual Basic utilise cette classe lors de l'initialisation locale statique ; elle n'est pas destinée à être appelée directement à partir de votre code. Une exception de ce type est levée en cas d'échec d'initialisation d'une variable locale statique.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Integer" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Integer" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Integer" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Integer" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">Obligatoire. Chaîne à convertir en une valeur <see langword="Integer" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Integer" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary vsli:raw="This class has been deprecated since Visual Basic 2005.">Cette classe a été déconseillée depuis Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Performs a late-bound call to an object method.">Effectue un appel à liaison tardive à une méthode d'objet.</summary>
      <param name="o" vsli:raw="The object to call a method on.">Objet sur lequel appeler une méthode.</param>
      <param name="objType" vsli:raw="The type of the object.">Type de l'objet.</param>
      <param name="name" vsli:raw="The method name of &lt;paramref name=&quot;o&quot; /&gt; to call.">Nom de la méthode de <paramref name="o" /> à appeler.</param>
      <param name="args" vsli:raw="An array of parameter values to pass to the method.">Tableau de valeurs de paramètre à passer à la méthode.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">Tableau de valeurs <see langword="Boolean" />, où <see langword="True" /> indique que <see langword="ByRef" /> est passé au paramètre associé.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Returns a late-bound value from an object.">Retourne une valeur à liaison tardive à partir d'un objet.</summary>
      <param name="o" vsli:raw="The object to return the value from.">Objet à partir duquel retourner la valeur.</param>
      <param name="objType" vsli:raw="The type of the object.">Type de l'objet.</param>
      <param name="name" vsli:raw="The member name of &lt;paramref name=&quot;o&quot; /&gt; to retrieve a value from.">Nom du membre de <paramref name="o" /> à partir duquel récupérer la valeur.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Tableau d'une ou de plusieurs valeurs d'index qui spécifient l'emplacement dans <paramref name="o" /> si <paramref name="o" /> est un tableau unidimensionnel ou multidimensionnel, ou de valeurs d'argument à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">Tableau de valeurs <see langword="Boolean" />, où <see langword="True" /> indique que <see langword="ByRef" /> est passé au paramètre associé.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">Si <paramref name="o" /> est un tableau, valeur de <paramref name="o" /> à l'emplacement spécifié par <paramref name="args" />. Si <paramref name="o" /> est un objet, valeur de retour de <paramref name="o" /> appelée à l'aide des paramètres nommés dans <paramref name="paramnames" /> et leurs valeurs associées dans <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Returns a late-bound value from an object, using the specified index or parameters.">Retourne une valeur à liaison tardive d'un objet, à l'aide de l'index ou des paramètres spécifiés.</summary>
      <param name="o" vsli:raw="The object to return the value from.">Objet à partir duquel retourner la valeur.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Tableau d'une ou de plusieurs valeurs d'index qui spécifient l'emplacement dans <paramref name="o" /> si <paramref name="o" /> est un tableau unidimensionnel ou multidimensionnel, ou de valeurs d'argument à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">Si <paramref name="o" /> est un tableau, valeur de <paramref name="o" /> à l'emplacement spécifié par <paramref name="args" />. Si <paramref name="o" /> est un objet, valeur de retour de <paramref name="o" /> appelée à l'aide des paramètres nommés dans <paramref name="paramnames" /> et leurs valeurs associées dans <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">Définit une valeur à liaison tardive d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o" vsli:raw="The object to set the value for.">Objet dont la valeur doit être définie.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Tableau d'une ou de plusieurs valeurs d'index qui spécifient l'emplacement dans <paramref name="o" /> si <paramref name="o" /> est un tableau unidimensionnel ou multidimensionnel, ou de valeurs d'argument à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">Définit une valeur à liaison tardive d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o" vsli:raw="The object to set the value for.">Objet dont la valeur doit être définie.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Tableau d'une ou de plusieurs valeurs de paramètre à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" /> pour supprimer l'exception levée lorsque le membre défini est introuvable.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" /> pour identifier <paramref name="o" /> comme résultat d'une expression à liaison tardive.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">Définit une valeur à liaison tardive du membre d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">Objet dont la valeur du membre doit être définie.</param>
      <param name="objType" vsli:raw="The type of the object.">Type de l'objet.</param>
      <param name="name" vsli:raw="The member name to set.">Nom du membre à définir.</param>
      <param name="args" vsli:raw="An array of one or parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">Tableau d'une ou de plusieurs valeurs de paramètre à passer au membre de <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">Définit une valeur à liaison tardive du membre d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">Objet dont la valeur du membre doit être définie.</param>
      <param name="objType" vsli:raw="The type of the object.">Type de l'objet.</param>
      <param name="name" vsli:raw="The member name to set.">Nom du membre à définir.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">Tableau d'une ou de plusieurs valeurs de paramètre à passer au membre de <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" /> pour supprimer l'exception levée lorsque le membre défini est introuvable.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" /> pour identifier <paramref name="o" /> comme résultat d'une expression à liaison tardive.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator. It is not meant to be called directly from your code.">Cette classe fournit des assistances que le compilateur Visual Basic utilise afin d’effectuer le travail pour l’opérateur Like. Cela n'est pas conçu pour être directement appelé depuis votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.">Effectue une comparaison de chaînes binaires ou de texte entre deux objets. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Source" vsli:raw="The string to compare.">Chaîne à comparer.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">Chaîne par rapport à laquelle <paramref name="Source" /> est comparé.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">Énumération <see cref="T:Microsoft.VisualBasic.CompareMethod" /> spécifiant si la comparaison textuelle doit être utilisée. Si <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, cette méthode utilise la comparaison textuelle ; si <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, cette méthode utilise la comparaison binaire.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si les chaînes correspondent ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.">Effectue une comparaison entre deux chaînes de texte ou binaires. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Source" vsli:raw="The string to compare.">Chaîne à comparer.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">Chaîne par rapport à laquelle <paramref name="Source" /> est comparé.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">Énumération <see cref="T:Microsoft.VisualBasic.CompareMethod" /> spécifiant si la comparaison textuelle doit être utilisée. Si <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, cette méthode utilise la comparaison textuelle ; si <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, cette méthode utilise la comparaison binaire.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si les chaînes correspondent ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Long" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Long" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Long" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Long" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Long" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Long" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.">Cette classe fournit des assistances que le compilateur Visual Basic utilise pour les appels de liaison tardive ; elle n'est pas destinée à être appelée directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">Exécute un appel de méthode ou de fonction à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">Valeur <see langword="Boolean" /> indiquant si la valeur de retour peut être ignorée.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Exécute un appel d'obtention de propriété ou d'accès au champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">Exécute une opération d'obtention à liaison tardive de la propriété ou du champ par défaut ou appelle la méthode ou la fonction par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method. If &lt;paramref name=&quot;Instance&quot; /&gt; is of type &lt;see cref=&quot;T:System.Dynamic.IDynamicMetaObjectProvider&quot; /&gt;, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.">Instance de l'objet d'appel exposant la propriété ou la méthode. Si <paramref name="Instance" /> est de type <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, liez à l'aide du Dynamic Language Runtime ; sinon exécutez la liaison tardive standard.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">Exécute une opération d'obtention à liaison tardive de la propriété ou du champ par défaut ou appelle la méthode ou la fonction par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">Exécute un appel de méthode ou de fonction à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type" vsli:raw="The type of the call object.">Type de l'objet d'appel.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">Tableau de valeurs <see langword="Boolean" /> que le classeur tardif utilise pour communiquer au site d'appel les arguments qui correspondent aux paramètres <see langword="ByRef" />. Chaque valeur <see langword="True" /> indique que les arguments correspondaient et qu'ils doivent être extraits après l'appel à <see langword="LateCall" />.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">Valeur <see langword="Boolean" /> indiquant si la valeur de retour peut être ignorée.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.">Exécute un appel à liaison tardive vers la méthode ou la fonction par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Exécute un appel d'obtention de propriété ou d'accès au champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type" vsli:raw="The type of the call object.">Type de l'objet d'appel.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">Tableau de valeurs <see langword="Boolean" /> que le classeur tardif utilise pour communiquer au site d'appel les arguments qui correspondent aux paramètres <see langword="ByRef" />. Chaque valeur <see langword="True" /> indique que les arguments correspondaient et qu'ils doivent être extraits après l'appel à <see langword="LateCall" />.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.">Exécute une opération d'obtention à liaison tardive de la propriété ou du champ par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Exécute un appel d'obtention de propriété ou d'accès au champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <returns vsli:raw="An instance of the call object.">Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type" vsli:raw="The type of the call object.">Type de l'objet d'appel.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type" vsli:raw="The type of the call object.">Type de l'objet d'appel.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
      <param name="CallType" vsli:raw="An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of CallType can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;. Only &lt;see langword=&quot;Set&quot; /&gt; is used.">Membre de l'énumération de type <see cref="T:Microsoft.VisualBasic.CallType" /> représentant le type de la procédure appelée. La valeur de CallType peut être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />. Seul <see langword="Set" /> est utilisé.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type" vsli:raw="The type of the call object.">Type de l'objet d'appel.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Tableau des noms d'arguments.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary vsli:raw="The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.">Le compilateur Visual Basic utilise cette classe pour le contrôle de flux d'objet ; elle n'est pas destinée à être appelée directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary vsli:raw="Checks for a synchronization lock on the specified type.">Vérifie l'existence d'un verrouillage de synchronisation sur le type spécifié.</summary>
      <param name="Expression" vsli:raw="The data type for which to check for synchronization lock.">Le type de données pour lequel vérifier l'existence d'un verrouillage de synchronisation.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary vsli:raw="Provides services to the Visual Basic compiler for compiling &lt;see langword=&quot;For...Next&quot; /&gt; loops.">Fournit des services au compilateur Visual Basic pour compiler des boucles <see langword="For...Next" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary vsli:raw="Initializes a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">Initialise une boucle <see langword="For...Next" />.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">Variable de compteur de boucle.</param>
      <param name="Start" vsli:raw="The initial value of the loop counter.">Valeur initiale du compteur de boucle.</param>
      <param name="Limit" vsli:raw="The value of the &lt;see langword=&quot;To&quot; /&gt; option.">Valeur de l'option <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="The value of the &lt;see langword=&quot;Step&quot; /&gt; option.">Valeur de l'option <see langword="Step" />.</param>
      <param name="LoopForResult" vsli:raw="An object that contains verified values for loop values.">Objet qui contient les valeurs de boucle vérifiées.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">Valeur du compteur d'itération de la boucle suivante.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="False" /> si la boucle s'est terminée ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Vérifie la validité des valeurs du compteur de boucle, <see langword="Step" />, ainsi que les valeurs <see langword="To" />.</summary>
      <param name="count" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Obligatoire. Valeur <see langword="Decimal" /> qui représente la valeur initiale passée pour la variable de compteur de boucle.</param>
      <param name="limit" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Obligatoire. Valeur <see langword="Decimal" /> qui représente la valeur passée à l'aide du mot clé <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Obligatoire. Valeur <see langword="Decimal" /> qui représente la valeur passée à l'aide du mot clé <see langword="Step" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt; or &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="StepValue" /> est supérieur à zéro et <paramref name="count" /> est inférieur ou égal à <paramref name="limit" />, ou si <paramref name="StepValue" /> est inférieur ou égal à zéro et <paramref name="count" /> est supérieur ou égal à <paramref name="limit" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary vsli:raw="Increments a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">Incrémente une boucle <see langword="For...Next" />.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">Variable de compteur de boucle.</param>
      <param name="LoopObj" vsli:raw="An object that contains verified values for loop values.">Objet qui contient les valeurs de boucle vérifiées.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">Valeur du compteur d'itération de la boucle suivante.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="False" /> si la boucle s'est terminée ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Vérifie la validité des valeurs du compteur de boucle, <see langword="Step" />, ainsi que les valeurs <see langword="To" />.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Obligatoire. Valeur <see langword="Single" /> qui représente la valeur initiale passée pour la variable de compteur de boucle.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Obligatoire. Valeur <see langword="Single" /> qui représente la valeur passée à l'aide du mot clé <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Obligatoire. Valeur <see langword="Single" /> qui représente la valeur passée à l'aide du mot clé <see langword="Step" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="StepValue" /> est supérieur à zéro et <paramref name="count" /> est inférieur ou égal à <paramref name="limit" />, ou si <paramref name="StepValue" /> est inférieur ou égal à zéro et <paramref name="count" /> est supérieur ou égal à <paramref name="limit" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Vérifie la validité des valeurs du compteur de boucle, <see langword="Step" />, ainsi que les valeurs <see langword="To" />.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Obligatoire. Valeur <see langword="Double" /> qui représente la valeur initiale passée pour la variable de compteur de boucle.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Obligatoire. Valeur <see langword="Double" /> qui représente la valeur passée à l'aide du mot clé <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Obligatoire. Valeur <see langword="Double" /> qui représente la valeur passée à l'aide du mot clé <see langword="Step" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="StepValue" /> est supérieur à zéro et <paramref name="count" /> est inférieur ou égal à <paramref name="limit" />, ou si <paramref name="StepValue" /> est inférieur ou égal à zéro et <paramref name="count" /> est supérieur ou égal à <paramref name="limit" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.ObjectType&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an addition (+) operation.">Effectue une addition (+).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Somme de <paramref name="o1" /> et <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">Effectue une opération <see langword="And" /> de bits.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="1 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 1; otherwise, 0.">1 si <paramref name="obj1" /> et <paramref name="obj2" /> sont tous deux égaux à 1 ; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">Effectue une opération <see langword="Or" /> de bits.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="0 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 0; otherwise, 1.">0 si <paramref name="obj1" /> et <paramref name="obj2" /> sont tous deux égaux à 0 ; sinon, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; operation.">Effectue une opération <see langword="Xor" />.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">Valeur numérique représentant l'exclusion de bits (disjonction de bits exclusive) de deux modèles binaires numériques. Pour plus d’informations, consultez Xor, opérateur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a division (/) operation.">Effectue une division (/).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, including any remainder.">Quotient entier de <paramref name="o1" /> divisé par <paramref name="o2" />, y compris tout élément restant.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary vsli:raw="Returns a boxed primitive value. This method is used to prevent copying structures multiple times.">Retourne une valeur de primitive ayant fait l'objet d'un boxing. Cette méthode est utilisée pour empêcher la copie de structures à plusieurs reprises.</summary>
      <param name="o" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <returns vsli:raw="The primitive value of &lt;paramref name=&quot;o&quot; /&gt; typed as object.">Valeur de primitive de <paramref name="o" /> de type objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an integer division (\) operation.">Effectue une division (\) entière.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, which discards any remainder and retains only the integer portion.">Quotient entier de <paramref name="o1" /> divisé par <paramref name="o2" /> qui abandonne tout élément restant et conserve uniquement la partie entière.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Like&quot; /&gt; comparison.">Effectue une comparaison <see langword="Like" />.</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="vRight" vsli:raw="Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.">Obligatoire. Toute expression de chaîne conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <param name="CompareOption" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; value that specifies that the operation use either text or binary comparison.">Obligatoire. Valeur <see cref="T:Microsoft.VisualBasic.CompareMethod" /> qui spécifie que l'opération utilise une comparaison binaire ou une comparaison textuelle.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the string representation of the value in &lt;paramref name=&quot;vLeft&quot; /&gt; satisfies the pattern that is contained in &lt;paramref name=&quot;vRight&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt; are &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <see langword="True" /> si la représentation de chaîne de la valeur de <paramref name="vLeft" /> est conforme au modèle contenu dans <paramref name="vRight" /> ; sinon, <see langword="False" />. <see langword="True" /> si <paramref name="vLeft" /> et <paramref name="vRight" /> sont <see langword="Nothing" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a modulus (&lt;see langword=&quot;Mod&quot; /&gt;) operation.">Effectue une opération de module (<see langword="Mod" />).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;o1&quot; /&gt; is divided by &lt;paramref name=&quot;o2&quot; /&gt;.">Le reste après <paramref name="o1" /> est divisé par <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a multiplication (*) operation.">Effectue une multiplication (*).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Produit de <paramref name="o1" /> et <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary vsli:raw="Performs a unary minus (-) operation.">Effectue une opération moins unaire (-).</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;obj&quot; /&gt;.">Valeur négative de <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Not&quot; /&gt; operation.">Effectue une opération <see langword="Not" />.</summary>
      <param name="obj" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;obj&quot; /&gt; is 0; otherwise, 0.">Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="obj" /> est <see langword="True" /> ; sinon, <see langword="True" />. Pour les opérations au niveau du bit, 1 si <paramref name="obj" /> est 0; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two objects.">Effectue une comparaison de chaînes binaires ou de texte entre deux objets.</summary>
      <param name="o1" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="o2" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is less than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is equal to &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is greater than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Value 
  Condition 
  -1 
 
                <paramref name="o1" /> est inférieur à <paramref name="o2" />.  

  0 
 
                <paramref name="o1" /> est égal à <paramref name="o2" />.  

  1 
 
                <paramref name="o1" /> est supérieur à <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary vsli:raw="Performs a unary plus (+) operation.">Effectue une opération plus unaire (+).</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;obj&quot; /&gt;. (The sign of the &lt;paramref name=&quot;obj&quot; /&gt; is unchanged.)">la valeur de la propriété <paramref name="obj" /> ; (Le signe de <paramref name="obj" /> est inchangé.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an exponent (^) operation.">Effectue une opération d'exposant (^).</summary>
      <param name="obj1" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="obj2" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;obj1&quot; /&gt; raised to the power of &lt;paramref name=&quot;obj2&quot; /&gt;.">Le résultat de <paramref name="obj1" /> est élevé à la puissance de <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic left shift (&amp;lt;&amp;lt;) operation.">Effectue un décalage arithmétique vers la gauche (&lt;&lt;).</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic right shift (&amp;gt;&amp;gt;) operation.">Effectue un décalage arithmétique vers la droite (&gt;&gt;).</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a string concatenation (&amp;amp;) operation.">Effectue une concaténation de chaînes (&amp;).</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="vRight" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt;.">Chaîne représentant la concaténation de <paramref name="vLeft" /> et <paramref name="vRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a subtraction (-) operation.">Effectue une soustraction (-).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Différence entre <paramref name="o1" /> et <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; comparison.">Effectue une comparaison <see langword="Xor" />.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> ou valeur numérique. Pour une comparaison <see langword="Boolean" />, la valeur de retour est l'exclusion logique (disjonction logique exclusive) de deux valeurs <see langword="Boolean" />. Pour les opérations au niveau du bit (numériques), la valeur de retour est une valeur numérique représentant l'exclusion d'opérations de bits (disjonction d'opérations de bits exclusive) de deux modèles binaires numériques. Pour plus d’informations, consultez Xor, opérateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary vsli:raw="Provides late-bound math operators, such as &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)&quot; /&gt;, which the Visual Basic compiler uses internally.">Fournit des opérateurs mathématiques à liaison tardive, tels que <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> et <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que le compilateur Visual Basic utilise en interne.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic addition (+) operator.">Représente l'opérateur d'addition (+) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Somme de <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;And&quot; /&gt; operator.">Représente l'opérateur <see langword="And" /> Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. For bitwise operations, 1 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 1; otherwise, 0.">Pour les opérations <see langword="Boolean" />, <see langword="True" /> si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur <see langword="True" /> ; sinon, <see langword="False" />. Pour les opérations au niveau du bit, 1 si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur 1 ; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic equal (=) operator.">Représente l'opérateur d'égalité (=) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="Left" /> et <paramref name="Right" /> sont égales ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than (&amp;gt;) operator.">Représente l’opérateur supérieur à (&gt;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="Left" /> est supérieur à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Représente l’opérateur supérieur ou égal à (&gt;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="Left" /> est supérieur ou égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than (&amp;lt;) operator.">Représente l’opérateur inférieur à (&lt;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="Left" /> est inférieur à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than or equal-to (&amp;lt;=) operator.">Représente l’opérateur inférieur ou égale à (&lt;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="Left" /> est inférieur ou égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Représente l’opérateur différent de (&lt;&gt;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is not equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="Left" /> n'est pas égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two strings.">Effectue une comparaison entre deux chaînes de texte ou binaires.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is equal to &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Value 
  Condition 
  -1 
 
                <paramref name="Left" /> est inférieur à <paramref name="Right" />.  

  0 
 
                <paramref name="Left" /> est égal à <paramref name="Right" />.  

  1 
 
                <paramref name="Left" /> est supérieur à <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic concatenation (&amp;amp;) operator.">Représente l’opérateur de concaténation (&amp;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Chaîne représentant la concaténation de <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic equals (=) operator.">Représente l'opérateur d'égalité (=) surchargé Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded equals operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Résultat de l'opérateur d'égalité surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than (&amp;gt;) operator.">Représente l’opérateur supérieur à surchargé (&gt;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded greater-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Résultat de l'opérateur « supérieur à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Représente l’opérateur supérieur ou égal à surchargé (&gt;=) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded greater-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Résultat de l'opérateur « supérieur ou égal à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than (&amp;lt;) operator.">Représente l’opérateur inférieur à surchargé (&lt;=) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded less-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Résultat de l'opérateur « inférieur à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than or equal-to (&amp;lt;=) operator.">Représente l’opérateur inférieur ou égal à surchargé (&lt;=) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded less-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Résultat de l'opérateur « inférieur ou égal à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Représente l’opérateur différent de surchargé (&lt;&gt;) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatoire. Toute expression.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded not-equal operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Résultat de l'opérateur de différence surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic division (/) operator.">Représente l'opérateur de division (/) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, including any remainder.">Quotient entier de <paramref name="Left" /> divisé par <paramref name="Right" />, y compris tout élément restant.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic exponent (^) operator.">Représente l'opérateur d'exposant (^) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;Left&quot; /&gt; raised to the power of &lt;paramref name=&quot;Right&quot; /&gt;.">Le résultat de <paramref name="Left" /> est élevé à la puissance de <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary vsli:raw="Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.">Exécute une évaluation à liaison tardive d'un opérateur défini par l'utilisateur. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="vbOp" vsli:raw="The user-defined operator.">Opérateur défini par l'utilisateur.</param>
      <param name="Arguments">Valeurs d'argument à passer à l'opérateur défini par l'utilisateur.</param>
      <returns vsli:raw="The result returned from the user-defined operator.">Résultat retourné par l'opérateur défini par l'utilisateur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic integer division (\) operator.">Représente l’opérateur de division entier (\) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, which discards any remainder and retains only the integer portion.">Quotient entier de <paramref name="Left" /> divisé par <paramref name="Right" /> qui abandonne tout élément restant et conserve uniquement la partie entière.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic left shift (&amp;lt;&amp;lt;) operator.">Représente l’opérateur de décalage arithmétique vers la gauche (&lt;&lt;) Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Mod&quot; /&gt; operator.">Représente l'opérateur <see langword="Mod" /> Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;Left&quot; /&gt; is divided by &lt;paramref name=&quot;Right&quot; /&gt;.">Le reste après <paramref name="Left" /> est divisé par <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic multiply (*) operator.">Représente l'opérateur de multiplication (*) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Produit de <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary minus (-) operator.">Représente l’opérateur moins unaire (-) Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;Operand&quot; /&gt;.">Valeur négative de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Not&quot; /&gt; operator.">Représente l'opérateur <see langword="Not" /> Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;Operand&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;Operand&quot; /&gt; is 0; otherwise, 0.">Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="Operand" /> est <see langword="True" /> ; sinon, <see langword="True" />. Pour les opérations au niveau du bit, 1 si <paramref name="Operand" /> est 0; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Or&quot; /&gt; operator.">Représente l'opérateur <see langword="Or" /> Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 0 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 0; otherwise, 1.">Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur <see langword="False" /> ; sinon, <see langword="True" />. Pour les opérations au niveau du bit, 0 si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur 0 ; sinon, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary plus (+) operator.">Représente l'opérateur plus unaire (–) Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;Operand&quot; /&gt;. (The sign of the &lt;paramref name=&quot;Operand&quot; /&gt; is unchanged.)">la valeur de la propriété <paramref name="Operand" /> ; (Le signe de <paramref name="Operand" /> est inchangé.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic right shift (&amp;gt;&amp;gt;) operator.">Représente l’opérateur de décalage arithmétique vers la droite (&gt;&gt;) Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic subtraction (-) operator.">Représente l’opérateur de soustraction (-) Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatoire. Toute expression numérique.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Différence entre <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Xor&quot; /&gt; operator.">Représente l'opérateur <see langword="Xor" /> Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> ou valeur numérique. Pour une comparaison <see langword="Boolean" />, la valeur de retour est l'exclusion logique (disjonction logique exclusive) de deux valeurs <see langword="Boolean" />. Pour les opérations au niveau du bit (numériques), la valeur de retour est une valeur numérique représentant l'exclusion d'opérations de bits (disjonction d'opérations de bits exclusive) de deux modèles binaires numériques. Pour plus d’informations, consultez Xor, opérateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary vsli:raw="Specifies that the current &lt;see langword=&quot;Option Compare&quot; /&gt; setting should be passed as the default value for an argument.">Indique que le paramètre <see langword="Option Compare" /> doit être passé comme valeur par défaut pour un argument.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary vsli:raw="The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used.">Le compilateur Visual Basic émet cette classe d'assistance pour indiquer (pour le débogage Visual Basic) l'option de comparaison, binaire ou textuelle, qui est utilisée.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute&quot; /&gt; class. This is a helper method.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Méthode d'assistance.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary vsli:raw="Provides helpers for the Visual Basic &lt;see langword=&quot;Err&quot; /&gt; object.">Fournit des assistants pour l'objet <see langword="Err" /> Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Clear&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">Effectue le travail pour la méthode <see langword="Clear" /> de l'objet <see langword="Err" />. Méthode d'assistance.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Raise&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">Effectue le travail pour la méthode <see langword="Raise" /> de l'objet <see langword="Err" />. Méthode d'assistance.</summary>
      <param name="hr" vsli:raw="An integer value that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.">Valeur entière qui identifie la nature de l'erreur. Les erreurs Visual Basic se situent dans la plage 0-65535 ; la plage 0-512 est réservée aux erreurs système ; la plage 513-65535 est disponible pour les erreurs définies par l’utilisateur.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">Objet <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary vsli:raw="Closes all files for the calling assembly and stops the process.">Ferme tous les fichiers de l'assembly appelant et arrête le processus.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Le compilateur Visual Basic utilise cette méthode d'assistance pour capturer des exceptions dans l'objet <see langword="Err" />.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">Objet <see cref="T:System.Exception" /> à intercepter.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Le compilateur Visual Basic utilise cette méthode d'assistance pour capturer des exceptions dans l'objet <see langword="Err" />.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">Objet <see cref="T:System.Exception" /> à intercepter.</param>
      <param name="lErl" vsli:raw="The line number of the exception.">Numéro de la ligne de l'exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Short" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Short" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Short" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Short" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Short" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Short" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Single" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Single" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Single" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="Single" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="Single" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Single" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string.">Retourne une valeur <see langword="Single" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Single" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Single" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string and number format information.">Retourne une valeur <see langword="Single" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatoire. Chaîne à convertir en valeur <see langword="Single" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="Single" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary vsli:raw="This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.">Cette classe fournit des attributs qui sont appliqués à la construction de module standard lorsqu'elle est émise en code MSIL (Microsoft Intermediate Language). Elle n'est pas destinée à être appelée directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary vsli:raw="The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.">Le compilateur Visual Basic utilise cette classe en interne lors de l'initialisation de membres locaux statiques ; il n'est pas destiné à être appelé directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary vsli:raw="Returns the state of the static local member's initialization flag (initialized or not).">Retourne l'état de l'indicateur d'initialisation du membre local statique (initialisé ou pas).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt;.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Boolean" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Boolean" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Byte&quot; /&gt;.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Byte" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Byte&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Byte" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Char&quot; /&gt;.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Char" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Char&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Char" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified date.">Retourne une valeur <see langword="String" /> qui correspond à la date spécifiée.</summary>
      <param name="Value" vsli:raw="Required. Date to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. Date à convertir en une valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Decimal&quot; /&gt;.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Decimal" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Decimal" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Decimal&quot; /&gt; and number format information.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Decimal" /> spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Decimal" /> pour convertir en valeur <see langword="String" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Double" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Obligatoire. <see langword="Double" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt; and number format information.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Double" /> spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Obligatoire. <see langword="Double" /> pour convertir en valeur <see langword="String" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The string representation of &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Integer&quot; /&gt;.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Integer" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Integer" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int64&quot; /&gt; (64-bit integer).">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Int64" /> (entier 64 bits) spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Int64&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Int64" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified object.">Retourne une valeur <see langword="String" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. Objet à convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int16&quot; /&gt; (16-bit integer).">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Int16" /> (entier 16 bits) spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Int616&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Int616" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Single" /> spécifiée.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Single" /> pour convertir en valeur <see langword="String" />.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt; and number format information.">Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Single" /> spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. <see langword="Single" /> pour convertir en valeur <see langword="String" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Overwrites the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with the contents of the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter.">Remplace le paramètre <paramref name="sDest" /> par le contenu du paramètre <paramref name="sInsert" />.</summary>
      <param name="sDest" vsli:raw="Required. String variable to modify.">Obligatoire. Variable de chaîne à modifier.</param>
      <param name="StartPosition" vsli:raw="Required. Location in the &lt;paramref name=&quot;sDest&quot; /&gt; parameter to begin overwriting from. The index is 1-based.">Obligatoire. Emplacement dans le paramètre <paramref name="sDest" /> à partir duquel commencer le remplacement. L'index est de base 1.</param>
      <param name="MaxInsertLength" vsli:raw="Required. Maximum number of characters from the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter to use, starting from the first character.">Obligatoire. Nombre maximal de caractères à partir du paramètre <paramref name="sInsert" /> à utiliser, en commençant au premier caractère.</param>
      <param name="sInsert" vsli:raw="Required. String value to overwrite the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with.">Obligatoire. Valeur de chaîne qui doit remplacer le paramètre <paramref name="sDest" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Compares two strings.">Compare deux chaînes.</summary>
      <param name="sLeft" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sRight&quot; /&gt;.">Obligatoire. Chaîne à comparer à <paramref name="sRight" />.</param>
      <param name="sRight" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sLeft&quot; /&gt;.">Obligatoire. Chaîne à comparer à <paramref name="sLeft" />.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive comparison; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="True" /> pour effectuer une comparaison ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; zero&lt;/term&gt;&lt;description&gt; The two strings are equal.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is less than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is greater than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Value 
  Condition 
  zéro 
  Les deux chaînes sont égales.  

  inférieure à zéro 
 
                <paramref name="sLeft" /> est inférieur à <paramref name="sRight" />.  

  supérieure à zéro 
 
                <paramref name="sLeft" /> est supérieur à <paramref name="sRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator.">Compare les paramètres <paramref name="Source" /> et <paramref name="Pattern" />, puis retourne les mêmes résultats que l'opérateur <see langword="Like" />.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Pattern" vsli:raw="Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Toute expression <see langword="String" /> conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <param name="CompareOption" vsli:raw="Specifies how to compare strings to patterns, according to the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt;. Can be &lt;see langword=&quot;vbBinaryCompare&quot; /&gt; for binary comparison or &lt;see langword=&quot;vbTextCompare&quot; /&gt; for comparison based on a case-insensitive text sort order determined by your system's &lt;see langword=&quot;LocaleID&quot; /&gt; value.">Spécifie comment comparer des chaînes aux modèles, en fonction de <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Peut être <see langword="vbBinaryCompare" /> pour la comparaison binaire ou <see langword="vbTextCompare" /> pour la comparaison à partir d'un ordre tri alphabétique sans respect de la casse déterminé par la valeur <see langword="LocaleID" /> de votre système.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Valeur <see langword="Boolean" /> indiquant si la chaîne est conforme, ou non, au modèle. Si la valeur de string respecte le modèle contenu dans pattern, le résultat est <see langword="True" />. Si la chaîne ne respecte pas le modèle, le résultat est <see langword="False" />. Si string et pattern sont tous deux des chaînes vides, le résultat est <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using binary comparison.">Compare les paramètres <paramref name="Source" /> et <paramref name="Pattern" />, puis retourne les mêmes résultats que l'opérateur <see langword="Like" />, à l'aide de la comparaison binaire.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Obligatoire. Toute expression <see langword="String" /> conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Valeur <see langword="Boolean" /> indiquant si la chaîne est conforme, ou non, au modèle. Si la valeur de string respecte le modèle contenu dans pattern, le résultat est <see langword="True" />. Si la chaîne ne respecte pas le modèle, le résultat est <see langword="False" />. Si string et pattern sont tous deux des chaînes vides, le résultat est <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using text comparison.">Compare les paramètres <paramref name="Source" /> et <paramref name="Pattern" />, puis retourne les mêmes résultats que l'opérateur <see langword="Like" />, à l'aide de la comparaison textuelle.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Obligatoire. Toute expression <see langword="String" /> conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Valeur <see langword="Boolean" /> indiquant si la chaîne est conforme, ou non, au modèle. Si la valeur de string respecte le modèle contenu dans pattern, le résultat est <see langword="True" />. Si la chaîne ne respecte pas le modèle, le résultat est <see langword="False" />. Si string et pattern sont tous deux des chaînes vides, le résultat est <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary vsli:raw="Contains utilities that the Visual Basic compiler uses.">Contient des utilitaires que le compilateur Visual Basic utilise.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary vsli:raw="Used by the Visual Basic compiler as a helper for &lt;see langword=&quot;Redim&quot; /&gt;.">Utilisé par le compilateur Visual Basic en tant qu'application d'assistance pour <see langword="Redim" />.</summary>
      <param name="arySrc" vsli:raw="The array to be copied.">Tableau à copier.</param>
      <param name="aryDest" vsli:raw="The destination array.">Tableau de destination.</param>
      <returns vsli:raw="The copied array.">Tableau copié.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary vsli:raw="The &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.Versioned&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">Le module <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> contient les procédures utilisées pour interagir avec les objets, les applications et les systèmes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</summary>
      <param name="Instance" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">Obligatoire. <see langword="Object" />. Pointeur qui désigne l'objet exposant la propriété ou la méthode.</param>
      <param name="MethodName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">Obligatoire. <see langword="String" />. Expression de type chaîne contenant le nom de la propriété ou de la méthode sur l'objet.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Obligatoire. Membre de l'énumération de type <see cref="T:Microsoft.VisualBasic.CallType" /> représentant le type de la procédure appelée. La valeur de <see langword="CallType" /> peut être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</param>
      <param name="Arguments" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">Optionnel. <see langword="ParamArray" />. Tableau de paramètres contenant les arguments à passer à la propriété ou la méthode appelée.</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">Retourne une valeur Boolean indiquant si une expression peut être évaluée comme un nombre.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatoire. Expression <see langword="Object" />.</param>
      <returns vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">Retourne une valeur Boolean indiquant si une expression peut être évaluée comme un nombre.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the system data type name of a variable.">Retourne une valeur de chaîne contenant le nom du type de données système d'une variable.</summary>
      <param name="VbName" vsli:raw="Required. A string variable containing a Visual Basic type name.">Obligatoire. Variable chaîne contenant un nom de type Visual Basic.</param>
      <returns vsli:raw="Returns a string value containing the system data type name of a variable.">Retourne une valeur de chaîne contenant le nom du type de données système d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary vsli:raw="Returns a string value containing data type information about a variable.">Retourne une valeur de chaîne contenant des informations sur le type de données d'une variable.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Obligatoire. Variable <see langword="Object" />. Si <see langword="Option Strict" /> est <see langword="Off" />, vous pouvez passer une variable de tout type de données, à l'exception d'une structure.</param>
      <returns vsli:raw="Returns a string value containing data type information about a variable.">Retourne une valeur de chaîne contenant des informations sur le type de données d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">Retourne une valeur de chaîne contenant le nom du type de données Visual Basic d'une variable.</summary>
      <param name="SystemName" vsli:raw="Required. String variable containing a type name used by the common language runtime.">Obligatoire. Variable chaîne contenant un nom de type utilisé par le Common Language Runtime.</param>
      <returns vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">Retourne une valeur de chaîne contenant le nom du type de données Visual Basic d'une variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary vsli:raw="The &lt;see langword=&quot;Constants&quot; /&gt; module contains miscellaneous constants. These constants can be used anywhere in your code.">Le module <see langword="Constants" /> contient diverses constantes. Ces constantes peuvent être utilisées partout dans votre code.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique qu'un clic a été effectué sur le bouton <see langword="Abort" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt;, &lt;see langword=&quot;Retry&quot; /&gt;, and &lt;see langword=&quot;Ignore&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que les boutons <see langword="Abort" />, <see langword="Retry" /> et <see langword="Ignore" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que la boîte de message est affichée sous la forme d'une boîte de dialogue modale lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary vsli:raw="Indicates that the file has changed since the last backup operation for file-access functions.">Indique que le fichier a changé depuis la dernière opération de sauvegarde pour des fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary vsli:raw="Indicates that the type of a variant object is an array. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est un tableau. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary vsli:raw="Represents a backspace character for print and display functions.">Représente un caractère d'espacement arrière pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary vsli:raw="Specifies that a binary comparison should be performed when comparison functions are called.">Spécifie qu'une comparaison binaire doit être effectuée lorsque des fonctions de comparaison sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Boolean&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Boolean" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Byte&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Byte" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Cancel&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique qu'un clic a été effectué sur le bouton <see langword="Cancel" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary vsli:raw="Represents a carriage-return character for print and display functions.">Représente un caractère de retour chariot pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary vsli:raw="Indicates that the critical message icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que l'icône de message critique est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary vsli:raw="Represents a carriage-return character combined with a linefeed character for print and display functions.">Représente un caractère de retour chariot mixé avec un caractère de retour de ligne pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Currency&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Currency" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Date&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Date" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Decimal&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Decimal" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary vsli:raw="Indicates that the leftmost button is selected as the default button when the message box appears.">Indique que le bouton situé le plus à gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary vsli:raw="Indicates that the second button from the left is selected as the default button when the message box appears.">Indique que le deuxième bouton en partant de la gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary vsli:raw="Indicates that the third button from the left is selected as the default button when the message box appears.">Indique que le troisième bouton en partant de la gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary vsli:raw="Indicates that the file is a directory or folder for file-access functions.">Indique que le fichier est un répertoire ou dossier pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Double&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Double" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Empty&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Empty" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary vsli:raw="Indicates that the exclamation icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que l'icône d'exclamation est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;False&quot; /&gt; should be used when number-formatting functions are called.">Indique qu'une valeur <see langword="Boolean" /> de <see langword="False" /> doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary vsli:raw="Indicates that the first week of the year that has at least four days should be used when date-related functions are called.">Indique que la première semaine de l'année qui a au moins quatre jours doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary vsli:raw="Indicates that the first full week of the year should be used when date-related functions are called.">Indique que la première semaine complète de l'année doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary vsli:raw="Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.">Indique que la semaine de l'année qui inclut le 1er janvier doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary vsli:raw="Represents a form-feed character for print functions.">Représente un caractère de saut de page pour les fonctions d'impression.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary vsli:raw="Specifies that Friday should be used as the first day of the week when date-related functions are called.">Spécifie que le vendredi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary vsli:raw="Indicates that the general date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indique que le format de date général pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary vsli:raw="Specifies that a property value should be retrieved when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Spécifie qu'une valeur de propriété doit être extraite lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary vsli:raw="Indicates that the file is a hidden file for file-access functions.">Indique que le fichier est un fichier masqué pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary vsli:raw="Indicates that the window style is hidden for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indique que le style de fenêtre est masqué pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary vsli:raw="Indicates Hiragana characters should be converted to Katakana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères Hiragana doivent être convertis en caractères Katakana lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Ignore&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique qu'un clic a été effectué sur le bouton <see langword="Ignore" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary vsli:raw="Indicates that the information icon will display when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que l'icône d'informations est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Integer&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Integer" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary vsli:raw="Indicates that Katakana characters should be converted to Hiragana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères Katakana doivent être convertis en caractères Hiragana lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary vsli:raw="Indicates that a property value should be set to an object instance when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Indique qu'une valeur de propriété doit avoir pour valeur une instance d'objet lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary vsli:raw="Represents a linefeed character for print and display functions.">Représente un caractère de retour de ligne pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary vsli:raw="Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères doivent être convertis de façon à utiliser des règles linguistiques pour le respect de la casse au lieu de règles de système de fichiers pour le respect de la casse lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary vsli:raw="Indicates the type of a variant object is &lt;see langword=&quot;Long&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Long" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary vsli:raw="Indicates that the long date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indique que le format de date long pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary vsli:raw="Indicates that the long time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indique que le format d'heure long pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary vsli:raw="Indicates that characters should be converted to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères doivent être convertis en minuscules lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary vsli:raw="Indicates that the window style is maximized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indique que le style de fenêtre est agrandi avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary vsli:raw="Specifies that a method should be called when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Spécifie qu'une méthode doit être appelée lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary vsli:raw="Indicates that the window style is minimized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indique que le style de fenêtre est réduit avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary vsli:raw="Indicates that the window style is minimized without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indique que le style de fenêtre est réduit sans le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary vsli:raw="Specifies that Monday should be used as the first day of the week when date-related functions are called.">Spécifie que le lundi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Help&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que le bouton <see langword="Help" /> est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary vsli:raw="Indicates that text will be right-aligned when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que le texte est aligné à droite lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary vsli:raw="Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que le texte à lecture de droite à gauche (systèmes hébreu et arabe) est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary vsli:raw="Indicates that the message box will display in the foreground when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que la boîte de message s'affiche au premier plan lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary vsli:raw="Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères larges (codés sur deux octets) doivent être convertis en caractères étroits (codés sur un octet) lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary vsli:raw="Represents a newline character for print and display functions.">Représente un caractère de saut de ligne pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;No&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique qu'un clic a été effectué sur le bouton <see langword="No" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary vsli:raw="Indicates that the file is a normal file for file-access functions.">Indique que le fichier est un fichier normal pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary vsli:raw="Indicates that the window style is normal with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indique que le style de fenêtre est normal avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary vsli:raw="Indicates that the window style is normal without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indique que le style de fenêtre est normal sans le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Nothing&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Nothing" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary vsli:raw="Represents a null character for print and display functions.">Représente un caractère Null pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary vsli:raw="Represents a zero-length string for print and display functions, and for calling external procedures.">Représente une chaîne de longueur nulle pour l'impression et les fonctions d'affichage, et pour appeler des procédures auxiliaires.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Object&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Object" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary vsli:raw="Represents the object error number. User-defined error numbers should be greater than this value.">Représente le numéro d'erreur de l'objet. Les numéros d'erreur définis par l'utilisateur doivent être supérieurs à cette valeur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique qu'un clic a été effectué sur le bouton <see langword="OK" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que les boutons <see langword="OK" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary vsli:raw="Indicates that only the &lt;see langword=&quot;OK&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que seul le bouton <see langword="OK" /> est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary vsli:raw="Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que la première lettre de chaque mot dans une chaîne doit être convertie en majuscule et les caractères restants en minuscules lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary vsli:raw="Indicates that the question icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que l'icône de question est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary vsli:raw="Indicates that the file is a read-only file for file-access functions.">Indique que le fichier est un fichier en lecture seule pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique qu'un clic a été effectué sur le bouton <see langword="Retry" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que les boutons <see langword="Retry" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary vsli:raw="Specifies that Saturday should be used as the first day of the week when date-related functions are called.">Spécifie que le samedi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary vsli:raw="Indicates that a property value should be set when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Indique qu'une valeur de propriété doit être définie lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary vsli:raw="Indicates that the short-date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indique que le format de date court pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary vsli:raw="Indicates that the short-time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indique que le format d'heure court pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary vsli:raw="Indicates that characters should be converted to Simplified Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères doivent être convertis en Chinois simplifié lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see cref=&quot;T:System.Single&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Single" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;String&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="String" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary vsli:raw="Specifies that Sunday should be used as the first day of the week when date-related functions are called.">Spécifie que le dimanche doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary vsli:raw="Indicates that the file is a system file for file-access functions.">Indique que le fichier est un fichier système pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que la boîte de message est affichée sous la forme d'une boîte de dialogue modale lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary vsli:raw="Represents a tab character for print and display functions.">Représente un caractère de tabulation pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary vsli:raw="Indicates that a text comparison should be performed when comparison functions are called.">Indique qu'une comparaison de texte doit être effectuée lorsque des fonctions de comparaison sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary vsli:raw="Specifies that Thursday should be used as the first day of the week when date-related functions are called.">Spécifie que le jeudi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary vsli:raw="Indicates that characters should be converted to Traditional Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères doivent être convertis en Chinois traditionnel lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;True&quot; /&gt; should be used when number-formatting functions are called.">Indique qu'une valeur <see langword="Boolean" /> de <see langword="True" /> doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary vsli:raw="Specifies that Tuesday should be used as the first day of the week when date-related functions are called.">Spécifie que le mardi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary vsli:raw="Indicates that characters should be converted to uppercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères doivent être convertis en majuscules lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary vsli:raw="Indicates that the default &lt;see langword=&quot;Boolean&quot; /&gt; value should be used when number-formatting functions are called.">Indique que la valeur <see langword="Boolean" /> par défaut doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary vsli:raw="Indicates that the type of a variant object is a user-defined type. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est un type défini par l'utilisateur. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary vsli:raw="Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.">Indique que la semaine spécifiée par votre système comme première semaine de l'année doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary vsli:raw="Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.">Indique que le jour spécifié par votre système comme premier jour de la semaine doit être utilisé lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Variant&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique que le type d'un objet variant est <see langword="Variant" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary vsli:raw="Represents a carriage-return character for print functions.">Représente un caractère de retour chariot pour les fonctions d'impression.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary vsli:raw="Indicates the volume label file attribute for file-access functions.">Indique l'attribut de fichier de nom de volume pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary vsli:raw="Specifies that Wednesday should be used as the first day of the week when date-related functions are called.">Spécifie que le mercredi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary vsli:raw="Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indique que les caractères étroits (codés sur un octet) doivent être convertis en caractères larges (codés sur deux octets) lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique qu'un clic a été effectué sur le bouton <see langword="Yes" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; and &lt;see langword=&quot;No&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que les boutons <see langword="Yes" /> et <see langword="No" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt;, &lt;see langword=&quot;No&quot; /&gt;, and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indique que les boutons <see langword="Yes" />, <see langword="No" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary vsli:raw="The &lt;see langword=&quot;ControlChars&quot; /&gt; module contains constants used as control characters. These constants can be used anywhere in your code.">Le module <see langword="ControlChars" /> contient les constantes utilisées comme caractères de contrôle. Ces constantes peuvent être utilisées partout dans votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.ControlChars&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ControlChars" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary vsli:raw="Represents a backspace character (&lt;see langword=&quot;vbBack&quot; /&gt;).">Représente un caractère de retour arrière (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary vsli:raw="Represents a carriage return character (&lt;see langword=&quot;vbCr&quot; /&gt;).">Représente un caractère de retour chariot (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary vsli:raw="Represents a carriage return/linefeed character combination (&lt;see langword=&quot;vbCrLf&quot; /&gt;).">Représente une combinaison de caractères retour chariot/saut de ligne (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary vsli:raw="Represents a form feed character for print functions (&lt;see langword=&quot;vbFormFeed&quot; /&gt;).">Représente un caractère de saut de page pour les fonctions d'impression (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary vsli:raw="Represents a line feed character (&lt;see langword=&quot;vbLf&quot; /&gt;).">Représente un caractère de saut de ligne (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary vsli:raw="Represents a new line character (&lt;see langword=&quot;vbNewLine&quot; /&gt;).">Représente un caractère de retour à la ligne (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary vsli:raw="Represents a null character (&lt;see langword=&quot;vbNullChar&quot; /&gt;).">Représente un caractère Null (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary vsli:raw="Represents a double-quote character.">Représente un caractère de guillemet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary vsli:raw="Represents a tab character (&lt;see langword=&quot;vbTab&quot; /&gt;).">Représente un caractère de tabulation (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary vsli:raw="Represents a vertical tab character (&lt;see langword=&quot;vbVerticalTab&quot; /&gt;).">Représente un caractère de tabulation verticale (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary vsli:raw="The &lt;see langword=&quot;Conversion&quot; /&gt; module contains the procedures used to perform various conversion operations.">Le module <see langword="Conversion" /> contient les procédures utilisées pour exécuter différentes opérations de conversion.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Convertit un objet dans le type spécifié.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objet à convertir.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Type dans lequel convertir l'objet.</param>
      <returns vsli:raw="An object whose type at run time is the requested target type.">Objet dont le type au moment de l'exécution est le type cible demandé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary vsli:raw="Converts an object to the specified generic type.">Convertit un objet dans le type générique spécifié.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objet à convertir.</param>
      <typeparam name="TargetType" vsli:raw="The type to which to convert the object.">Type dans lequel convertir l'objet.</typeparam>
      <returns vsli:raw="An object statically typed as the requested generic type.">Objet typé statiquement comme type générique demandé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">Retourne le message d'erreur qui correspond à un numéro d'erreur donné.</summary>
      <returns vsli:raw="The error message that corresponds to the most recent run-time error.">Message d'erreur qui correspond à l'erreur d'exécution la plus récente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> est hors limites.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">Retourne le message d'erreur qui correspond à un numéro d'erreur donné.</summary>
      <param name="ErrorNumber" vsli:raw="Optional. Any valid error number.">Facultatif. Tout numéro d'erreur valide.</param>
      <returns vsli:raw="The error message that corresponds to a given error number.">Message d'erreur qui correspond à un numéro d'erreur donné.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> est hors limites.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Decimal" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Double" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Short" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Integer" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Long" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">Obligatoire. Nombre de type <see langword="Object" /> ou toute expression numérique valide. Si l'argument <paramref name="Number" /> contient une valeur de type <see langword="Nothing" />, <see langword="Nothing" /> est retourné.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Single" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Decimal" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Double" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Short" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Integer" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Long" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">Obligatoire. Nombre de type <see langword="Object" /> ou toute expression numérique valide. Si l'argument <paramref name="Number" /> contient une valeur de type <see langword="Nothing" />, <see langword="Nothing" /> est retourné.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">Renvoie la partie entière d’un nombre.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">Obligatoire. Nombre de type <see langword="Single" /> ou toute expression numérique valide.</param>
      <returns vsli:raw="The integer portion of a number.">Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; representation of a number.">Retourne une représentation <see langword="String" /> d'un nombre.</summary>
      <param name="Number" vsli:raw="Required. An &lt;see langword=&quot;Object&quot; /&gt; containing any valid numeric expression.">Obligatoire. <see langword="Object" /> contenant toute expression numérique valide.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representation of a number.">Représentation <see langword="String" /> d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Renvoie les nombres contenus dans une chaîne en tant que valeur numérique du type adéquat.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatoire. Toute expression <see langword="String" />, variable <see langword="Object" /> ou valeur <see langword="Char" /> valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, sa valeur doit être convertible en <see langword="String" />, ou une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Nombres contenus dans une chaîne en tant que valeur numérique du type approprié.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> est trop grand.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> est une expression de type <see langword="Object" /> non convertible en <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Renvoie les nombres contenus dans une chaîne en tant que valeur numérique du type adéquat.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatoire. Toute expression <see langword="String" />, variable <see langword="Object" /> ou valeur <see langword="Char" /> valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, sa valeur doit être convertible en <see langword="String" />, ou une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Nombres contenus dans une chaîne en tant que valeur numérique du type approprié.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> est trop grand.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> est une expression de type <see langword="Object" /> non convertible en <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Renvoie les nombres contenus dans une chaîne en tant que valeur numérique du type adéquat.</summary>
      <param name="InputStr" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatoire. Toute expression <see langword="String" />, variable <see langword="Object" /> ou valeur <see langword="Char" /> valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, sa valeur doit être convertible en <see langword="String" />, ou une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Nombres contenus dans une chaîne en tant que valeur numérique du type approprié.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> est trop grand.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> est une expression de type <see langword="Object" /> non convertible en <see langword="String" />.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary vsli:raw="The &lt;see langword=&quot;DateAndTime&quot; /&gt; module contains the procedures and properties used in date and time operations.">Le module <see langword="DateAndTime" /> contient les procédures et propriétés utilisées pour les opérations de date et d'heure.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">Retourne une valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez ajouter.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. It can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">Obligatoire. Expression à virgule flottante représentant le nombre d'intervalles à ajouter. Peut être positif (pour obtenir des valeurs date/heure à venir) ou négatif (pour obtenir des valeurs date/heure passées). Elle peut contenir une partie décimale lorsque <paramref name="Interval" /> spécifie des heures, minutes ou secondes. Pour les autres valeurs de <paramref name="Interval" />, toute partie décimale de <paramref name="Number" /> est ignorée.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">Obligatoire. Expression représentant la date et l'heure auxquelles l'intervalle doit être ajouté. <paramref name="DateValue" /> proprement dit n'est pas modifié dans le programme appelant.</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">Valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">La date calculée est antérieure à 00:00:00 le 1er janvier de l'année 1 ou ultérieure à 23:59:59 le 31 décembre 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">Retourne une valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez ajouter.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. &lt;paramref name=&quot;Number&quot; /&gt; can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">Obligatoire. Expression à virgule flottante représentant le nombre d'intervalles à ajouter. <paramref name="Number" /> peut être positif (pour obtenir des valeurs date/heure à venir) ou négatif (pour représenter des valeurs date/heure passées). Elle peut contenir une partie décimale lorsque <paramref name="Interval" /> spécifie des heures, minutes ou secondes. Pour les autres valeurs de <paramref name="Interval" />, toute partie décimale de <paramref name="Number" /> est ignorée.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">Obligatoire. Expression représentant la date et l'heure auxquelles l'intervalle doit être ajouté. <paramref name="DateValue" /> proprement dit n'est pas modifié dans le programme appelant.</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">Valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">La date calculée est antérieure à 00:00:00 le 1er janvier de l'année 1 ou ultérieure à 23:59:59 le 31 décembre 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">Retourne une valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez utiliser comme unité de différence entre <paramref name="Date1" /> et <paramref name="Date2" />.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">Obligatoire. La première valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">Obligatoire. La deuxième valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">Valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> ou <paramref name="Date2" /> est d'un type non valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">Retourne une valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez utiliser comme unité de différence entre <paramref name="Date1" /> et <paramref name="Date2" />.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">Obligatoire. La première valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">Obligatoire. La deuxième valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">Valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> ou <paramref name="Date2" /> est d'un type non valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Retourne une valeur entière contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant la partie de la valeur de date/heure que vous souhaitez retourner.</param>
      <param name="DateValue" vsli:raw="Required. The &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">Obligatoire. Valeur <see langword="Date" /> que vous souhaitez évaluer.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Facultatif. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="FirstWeekOfYearValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Valeur entière contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Retourne une valeur contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant la partie de la valeur de date/heure que vous souhaitez retourner.</param>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">Obligatoire. Valeur <see langword="Date" /> que vous souhaitez évaluer.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Valeur entière contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is invalid.">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing the specified year, month, and day, with the time information set to midnight (00:00:00).">Retourne une valeur <see langword="Date" /> représentant une année, un mois et un jour spécifiés, l'indication d'heure ayant la valeur minuit (00:00:00).</summary>
      <param name="Year" vsli:raw="Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If &lt;paramref name=&quot;Year&quot; /&gt; is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section. If &lt;paramref name=&quot;Year&quot; /&gt; is less than 1, it is subtracted from the current year.">Obligatoire. Expression entière comprise entre 1 et 9999. Toutefois, les valeurs inférieures à cette plage sont également acceptées. Si <paramref name="Year" /> à une valeur entre 0 et 99, celle-ci est interprétée comme étant comprise entre 1930 et 2029, comme expliqué dans la section « Notes » ci-après. Si <paramref name="Year" /> est inférieure à 1, elle est soustraite de l'année actuelle.</param>
      <param name="Month" vsli:raw="Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Month&quot; /&gt; is offset by 1 and applied to January of the calculated year. In other words, (&lt;paramref name=&quot;Month&quot; /&gt; - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 1, the result is January of the calculated year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 0, the result is December of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is -1, the result is November of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 13, the result is January of the following year.">Obligatoire. Expression entière comprise entre 1 et 12. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Month" /> est décalée de 1 et appliquée au mois de janvier de l'année calculée. En d'autres termes, (<paramref name="Month" /> - 1) est ajouté à janvier. L'année est recalculée si nécessaire. Les résultats suivants illustrent cet effet : 
Si <paramref name="Month" /> a la valeur 1, le résultat est le mois de janvier de l'année calculée.  
Si <paramref name="Month" /> a la valeur 0, le résultat est décembre de l'année précédente.  
Si <paramref name="Month" /> a la valeur -1, le résultat est novembre de l'année précédente.  
Si <paramref name="Month" /> a la valeur 13, le résultat est le mois de janvier de l'année suivante.</param>
      <param name="Day" vsli:raw="Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Day&quot; /&gt; is offset by 1 and applied to the first day of the calculated month. In other words, (&lt;paramref name=&quot;Day&quot; /&gt; - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 1, the result is the first day of the calculated month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 0, the result is the last day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is -1, the result is the penultimate day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is past the end of the current month, the result is the appropriate day of the following month. For example, if &lt;paramref name=&quot;Month&quot; /&gt; is 4 and &lt;paramref name=&quot;Day&quot; /&gt; is 31, the result is May 1.">Obligatoire. Expression entière comprise entre 1 et 31. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Day" /> est décalée de 1 et appliquée au premier jour du mois calculé. En d'autres termes, (<paramref name="Day" /> - 1) est ajouté au premier du mois. Le mois et l'année sont recalculés si nécessaire. Les résultats suivants illustrent cet effet : 
Si <paramref name="Day" /> a la valeur 1, le résultat est le premier jour du mois calculé.  
Si <paramref name="Day" /> a la valeur 0, le résultat est le dernier jour du mois précédent.  
Si <paramref name="Day" /> a la valeur -1, le résultat est l'avant-dernier jour du mois précédent.  
Si <paramref name="Day" /> est ultérieur à la fin du mois en cours, le résultat est le jour correspondant du mois suivant. Par exemple, si <paramref name="Month" /> a la valeur 4 et <paramref name="Day" /> la valeur 31, le résultat est le 1er mai.</param>
      <returns vsli:raw="A value that represents the specified year, month, and day, with the time information set to midnight (00:00:00).">Valeur <see langword="Date" /> représentant une année, un mois et un jour spécifiés, l’indication d’heure ayant la valeur minuit (00:00:00).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary vsli:raw="Returns or sets a string value representing the current date according to your system.">Retourne ou définit une valeur de chaîne représentant la date actuelle indiquée par votre système.</summary>
      <returns vsli:raw="Returns or sets a string value representing the current date according to your system.">Retourne ou définit une valeur de chaîne représentant la date actuelle indiquée par votre système.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see cref=&quot;P:Microsoft.VisualBasic.DateAndTime.DateString&quot; /&gt;.">Format non valide utilisé pour définir la valeur de <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">Retourne une valeur <see langword="Date" /> contenant l'indication de date représentée par une chaîne, l'indication d'heure ayant la valeur minuit (00:00:00).</summary>
      <param name="StringDate" vsli:raw="Required. string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">Obligatoire. Expression de chaîne représentant une valeur de date/heure comprise entre 00:00:00 le 1er janvier de l’an 1 et 23:59:59 le 31 décembre 9999.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">Valeur <see langword="Date" /> contenant l’indication de date représentée par une chaîne, l’indication d’heure ayant la valeur minuit (00:00:00).</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringDate&quot; /&gt; includes invalid time information.">
        <paramref name="StringDate" /> comprend une indication d'heure non valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 31 representing the day of the month.">Retourne une valeur entière comprise entre 1 et 31 représentant le jour du mois.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the day.">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire le jour.</param>
      <returns vsli:raw="An integer value from 1 through 31 representing the day of the month.">Valeur entière comprise entre 1 et 31 représentant le jour du mois.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 23 representing the hour of the day.">Retourne une valeur entière comprise entre 0 et 23 représentant l’heure du jour.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the hour.">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire l’heure.</param>
      <returns vsli:raw="An integer value from 0 through 23 representing the hour of the day.">Valeur entière comprise entre 0 et 23 représentant l’heure du jour.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the minute of the hour.">Retourne une valeur entière comprise entre 0 et 59 représentant la minute de l’heure.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the minute.">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire la minute.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the minute of the hour.">Valeur entière comprise entre 0 et 59 représentant la minute de l’heure.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 12 representing the month of the year.">Retourne une valeur entière comprise entre 1 et 12 représentant le mois de l’année.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the month.">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire le mois.</param>
      <returns vsli:raw="An integer value from 1 through 12 representing the month of the year.">Valeur entière comprise entre 1 et 12 représentant le mois de l’année.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary vsli:raw="Returns a string value containing the name of the specified month.">Retourne une valeur de chaîne contenant le nom du mois spécifié.</summary>
      <param name="Month" vsli:raw="Required. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and &lt;paramref name=&quot;Month&quot; /&gt; is 13, &lt;c&gt;MonthName&lt;/c&gt; returns an empty string.">Obligatoire. Désignation numérique du mois, entre 1 et 13 ; 1 représente janvier et 12, décembre. Vous pouvez utiliser la valeur 13 avec un calendrier de 13 mois. Si votre système utilise un calendrier de 12 mois et si la valeur de <paramref name="Month" /> est 13, <c>MonthName</c> retourne une chaîne vide.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;True&quot; /&gt; to abbreviate the month name; otherwise, &lt;see langword=&quot;False&quot; /&gt;. The default is &lt;see langword=&quot;False&quot; /&gt;.">Facultatif. <see langword="True" /> pour abréger le nom du mois ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <returns vsli:raw="A string value containing the name of the specified month.">Valeur de chaîne contenant le nom du mois spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Month&quot; /&gt; is less than 1 or greater than 13.">
        <paramref name="Month" /> est inférieur à 1 ou supérieur à 13.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary vsli:raw="Returns a value containing the current date and time according to your system.">Retourne une valeur contenant la date et l’heure en cours indiquées par votre système.</summary>
      <returns vsli:raw="The current date and time according to your system.">Date et heure actuelles en fonction de votre système.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the second of the minute.">Retourne une valeur entière comprise entre 0 et 59 représentant la seconde de la minute.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the second.">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire la seconde.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the second of the minute.">Valeur entière comprise entre 0 et 59 représentant la seconde de la minute.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">Retourne ou définit une valeur <see langword="Date" /> contenant l'heure en cours indiquée par votre système.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">Retourne ou définit une valeur <see langword="Date" /> contenant l'heure en cours indiquée par votre système.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value representing the number of seconds elapsed since midnight.">Retourne une valeur de type <see cref="T:System.Double" /> représentant le nombre de secondes écoulées depuis minuit.</summary>
      <returns vsli:raw="A value representing the number of seconds elapsed since midnight.">Valeur représentant le nombre de secondes écoulées depuis minuit.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">Retourne une valeur <see langword="Date" /> représentant une heure, une minute et une seconde spécifiées, l'indication de date ayant la valeur 1er janvier de l'année 1.</summary>
      <param name="Hour" vsli:raw="Required. Integer expression from 0 through 23. However, values outside this range are also accepted.">Obligatoire. Expression entière comprise entre 0 et 23. Cependant, les valeurs non comprises dans cette plage sont également acceptées.</param>
      <param name="Minute" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Minute&quot; /&gt; is added to the calculated hour, so a negative value specifies minutes before that hour.">Obligatoire. Expression entière comprise entre 0 et 59. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Minute" /> est ajoutée à l'heure calculée, ce qui signifie qu'une valeur négative spécifie les minutes avant cette heure.</param>
      <param name="Second" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Second&quot; /&gt; is added to the calculated minute, so a negative value specifies seconds before that minute.">Obligatoire. Expression entière comprise entre 0 et 59. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Second" /> est ajoutée à la minute calculée, ce qui signifie qu'une valeur négative spécifie les secondes avant cette minute.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">Valeur <see langword="Date" /> représentant une heure, une minute et une seconde spécifiées, l’indication de date ayant la valeur 1er janvier de l’an 1.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is outside the range -2,147,483,648 through 2,147,483,647">Un argument se trouve en dehors de la plage s'étendant de -2 147 483 648 à 2 147 483 647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated time is less than negative 24 hours.">L'heure calculée est inférieure à -24 heures.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary vsli:raw="Returns or sets a string value representing the current time of day according to your system.">Retourne ou définit une valeur de chaîne représentant l’heure actuelle indiquée par votre système.</summary>
      <returns vsli:raw="Returns or sets a string value representing the current time of day according to your system.">Retourne ou définit une valeur de chaîne représentant l’heure actuelle indiquée par votre système.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see langword=&quot;TimeString&quot; /&gt;.">Format non valide utilisé pour définir la valeur de <see langword="TimeString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">Retourne une valeur <see langword="Date" /> contenant l'indication d'heure représentée par une chaîne, l'indication de date ayant la valeur 1er janvier de l'année 1.</summary>
      <param name="StringTime" vsli:raw="Required. A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">Obligatoire. Expression de chaîne représentant une valeur de date/heure comprise entre 00:00:00 le 1er janvier de l’an 1 et 23:59:59 le 31 décembre 9999.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">Valeur <see langword="Date" /> contenant l’indication d’heure représentée par une chaîne, l’indication de date ayant la valeur 1er janvier de l’an 1.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringTime&quot; /&gt; includes invalid date information.">
        <paramref name="StringTime" /> inclut des informations de date non valides.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">Retourne ou définit une valeur <see langword="Date" /> représentant la date actuelle indiquée par votre système.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">Retourne ou définit une valeur <see langword="Date" /> représentant la date actuelle indiquée par votre système.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns an integer value containing a number representing the day of the week.">Retourne une valeur entière contenant un nombre représentant le jour de la semaine.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value for which you want to determine the day of the week.">Obligatoire. Valeur <see langword="Date" /> pour laquelle vous souhaitez déterminer le jour de la semaine.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Facultatif. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <returns vsli:raw="An integer value containing a number representing the day of the week.">Valeur entière contenant un nombre représentant le jour de la semaine.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;DayOfWeek&quot; /&gt; is less than 0 or more than 7.">
        <paramref name="DayOfWeek" /> est inférieur à 0 ou supérieur à 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns a string value containing the name of the specified weekday.">Retourne une valeur de chaîne contenant le nom du jour de la semaine spécifié.</summary>
      <param name="Weekday" vsli:raw="Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt;.">Obligatoire. Integer. Désignation numérique du jour de la semaine, de 1 à 7 ; 1 représente le premier jour de la semaine et 7 le dernier. Les identités du premier et du dernier jour dépendent du paramètre de <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates if the weekday name is to be abbreviated. If omitted, the default is &lt;see langword=&quot;False&quot; /&gt;, which means the weekday name is not abbreviated.">Optionnel. Valeur <see langword="Boolean" /> qui indique si le nom du jour de la semaine sera abrégé. Si elle n'est pas spécifiée, la valeur par défaut est <see langword="False" />, ce qui signifie que le nom du jour de la semaine n'est pas abrégé.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see langword=&quot;FirstDayOfWeek.System&quot; /&gt; is used.">Facultatif. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see langword="FirstDayOfWeek.System" /> est utilisé.</param>
      <returns vsli:raw="A string value containing the name of the specified weekday.">Valeur de chaîne contenant le nom du jour de la semaine spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Weekday&quot; /&gt; is less than 1 or greater than 7, or &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt; is less than 0 or greater than 7.">
        <paramref name="Weekday" /> est inférieur à 1 ou supérieur à 7 ou <paramref name="FirstDayOfWeekValue" /> est inférieur à 0 ou supérieur à 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 9999 representing the year.">Retourne une valeur entière comprise entre 1 et 9999 représentant l’année.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the year.">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire l’année.</param>
      <returns vsli:raw="An integer value from 1 through 9999 representing the year.">Valeur entière comprise entre 1 et 9999 représentant l’année.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary vsli:raw="Indicates how to display dates when calling the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function.">Indique comment afficher les dates lors de l'appel de la fonction <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary vsli:raw="For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGeneralDate&quot; /&gt;.">Pour les nombres réels, affiche une date et une heure. i le nombre n'a pas de partie fractionnaire, affiche seulement une date. i le nombre n'a pas de partie entière, affiche seulement l'heure. Le mode d'affichage de la date et de l'heure est fonction des paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbGeneralDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary vsli:raw="Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongDate&quot; /&gt;.">Affiche une date dans le format de date longue spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbLongDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary vsli:raw="Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongTime&quot; /&gt;.">Affiche une heure dans le format d'heure longue spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbLongTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary vsli:raw="Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortDate&quot; /&gt;.">Affiche une date dans le format de date court spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbShortDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary vsli:raw="Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortTime&quot; /&gt;.">Affiche une heure dans le format d'heure court spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbShortTime" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary vsli:raw="Indicates how to determine and format date intervals when calling date-related functions.">Indique comment déterminer et mettre en forme les intervalles de date pendant l’appel des fonctions de date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary vsli:raw="Day of month (1 through 31)">Jour du mois (1 à 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary vsli:raw="Day of year (1 through 366)">Jour de l’année (1 à 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary vsli:raw="Hour (0 through 23)">Heure (0 à 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary vsli:raw="Minute (0 through 59)">Minute (0 à 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary vsli:raw="Month (1 through 12)">Mois (1 à 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary vsli:raw="Quarter of year (1 through 4)">Trimestre de l’année (1 à 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary vsli:raw="Second (0 through 59)">Seconde (0 à 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary vsli:raw="Day of week (1 through 7)">Jour de la semaine (1 à 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary vsli:raw="Week of year (1 through 53)">Semaine de l’année (1 à 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary vsli:raw="Year.">Année</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>Fournit des méthodes permettant de lire des sons.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Audio" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>Fournit des propriétés permettant d’accéder à l’heure locale actuelle et à l’heure UTC (Universal Coordinated Time), équivalent à l’heure GMT (Greenwich Mean Time), à partir de l’horloge système.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Clock" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>Obtient un objet <see langword="Date" /> qui contient la date et l'heure locales actuelles sur l'ordinateur, exprimées en temps universel (UTC ou GMT).</summary>
      <returns>Objet <see langword="Date" /> qui contient la date et l'heure actuelles exprimées en temps UTC (GMT).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>Obtient un objet <see langword="Date" /> qui contient la date et l'heure locales actuelles sur cet ordinateur.</summary>
      <returns>Objet <see langword="Date" /> qui contient la date et l'heure locales actuelles.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>Obtient le nombre de millisecondes de l'horloge système de l'ordinateur.</summary>
      <returns>
        <see langword="Integer" /> contenant le nombre de millisecondes de l'horloge système de l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>Fournit des propriétés permettant de manipuler des composants informatiques tels que le son, l’horloge, le clavier, le système de fichiers, etc.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Computer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>Obtient un objet qui fournit des propriétés pour les méthodes destinées à la lecture des sons.</summary>
      <returns>Objet <see langword="My.Computer.Audio" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>Obtient un objet qui fournit des méthodes pour manipuler le Presse-papiers.</summary>
      <returns>Objet <see langword="My.Computer.Clipboard" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>Obtient un objet qui fournit des propriétés pour accéder à l'état actuel du clavier, par exemple les touches actuellement enfoncées et fournit une méthode destinée à envoyer des séquences de touches à la fenêtre active.</summary>
      <returns>Objet <see langword="My.Computer.Keyboard" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>Obtient un objet qui fournit des propriétés pour obtenir des informations concernant le format et la configuration de la souris installée sur l'ordinateur local.</summary>
      <returns>Objet <see langword="My.Computer.Mouse" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>Obtient un objet qui fournit une propriété et une méthode pour accéder aux ports série de l'ordinateur.</summary>
      <returns>Objet <see langword="My.Computer.Ports" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>Fournit des propriétés permettant d’obtenir des informations sur la mémoire, les assemblys chargés, le nom et le système d’exploitation de l’ordinateur.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>Obtient la quantité totale de mémoire physique libre de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets de mémoire physique libre de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>Obtient la quantité totale d'espace d'adresse virtuelle libre de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle libre de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>Obtient la culture de l'interface utilisateur installée avec le système d'exploitation.</summary>
      <returns>Un objet <see cref="T:System.Globalization.CultureInfo" /> représente la culture de l'interface utilisateur installée sur l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>Reçoit l'identificateur de plateforme pour le système d'exploitation de l'ordinateur.</summary>
      <returns>
        <see langword="String" /> contenant l'identificateur de plateforme pour le système d'exploitation de l'ordinateur, choisi dans les noms des membres de l'énumération <see cref="T:System.PlatformID" />.</returns>
      <exception cref="T:System.ExecutionEngineException">L'application ne peut pas obtenir les informations sur la plateforme du système d'exploitation.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>Obtient la version du système d'exploitation de l'ordinateur.</summary>
      <returns>
        <see langword="String" /> contenant le numéro de version actuelle du système d'exploitation.</returns>
      <exception cref="T:System.ExecutionEngineException">L'application ne peut pas obtenir les informations relatives à la version du système d'exploitation.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>Obtient la quantité totale de mémoire physique de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets de mémoire physique de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>Obtient la quantité totale d'espace d'adresse virtuelle disponible de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle disponible de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>Fournit des propriétés utilisées pour accéder à l’état actuel du clavier, par exemple pour savoir quelles touches sont actuellement utilisées, et fournit une méthode permettant d’envoyer des séquences de touches à la fenêtre active.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>Fournit des propriétés pour obtenir des informations concernant le format et la configuration de la souris installée sur l'ordinateur local.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>Fournit une propriété, un événement et des méthodes pour interagir avec le réseau auquel l'ordinateur est connecté.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>Fournit des données pour les événements <see langword="My.Application.NetworkAvailabilityChanged" /> et <see langword="My.Computer.Network.NetworkAvailabilityChanged" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="networkAvailable">
        <see cref="T:System.Boolean" /> qui indique si un réseau est disponible pour l'application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>Obtient une valeur indiquant si un réseau est disponible pour l'application.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si un réseau est disponible pour l'application.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>Fournit une propriété et une méthode permettant d’accéder aux ports série de l’ordinateur.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>Fournit des propriétés permettant de manipuler des composants informatiques tels que le son, l’horloge, le clavier, le système de fichiers, etc.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>Obtient un objet qui fournit des propriétés permettant d'accéder à l'heure locale actuelle et au temps UTC (Universal Coordinated Time, équivalent du Greenwich Mean Time) de l'horloge système.</summary>
      <returns>Objet <see langword="My.Computer.Clock" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>Obtient un objet qui fournit des propriétés et méthodes à utiliser avec les lecteurs, fichiers et répertoires.</summary>
      <returns>Objet <see langword="My.Computer.FileSystem" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>Obtient un objet qui fournit des propriétés pour l'obtention des informations concernant la mémoire de l'ordinateur, les assemblys chargés, le nom et le système d'exploitation.</summary>
      <returns>Objet <see langword="My.Computer.Info" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>Obtient le nom de l'ordinateur.</summary>
      <returns>
        <see langword="String" /> contenant le nom de l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>Obtient un objet qui fournit une propriété et des méthodes pour interagir avec le réseau auquel l'ordinateur est connecté.</summary>
      <returns>Objet <see langword="My.Computer.Network" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>Obtient un objet qui fournit des propriétés et des méthodes pour manipuler le Registre.</summary>
      <returns>Objet <see langword="My.Computer.Registry" /> pour l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary vsli:raw="Indicates when payments are due when calling financial methods.">Indique la date d'échéance des paiements lors de l'appel à des méthodes financières.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary vsli:raw="Falls at the beginning of the date interval.">Tombe au début de l'intervalle de date</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary vsli:raw="Falls at the end of the date interval.">Tombe à la fin de l'intervalle de date</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary vsli:raw="The &lt;see langword=&quot;ErrObject&quot; /&gt; module contains properties and procedures used to identify and handle run-time errors using the &lt;see langword=&quot;Err&quot; /&gt; object.">Le module <see langword="ErrObject" /> contient des propriétés et procédures permettant d'identifier et de gérer les erreurs d'exécution à l'aide de l'objet <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary vsli:raw="Clears all property settings of the &lt;see langword=&quot;Err&quot; /&gt; object.">Efface tous les paramètres de propriété de l'objet <see langword="Err" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">Retourne ou définit une expression <see langword="String" /> contenant une chaîne descriptive associée à une erreur. Lecture/écriture.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">Retourne ou définit une expression <see langword="String" /> contenant une chaîne descriptive associée à une erreur. Lecture/écriture.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary vsli:raw="Gets an integer indicating the line number of the last executed statement.">Obtient un entier indiquant le numéro de ligne de la dernière instruction exécutée.</summary>
      <returns vsli:raw="The line number of the last executed statement.">Numéro de ligne de la dernière instruction exécutée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary vsli:raw="Returns the exception representing the error that occurred.">Retourne l'exception représentant l'erreur survenue.</summary>
      <returns vsli:raw="The exception representing the error that occurred.">L’exception représentant l’erreur survenue.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary vsli:raw="Gets a system error code produced by a call to a dynamic-link library (DLL).">Obtient un code d’erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</summary>
      <returns vsli:raw="A system error code produced by a call to a dynamic-link library (DLL).">Code d’erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">Retourne ou définit une valeur numérique spécifiant une erreur. Lecture/écriture.</summary>
      <returns vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">Retourne ou définit une valeur numérique spécifiant une erreur. Lecture/écriture.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is greater than 65535.">
        <paramref name="Number" /> est supérieur à 65535.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary vsli:raw="Generates a run-time error; can be used instead of the &lt;see langword=&quot;Error&quot; /&gt; statement.">Génère une erreur d'exécution ; peut être utilisé au lieu de l'instruction <see langword="Error" />.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt; integer that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors. When setting the &lt;see langword=&quot;Number&quot; /&gt; property to your own error code in a class module, you add your error code number to the &lt;see langword=&quot;vbObjectError&quot; /&gt; constant. For example, to generate the error number 513, assign &lt;c&gt;vbObjectError + 513&lt;/c&gt; to the &lt;see langword=&quot;Number&quot; /&gt; property.">Obligatoire. Entier <see langword="Long" /> qui identifie la nature de l'erreur. Les erreurs Visual Basic se situent dans la plage 0-65535 ; la plage 0-512 est réservée aux erreurs système ; la plage 513-65535 est disponible pour les erreurs définies par l’utilisateur. Lorsque vous définissez la propriété <see langword="Number" /> à votre propre code d'erreur dans un module de classe, vous ajoutez votre numéro de code d'erreur à la constante <see langword="vbObjectError" />. Par exemple, pour générer le numéro d’erreur 513, affectez la valeur <c>vbObjectError + 513</c> à la propriété <see langword="Number" />.</param>
      <param name="Source" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression naming the object or application that generated the error. When setting this property for an object, use the form &lt;c&gt;project&lt;/c&gt;.&lt;c&gt;class&lt;/c&gt;. If &lt;paramref name=&quot;Source&quot; /&gt; is not specified, the process ID of the current Visual Basic project is used.">Facultatif. Expression <see langword="String" /> nommant l'objet ou l'application qui a généré l'erreur. Lorsque vous définissez cette propriété pour un objet, utilisez la forme <c>project</c>.<c>class</c>. Si <paramref name="Source" /> n'est pas spécifié, l'ID de processus du projet Visual Basic actuel est utilisé.</param>
      <param name="Description" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression describing the error. If unspecified, the value in the &lt;see langword=&quot;Number&quot; /&gt; property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the &lt;see langword=&quot;Error&quot; /&gt; function is used as the &lt;see langword=&quot;Description&quot; /&gt; property. If there is no Visual Basic error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property, the &quot;Application-defined or object-defined error&quot; message is used.">Optionnel. Expression <see langword="String" /> décrivant l'erreur. Si elle est non spécifiée, la valeur dans la propriété <see langword="Number" /> est examinée. Si elle peut être mappée à un code d'erreur d'exécution Visual Basic, la chaîne qui serait retournée par la fonction <see langword="Error" /> est utilisée comme propriété <see langword="Description" />. S'il n'y a aucune erreur Visual Basic correspondant à la propriété <see langword="Number" />, le message "Erreur définie par l'application ou par l'objet" est utilisé.</param>
      <param name="HelpFile" vsli:raw="Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.">Facultatif. Chemin qualifié complet au fichier d'aide dans lequel l'aide concernant cette erreur peut être recherchée. S'il n'est pas spécifié, Visual Basic utilise le lecteur, le chemin d'accès et le nom de fichier qualifiés complets du fichier d'aide Visual Basic.</param>
      <param name="HelpContext" vsli:raw="Optional. The context ID identifying a topic within &lt;paramref name=&quot;HelpFile&quot; /&gt; that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property is used, if it exists.">Optionnel. L'ID de contexte identifiant une rubrique dans <paramref name="HelpFile" /> qui fournit une aide pour l'erreur. S'il est omis, l'ID de contexte du fichier d'aide Visual Basic pour l'erreur correspondant à la propriété <see langword="Number" /> est utilisé, s'il existe.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary vsli:raw="Indicates the file attributes to use when calling file-access functions.">Indique les attributs de fichier à utiliser lors de l'appel de fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary vsli:raw="File has changed since last backup. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArchive&quot; /&gt;.">Le fichier a été modifié depuis sa dernière sauvegarde. Ce membre est équivalent à la constante Visual Basic <see langword="vbArchive" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary vsli:raw="Directory or folder. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDirectory&quot; /&gt;.">Répertoire ou dossier. Ce membre est équivalent à la constante Visual Basic <see langword="vbDirectory" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary vsli:raw="Hidden. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHidden&quot; /&gt;.">Masqué. Ce membre est équivalent à la constante Visual Basic <see langword="vbHidden" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary vsli:raw="Normal (default for &lt;see langword=&quot;Dir&quot; /&gt; and &lt;see langword=&quot;SetAttr&quot; /&gt;). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormal&quot; /&gt;.">Normal (valeur par défaut pour <see langword="Dir" /> et <see langword="SetAttr" />). Aucune caractéristique spéciale ne s'applique à ce fichier. Ce membre est équivalent à la constante Visual Basic <see langword="vbNormal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary vsli:raw="Read only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbReadOnly&quot; /&gt;.">En lecture seule. Ce membre est équivalent à la constante Visual Basic <see langword="vbReadOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary vsli:raw="System file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystem&quot; /&gt;.">Fichier système. Ce membre est équivalent à la constante Visual Basic <see langword="vbSystem" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary vsli:raw="Volume label. This attribute is not valid when used with &lt;see langword=&quot;SetAttr&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVolume&quot; /&gt;.">Nom de volume. Cet attribut n'est pas valide lorsqu'il est utilisé avec <see langword="SetAttr" />. Ce membre est équivalent à la constante Visual Basic <see langword="vbVolume" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories.">Spécifie l'opération à effectuer lorsqu'un répertoire à supprimer contient des fichiers ou des répertoires.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary vsli:raw="Delete the contents of the directory along with the directory. Default.">Supprime le contenu du répertoire avec le répertoire. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary vsli:raw="Throw an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; if the directory is not empty. The &lt;see langword=&quot;Data&quot; /&gt; property of the exception lists the file(s) that could not be deleted.">Lève une exception <see cref="T:System.IO.IOException" /> si le répertoire n'est pas vide. La propriété <see langword="Data" /> de l'exception répertorie le ou les fichiers qui n'ont pas pu être supprimés.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary vsli:raw="Indicates whether text fields are delimited or fixed width.">Indique si les champs de texte sont délimités ou à largeur fixe.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary vsli:raw="Indicates that the fields are delimited.">Indique que les champs sont délimités.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary vsli:raw="Indicates that the fields are fixed width.">Indique que les champs sont à largeur fixe.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary vsli:raw="Provides properties and methods for working with drives, files, and directories.">Fournit des propriétés et des méthodes destinées à être utilisées avec les lecteurs, les fichiers et les répertoires.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary vsli:raw="Combines two paths and returns a properly formatted path.">Associe deux chemins d'accès et retourne un chemin d'accès correctement mis en forme.</summary>
      <param name="baseDirectory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. First path to be combined.">
        <see langword="String" />. Premier chemin d'accès à combiner.</param>
      <param name="relativePath" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Second path to be combined.">
        <see langword="String" />. Deuxième chemin d'accès à combiner.</param>
      <returns vsli:raw="The combination of the specified paths.">Combinaison des chemins d'accès spécifiés.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;baseDirectory&quot; /&gt; or &lt;paramref name=&quot;relativePath&quot; /&gt; are malformed paths.">
        <paramref name="baseDirectory" /> ou <paramref name="relativePath" /> sont des chemins d'accès incorrects.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Répertoire à copier.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Répertoire à copier.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Répertoire à copier.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Répertoire à copier.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary vsli:raw="Copies a file to a new location.">Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Fichier à copier.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Emplacement vers lequel le fichier doit être copié.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the target directory with the same name is in use.">Un fichier du répertoire cible portant le même nom est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies a file to a new location.">Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Fichier à copier.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies a file to a new location.">Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Fichier à copier.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;UICancelOption&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user has canceled the operation or an unspecified I/O error occurs.">
        <paramref name="UICancelOption" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies a file to a new location.">Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Fichier à copier.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing files should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si les fichiers existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary vsli:raw="Creates a directory.">Crée un répertoire.</summary>
      <param name="directory" vsli:raw="Name and location of the directory.">Nom et emplacement du répertoire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The directory name is malformed. For example, it contains illegal characters or is only white space.">Le format du nom du répertoire est incorrect. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The directory name is too long.">Le nom de répertoire est trop long.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name is only a colon (:).">Le nom du répertoire se compose uniquement du signe deux-points (:).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The parent directory of the directory to be created is read-only.">Le répertoire parent du répertoire à créer est en lecture seule.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to create the directory.">L'utilisateur n'est pas autorisé à créer le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary vsli:raw="Gets or sets the current directory.">Obtient ou définit le répertoire actif.</summary>
      <returns vsli:raw="The current directory for file I/O operations.">Répertoire actif pour les opérations d'E/S de fichier.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is not valid.">Le chemin d'accès n'est pas valide.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary vsli:raw="Deletes a directory.">Supprime un répertoire.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Répertoire à supprimer.</param>
      <param name="onDirectoryNotEmpty" vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories. Default is &lt;see langword=&quot;DeleteDirectoryOption.DeleteAllContents&quot; /&gt;.">Spécifie l'opération à effectuer lorsqu'un répertoire à supprimer contient des fichiers ou des répertoires. La valeur par défaut est <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a directory.">Supprime un répertoire.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Répertoire à supprimer.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a directory.">Supprime un répertoire.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Répertoire à supprimer.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether to throw an exception if the user clicks Cancel.">Spécifie si une exception doit être levée quand l’utilisateur clique sur Annuler.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary vsli:raw="Deletes a file.">Supprime un fichier.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Nom et chemin d'accès du fichier à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a file.">Supprime un fichier.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a file.">Supprime un fichier.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancelled the operation and &lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">L'utilisateur a annulé l'opération et <paramref name="onUserCancel" /> a la valeur <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified directory exists.">Retourne la valeur <see langword="True" /> si le répertoire spécifié existe.</summary>
      <param name="directory" vsli:raw="Path of the directory.">Chemin d'accès du répertoire.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the directory exists; otherwise &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the name and path of a file rather than a directory.">
        <see langword="True" /> si le répertoire existe ; sinon <see langword="False" />. Cette méthode retourne également <see langword="False" /> si le paramètre représente le nom et le chemin d’accès d’un fichier, et non un répertoire.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary vsli:raw="Returns a read-only collection of all available drive names.">Retourne une collection en lecture seule de tous les noms de lecteurs disponibles.</summary>
      <returns vsli:raw="A read-only collection of all available drives as &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; objects.">Collection en lecture seule de tous les lecteurs disponibles en tant qu'objets <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified file exists.">Retourne la valeur <see langword="True" /> si le fichier spécifié existe.</summary>
      <param name="file" vsli:raw="Name and path of the file.">Nom et chemin d'accès du fichier.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the file exists; otherwise this method returns &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the path of a directory rather than a file.">Retourne <see langword="True" /> si le fichier existe ; sinon, cette méthode retourne <see langword="False" />. Cette méthode retourne également <see langword="False" /> si le paramètre représente le chemin d’accès d’un répertoire au lieu d’un fichier.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the file ends with a backslash (\).">Le nom du fichier se termine par une barre oblique inverse (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText" vsli:raw="The search text.">Texte de la recherche.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText" vsli:raw="The search text.">Texte de la recherche.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards" vsli:raw="Pattern to be matched.">Modèle auquel correspondre.</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">Nom et chemin d'accès du répertoire.</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">Nom et chemin d'accès du répertoire.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards" vsli:raw="Pattern to match names.">Modèle permettant d'établir une correspondance entre les noms.</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the specified wildcard characters is &lt;see langword=&quot;Nothing&quot; /&gt;, an empty string, or contains only spaces.">Un ou plusieurs des caractères génériques spécifiés ont une valeur <see langword="Nothing" />, une chaîne vide ou contiennent uniquement des espaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">Retourne un objet <see cref="T:System.IO.DirectoryInfo" /> pour le fichier spécifié.</summary>
      <param name="directory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Path of directory.">
        <see langword="String" />. Chemin d'accès du répertoire.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">Objet <see cref="T:System.IO.DirectoryInfo" /> pour le chemin spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory path contains a colon (:) or is in an invalid format.">Le chemin d'accès du répertoire contient un signe deux-points (:) ou n'a pas un format valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">Retourne un objet <see cref="T:System.IO.DriveInfo" /> pour le fichier spécifié.</summary>
      <param name="drive" vsli:raw="Drive to be examined.">Lecteur à examiner.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">Objet <see cref="T:System.IO.DriveInfo" /> pour le lecteur spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;drive&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="drive" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">Retourne un objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié.</summary>
      <param name="file" vsli:raw="Name and path of the file.">Nom et chemin d'accès du fichier.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">Objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.">Le chemin d'accès est mal formé. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc. Le nom du fichier contient une marque de barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The path contains a colon in the middle of the string.">Le chemin d'accès contient le signe deux-points au milieu de la chaîne.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path is too long.">Le chemin d'accès est trop long.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks ACL (access control list) access to the file.">L'utilisateur n'a pas l'accès ACL (liste de contrôle d'accès) au fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">Répertoire dans lequel effectuer la recherche.</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">Répertoire dans lequel effectuer la recherche.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards" vsli:raw="Pattern to be matched.">Modèle auquel correspondre.</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary vsli:raw="Parses the file name out of the path provided.">Analyse le nom du fichier à partir du chemin d'accès fourni.</summary>
      <param name="path" vsli:raw="Required. Path to be parsed. &lt;see langword=&quot;String&quot; /&gt;.">Obligatoire. Chemin d'accès à analyser. <see langword="String" />.</param>
      <returns vsli:raw="The file name from the specified path.">Nom de fichier à partir du chemin d'accès spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary vsli:raw="Returns the parent path of the provided path.">Retourne le chemin d'accès parent du chemin d'accès fourni.</summary>
      <param name="path" vsli:raw="Path to be examined.">Chemin d'accès à examiner.</param>
      <returns vsli:raw="The parent path of the provided path.">Chemin d'accès parent du chemin d'accès fourni.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Path does not have a parent path because it is a root path.">Le chemin d'accès n'a pas de chemin parent car il s'agit d'un chemin d'accès racine.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary vsli:raw="Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.">Crée un fichier temporaire de zéro octet nommé de manière unique sur le disque et retourne le chemin d'accès complet de ce fichier.</summary>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the full path of the temporary file.">
        <see langword="String" /> contenant le chemin d'accès complet du fichier temporaire.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary vsli:raw="Moves a directory from one location to another.">Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source is a root directory or The source path and the target path are the same.">La source est un répertoire racine ou le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a directory from one location to another.">Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a directory from one location to another.">Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt; and a subdirectory of the file cannot be copied.">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et un sous-répertoire du fichier ne peut pas être copié.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user cancels the operation, or the operation cannot be completed.">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur annule l'opération ou l'opération ne peut pas être effectuée.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a directory from one location to another.">Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing directories should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si les répertoires existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary vsli:raw="Moves a file to a new location.">Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a file to a new location.">Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a file to a new location.">Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and either the user has cancelled the operation or an unspecified I/O error occurs.">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a file to a new location.">Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object,  which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d’analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths" vsli:raw="Widths of the fields.">Largeur des champs.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="delimiters" vsli:raw="Delimiters for the fields.">Séparateurs de champs.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file" vsli:raw="File to be read.">Fichier à lire.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file" vsli:raw="File to be read.">Fichier à lire.</param>
      <param name="encoding" vsli:raw="The encoding to use for the file contents. Default is ASCII.">Encodage à utiliser pour le contenu du fichier. La valeur par défaut est ASCII.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">Ouvre un objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</summary>
      <param name="file" vsli:raw="File to be written to.">Fichier dans lequel écrire.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; to write to the specified file.">Ouvre un <see cref="T:System.IO.StreamWriter" /> pour écrire dans le fichier spécifié.</summary>
      <param name="file" vsli:raw="File to be written to.">Fichier dans lequel écrire.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents in the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding" vsli:raw="Encoding to be used in writing to the file. Default is ASCII.">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est ASCII.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary vsli:raw="Returns the contents of a file as a byte array.">Retourne le contenu d'un fichier sous la forme d'un tableau d'octets.</summary>
      <param name="file" vsli:raw="File to be read.">Fichier à lire.</param>
      <returns vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt; array containing the contents of the file.">Tableau <see langword="Byte" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">Nom et chemin d'accès du fichier à lire.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">Nom et chemin d'accès du fichier à lire.</param>
      <param name="encoding" vsli:raw="Character encoding to use in reading the file. Default is UTF-8.">Encodage de caractères à utiliser pour la lecture du fichier. La valeur par défaut est UTF-8.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary vsli:raw="Renames a directory.">Renomme un répertoire.</summary>
      <param name="directory" vsli:raw="Path and name of directory to be renamed.">Chemin d'accès et nom du répertoire à renommer.</param>
      <param name="newName" vsli:raw="New name for directory.">Nouveau nom du répertoire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information.">
        <paramref name="newName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> est <see langword="Nothing" />.  
ou 
 <paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary vsli:raw="Renames a file.">Renomme un fichier.</summary>
      <param name="file" vsli:raw="File to be renamed.">Fichier à renommer.</param>
      <param name="newName" vsli:raw="New name of file.">Nouveau nom du fichier.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information or ends with a backslash (\).">
        <paramref name="newName" /> contient des informations relatives au chemin d’accès ou se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> est <see langword="Nothing" />.  
ou 
 <paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The directory does not exist.">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary vsli:raw="Writes data to a binary file.">Écrit des données dans un fichier binaire.</summary>
      <param name="file" vsli:raw="Path and name of the file to be written to.">Chemin d'accès et nom du fichier dans lequel écrire.</param>
      <param name="data" vsli:raw="Data to be written to the file.">Données à écrire dans le fichier.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the file contents; &lt;see langword=&quot;False&quot; /&gt; to overwrite the file contents. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes text to a file.">Écrit du texte dans un fichier.</summary>
      <param name="file" vsli:raw="File to be written to.">Fichier dans lequel écrire.</param>
      <param name="text" vsli:raw="Text to be written to file.">Texte à écrire dans le fichier.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Writes text to a file.">Écrit du texte dans un fichier.</summary>
      <param name="file" vsli:raw="File to be written to.">Fichier dans lequel écrire.</param>
      <param name="text" vsli:raw="Text to be written to file.">Texte à écrire dans le fichier.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier.</param>
      <param name="encoding" vsli:raw="What encoding to use when writing to file.">Encodage à utiliser lors de l'écriture dans le fichier.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary vsli:raw="The exception that is thrown when the &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields&quot; /&gt; method cannot parse a row using the specified format.">Exception qui est levée lorsque la méthode <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> ne peut pas analyser de ligne à l'aide du format spécifié.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; describing the error.">
        <see cref="T:System.String" /> décrivant l'erreur.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">Objet <see cref="T:System.Exception" /> qui constitue la cause de l'exception actuelle. Si le paramètre <see cref="P:System.Exception.InnerException" /> n'est pas une référence null (<see langword="Nothing" /> en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a line number.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié et un numéro de ligne.</summary>
      <param name="message" vsli:raw="The message for the exception.">Message pour l'exception.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">Numéro de la ligne incorrecte.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message for the exception.">Message pour l'exception.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">Numéro de la ligne incorrecte.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">
        <see cref="T:System.Exception" /> qui constitue la cause de l'exception actuelle. Si le paramètre <see cref="P:System.Exception.InnerException" /> n'est pas une référence Null (<see langword="Nothing" /> en Visual Basic), l'exception en cours est levée dans un bloc catch gérant l'exception interne.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with information about the exception.">Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à partir d'informations relatives à l'exception.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary vsli:raw="Gets the line number of the malformed line.">Obtient le numéro de la ligne incorrecte.</summary>
      <returns vsli:raw="The line number of the malformed line.">Numéro de la ligne incorrecte.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current exception.">Crée et retourne une chaîne représentant l'exception actuelle.</summary>
      <returns vsli:raw="A string representation of the current exception.">Représentation sous forme de chaîne de l'exception actuelle.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary vsli:raw="Specifies whether a file should be deleted permanently or placed in the Recycle Bin.">Spécifie si un fichier doit être supprimé définitivement ou être placé dans la Corbeille.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary vsli:raw="Delete the file or directory permanently. Default.">Supprime définitivement le fichier ou répertoire. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary vsli:raw="Send the file or directory to the Recycle Bin.">Envoie le fichier ou répertoire à la Corbeille.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary vsli:raw="Specifies whether to search all or only top-level directories.">Spécifie s'il faut effectuer la recherche dans tous les répertoires ou seulement dans les répertoires de niveau supérieur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary vsli:raw="Search the specified directory and all subdirectories within it. Default.">Effectue la recherche dans le répertoire spécifié et tous les sous-répertoires qu'il contient. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary vsli:raw="Search only the specified directory and exclude subdirectories.">Effectue une recherche uniquement dans le répertoire spécifié, en excluant les sous-répertoires.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary vsli:raw="Provides properties for accessing commonly referenced directories.">Fournit des propriétés utilisées pour accéder aux répertoires communément référencés.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories&quot; /&gt; class.">Retourne une instance de la classe <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the all users.">Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour tous les utilisateurs.</summary>
      <returns vsli:raw="The path to the Application Data directory for the all users.">Chemin d'accès au répertoire de données d'application pour tous les utilisateurs.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission" vsli:raw="Controls access to system and user environment variables. Associated enumeration: &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;.">Contrôle l'accès aux variables du système et de l'environnement utilisateur. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the current user.">Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour l'utilisateur en cours.</summary>
      <returns vsli:raw="The path to the Application Data directory for the current user.">Chemin d'accès au répertoire de données d'application pour l'utilisateur en cours.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary vsli:raw="Gets a path name pointing to the Desktop directory.">Obtient un nom de chemin d'accès pointant sur le répertoire Desktop.</summary>
      <returns vsli:raw="The path to the Desktop directory.">Chemin d'accès au répertoire Bureau.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary vsli:raw="Gets a path name pointing to the My Documents directory.">Obtient un nom de chemin d'accès pointant vers le répertoire Mes documents.</summary>
      <returns vsli:raw="The path to the My Documents directory.">Chemin d'accès au répertoire Mes documents.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary vsli:raw="Gets a path name pointing to the My Music directory.">Obtient un nom de chemin d'accès pointant sur le répertoire My Music.</summary>
      <returns vsli:raw="The path to the My Music directory.">Chemin d'accès au répertoire Ma musique.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary vsli:raw="Gets a path name pointing to the My Pictures directory.">Obtient un nom de chemin d'accès pointant sur le répertoire My Pictures.</summary>
      <returns vsli:raw="The path to the My Pictures directory.">Chemin d'accès au répertoire Mes images.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary vsli:raw="Gets a path pointing to the Program Files directory.">Obtient un chemin d’accès pointant sur le répertoire Program Files.</summary>
      <returns vsli:raw="The path to the Program Files directory.">Chemin d’accès au répertoire Program Files .</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary vsli:raw="Gets a path name pointing to the Programs directory.">Obtient un nom de chemin d'accès pointant sur le répertoire Programs.</summary>
      <returns vsli:raw="The path to the Programs directory.">Chemin d'accès au répertoire Programmes.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary vsli:raw="Gets a path name pointing to the Temp directory.">Obtient un nom de chemin d'accès pointant sur le répertoire Temp.</summary>
      <returns vsli:raw="The path to the Temp directory.">Chemin d'accès au répertoire Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary vsli:raw="Provides methods and properties for parsing structured text files.">Fournit des méthodes et des propriétés pour analyser des fichiers texte structurés.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Indique s'il faut rechercher les marques d'ordre des octets au début du fichier. La valeur par défaut est <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Indique s'il faut rechercher les marques d'ordre des octets au début du fichier. La valeur par défaut est <see langword="True" />.</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to leave &lt;paramref name=&quot;stream&quot; /&gt; open when the &lt;see langword=&quot;TextFieldParser&quot; /&gt; object is closed. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" />. Indique si <paramref name="stream" /> doit être laissé ouvert lorsque l'objet <see langword="TextFieldParser" /> est fermé. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;. The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; stream to be parsed.">
        <see cref="T:System.IO.TextReader" />. Flux <see cref="T:System.IO.TextReader" /> à analyser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Chemin d'accès complet au fichier à analyser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string.">
        <paramref name="path" /> est une chaîne vide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Chemin d'accès complet au fichier à analyser.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> est une chaîne vide ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Chemin d'accès complet au fichier à analyser.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Indique s'il faut rechercher les marques d'ordre des octets au début du fichier. La valeur par défaut est <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> est une chaîne vide ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary vsli:raw="Closes the current &lt;see langword=&quot;TextFieldParser&quot; /&gt; object.">Ferme l'objet <see langword="TextFieldParser" /> en cours.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary vsli:raw="Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.">Définit des jetons de commentaire. Un jeton de commentaire est une chaîne qui, lorsqu'elle est placée au début d'une ligne, indique que la ligne est un commentaire et doit être ignorée par l'analyseur.</summary>
      <returns vsli:raw="A string array that contains all of the comment tokens for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Tableau de chaînes qui contient tous les jetons de commentaires pour l'objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A comment token includes white space.">Un jeton de commentaire contient un espace blanc.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary vsli:raw="Defines the delimiters for a text file.">Définit les séparateurs pour un fichier texte.</summary>
      <returns vsli:raw="A string array that contains all of the field delimiters for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Tableau de chaînes qui contient tous séparateurs de champs pour l'objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter value is set to a newline character, an empty string, or &lt;see langword=&quot;Nothing&quot; /&gt;.">Une valeur de séparateur est un caractère de saut de ligne, une chaîne vide ou <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Libère les ressources utilisées par l’objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
      <param name="disposing" vsli:raw="Boolean. &lt;see langword=&quot;True&quot; /&gt; releases both managed and unmanaged resources; &lt;see langword=&quot;False&quot; /&gt; releases only unmanaged resources.">Propriété booléenne. <see langword="True" /> libère les ressources managées et non managées ; <see langword="False" /> libère uniquement les ressources non managées.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if there are no non-blank, non-comment lines between the current cursor position and the end of the file.">Retourne <see langword="True" /> s'il n'y a aucune ligne non vide, sans commentaire, entre la position actuelle du curseur et la fin du fichier.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if there is no more data to read; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> s'il n'y a plus de données à lire ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary vsli:raw="Returns the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Retourne la ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</summary>
      <returns vsli:raw="The line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary vsli:raw="Returns the number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Retourne le numéro de la ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</summary>
      <returns vsli:raw="The number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Numéro de la ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary vsli:raw="Denotes the width of each column in the text file being parsed.">Désigne la largeur de chaque colonne du fichier texte en cours d'analyse.</summary>
      <returns vsli:raw="An integer array that contains the width of each column in the text file that is being parsed.">Tableau d'entiers qui contient la largeur de chaque colonne dans le fichier texte en cours d'analyse.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A width value in any location other than the last entry of the array is less than or equal to zero.">Une valeur de largeur dans un emplacement autre que la dernière entrée du tableau est inférieure ou égale à zéro.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">Permet à l'objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> de tenter de libérer des ressources et d'effectuer d'autres opérations de nettoyage avant d'être récupéré par l'opération garbage collection.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary vsli:raw="Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.">Indique si les champs sont placés entre guillemets lorsqu'un fichier délimité est analysé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if fields are enclosed in quotation marks; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si les champs sont placés entre guillemets ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary vsli:raw="Returns the current line number, or returns -1 if no more characters are available in the stream.">Retourne le nombre de lignes en cours, ou retourne -1 si aucun caractère n'est disponible dans le flux.</summary>
      <returns vsli:raw="The current line number.">Numéro de ligne active.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary vsli:raw="Reads the specified number of characters without advancing the cursor.">Lit le nombre spécifié de caractères sans avancer le curseur.</summary>
      <param name="numberOfChars" vsli:raw="The number of characters to read. Required.">
        <see langword="Int32" />. Nombre de caractères à lire. Obligatoire.</param>
      <returns vsli:raw="A string that contains the specified number of characters read.">Chaîne qui contient le nombre spécifié de caractères à lire.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;numberOfChars&quot; /&gt; is less than 0.">
        <paramref name="numberOfChars" /> est inférieur à 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary vsli:raw="Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.">Lit tous les champs sur la ligne active, les retourne sous la forme d'un tableau de chaînes et avance le curseur vers la ligne suivante contenant des données.</summary>
      <returns vsli:raw="An array of strings that contains field values for the current line.">Tableau de chaînes qui contient les valeurs de champs pour la ligne active.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A field cannot be parsed by using the specified format.">Un champ ne peut pas être analysé à l'aide du format spécifié.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary vsli:raw="Returns the current line as a string and advances the cursor to the next line.">Retourne la ligne active en tant que chaîne et avance le curseur vers la ligne suivante.</summary>
      <returns vsli:raw="The current line from the file or stream.">Ligne active du fichier ou du flux.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary vsli:raw="Reads the remainder of the text file and returns it as a string.">Lit le reste du fichier texte et le retourne en tant que chaîne.</summary>
      <returns vsli:raw="The remaining text from the file or stream.">Texte restant du fichier ou du flux.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values, and sets the field type to &lt;see langword=&quot;Delimited&quot; /&gt;.">Affecte les valeurs spécifiées aux séparateurs pour le lecteur et la valeur <see langword="Delimited" /> au type de champ.</summary>
      <param name="delimiters" vsli:raw="Array of type &lt;see langword=&quot;String&quot; /&gt;.">Tableau de type <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter is zero-length.">Un délimiteur est de longueur nulle.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values.">Affecte les valeurs spécifiées aux séparateurs pour le lecteur.</summary>
      <param name="fieldWidths" vsli:raw="Array of &lt;see langword=&quot;Integer&quot; /&gt;.">Tableau d'<see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Libère les ressources utilisées par l’objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary vsli:raw="Indicates whether the file to be parsed is delimited or fixed-width.">Indique si le fichier à analyser est délimité ou à largeur fixe.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType&quot; /&gt; value that indicates whether the file to be parsed is delimited or fixed-width.">Valeur <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> qui indique si le fichier à analyser est délimité ou de longueur fixe.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary vsli:raw="Indicates whether leading and trailing white space should be trimmed from field values.">Indique si les espaces blancs de début et de fin doivent être supprimés des valeurs de champs.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if leading and trailing white space should be trimmed from field values; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si les espaces blancs de début et de fin doivent être supprimés des valeurs de champs ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary vsli:raw="Specifies whether an exception is thrown if the user clicks Cancel during an operation.">Spécifie si une exception est levée lorsque l’utilisateur clique sur Annuler pendant une opération.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary vsli:raw="Do nothing when the user clicks Cancel.">Ne rien faire lorsque l’utilisateur clique sur Annuler.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary vsli:raw="Throw an exception when the user clicks Cancel.">Lever une exception lorsque l’utilisateur clique sur Annuler.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary vsli:raw="Specifies which dialog boxes to show when copying, deleting, or moving files or directories.">Spécifie les boîtes de dialogue à afficher lors de la copie, de la suppression ou du déplacement de fichiers ou répertoires.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary vsli:raw="Show progress dialog box and any error dialog boxes.">Affiche une boîte de dialogue de progression et toutes les boîtes de dialogue d'erreur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary vsli:raw="Only show error dialog boxes and hide progress dialog boxes. Default.">Affiche uniquement les boîtes de dialogue d'erreur et masque les boîtes de dialogue de progression. Par défaut.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary vsli:raw="The &lt;see langword=&quot;FileSystem&quot; /&gt; module contains the procedures that are used to perform file, directory or folder, and system operations. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than using the &lt;see langword=&quot;FileSystem&quot; /&gt; module. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Le module <see langword="FileSystem" /> contient les procédures utilisées pour exécuter des opérations sur des fichiers, des répertoires ou des dossiers et les opérations système. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que le module <see langword="FileSystem" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary vsli:raw="Changes the current directory or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;ChDir&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt; .">Modifie le répertoire ou dossier actif. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d’E/S de fichier que la fonction <see langword="ChDir" />. Pour plus d'informations, consultez <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies which directory or folder becomes the new default directory or folder. &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;ChDir&quot; /&gt; changes the default directory or folder on the current drive.">Obligatoire. Expression de chaîne qui identifie le répertoire ou dossier qui devient le nouveau répertoire ou dossier par défaut. <paramref name="Path" /> peut inclure le lecteur. Si aucun lecteur n'est spécifié, <see langword="ChDir" /> modifie le répertoire ou le dossier par défaut du lecteur actif.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is empty.">
        <paramref name="Path" /> est vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Un lecteur non valide est spécifié ou le lecteur est indisponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary vsli:raw="Changes the current drive.">Modifie le lecteur actif.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">Obligatoire. Expression String qui spécifie un lecteur existant. Si vous fournissez une chaîne de longueur nulle (""), le lecteur actif n'est pas modifié. Si l'argument <paramref name="Drive" /> est une chaîne de plusieurs caractères, <see langword="ChDrive" /> n'utilise que la première lettre.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Un lecteur non valide est spécifié ou le lecteur est indisponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary vsli:raw="Changes the current drive.">Modifie le lecteur actif.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">Obligatoire. Expression String qui spécifie un lecteur existant. Si vous fournissez une chaîne de longueur nulle (""), le lecteur actif n'est pas modifié. Si l'argument <paramref name="Drive" /> est une chaîne de plusieurs caractères, <see langword="ChDrive" /> n'utilise que la première lettre.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Un lecteur non valide est spécifié ou le lecteur est indisponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">Retourne une chaîne représentant le chemin d'accès en cours. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="CurDir" />. Pour plus d'informations, consultez <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns vsli:raw="A string representing the current path.">Chaîne représentant le chemin d'accès actuel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">Retourne une chaîne représentant le chemin d'accès en cours. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="CurDir" />. Pour plus d'informations, consultez <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive" vsli:raw="Optional. &lt;see langword=&quot;Char&quot; /&gt; expression that specifies an existing drive. If no drive is specified, or if &lt;paramref name=&quot;Drive&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;CurDir&quot; /&gt; returns the path for the current drive.">Optionnel. Expression <see langword="Char" /> qui spécifie un lecteur existant. Si aucun lecteur n'est spécifié ou si <paramref name="Drive" /> est une chaîne de longueur nulle (""), <see langword="CurDir" /> retourne le chemin d'accès du lecteur actif.</param>
      <returns vsli:raw="A string representing the current path.">Chaîne représentant le chemin d'accès actuel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">Retourne une chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un modèle ou un attribut de fichier spécifié ou au nom de volume d'un lecteur. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que la fonction <see langword="Dir" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">Chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un attribut de fichier ou de modèle spécifié ou au nom de volume d'un lecteur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">Retourne une chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un modèle ou un attribut de fichier spécifié ou au nom de volume d'un lecteur. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que la fonction <see langword="Dir" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <param name="PathName" vsli:raw="Optional. A string expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string (&lt;see langword=&quot;&amp;quot;&amp;quot;&quot; /&gt;) is returned if &lt;paramref name=&quot;PathName&quot; /&gt; is not found.">Facultatif. Une expression de chaîne qui spécifie un nom de fichier, de répertoire ou de dossier, ou l’étiquette du volume d’un lecteur. Une chaîne de longueur nulle (<see langword="&quot;&quot;" />) est retournée si <paramref name="PathName" /> n'est pas trouvé.</param>
      <param name="Attributes" vsli:raw="Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, &lt;see langword=&quot;Dir&quot; /&gt; returns files that match &lt;paramref name=&quot;Pathname&quot; /&gt; but have no attributes.">Optionnel. Énumération ou expression numérique dont la valeur spécifie des attributs de fichier. En cas d'omission, <see langword="Dir" /> retourne des fichiers qui correspondent à <paramref name="Pathname" />, mais n'ont pas d'attributs.</param>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">Chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un attribut de fichier ou de modèle spécifié ou au nom de volume d'un lecteur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary vsli:raw="Returns a Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">Retourne une valeur booléenne <see langword="True" /> lorsque la fin d'un fichier ouvert pour <see langword="Random" /> ou <see langword="Input" /> séquentiel a été atteinte.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains any valid file number.">Obligatoire. <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <returns vsli:raw="A Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">Une valeur booléenne <see langword="True" /> lorsque la fin d’un fichier ouvert pour <see langword="Random" /> ou <see langword="Input" /> séquentiel a été atteinte.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary vsli:raw="Returns an enumeration representing the file mode for files opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;FileAttr&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt; for more information.">Retourne une énumération qui représente le mode de fichier pour les fichiers ouverts à l'aide de la fonction <see langword="FileOpen" />. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que la fonction <see langword="FileAttr" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="FileNumber" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Any valid file number.">Obligatoire. <see langword="Integer" />. N’importe quel numéro de fichier valide.</param>
      <returns vsli:raw="One of the following values:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Value&lt;/term&gt;&lt;description&gt;File access mode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;1&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Input&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;2&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Output&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;4&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Random&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;8&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Append&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;32&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Binary&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Les valeurs d'énumération suivantes indiquent le mode d'accès au fichier : 
  Value 
  Mode 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary vsli:raw="Concludes input/output (I/O) to a file opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. &lt;see langword=&quot;My&quot; /&gt; gives you better productivity and performance in file I/O operations. See &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; for more information.">Termine les opérations d'entrée/sortie (E/S) dans un fichier ouvert à l'aide de la fonction <see langword="FileOpen" />. <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier. Pour plus d'informations, voir <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumbers" vsli:raw="Optional. Parameter array of 0 or more channels to be closed.">Facultatif. Tableau de paramètres de 0 ou plus de canaux à fermer.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> n’existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary vsli:raw="Copies a file. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileCopy&quot; /&gt;. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)&quot; /&gt; for more information.">Copie un fichier. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="FileCopy" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</summary>
      <param name="Source" vsli:raw="Required. A string expression that specifies the name of the file to be copied. &lt;paramref name=&quot;Source&quot; /&gt; may include the directory or folder, and drive, of the source file.">Obligatoire. Une expression de chaîne qui spécifie le nom du fichier à copier. <paramref name="Source" /> peut inclure le répertoire ou le dossier du fichier source, ainsi que son lecteur.</param>
      <param name="Destination" vsli:raw="Required. A string expression that specifies the destination file name. &lt;paramref name=&quot;Destination&quot; /&gt; may include the directory or folder, and drive, of the destination file.">Obligatoire. Une expression de chaîne qui spécifie le nom du fichier de destination. <paramref name="Destination" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur, du fichier de destination.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; or &lt;paramref name=&quot;Destination&quot; /&gt; is invalid or not specified.">
        <paramref name="Source" /> ou <paramref name="Destination" /> n'est pas valide ou n'est pas spécifié.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File is already open.">Le fichier est déjà ouvert.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">Le fichier n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was written to. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileDateTime&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">Retourne une valeur <see langword="Date" /> qui indique la date et l'heure à laquelle un fichier a été écrit. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileDateTime" />. Pour plus d'informations, consultez <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, et le lecteur.</param>
      <returns vsli:raw="&lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was created or last modified.">Valeur <see langword="Date" /> qui indique la date et l'heure à laquelle un fichier a été créé ou modifié pour la dernière fois.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="PathName" /> n'est pas valide ou contient des caractères génériques.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">Le fichier cible n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.">Facultatif. S'applique uniquement lors de l'écriture d'un tableau. Spécifie si le tableau sera traité comme dynamique et si un descripteur de tableau décrivant la taille et les limites du tableau est nécessaire.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">Facultatif. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il est nécessaire d'écrire un descripteur à deux octets pour la chaîne décrivant la longueur. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">Optionnel. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il est nécessaire d'écrire un descripteur à deux octets pour la chaîne décrivant la longueur. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGetObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lit les données d’un fichier disque ouvert dans une variable.  La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGetObject" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary vsli:raw="Returns a value that specifies the length of a file in bytes. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileLen&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">Retourne une valeur qui spécifie la longueur d’un fichier en octets. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileLen" />. Pour plus d'informations, consultez <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">Obligatoire. Une expression de chaîne qui spécifie un fichier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, et le lecteur.</param>
      <returns vsli:raw="The length of a file in bytes.">Longueur du fichier en octets.</returns>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">Le fichier n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary vsli:raw="Opens a file for input or output. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileOpen&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Ouvre un fichier pour entrée ou sortie. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileOpen" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number. Use the &lt;see langword=&quot;FreeFile&quot; /&gt; function to obtain the next available file number.">Obligatoire. N’importe quel numéro de fichier valide. Utilisez la fonction <see langword="FreeFile" /> pour obtenir le numéro du prochain fichier disponible.</param>
      <param name="FileName" vsli:raw="Required. A string expression that specifies a file name - may include directory or folder, and drive.">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier. Peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <param name="Mode" vsli:raw="Required. Enumeration specifying the file mode: &lt;see langword=&quot;Append&quot; /&gt;, &lt;see langword=&quot;Binary&quot; /&gt;, &lt;see langword=&quot;Input&quot; /&gt;, &lt;see langword=&quot;Output&quot; /&gt;, or &lt;see langword=&quot;Random&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenMode&quot; /&gt; .">Obligatoire. Énumération spécifiant le mode de fichier : <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> ou <see langword="Random" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access" vsli:raw="Optional. Enumeration specifying the operations permitted on the open file: &lt;see langword=&quot;Read&quot; /&gt;, &lt;see langword=&quot;Write&quot; /&gt;, or &lt;see langword=&quot;ReadWrite&quot; /&gt;. Defaults to &lt;see langword=&quot;ReadWrite&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenAccess&quot; /&gt; .">Optionnel. Énumération spécifiant quelles sont les opérations autorisées sur le fichier ouvert : <see langword="Read" />, <see langword="Write" /> ou <see langword="ReadWrite" />. La valeur par défaut est <see langword="ReadWrite" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share" vsli:raw="Optional. Enumeration specifying the operations not permitted on the open file by other processes: &lt;see langword=&quot;Shared&quot; /&gt;, &lt;see langword=&quot;Lock Read&quot; /&gt;, &lt;see langword=&quot;Lock Write&quot; /&gt;, and &lt;see langword=&quot;Lock Read Write&quot; /&gt;. Defaults to &lt;see langword=&quot;Lock Read Write&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenShare&quot; /&gt; .">Optionnel. Énumération spécifiant les opérations non autorisées sur le fichier ouvert par d'autres processus : <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> et <see langword="Lock Read Write" />. La valeur par défaut est <see langword="Lock Read Write" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength" vsli:raw="Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.">Optionnel. Nombre inférieur ou égal à 32 767 (octets). Pour les fichiers ouverts pour accès aléatoire, cette valeur est la longueur de l'enregistrement. Pour les fichiers à accès séquentiel, cette valeur est le nombre de caractères mis en mémoire tampon.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Record length is negative (and not equal to -1).">La longueur d'enregistrement est négative (et différente de -1).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileName&quot; /&gt; is already open, or &lt;paramref name=&quot;FileName&quot; /&gt; is invalid.">
        <paramref name="FileName" /> est déjà ouvert ou <paramref name="FileName" /> n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.">Facultatif. S'applique uniquement lors de l'écriture d'un tableau. Spécifie si le tableau est traité comme dynamique, et s'il faut écrire un descripteur de tableau pour la chaîne décrivant la longueur.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">Optionnel. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il faut écrire, sur le fichier, un descripteur de longueur de chaîne à deux octets pour la chaîne. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">Optionnel. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il faut écrire, sur le fichier, un descripteur de longueur de chaîne à deux octets pour la chaîne. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePutObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Écrit les données d'une variable dans un fichier sur disque.  La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePutObject" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary vsli:raw="Assigns an output line width to a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Assigne une largeur de ligne de sortie à un fichier ouvert à l'aide de la fonction <see langword="FileOpen" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="RecordWidth" vsli:raw="Required. Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started. If &lt;paramref name=&quot;RecordWidth&quot; /&gt; equals 0, there is no limit to the length of a line. The default value for &lt;paramref name=&quot;RecordWidth&quot; /&gt; is 0.">Obligatoire. Expression numérique comprise dans la plage 0-255, limites incluses, qui indique combien de caractères apparaissent sur une ligne avant de commencer une nouvelle ligne. Si <paramref name="RecordWidth" /> égale 0, il n'y a aucune limite à la longueur d'une ligne. La valeur par défaut <paramref name="RecordWidth" /> est 0.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Retourne une valeur <see langword="Integer" /> qui représente le prochain numéro de fichier utilisable par la fonction <see langword="FileOpen" />.</summary>
      <returns vsli:raw="An integer value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Une valeur entière qui représente le prochain numéro de fichier utilisable par la fonction <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="More than 255 files are in use.">Plus de 255 fichiers sont en cours d'utilisation.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;FileAttribute&quot; /&gt; value that represents the attributes of a file, directory, or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileAttribute&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Retourne une valeur <see langword="FileAttribute" /> qui représente les attributs d'un fichier, répertoire ou dossier. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileAttribute" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file, directory, or folder name. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier, de répertoire ou de dossier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Combinaison d'opérations de bits des valeurs d'énumération.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;Pathname&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="Pathname" /> n'est pas valide ou contient des caractères génériques.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">Le fichier cible n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary vsli:raw="Returns &lt;see langword=&quot;String&quot; /&gt; value that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Retourne une valeur <see langword="String" /> qui contient des caractères provenant d'un fichier ouvert en mode <see langword="Input" /> ou <see langword="Binary" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="InputString" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="CharCount" vsli:raw="Required. Any valid numeric expression specifying the number of characters to read.">Obligatoire. Toute expression numérique valide qui spécifie le nombre de caractères à lire.</param>
      <returns vsli:raw="A string that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;.">Une chaîne qui contient des caractères provenant d’un fichier ouvert en mode <see langword="Input" /> ou <see langword="Binary" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="InputString" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> n’existe pas.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCount&quot; /&gt; &amp;lt; 0 or &amp;gt; 214.">
        <paramref name="CharCount" /> &lt; 0 ou &gt; 214.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary vsli:raw="Deletes files from a disk. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Kill&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; .">Supprime des fichiers d'un disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Kill" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies one or more file names to be deleted. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">Obligatoire. Une expression de chaîne qui spécifie un ou plusieurs noms de fichiers à supprimer. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Target file(s) open.">Le ou les fichiers cibles sont ouverts.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file(s) not found.">Le ou les fichiers cibles sont introuvables.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">Autorisation refusée.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">Lit une ligne seule dans un fichier à accès séquentiel ouvert et l'assigne à une variable <see langword="String" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <returns vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">Lit une ligne seule dans un fichier à accès séquentiel ouvert et l'assigne à une variable <see langword="String" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException" vsli:raw="End of file reached.">La fin du fichier est atteinte.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> n’existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary vsli:raw="Returns a value that specifies the current read/write position in an open file.">Retourne une valeur qui spécifie la position lecture/écriture actuelle d’un fichier ouvert.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid &lt;see langword=&quot;Integer&quot; /&gt; file number.">Obligatoire. Tout numéro de fichier <see langword="Integer" /> valide.</param>
      <returns vsli:raw="The current read/write position in an open file.">La position de lecture/écriture actuelle dans un fichier ouvert.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">Optionnel. Numéro du seul enregistrement ou octet à verrouiller ou déverrouiller.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">Optionnel. Numéro du premier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">Optionnel. Numéro du dernier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary vsli:raw="Returns the size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Retourne la taille, en octets, d’un fichier ouvert à l’aide de la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="LOF" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An integer that contains a valid file number.">Obligatoire. Une entier qui contient un numéro de fichier valide.</param>
      <returns vsli:raw="The size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;.">La taille, en octets, d’un fichier ouvert à l’aide de la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="LOF" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary vsli:raw="Creates a new directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;MkDir&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)&quot; /&gt;.">Crée un répertoire. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="MkDir" />. Pour plus d'informations, consultez <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory to be created. The &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;MkDir&quot; /&gt; creates the new directory on the current drive.">Obligatoire. Une expression de chaîne qui identifie le répertoire à créer. Le <paramref name="Path" /> peut inclure le lecteur. Si aucun lecteur n'est spécifié, <see langword="MkDir" /> crée le nouveau répertoire sur le lecteur actif.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> n'est pas spécifié ou il est vide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">Autorisation refusée.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Directory already exists.">Le répertoire existe déjà.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">Écrit des données formatées dans un fichier séquentiel.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">Facultatif. Zéro, une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.  
Les paramètres de l’argument <paramref name="Output" /> sont : 
 <see langword="T:System.IO.IOException" />: Le mode de fichier n’est pas valide.  
 <see langword="T:System.IO.IOException" /> : <paramref name="FileNumber" /> n'existe pas.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">Écrit des données formatées dans un fichier séquentiel.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">Optionnel. Zéro, une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.  
Les paramètres de l’argument <paramref name="Output" /> sont : 
 <see langword="T:System.IO.IOException" />: Le mode de fichier n’est pas valide.  
 <see langword="T:System.IO.IOException" /> : <paramref name="FileNumber" /> n'existe pas.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary vsli:raw="Renames a disk file or directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Rename&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Renomme un fichier ou un répertoire sur un disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Rename" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath" vsli:raw="Required. A string expression that specifies the existing file name and location. &lt;paramref name=&quot;OldPath&quot; /&gt; may include the directory, and drive, of the file.">Obligatoire. Une expression de chaîne qui spécifie le nom et l’emplacement du fichier existant. <paramref name="OldPath" /> peut inclure le répertoire et le lecteur du fichier.</param>
      <param name="NewPath" vsli:raw="Required. A string expression that specifies the new file name and location. &lt;paramref name=&quot;NewPath&quot; /&gt; may include directory and drive of the destination location. The file name specified by &lt;paramref name=&quot;NewPath&quot; /&gt; cannot already exist.">Obligatoire. Une expression de chaîne qui spécifie le nom et l’emplacement du nouveau fichier. <paramref name="NewPath" /> peut inclure le répertoire et le lecteur de l'emplacement de destination. Le nom de fichier spécifié par <paramref name="NewPath" /> ne peut pas déjà exister.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path is invalid.">Le chemin n’est pas valide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;OldPath&quot; /&gt; file does not exist.">Le fichier <paramref name="OldPath" /> n'existe pas.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Cannot rename to different device.">Impossible de renommer vers un autre périphérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary vsli:raw="Closes all disk files opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Reset&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Ferme tous les fichiers disque ouverts à l'aide de la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Reset" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary vsli:raw="Removes an existing directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;RmDir&quot; /&gt;. For more information, see &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory&quot; /&gt;.">Supprime un répertoire existant. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="RmDir" />. Pour plus d'informations, consultez <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory or folder to be removed. &lt;paramref name=&quot;Path&quot; /&gt; can include the drive. If no drive is specified, &lt;see langword=&quot;RmDir&quot; /&gt; removes the directory on the current drive.">Obligatoire. Une expression de chaîne qui identifie le répertoire ou le dossier à supprimer. <paramref name="Path" /> peut inclure le lecteur. Si aucun lecteur n'est spécifié, <see langword="RmDir" /> supprime le répertoire du lecteur actif.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> n'est pas spécifié ou il est vide.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Target directory contains files.">Le répertoire cible contient des fichiers.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Directory does not exist.">Le répertoire n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Retourne un <see langword="Long" /> qui spécifie la position de lecture/écriture actuelle dans un fichier ouvert à l'aide de la fonction <see langword="FileOpen" /> ou définit la position de la prochaine opération de lecture/écriture dans un fichier ouvert via la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Seek" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">Obligatoire. <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Un <see langword="Long" /> qui spécifie la position de lecture/écriture actuelle dans un fichier ouvert à l’aide de la fonction <see langword="FileOpen" /> ou définit la position de la prochaine opération de lecture/écriture dans un fichier ouvert via la fonction <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Retourne un <see langword="Long" /> qui spécifie la position de lecture/écriture actuelle dans un fichier ouvert à l'aide de la fonction <see langword="FileOpen" /> ou définit la position de la prochaine opération de lecture/écriture dans un fichier ouvert via la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Seek" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">Obligatoire. <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <param name="Position" vsli:raw="Required. Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.">Obligatoire. Nombre compris dans la plage 1-2 147 483 647 inclus, qui indique où l’opération de lecture/écriture suivante doit avoir lieu.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Sets attribute information for a file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;SetAttr&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Définit les informations d'attribut d'un fichier. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="SetAttr" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; can include directory or folder, and drive.">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <param name="Attributes" vsli:raw="Required. Constant or numeric expression, whose sum specifies file attributes.">Obligatoire. Constante ou expression numérique dont la somme spécifie des attributs de fichier.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Attribute&quot; /&gt; type is invalid.">Le type <paramref name="Attribute" />' n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">Utilisé avec la fonction <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</summary>
      <param name="Count" vsli:raw="Required. The number of spaces to insert before displaying or printing the next expression in a list.">Obligatoire. Nombre d'espaces à insérer avant d'afficher ou d'écrire l'expression suivante dans une liste.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">Utilisé avec la fonction <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</summary>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</summary>
      <param name="Column" vsli:raw="Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, &lt;see langword=&quot;TAB&quot; /&gt; moves the insertion point to the start of the next print zone.">Optionnel. Le numéro de colonne atteint avant d'afficher ou d'imprimer l'expression suivante dans une liste. En cas d'omission, <see langword="TAB" /> déplace le point d'insertion au début de la zone d'impression suivante.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">Optionnel. Numéro du seul enregistrement ou octet à verrouiller ou déverrouiller</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">Optionnel. Numéro du premier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">Optionnel. Numéro du dernier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">Écrit des données dans un fichier séquentiel. Les données écrites avec <see langword="Write" /> sont généralement lues à partir d’un fichier à l’aide de <see langword="Input" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">Obligatoire. Une expression <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">Optionnel. Une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">Écrit des données dans un fichier séquentiel. Les données écrites avec <see langword="Write" /> sont généralement lues à partir d’un fichier à l’aide de <see langword="Input" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">Obligatoire. Une expression <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">Optionnel. Une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary vsli:raw="The &lt;see langword=&quot;Financial&quot; /&gt; module contains procedures used to perform financial operations.">Le module <see langword="Financial" /> contient des procédures utilisées pour exécuter des opérations financières.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">Retourne une valeur indiquant la valeur d’amortissement d’un bien sur une période déterminée en utilisant la méthode d’amortissement dégressif à taux double ou toute autre méthode spécifiée.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Obligatoire. Coût initial du bien.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Obligatoire. Valeur du bien à la fin de son cycle de vie.</param>
      <param name="Life" vsli:raw="Required. The length of useful life of the asset.">Obligatoire. Durée du cycle de vie du bien.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">Obligatoire. Période sur laquelle l’amortissement du bien est calculé.</param>
      <param name="Factor" vsli:raw="Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.">Optionnel. Taux utilisé pour le calcul de l’amortissement. Si cet argument est omis, la valeur 2 (méthode d'amortissement dégressif à taux double) est utilisée par défaut.</param>
      <returns vsli:raw="The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">Valeur d’amortissement d’un bien sur une période déterminée en utilisant la méthode d’amortissement dégressif à taux double ou toute autre méthode spécifiée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Factor&quot; /&gt; &amp;lt;= 0, &lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;= 0, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;.">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 ou <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.">Retourne une valeur indiquant le futur montant d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="PV" vsli:raw="Optional. The present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.">Optionnel. Valeur actuelle (ou montant forfaitaire) d’une série de paiements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; if payments are due at the end of the payment period, or &lt;see langword=&quot;DueDate.BegOfPeriod&quot; /&gt; if payments are due at the beginning of the period. If omitted, &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; is assumed.">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <see langword="DueDate.EndOfPeriod" /> si les paiements sont dus à terme échu ou <see langword="DueDate.BegOfPeriod" /> si les paiements sont dus à terme à échoir. En cas d'omission, <see langword="DueDate.EndOfPeriod" /> est utilisé par défaut.</param>
      <returns vsli:raw="The future value of an annuity based on periodic, fixed payments and a fixed interest rate.">Montant futur d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">Retourne une valeur indiquant les intérêts, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">Obligatoire. Période de remboursement dans la plage comprise entre 1 et <paramref name="NPer" />.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatoire. Valeur actuelle, ou valeur du jour, d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Facultatif. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 € car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Facultatif. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns vsli:raw="The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">Intérêts, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;">
        <paramref name="Per" /> &lt;= 0 ou <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary vsli:raw="Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).">Valeur indiquant le taux de rendement interne d’une série de liquidités périodiques (paiements et encaissements).</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Obligatoire. Tableau de <see langword="Double" /> représentant les valeurs des liquidités. Le tableau doit contenir au moins une valeur négative (un paiement) et une valeur positive (un encaissement).</param>
      <param name="Guess" vsli:raw="Optional. Object specifying value you estimate will be returned by &lt;see langword=&quot;IRR&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">Optionnel. Objet indiquant la valeur qui devrait être retournée par <see langword="IRR" />. Si cet argument est omis, la valeur <paramref name="Guess" /> 0,1 (10 pour cent) est utilisée par défaut.</param>
      <returns vsli:raw="The internal rate of return for a series of periodic cash flows (payments and receipts).">Taux de rendement interne d’une série de liquidités périodiques (paiements et encaissements).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Array argument values are invalid or &lt;paramref name=&quot;Guess&quot; /&gt; &amp;lt;= -1.">Valeurs d’argument de tableau non valides ou <paramref name="Guess" /> &lt;= -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).">Valeur indiquant le taux de rendement interne modifié d’une série de liquidités périodiques (paiements et encaissements).</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Obligatoire. Tableau de <see langword="Double" /> représentant les valeurs des liquidités. Le tableau doit contenir au moins une valeur négative (un paiement) et une valeur positive (un encaissement).</param>
      <param name="FinanceRate" vsli:raw="Required. The interest rate paid as the cost of financing.">Obligatoire. Taux d’intérêt payé pour couvrir le coût du financement.</param>
      <param name="ReinvestRate" vsli:raw="Required. The interest rate received on gains from cash reinvestment.">Obligatoire. Taux d’intérêt perçu sur les gains tirés des sommes réinvesties.</param>
      <returns vsli:raw="The modified internal rate of return for a series of periodic cash flows (payments and receipts).">Taux de rendement interne modifié d’une série de liquidités périodiques (paiements et encaissements).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; does not equal 1, &lt;paramref name=&quot;FinanceRate&quot; /&gt; = -1, or &lt;paramref name=&quot;ReinvestRate&quot; /&gt; = -1">Un rang de <paramref name="ValueArray" /> n'est pas égal à 1, <paramref name="FinanceRate" /> = -1 ou <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException" vsli:raw="Division by zero has occurred.">Une division par zéro s'est produite.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">Retourne une valeur spécifiant le nombre d’échéances d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatoire. Valeur actuelle, ou valeur du jour, d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Facultatif. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns vsli:raw="The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">Nombre d’échéances d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Rate&quot; /&gt; = 0 and &lt;paramref name=&quot;Pmt&quot; /&gt; = 0">
        <paramref name="Rate" /> = 0 et <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary vsli:raw="Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">Retourne une valeur indiquant la valeur nette actuelle d’un investissement, calculée en fonction d’une série de liquidités périodiques (paiements et encaissements) et d’un taux d’escompte.</summary>
      <param name="Rate" vsli:raw="Required. The discount rate over the length of the period, expressed as a decimal.">Obligatoire. Taux d’escompte sur la période, exprimé sous la forme d’un nombre décimal.</param>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Obligatoire. Tableau de <see langword="Double" /> représentant les valeurs des liquidités. Le tableau doit contenir au moins une valeur négative (un paiement) et une valeur positive (un encaissement).</param>
      <returns vsli:raw="The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">Valeur nette actuelle d’un investissement, calculée en fonction d’une série de liquidités périodiques (paiements et encaissements) et d’un taux d’escompte.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ValueArray&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; &amp;lt;&amp;gt; 1, or &lt;paramref name=&quot;Rate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> a la valeur <see langword="Nothing" />, rang de <paramref name="ValueArray" /> &lt;&gt; 1 ou <paramref name="Rate" /> = -1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.">Retourne une valeur indiquant le montant d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="PV" vsli:raw="Required. The present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatoire. Valeur actuelle (ou montant forfaitaire) d’une série de paiements devant être effectués dans le futur. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Facultatif. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns vsli:raw="The payment for an annuity based on periodic, fixed payments and a fixed interest rate.">Montant d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; = 0.">
        <paramref name="NPer" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">Retourne une valeur indiquant le remboursement du capital, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">Obligatoire. Période de remboursement dans la plage comprise entre 1 et <paramref name="NPer" />.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="PV" vsli:raw="Required. The current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatoire. Valeur actuelle d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Optionnel. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Facultatif. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns vsli:raw="The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">Remboursement du capital, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;=0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;.">
        <paramref name="Per" /> &lt;=0 ou <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">Retourne une valeur indiquant le montant actuel d’une annuité basée sur des échéances futures constantes et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte 48 (4 x 12) échéances.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Optionnel. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns vsli:raw="The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">Montant actuel d’une annuité basée sur des échéances futures constantes et périodiques et sur un taux d’intérêt fixe.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary vsli:raw="Returns a value specifying the interest rate per period for an annuity.">Retourne une valeur indiquant le taux d’intérêt par échéance pour une annuité.</summary>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 4 * 12 (soit 48) échéances.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatoire. Valeur actuelle, ou valeur du jour, d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Optionnel. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <param name="Guess" vsli:raw="Optional. The value you estimate is returned by &lt;see langword=&quot;Rate&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">Optionnel. Valeur que vous estimez être retournée par <see langword="Rate" />. Si cet argument est omis, la valeur <paramref name="Guess" /> 0,1 (10 pour cent) est utilisée par défaut.</param>
      <returns vsli:raw="The interest rate per period for an annuity.">Taux d’intérêt par échéance pour une annuité.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; &amp;lt;= 0.">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the straight-line depreciation of an asset for a single period.">Retourne une valeur indiquant l’amortissement linéaire d’un bien pour une période donnée.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Obligatoire. Coût initial du bien.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Obligatoire. Valeur du bien à la fin de son cycle de vie.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">Obligatoire. Durée du cycle de vie du bien.</param>
      <returns vsli:raw="The straight-line depreciation of an asset for a single period.">Amortissement linéaire d’un bien pour une période donnée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Life&quot; /&gt; = 0.">
        <paramref name="Life" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.">Retourne une valeur indiquant l’amortissement global d’un bien sur une période donnée.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Obligatoire. Coût initial du bien.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Obligatoire. Valeur du bien à la fin de son cycle de vie.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">Obligatoire. Durée du cycle de vie du bien.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">Obligatoire. Période sur laquelle l’amortissement du bien est calculé.</param>
      <returns vsli:raw="The sum-of-years digits depreciation of an asset for a specified period.">Amortissement global d’un bien sur une période donnée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;=0.">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" /> or <paramref name="Period" /> &lt;=0.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary vsli:raw="Indicates the first day of the week to use when calling date-related functions.">Indique le premier jour de la semaine à utiliser lors de l'appel de fonctions liées aux dates.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary vsli:raw="Friday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFriday&quot; /&gt;.">Vendredi. Ce membre est l'équivalent de la constante <see langword="vbFriday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary vsli:raw="Monday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMonday&quot; /&gt;.">Lundi. Ce membre est l'équivalent de la constante <see langword="vbMonday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary vsli:raw="Saturday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSaturday&quot; /&gt;.">Samedi. Ce membre est l'équivalent de la constante <see langword="vbSaturday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary vsli:raw="Sunday (default) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSunday&quot; /&gt;.">Dimanche (par défaut). Ce membre est l'équivalent de la constante <see langword="vbSunday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary vsli:raw="The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystemDayOfWeek&quot; /&gt;.">Le premier jour de la semaine tel que spécifié dans vos paramètres système. Ce membre est l'équivalent de la constante <see langword="vbUseSystemDayOfWeek" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary vsli:raw="Thursday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbThursday&quot; /&gt;.">Jeudi. Ce membre est l'équivalent de la constante <see langword="vbThursday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary vsli:raw="Tuesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTuesday&quot; /&gt;.">Mardi. Ce membre est l'équivalent de la constante <see langword="vbTuesday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary vsli:raw="Wednesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWednesday&quot; /&gt;.">Mercredi. Ce membre est l'équivalent de la constante <see langword="vbWednesday" /> dans Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary vsli:raw="Indicates the first week of the year to use when calling date-related functions.">Indique la première semaine de l'année à utiliser lors de l'appel de fonctions liées aux dates.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary vsli:raw="The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFourDays&quot; /&gt;.">Première semaine comportant au moins quatre jours dans la nouvelle année. Ce membre est équivalent à la constante Visual Basic <see langword="vbFirstFourDays" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary vsli:raw="The first full week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFullWeek&quot; /&gt;.">Première semaine complète de l'année. Ce membre est équivalent à la constante Visual Basic <see langword="vbFirstFullWeek" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary vsli:raw="The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstJan1&quot; /&gt;.">Semaine comprenant le 1er janvier (valeur par défaut). Ce membre est équivalent à la constante Visual Basic <see langword="vbFirstJan1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary vsli:raw="The week specified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystem&quot; /&gt;.">Semaine spécifiée dans vos paramètres système en tant que première semaine de l’année. Ce membre est équivalent à la constante Visual Basic <see langword="vbUseSystem" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;HideModuleNameAttribute&quot; /&gt; attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.">L'attribut <see langword="HideModuleNameAttribute" />, lorsqu'il est appliqué à un module, permet aux membres de module d'être accessibles seulement à l'aide de la qualification nécessaire pour le module.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.HideModuleNameAttribute&quot; /&gt; attribute.">Initialise une nouvelle instance de l'attribut <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary vsli:raw="The &lt;see langword=&quot;Information&quot; /&gt; module contains the procedures used to return, test for, or verify information.">Le module <see langword="Information" /> contient les procédures utilisées pour retourner, tester ou vérifier les informations.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary vsli:raw="Contains information about run-time errors.">Contient des informations relatives aux erreurs d’exécution.</summary>
      <returns vsli:raw="Contains information about run-time errors.">Contient des informations relatives aux erreurs d’exécution.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">Retourne une valeur <see langword="Boolean" /> indiquant si une variable pointe vers un tableau.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable.">Obligatoire. Variable <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">Retourne une valeur <see langword="Boolean" /> indiquant si une variable pointe vers un tableau.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression représente une valeur <see langword="Date" /> valide.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatoire. Expression <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression représente une valeur <see langword="Date" /> valide.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à la classe <see cref="T:System.DBNull" />.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatoire. Expression <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à la classe <see cref="T:System.DBNull" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression est un type d'exception.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatoire. Expression <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression est un type d'exception.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">Retourne une valeur <see langword="Boolean" /> indiquant si aucun objet n'est assigné à une expression.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatoire. Expression <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">Retourne une valeur <see langword="Boolean" /> indiquant si aucun objet n'est assigné à une expression.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression peut être évaluée comme un nombre.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatoire. Expression <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression peut être évaluée comme un nombre.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à un type référence.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatoire. Expression <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à un type référence.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the lowest available subscript for the indicated dimension of an array.">Retourne le plus petit indice disponible pour la dimension indiquée d'un tableau.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.">Obligatoire. Tableau de tout type de données. Tableau dans lequel vous voulez trouver le plus petit indice possible d'une dimension.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">Facultatif. <see langword="Integer" />. Dimension pour laquelle le plus petit indice possible doit être retourné. Utilisez la valeur 1 pour la première dimension, la valeur 2 pour la deuxième, etc. Si <paramref name="Rank" /> cet argument est omis, la position 1 est utilisée par défaut.</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The lowest value the subscript for the specified dimension can contain. &lt;see langword=&quot;LBound&quot; /&gt; always returns 0 as long as &lt;paramref name=&quot;Array&quot; /&gt; has been initialized, even if it has no elements, for example if it is a zero-length string. If &lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;LBound&quot; /&gt; throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;.">
        <see langword="Integer" />. Valeur la plus basse que l'indice de la dimension spécifiée peut contenir. <see langword="LBound" /> retourne toujours 0 à condition que <paramref name="Array" /> ait été initialisé, même s'il n'a pas d'éléments, par exemple s'il s'agit d'une chaîne de longueur nulle. Si <paramref name="Array" /> est <see langword="Nothing" />, <see langword="LBound" /> lève une <see cref="T:System.ArgumentNullException" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> est inférieur à 1 ou <paramref name="Rank" /> est supérieur au rang de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">Retourne une valeur <see langword="Integer" /> représentant le code couleur RVB correspondant au nombre de couleurs spécifié.</summary>
      <param name="Color" vsli:raw="Required. A whole number in the range 0-15.">Obligatoire. Nombre entier compris entre 0 et 15.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">Retourne une valeur <see langword="Integer" /> représentant le code couleur RVB correspondant au nombre de couleurs spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Color&quot; /&gt; is outside of range 0 to 15, inclusive.">
        <paramref name="Color" /> est en dehors de la plage comprise entre 0 et 15 inclus.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">Retourne une valeur <see langword="Integer" /> représentant une valeur de couleur RVB à partir d'un ensemble de composantes de couleur rouge, vert et bleu.</summary>
      <param name="Red" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the red component of the color.">Obligatoire. <see langword="Integer" /> compris entre 0 et 255 inclus, représentant l’intensité de la composante rouge de la couleur.</param>
      <param name="Green" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the green component of the color.">Obligatoire. <see langword="Integer" /> compris entre 0 et 255 inclus, représentant l’intensité de la composante verte de la couleur.</param>
      <param name="Blue" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the blue component of the color.">Obligatoire. <see langword="Integer" /> compris entre 0 et 255 inclus, représentant l’intensité de la composante bleue de la couleur.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">Retourne une valeur <see langword="Integer" /> représentant une valeur de couleur RVB à partir d'un ensemble de composantes de couleur rouge, vert et bleu.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Green&quot; /&gt;, &lt;paramref name=&quot;Blue&quot; /&gt;, or &lt;paramref name=&quot;Red&quot; /&gt; is outside of range 0 to 255, inclusive.">
        <paramref name="Green" />, <paramref name="Blue" /> ou <paramref name="Red" /> est en dehors de la plage comprise entre 0 et 255 inclus.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">Retourne une valeur <see langword="String" /> contenant le nom du type de données système d'une variable.</summary>
      <param name="VbName" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; variable containing a Visual Basic type name.">Obligatoire. Variable <see langword="String" /> contenant un nom de type Visual Basic.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">Retourne une valeur <see langword="String" /> contenant le nom du type de données système d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">Retourne une valeur <see langword="String" /> contenant des informations sur le type de données d'une variable.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Obligatoire. Variable <see langword="Object" />. Si <see langword="Option Strict" /> est <see langword="Off" />, vous pouvez passer une variable de tout type de données, à l'exception d'une structure.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">Retourne une valeur <see langword="String" /> contenant des informations sur le type de données d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the highest available subscript for the indicated dimension of an array.">Retourne le plus grand indice disponible pour la dimension indiquée d'un tableau.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.">Obligatoire. Tableau de tout type de données. Tableau dans lequel vous voulez trouver le plus grand indice possible d'une dimension.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">Facultatif. <see langword="Integer" />. Dimension pour laquelle le plus grand indice possible doit être retourné. Utilisez la valeur 1 pour la première dimension, la valeur 2 pour la deuxième, etc. Si <paramref name="Rank" /> cet argument est omis, la position 1 est utilisée par défaut.</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The highest value the subscript for the specified dimension can contain. If &lt;paramref name=&quot;Array&quot; /&gt; has only one element, &lt;see langword=&quot;UBound&quot; /&gt; returns 0. If &lt;paramref name=&quot;Array&quot; /&gt; has no elements, for example if it is a zero-length string, &lt;see langword=&quot;UBound&quot; /&gt; returns -1.">
        <see langword="Integer" />. Valeur la plus élevée que l'indice pour la dimension spécifiée peut contenir. Si <paramref name="Array" /> a un seul élément, <see langword="UBound" /> retourne 0. Si <paramref name="Array" /> n'a pas d'éléments, par exemple si c'est une chaîne de longueur nulle, <see langword="UBound" /> retourne -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; is less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> est inférieur à 1 ou <paramref name="Rank" /> est supérieur au rang de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">Retourne une valeur <see langword="Integer" /> contenant la classification de type de données d'une variable.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Obligatoire. Variable <see langword="Object" />. Si <see langword="Option Strict" /> est <see langword="Off" />, vous pouvez passer une variable de tout type de données, à l'exception d'une structure.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">Retourne une valeur <see langword="Integer" /> contenant la classification de type de données d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">Retourne une valeur <see langword="String" /> contenant le nom du type de données Visual Basic d'une variable.</summary>
      <param name="UrtName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; variable containing a type name used by the common language runtime.">Obligatoire. Variable <see langword="String" /> contenant un nom de type utilisé par le common language runtime.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">Retourne une valeur <see langword="String" /> contenant le nom du type de données Visual Basic d'une variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary vsli:raw="The &lt;see langword=&quot;Interaction&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">Le module <see langword="Interaction" /> contient les procédures utilisées pour interagir avec les objets, les applications et les systèmes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary vsli:raw="Sounds a tone through the computer's speaker.">Émet un signal sonore par le haut-parleur de l'ordinateur.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</summary>
      <param name="ObjectRef" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">Obligatoire. <see langword="Object" />. Pointeur qui désigne l'objet exposant la propriété ou la méthode.</param>
      <param name="ProcName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">Obligatoire. <see langword="String" />. Expression de type chaîne contenant le nom de la propriété ou de la méthode sur l'objet.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Obligatoire. Membre de l'énumération de type <see cref="T:Microsoft.VisualBasic.CallType" /> représentant le type de la procédure appelée. La valeur de <see langword="CallType" /> peut être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</param>
      <param name="Args" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">Facultatif. <see langword="ParamArray" />. Tableau de paramètres contenant les arguments à passer à la propriété ou la méthode appelée.</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Invalid &lt;paramref name=&quot;UseCallType&quot; /&gt; value; must be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Valeur <paramref name="UseCallType" /> non valide ; doit être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">Crée et retourne une référence à un objet COM. <see langword="CreateObject" /> ne peut être utilisé pour créer des instances de classes en Visual Basic à moins que ces classes soient exposées explicitement en tant que composants COM.</summary>
      <param name="ProgId" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. The program ID of the object to create.">Obligatoire. <see langword="String" />. ID de programme de l'objet à créer.</param>
      <param name="ServerName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The name of the network server where the object will be created. If &lt;paramref name=&quot;ServerName&quot; /&gt; is an empty string (&quot;&quot;), the local computer is used.">Optionnel. <see langword="String" />. Nom du serveur réseau où l'objet sera créé. Si <paramref name="ServerName" /> est une chaîne vide (""), l'ordinateur local est utilisé.</param>
      <returns vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">Crée et retourne une référence à un objet COM. <see langword="CreateObject" /> ne peut être utilisé pour créer des instances de classes en Visual Basic à moins que ces classes soient exposées explicitement en tant que composants COM.</returns>
      <exception cref="T:System.Exception" vsli:raw="Server is unavailable">Le serveur est indisponible.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object of the specified type exists.">Aucun objet du type spécifié n'existe</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">Retourne un ou deux objets selon l'évaluation d'une expression.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt;. The expression you want to evaluate.">Obligatoire. <see langword="Boolean" />. Expression à évaluer.</param>
      <param name="TruePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;True&quot; /&gt;.">Obligatoire. <see langword="Object" />. Retourné si <paramref name="Expression" /> a la valeur <see langword="True" />.</param>
      <param name="FalsePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;False&quot; /&gt;.">Obligatoire. <see langword="Object" />. Retourné si <paramref name="Expression" /> a la valeur <see langword="False" />.</param>
      <returns vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">Retourne un ou deux objets selon l'évaluation d'une expression.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary vsli:raw="Indicates which button was pressed on a message box, returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique le bouton qui a été enfoncé dans une boîte de message, retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary vsli:raw="Abort button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbort&quot; /&gt;.">Le bouton Abandonner a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbAbort" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary vsli:raw="Cancel button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCancel&quot; /&gt;.">Le bouton Annuler a été enfoncé. Ce membre est équivalent à la constante <see langword="vbCancel" />de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary vsli:raw="Ignore button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbIgnore&quot; /&gt;.">Le bouton Ignorer a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary vsli:raw="No button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNo&quot; /&gt;.">Le bouton Non a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary vsli:raw="OK button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOK&quot; /&gt;.">Le bouton OK a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbOK" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary vsli:raw="Retry button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetry&quot; /&gt;.">Le bouton Réessayer a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbRetry" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary vsli:raw="Yes button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYes&quot; /&gt;.">Le bouton Oui a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbYes" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary vsli:raw="Indicates which buttons to display when calling the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indique les boutons à afficher lors de l’appel de la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary vsli:raw="Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbortRetryIgnore&quot; /&gt;.">Boutons Abandonner, Réessayer et Ignorer. Ce membre est équivalent à la constante Visual Basic <see langword="vbAbortRetryIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary vsli:raw="Application modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbApplicationModal&quot; /&gt;.">Boîte de dialogue modale de l’application. Ce membre est équivalent à la constante Visual Basic <see langword="vbApplicationModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary vsli:raw="Critical message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCritical&quot; /&gt;.">Message critique. Ce membre est équivalent à la constante Visual Basic <see langword="vbCritical" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary vsli:raw="First button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton1&quot; /&gt;.">Le premier bouton est la valeur par défaut. Ce membre est équivalent à la constante Visual Basic <see langword="vbDefaultButton1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary vsli:raw="Second button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton2&quot; /&gt;.">Le deuxième bouton est la valeur par défaut. Ce membre est équivalent à la constante Visual Basic <see langword="vbDefaultButton2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary vsli:raw="Third button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton3&quot; /&gt;.">Le troisième bouton est la valeur par défaut. Ce membre est équivalent à la constante Visual Basic <see langword="vbDefaultButton3" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary vsli:raw="Warning message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbExclamation&quot; /&gt;.">Message d'avertissement. Ce membre est équivalent à la constante Visual Basic <see langword="vbExclamation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary vsli:raw="Information message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInformation&quot; /&gt;.">Message d'informations. Ce membre est équivalent à la constante Visual Basic <see langword="vbInformation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary vsli:raw="Help text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxHelp&quot; /&gt;.">Texte d'aide. Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxHelp" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary vsli:raw="Right-aligned text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRight&quot; /&gt;.">Texte aligné à droite. Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxRight" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary vsli:raw="Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRtlReading&quot; /&gt;.">Texte lu de droite à gauche (systèmes hébreu et arabe). Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxRtlReading" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary vsli:raw="Foreground message box window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxSetForeground&quot; /&gt;.">Fenêtre de message au premier plan. Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxSetForeground" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary vsli:raw="OK and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKCancel&quot; /&gt;.">Boutons OK et Annuler. Ce membre est équivalent à la constante Visual Basic <see langword="vbOKCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary vsli:raw="OK button only (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKOnly&quot; /&gt;.">Bouton OK uniquement (par défaut). Ce membre est équivalent à la constante Visual Basic <see langword="vbOKOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary vsli:raw="Warning query. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbQuestion&quot; /&gt;.">Requête d’avertissement. Ce membre est équivalent à la constante Visual Basic <see langword="vbQuestion" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary vsli:raw="Retry and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetryCancel&quot; /&gt;.">Boutons Réessayer et Annuler. Ce membre est équivalent à la constante Visual Basic <see langword="vbRetryCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary vsli:raw="System modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystemModal&quot; /&gt;.">Boîte de dialogue modale du système. Ce membre est équivalent à la constante Visual Basic <see langword="vbSystemModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary vsli:raw="Yes and No buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNo&quot; /&gt;.">Boutons Oui et Non. Ce membre est équivalent à la constante Visual Basic <see langword="vbYesNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary vsli:raw="Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNoCancel&quot; /&gt;.">Boutons Oui, Non et Annuler. Ce membre est équivalent à la constante Visual Basic <see langword="vbYesNoCancel" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">Cet attribut prend en charge <see langword="My.Forms" /> et <see langword="My.WebServices" /> dans Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">Cet attribut prend en charge <see langword="My.Forms" /> et <see langword="My.WebServices" /> dans Visual Basic.</summary>
      <param name="typeToCollect" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName&quot; /&gt; property. The compiler generates accessor properties for classes that derive from this type.">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. Le compilateur génère des propriétés d'accesseur pour les classes dérivées de ce type.</param>
      <param name="createInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod&quot; /&gt; property. Specifies the method in the class that creates the type's instances.">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Spécifie la méthode de la classe qui crée les instances du type.</param>
      <param name="disposeInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod&quot; /&gt; property. Specifies the method in the class that disposes of the type's instances.">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Spécifie la méthode de la classe qui supprime les instances du type.</param>
      <param name="defaultInstanceAlias" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias&quot; /&gt; property. Specifies the name of the property that returns the default instance of the class.">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Spécifie le nom de la propriété qui retourne l'instance par défaut de la classe.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the method in the class that creates the type's instances.">Spécifie la méthode de la classe qui crée les instances du type.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the name of the property that returns the default instance of the class.">Spécifie le nom de la propriété qui retourne l'instance par défaut de la classe.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the method in the class that disposes of the type's instances.">Spécifie la méthode de la classe qui supprime les instances du type.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the name of the type for which the compiler generates accessor properties.">Spécifie le nom du type pour lequel le compilateur génère des propriétés d'accesseur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>Fournit des méthodes permettant de manipuler le Presse-papiers.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>Fournit des propriétés et des méthodes destinées à être utilisées avec les lecteurs, les fichiers et les répertoires.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>Associe deux chemins d'accès et retourne un chemin d'accès correctement mis en forme.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Premier chemin d'accès à combiner.</param>
      <param name="relativePath">
        <see langword="String" />. Deuxième chemin d'accès à combiner.</param>
      <returns>Combinaison des chemins d'accès spécifiés.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> ou <paramref name="relativePath" /> sont des chemins d'accès incorrects.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire cible portant le même nom est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> si les fichiers existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>Crée un répertoire.</summary>
      <param name="directory">Nom et emplacement du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le format du nom du répertoire est incorrect. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le nom de répertoire est trop long.</exception>
      <exception cref="T:System.NotSupportedException">Le nom du répertoire se compose uniquement du signe deux-points (:).</exception>
      <exception cref="T:System.IO.IOException">Le répertoire parent du répertoire à créer est en lecture seule.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'est pas autorisé à créer le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>Obtient ou définit le répertoire actif.</summary>
      <returns>Répertoire actif pour les opérations d'E/S de fichier.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès n'est pas valide.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="onDirectoryNotEmpty">Spécifie l'opération à effectuer lorsqu'un répertoire à supprimer contient des fichiers ou des répertoires. La valeur par défaut est <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie si une exception doit être levée quand l’utilisateur clique sur Annuler.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur a annulé l'opération et <paramref name="onUserCancel" /> a la valeur <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le répertoire spécifié existe.</summary>
      <param name="directory">Chemin d'accès du répertoire.</param>
      <returns>
        <see langword="True" /> si le répertoire existe ; sinon <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>Retourne une collection en lecture seule de tous les noms de lecteurs disponibles.</summary>
      <returns>Collection en lecture seule de tous les lecteurs disponibles en tant qu'objets <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le fichier spécifié existe.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <returns>Retourne <see langword="True" /> si le fichier existe ; sinon, cette méthode retourne <see langword="False" />.</returns>
      <exception cref="T:System.ArgumentException">Le nom du fichier se termine par une barre oblique inverse (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Modèle auquel correspondre.</param>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle permettant d'établir une correspondance entre les noms.</param>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des caractères génériques spécifiés ont une valeur <see langword="Nothing" />, une chaîne vide ou contiennent uniquement des espaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DirectoryInfo" /> pour le fichier spécifié.</summary>
      <param name="directory">
        <see langword="String" />. Chemin d'accès du répertoire.</param>
      <returns>Objet <see cref="T:System.IO.DirectoryInfo" /> pour le chemin spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire contient un signe deux-points (:) ou n'a pas un format valide.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DriveInfo" /> pour le fichier spécifié.</summary>
      <param name="drive">Lecteur à examiner.</param>
      <returns>Objet <see cref="T:System.IO.DriveInfo" /> pour le lecteur spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <returns>Objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié</returns>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est mal formé. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc. Le nom du fichier contient une marque de barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès contient le signe deux-points au milieu de la chaîne.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès est trop long.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'accès ACL (liste de contrôle d'accès) au fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle auquel correspondre.</param>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>Analyse le nom du fichier à partir du chemin d'accès fourni.</summary>
      <param name="path">Obligatoire. Chemin d'accès à analyser. <see langword="String" />.</param>
      <returns>Nom de fichier à partir du chemin d'accès spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>Retourne le chemin d'accès parent du chemin d'accès fourni.</summary>
      <param name="path">Chemin d'accès à examiner.</param>
      <returns>Chemin d'accès parent du chemin d'accès fourni.</returns>
      <exception cref="T:System.ArgumentException">Le chemin d'accès n'a pas de chemin parent car il s'agit d'un chemin d'accès racine.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>Crée un fichier temporaire de zéro octet nommé de manière unique sur le disque et retourne le chemin d'accès complet de ce fichier.</summary>
      <returns>
        <see langword="String" /> contenant le chemin d'accès complet du fichier temporaire.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">La source est un répertoire racine ou le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et un sous-répertoire du fichier ne peut pas être copié.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur annule l'opération ou l'opération ne peut pas être effectuée.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> si les répertoires existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Largeur des champs.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Séparateurs de champs.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <param name="encoding">Encodage à utiliser pour le contenu du fichier. La valeur par défaut est ASCII.</param>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Ouvre un <see cref="T:System.IO.StreamWriter" /> pour écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est ASCII.</param>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>Retourne le contenu d'un fichier sous la forme d'un tableau d'octets.</summary>
      <param name="file">Fichier à lire.</param>
      <returns>Tableau <see langword="Byte" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <param name="encoding">Encodage de caractères à utiliser pour la lecture du fichier. La valeur par défaut est UTF-8.</param>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>Renomme un répertoire.</summary>
      <param name="directory">Chemin d'accès et nom du répertoire à renommer.</param>
      <param name="newName">Nouveau nom du répertoire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>Renomme un fichier.</summary>
      <param name="file">Fichier à renommer.</param>
      <param name="newName">Nouveau nom du fichier.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations relatives au chemin d’accès ou se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>Obtient un objet qui fournit des propriétés pour accéder aux répertoires communément référencés.</summary>
      <returns>Cette propriété retourne l'objet <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> de l'ordinateur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Écrit des données dans un fichier binaire.</summary>
      <param name="file">Chemin d'accès et nom du fichier dans lequel écrire.</param>
      <param name="data">Données à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est UTF-8.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>Fournit des propriétés et des méthodes permettant de manipuler le Registre.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>Fournit des propriétés utilisées pour accéder aux répertoires communément référencés.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour tous les utilisateurs.</summary>
      <returns>Chemin d'accès au répertoire de données d'application pour tous les utilisateurs.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour l'utilisateur en cours.</summary>
      <returns>Chemin d'accès au répertoire de données d'application pour l'utilisateur en cours.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Desktop.</summary>
      <returns>Chemin d'accès au répertoire Bureau.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>Obtient un nom de chemin d'accès pointant vers le répertoire Mes documents.</summary>
      <returns>Chemin d'accès au répertoire Mes documents.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Music.</summary>
      <returns>Chemin d'accès au répertoire Ma musique.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Pictures.</summary>
      <returns>Chemin d'accès au répertoire Mes images.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Obtient un chemin d’accès pointant sur le répertoire Program Files.</summary>
      <returns>Chemin d’accès au répertoire Program Files .</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Programs.</summary>
      <returns>Chemin d'accès au répertoire Programmes.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Temp.</summary>
      <returns>Chemin d'accès au répertoire Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Indique comment ouvrir un fichier lors de l'appel à des fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary vsli:raw="Read and write access permitted. This is the default.">Accès en lecture et en écriture autorisé. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary vsli:raw="Read access permitted.">Accès en lecture autorisé.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary vsli:raw="Read and write access permitted.">Accès en lecture et en écriture autorisé.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary vsli:raw="Write access permitted.">Accès en écriture autorisé.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Indique comment ouvrir un fichier lors de l'appel à des fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary vsli:raw="File opened to append to it. Default.">Fichier ouvert pour être ajouté. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary vsli:raw="File opened for binary access.">Fichier ouvert pour un accès binaire.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary vsli:raw="File opened for read access.">Fichier ouvert pour un accès en lecture.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary vsli:raw="File opened for write access.">Fichier ouvert pour un accès en écriture.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary vsli:raw="File opened for random access.">Fichier ouvert pour un accès aléatoire.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Indique comment ouvrir un fichier lors de l'appel à des fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary vsli:raw="&lt;see langword=&quot;LockReadWrite&quot; /&gt;. This is the default.">
        <see langword="LockReadWrite" />. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary vsli:raw="Other processes cannot read the file.">Les autres processus ne peuvent pas lire le fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary vsli:raw="Other processes cannot read or write to the file.">Les autres processus ne peuvent pas accéder en lecture ou écriture au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary vsli:raw="Other processes cannot write to the file.">Les autres processus ne peuvent pas écrire dans le fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary vsli:raw="Any process can read or write to the file.">Tout autre processus peut accéder en lecture ou écriture au fichier.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Cette classe prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Ce champ prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary vsli:raw="The &lt;see langword=&quot;Strings&quot; /&gt; module contains procedures used to perform string operations.">Le module <see langword="Strings" /> contient les procédures utilisées pour effectuer des opérations de chaînes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns vsli:raw="The character code corresponding to a character.">Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns vsli:raw="The character code corresponding to a character.">Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns vsli:raw="The character code corresponding to a character.">Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns vsli:raw="The character code corresponding to a character.">Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">Retourne le caractère associé au code de caractère spécifié.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">Obligatoire. Expression <see langword="Integer" /> représentant l’<c>élément de code</c>, ou code de caractère, du caractère.</param>
      <returns vsli:raw="The character associated with the specified character code.">Le caractère associé au code de caractère spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; 0 or &amp;gt; 255 for &lt;see langword=&quot;Chr&quot; /&gt;.">
        <paramref name="CharCode" /> &lt; 0 ou &gt; 255 pour <see langword="Chr" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">Retourne le caractère associé au code de caractère spécifié.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">Obligatoire. Expression <see langword="Integer" /> représentant l’<c>élément de code</c>, ou code de caractère, du caractère.</param>
      <returns vsli:raw="The character associated with the specified character code.">Le caractère associé au code de caractère spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; -32768 or &amp;gt; 65535 for &lt;see langword=&quot;ChrW&quot; /&gt;.">
        <paramref name="CharCode" /> &lt; -32768 ou &gt; 65535 pour <see langword="ChrW" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Retourne un tableau de base zéro et contenant un sous-ensemble d'un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">Obligatoire. Tableau unidimensionnel de chaînes dans lequel la recherche doit être effectuée.</param>
      <param name="Match" vsli:raw="Required. String to search for.">Obligatoire. Chaîne à rechercher.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">Optionnel. Valeur <see langword="Boolean" /> qui indique s'il faut retourner les sous-chaînes incluant ou excluant <paramref name="Match" />. Si <paramref name="Include" /> a la valeur <see langword="True" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau contenant <paramref name="Match" /> comme sous-chaîne. Si <paramref name="Include" /> a la valeur <see langword="False" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau ne contenant pas <paramref name="Match" /> comme sous-chaîne.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">Optionnel. Valeur numérique indiquant le type de comparaison de chaîne à utiliser. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Un tableau de base zéro et contenant un sous-ensemble d’un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> a la valeur <see langword="Nothing" /> ou n'est pas un tableau unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Retourne un tableau de base zéro et contenant un sous-ensemble d'un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">Obligatoire. Tableau unidimensionnel de chaînes dans lequel la recherche doit être effectuée.</param>
      <param name="Match" vsli:raw="Required. String to search for.">Obligatoire. Chaîne à rechercher.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">Optionnel. Valeur <see langword="Boolean" /> qui indique s'il faut retourner les sous-chaînes incluant ou excluant <paramref name="Match" />. Si <paramref name="Include" /> a la valeur <see langword="True" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau contenant <paramref name="Match" /> comme sous-chaîne. Si <paramref name="Include" /> a la valeur <see langword="False" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau ne contenant pas <paramref name="Match" /> comme sous-chaîne.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">Optionnel. Valeur numérique indiquant le type de comparaison de chaîne à utiliser. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Un tableau de base zéro et contenant un sous-ensemble d’un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> a la valeur <see langword="Nothing" /> ou n'est pas un tableau unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary vsli:raw="Returns a string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">Retourne une chaîne mise en forme conformément aux instructions contenues dans une expression <see langword="String" /> de format.</summary>
      <param name="Expression" vsli:raw="Required. Any valid expression.">Obligatoire. Toute expression valide.</param>
      <param name="Style" vsli:raw="Optional. A valid named or user-defined format &lt;see langword=&quot;String&quot; /&gt; expression.">Optionnel. Expression <see langword="String" /> de format nommée ou définie par l'utilisateur valide.</param>
      <returns vsli:raw="A string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">Une chaîne mise en forme conformément aux instructions contenues dans une expression <see langword="String" /> de format.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.">Retourne une expression sous forme de valeur monétaire utilisant le symbole monétaire défini dans le Panneau de configuration du système.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Obligatoire. Expression à mettre en forme.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is -1, which indicates that the computer's regional settings are used.">Optionnel. Valeur numérique indiquant le nombre de décimales affichées. La valeur par défaut est -1, ce qui indique que les paramètres régionaux de l’ordinateur sont utilisés.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not a leading zero is displayed for fractional values. See &quot;Remarks&quot; for values.">Facultatif. Énumération <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si un zéro non significatif s'affiche pour les valeurs décimales. Consultez « Remarques » pour plus d'informations sur les valeurs.</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not to place negative values within parentheses. See &quot;Remarks&quot; for values.">Optionnel. Énumération <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les valeurs négatives doivent ou non être placées entre parenthèses. Consultez « Remarques » pour plus d'informations sur les valeurs.</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See &quot;Remarks&quot; for values.">Optionnel. Énumération <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres doivent ou non être regroupés en utilisant le délimiteur de groupe spécifié dans les paramètres régionaux de l'ordinateur. Consultez « Remarques » pour plus d'informations sur les valeurs.</param>
      <returns vsli:raw="An expression formatted as a currency value using the currency symbol defined in the system control panel.">Une expression sous forme de valeur monétaire utilisant le symbole monétaire défini dans le Panneau de configuration du système.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of digits after decimal point is greater than 99.">Le nombre de chiffres après la virgule est supérieur à 99.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">Le type n’est pas numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary vsli:raw="Returns a string expression representing a date/time value.">Retourne une expression de chaîne représentant une valeur de date/d'heure.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Date&quot; /&gt; expression to be formatted.">Obligatoire. Expression <see langword="Date" /> à mettre en forme.</param>
      <param name="NamedFormat" vsli:raw="Optional. Numeric value that indicates the date/time format used. If omitted, &lt;see langword=&quot;DateFormat.GeneralDate&quot; /&gt; is used.">Optionnel. Valeur numérique qui indique le format de date/d'heure utilisé. Si cette valeur est omise, <see langword="DateFormat.GeneralDate" /> est utilisé.</param>
      <returns vsli:raw="A string expression representing a date/time value.">Une expression de chaîne représentant une valeur de date/d’heure.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NamedFormat&quot; /&gt; setting is not valid.">Le paramètre <paramref name="NamedFormat" /> n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a number.">Retourne une expression sous forme de nombre.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Obligatoire. Expression à mettre en forme.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is -1, which indicates that the computer's regional settings are used.">Facultatif. Valeur numérique indiquant le nombre de décimales affichées. La valeur par défaut est -1, ce qui indique que les paramètres régionaux de l’ordinateur sont utilisés.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether a leading 0 is displayed for fractional values. See &quot;Settings&quot; for values.">Facultatif. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si un 0 non significatif s'affiche pour les valeurs décimales. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether to place negative values within parentheses. See &quot;Settings&quot; for values.">Optionnel. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les valeurs négatives doivent ou non être placées entre parenthèses. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">Optionnel. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres sont regroupés ou non selon le délimiteur de groupe spécifié dans les paramètres régionaux. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns vsli:raw="An expression formatted as a number.">Une expression sous forme de nombre.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">Le type n’est pas numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">Retourne une expression au format pourcentage (c’est-à-dire multipliée par 100) avec le caractère de fin %.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Obligatoire. Expression à mettre en forme.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is -1, which indicates that the locale settings are used.">Optionnel. Valeur numérique indiquant le nombre de positions affichées à droite du séparateur décimal. La valeur par défaut est -1, ce qui indique que les paramètres régionaux sont utilisés.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not a leading zero displays for fractional values. See &quot;Settings&quot; for values.">Facultatif. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si un zéro non significatif s’affiche pour les valeurs décimales. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not to place negative values within parentheses. See &quot;Settings&quot; for values.">Optionnel. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les valeurs négatives doivent être mises entre parenthèses. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">Facultatif. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres sont regroupés ou non selon le délimiteur de groupe spécifié dans les paramètres régionaux. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns vsli:raw="An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">Une expression au format pourcentage (c’est-à-dire multipliée par 100) avec le caractère de fin %.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">Le type n’est pas numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">Retourne une valeur <see langword="Char" /> qui représente le caractère de l'index spécifié dans la chaîne fournie.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <param name="Index" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The (1-based) index of the character in &lt;paramref name=&quot;str&quot; /&gt; to be returned.">Obligatoire. Expression <see langword="Integer" />. Index (de base 1) du caractère de <paramref name="str" /> à retourner.</param>
      <returns vsli:raw="&lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">Valeur <see langword="Char" /> qui représente le caractère de l'index spécifié dans la chaîne fournie.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;paramref name=&quot;Index&quot; /&gt; &amp;lt; 1, or &lt;paramref name=&quot;Index&quot; /&gt; is greater than index of last character of &lt;paramref name=&quot;str&quot; /&gt;.">
        <paramref name="str" /> a la valeur <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 ou <paramref name="Index" /> est supérieur à l’index du dernier caractère de <paramref name="str" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">Retourne un entier spécifiant la position de début de la première occurrence d'une chaîne à l'intérieur d'une autre.</summary>
      <param name="Start" vsli:raw="Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.">Optionnel. Expression numérique qui définit la position de départ de chaque recherche. Si ce paramètre est omis, la recherche commence à la position du premier caractère. L'index de début est de base 1.</param>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">Obligatoire. Expression <see langword="String" /> dans laquelle est effectuée la recherche.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">Obligatoire. Expression <see langword="String" /> recherchée.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Facultatif. Spécifie le type de comparaison de chaînes. Si <paramref name="Compare" /> est omis, le paramètre <see langword="Option Compare" /> détermine le type de comparaison.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt; Position where match begins&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; &amp;gt; length of &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  La fonction InStr retourne 
 
                <paramref name="String1" /> est de longueur nulle ou <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> est de longueur nulle ou <see langword="Nothing" /><paramref name="start" /><paramref name="String2" /> est introuvable. 
  0 
 
                <paramref name="String2" /> se trouve dans <paramref name="String1" /> Position où commence la correspondance 
 
                <paramref name="Start" /> &gt; longueur de <paramref name="String1" /> 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">Retourne un entier spécifiant la position de début de la première occurrence d'une chaîne à l'intérieur d'une autre.</summary>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">Obligatoire. Expression <see langword="String" /> dans laquelle est effectuée la recherche.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">Obligatoire. Expression <see langword="String" /> recherchée.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Optionnel. Spécifie le type de comparaison de chaînes. Si <paramref name="Compare" /> est omis, le paramètre <see langword="Option Compare" /> détermine le type de comparaison.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;The starting position for the search, which defaults to the first character position.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position where match begins.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  La fonction InStr retourne 
 
                <paramref name="String1" /> est de longueur nulle ou <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> est de longueur nulle ou <see langword="Nothing" /> Position de départ de la recherche, qui correspond par défaut à la première position de caractère.  

 
                <paramref name="String2" /> est introuvable. 
  0 
 
                <paramref name="String2" /> se trouve dans <paramref name="String1" /> Position où commence la correspondance</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns the position of the first occurrence of one string within another, starting from the right side of the string.">Retourne la position de la première occurrence d'une chaîne dans une autre, à partir du côté droit de la chaîne.</summary>
      <param name="StringCheck" vsli:raw="Required. String expression being searched.">Obligatoire. Expression String dans laquelle est effectuée la recherche.</param>
      <param name="StringMatch" vsli:raw="Required. String expression being searched for.">Obligatoire. Expression String recherchée.</param>
      <param name="Start" vsli:raw="Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If &lt;paramref name=&quot;Start&quot; /&gt; is omitted then -1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.">Optionnel. Expression numérique définissant la position de départ de base 1 pour chaque recherche, en partant de la gauche de la chaîne. Si <paramref name="Start" /> est omis, la valeur -1 est utilisée, ce qui signifie que la recherche commence à la position du dernier caractère. La recherche se poursuit alors de droite à gauche.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.">Optionnel. Valeur numérique indiquant le type de comparaison à utiliser pour l'évaluation des sous-chaînes. Si ce paramètre est omis, une comparaison binaire est effectuée. Consultez la section « Paramètres » pour obtenir les valeurs.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStrRev returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringCheck&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is found within &lt;paramref name=&quot;StringCheck&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position at which the first match is found, starting with the right side of the string.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;StringMatch&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  Valeur retournée par la fonction InStrRev 
 
                <paramref name="StringCheck" /> est de longueur nulle 
  0 
 
                <paramref name="StringMatch" /> est de longueur nulle 
 
                <paramref name="Start" /><paramref name="StringMatch" /> est introuvable. 
  0 
 
                <paramref name="StringMatch" /> se trouve dans <paramref name="StringCheck" /> Position à laquelle la première correspondance est trouvée, à partir du côté droit de la chaîne.  

 
                <paramref name="Start" /> est supérieur à la longueur de <paramref name="StringMatch" />. 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; = 0 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; -1.">
        <paramref name="Start" /> = 0 ou <paramref name="Start" /> &lt; -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">Retourne une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">Obligatoire. Tableau unidimensionnel contenant les sous-chaînes qui doivent faire l'objet d'une jointure.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">Optionnel. Chaîne quelconque, utilisée pour séparer les sous-chaînes dans la chaîne retournée. Si ce paramètre est omis, le caractère espace (" ") est utilisé. Si <paramref name="Delimiter" /> est une chaîne de longueur nulle ("") ou a la valeur <see langword="Nothing" />, tous les éléments de la liste sont concaténés sans délimiteurs.</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">Une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> n'est pas unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">Retourne une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">Obligatoire. Tableau unidimensionnel contenant les sous-chaînes qui doivent faire l'objet d'une jointure.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">Facultatif. Chaîne quelconque, utilisée pour séparer les sous-chaînes dans la chaîne retournée. Si ce paramètre est omis, le caractère espace (" ") est utilisé. Si <paramref name="Delimiter" /> est une chaîne de longueur nulle ("") ou a la valeur <see langword="Nothing" />, tous les éléments de la liste sont concaténés sans délimiteurs.</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">Une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> n'est pas unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">Retourne une chaîne ou un caractère converti en lettres minuscules.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns vsli:raw="A string or character converted to lowercase.">Une chaîne ou un caractère converti en lettres minuscules.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">Retourne une chaîne ou un caractère converti en lettres minuscules.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns vsli:raw="A string or character converted to lowercase.">Une chaîne ou un caractère converti en lettres minuscules.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the left side of a string.">Retourne une chaîne contenant un nombre spécifié de caractères en partant de la gauche d'une chaîne.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the leftmost characters are returned.">Obligatoire. Expression <see langword="String" /> dont les caractères situés le plus à gauche sont retournés.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">Obligatoire. Expression <see langword="Integer" />. Expression numérique indiquant le nombre de caractères à retourner. Si ce paramètre a la valeur 0, une chaîne de longueur nulle ("") est retournée. Si sa valeur est supérieure ou égale au nombre de caractères de <paramref name="str" />, la chaîne est retournée dans son intégralité.</param>
      <returns vsli:raw="A string containing a specified number of characters from the left side of a string.">Une chaîne contenant un nombre spécifié de caractères en partant de la gauche d’une chaîne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a left-aligned string containing the specified string adjusted to the specified length.">Retourne une chaîne alignée à gauche contenant la chaîne spécifiée ajustée à la longueur spécifiée.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">Obligatoire. Expression <see langword="String" />. Nom de la variable chaîne.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne retournée.</param>
      <returns vsli:raw="A left-aligned string containing the specified string adjusted to the specified length.">Une chaîne alignée à gauche contenant la chaîne spécifiée ajustée à la longueur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Retourne une chaîne contenant la copie d'une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary vsli:raw="Returns a string that contains all the characters starting from a specified position in a string.">Retourne une chaîne contenant tous les caractères à partir d'un emplacement spécifié dans une chaîne.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">Obligatoire. Expression <see langword="String" /> à partir de laquelle les caractères sont retournés.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one-based.">Obligatoire. Expression <see langword="Integer" />. Position de départ des caractères à retourner. Si <paramref name="Start" /> est supérieur au nombre de caractères de <paramref name="str" />, la fonction <see langword="Mid" /> retourne une chaîne de longueur nulle (""). <paramref name="Start" /> est de base 1.</param>
      <returns vsli:raw="A string that consists of all the characters starting from the specified position in the string.">Chaîne qui se compose de tous les caractères à partir de l'emplacement spécifié dans la chaîne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a string that contains a specified number of characters starting from a specified position in a string.">Retourne une chaîne contenant un nombre spécifié de caractères à partir d'un emplacement spécifié dans une chaîne.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">Obligatoire. Expression <see langword="String" /> à partir de laquelle les caractères sont retournés.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one based.">Obligatoire. Expression <see langword="Integer" />. Position de départ des caractères à retourner. Si <paramref name="Start" /> est supérieur au nombre de caractères de <paramref name="str" />, la fonction <see langword="Mid" /> retourne une chaîne de longueur nulle (""). <paramref name="Start" /> est de base 1.</param>
      <param name="Length" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt; expression. Number of characters to return. If omitted or if there are fewer than &lt;paramref name=&quot;Length&quot; /&gt; characters in the text (including the character at position &lt;paramref name=&quot;Start&quot; /&gt;), all characters from the start position to the end of the string are returned.">Optionnel. Expression <see langword="Integer" />. Nombre de caractères à retourner. Si ce paramètre est omis ou s'il y a moins de <paramref name="Length" /> caractères dans le texte (y compris le caractère situé à la position <paramref name="Start" />), tous les caractères de la position de départ à la fin de la chaîne sont retournés.</param>
      <returns vsli:raw="A string that consists of the specified number of characters starting from the specified position in the string.">Chaîne qui indique le nombre spécifié de caractères à partir de l'emplacement spécifié dans la chaîne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a string in which a specified substring has been replaced with another substring a specified number of times.">Retourne une chaîne dans laquelle une sous-chaîne spécifiée a été remplacée par une autre sous-chaîne, un nombre de fois déterminé.</summary>
      <param name="Expression" vsli:raw="Required. String expression containing substring to replace.">Obligatoire. Expression de chaîne contenant la sous-chaîne à remplacer.</param>
      <param name="Find" vsli:raw="Required. Substring being searched for.">Obligatoire. Sous-chaîne recherchée.</param>
      <param name="Replacement" vsli:raw="Required. Replacement substring.">Obligatoire. Sous-chaîne de remplacement.</param>
      <param name="Start" vsli:raw="Optional. Position within &lt;paramref name=&quot;Expression&quot; /&gt; that starts a substring used for replacement. The return value of &lt;see langword=&quot;Replace&quot; /&gt; is a string that begins at &lt;paramref name=&quot;Start&quot; /&gt;, with appropriate substitutions. If omitted, 1 is assumed.">Optionnel. Positionnez dans <paramref name="Expression" /> qui démarre une sous-chaîne utilisée pour le remplacement. La valeur de retour de <see langword="Replace" /> est une chaîne qui commence à <paramref name="Start" />, avec les substitutions appropriées. Si cet argument est omis, la position 1 est utilisée par défaut.</param>
      <param name="Count" vsli:raw="Optional. Number of substring substitutions to perform. If omitted, the default value is -1, which means &quot;make all possible substitutions.&quot;">Optionnel. Nombre de remplacements de la sous-chaîne à effectuer. Si cet argument est omis, la valeur par défaut est -1, ce qui signifie « faire tous les remplacements possibles ».</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.">Facultatif. Valeur numérique indiquant le type de comparaison à utiliser pour l'évaluation des sous-chaînes. Consultez la section « Paramètres » pour obtenir les valeurs.</param>
      <returns vsli:raw="One of the following values.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;Replace returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Find&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Replace&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt; with no occurrences of &lt;paramref name=&quot;Find&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Expression&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;, or &lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;Nothing&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Count&quot; /&gt; is 0&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="Replace" /> retourne les valeurs suivantes.  
  If 
  Valeur retournée par la fonction Replace 
 <paramref name="Find" /> est de longueur nulle ou <see langword="Nothing" /> Copie de <paramref name="Expression" /><paramref name="Replace" /> est de longueur nulle 
  Copie de <paramref name="Expression" /> sans occurrence de <paramref name="Find" /><paramref name="Expression" /> est de longueur nulle ou <see langword="Nothing" />, ou <paramref name="Start" /> est supérieur à la longueur de <paramref name="Expression" /><see langword="Nothing" />L'argument <paramref name="Count" /> a la valeur 0 
  Copie de <paramref name="Expression" /></returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Count&quot; /&gt; &amp;lt; -1 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0.">
        <paramref name="Count" /> &lt; -1 ou <paramref name="Start" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the right side of a string.">Retourne une chaîne contenant un nombre spécifié de caractères depuis la partie droite d'une chaîne.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the rightmost characters are returned.">Obligatoire. Expression <see langword="String" /> dont les caractères situés le plus à droite sont retournés.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">Obligatoire. <see langword="Integer" />. Expression numérique indiquant le nombre de caractères à retourner. Si ce paramètre a la valeur 0, une chaîne de longueur nulle ("") est retournée. Si sa valeur est supérieure ou égale au nombre de caractères de <paramref name="str" />, la chaîne est retournée dans son intégralité.</param>
      <returns vsli:raw="A string containing a specified number of characters from the right side of a string.">Une chaîne contenant un nombre spécifié de caractères depuis la partie droite d’une chaîne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a right-aligned string containing the specified string adjusted to the specified length.">Retourne une chaîne alignée à droite contenant la chaîne spécifiée ajustée à la longueur spécifiée.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">Obligatoire. Expression <see langword="String" />. Nom de la variable chaîne.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne retournée.</param>
      <returns vsli:raw="A right-aligned string containing the specified string adjusted to the specified length.">Une chaîne alignée à droite contenant la chaîne spécifiée ajustée à la longueur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Retourne une chaîne contenant la copie d'une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary vsli:raw="Returns a string consisting of the specified number of spaces.">Retourne une chaîne composée d'un nombre spécifié d'espaces.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The number of spaces you want in the string.">Obligatoire. Expression <see langword="Integer" />. Nombre d'espaces voulu dans la chaîne.</param>
      <returns vsli:raw="A string consisting of the specified number of spaces.">Une chaîne composée d’un nombre spécifié d’espaces.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; &amp;lt; 0.">
        <paramref name="Number" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based, one-dimensional array containing a specified number of substrings.">Retourne un tableau à une dimension de base zéro et contenant le nombre spécifié de sous-chaînes.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing substrings and delimiters.">Obligatoire. Expression <see langword="String" /> contenant des sous-chaînes et des délimiteurs.</param>
      <param name="Delimiter" vsli:raw="Optional. Any single character used to identify substring limits. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is omitted, the space character (&quot; &quot;) is assumed to be the delimiter.">Optionnel. Tout caractère utilisé pour identifier les limites des sous-chaînes. Si <paramref name="Delimiter" /> est omis, le caractère espace (" ") est utilisé par défaut comme délimiteur.</param>
      <param name="Limit" vsli:raw="Optional. Maximum number of substrings into which the input string should be split. The default, -1, indicates that the input string should be split at every occurrence of the &lt;paramref name=&quot;Delimiter&quot; /&gt; string.">Optionnel. Nombre maximal de sous-chaînes à obtenir après fractionnement de la chaîne d'entrée. La valeur par défaut, -1, indique que la chaîne d’entrée doit être fractionnée à chaque occurrence de la chaîne <paramref name="Delimiter" />.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the comparison to use when evaluating substrings. See &quot;Settings&quot; for values.">Optionnel. Valeur numérique indiquant la comparaison à utiliser pour l'évaluation des sous-chaînes. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; array. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing a zero-length string. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string, or if it does not appear anywhere in &lt;paramref name=&quot;Expression&quot; /&gt;, &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing the entire &lt;paramref name=&quot;Expression&quot; /&gt; string.">Tableau<see langword="String" /> . Si <paramref name="Expression" /> est une chaîne de longueur nulle (""), <see langword="Split" /> retourne un tableau à un seul élément qui contient une chaîne de longueur nulle. Si <paramref name="Delimiter" /> est une chaîne de longueur nulle, ou s'il n'apparaît nulle part dans <paramref name="Expression" />, <see langword="Split" /> retourne un tableau à un seul élément qui contient la chaîne <paramref name="Expression" /> dans son intégralité.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns -1, 0, or 1, based on the result of a string comparison.">Retourne -1, 0 ou 1, à partir du résultat d'une comparaison de chaînes.</summary>
      <param name="String1" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <param name="String2" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Facultatif. Spécifie le type de comparaison de chaînes. Si <paramref name="Compare" /> est omis, le paramètre <see langword="Option Compare" /> détermine le type de comparaison.</param>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;StrComp returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts ahead of &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;-1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is equal to &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts after &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">La fonction <see langword="StrComp" /> retourne les valeurs suivantes :  
  If 
  La fonction StrComp retourne 
 <paramref name="String1" /> se situe avant <paramref name="String2" /> -1 
 <paramref name="String1" /> est égal à <paramref name="String2" />. 0 
 <paramref name="String1" /> se situe après <paramref name="String2" /> 1</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Compare&quot; /&gt; value is not valid.">La valeur <paramref name="Compare" /> n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary vsli:raw="Returns a string converted as specified.">Retourne une chaîne convertie comme spécifié.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression to be converted.">Obligatoire. Expression <see langword="String" /> à convertir.</param>
      <param name="Conversion" vsli:raw="Required. &lt;see cref=&quot;T:Microsoft.VisualBasic.VbStrConv&quot; /&gt; member. The enumeration value specifying the type of conversion to perform.">Obligatoire. Membre <see cref="T:Microsoft.VisualBasic.VbStrConv" />. Valeur d'énumération qui spécifie le type de conversion à effectuer.</param>
      <param name="LocaleID" vsli:raw="Optional. The &lt;see langword=&quot;LocaleID&quot; /&gt; value, if different from the system &lt;see langword=&quot;LocaleID&quot; /&gt; value. (The system &lt;see langword=&quot;LocaleID&quot; /&gt; value is the default.)">Optionnel. Valeur <see langword="LocaleID" />, si différente de la valeur <see langword="LocaleID" /> du système. (La valeur <see langword="LocaleID" /> du système est la valeur par défaut.)</param>
      <returns vsli:raw="A string converted as specified.">Une chaîne convertie comme spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Unsupported &lt;paramref name=&quot;LocaleID&quot; /&gt;, &lt;paramref name=&quot;Conversion&quot; /&gt; &amp;lt; 0 or &amp;gt; 2048, or unsupported conversion for specified locale.">
        <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 ou &gt; 2048 non pris en charge, ou conversion non prise en charge pour les paramètres régionaux spécifiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne à retourner.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. Toute expression <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> valide. Seul le premier caractère de l'expression sera utilisé. Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> est inférieur à 0 ou le type <paramref name="Character" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne à retourner.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. Toute expression <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> valide. Seul le premier caractère de l'expression sera utilisé. Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> est inférieur à 0 ou le type <paramref name="Character" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne à retourner.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatoire. Toute expression <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> valide. Seul le premier caractère de l'expression sera utilisé. Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> est inférieur à 0 ou le type <paramref name="Character" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> a la valeur <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary vsli:raw="Returns a string in which the order of the text elements in the specified string is reversed.">Retourne une chaîne dans laquelle l'ordre des caractères d'une chaîne donnée a été inversé.</summary>
      <param name="Expression" vsli:raw="Required. String expression whose text elements are to be reversed. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), a zero-length string is returned.">Obligatoire. Expression de chaîne dont les caractères doivent être inversés. Si <paramref name="Expression" /> est une chaîne de longueur nulle (""), une chaîne de longueur nulle est retournée.</param>
      <returns vsli:raw="A string in which the order of the text elements in the specified string is reversed.">Une chaîne dans laquelle l’ordre des caractères d’une chaîne donnée a été inversé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Retourne une chaîne contenant la copie d'une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">Retourne une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">Une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">Retourne une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">Une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Cette classe prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Ce champ prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary vsli:raw="Indicates a Boolean value or whether the default should be used when calling number-formatting functions.">Indique une valeur Boolean ou si la valeur par défaut doit être utilisée lors de l'appel de fonctions liées au format des nombres.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary vsli:raw="False. The numeric value of this member is 0.">False. La valeur numérique de ce membre est 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary vsli:raw="True. The numeric value of this member is -1.">True. La valeur numérique de ce membre est -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary vsli:raw="Default setting. The numeric value of this member is -2.">Paramètre par défaut. La valeur numérique de ce membre est -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary vsli:raw="Indicates the type of a variant object, returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indique le type d'un objet variant, retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary vsli:raw="Array. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArray&quot; /&gt;.">Array. Ce membre est équivalent à la constante Visual Basic <see langword="vbArray" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. (&lt;see langword=&quot;True&quot; /&gt; or &lt;see langword=&quot;False&quot; /&gt;.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBoolean&quot; /&gt;.">
        <see langword="Boolean" />. (<see langword="True" /> ou <see langword="False" />). Ce membre est équivalent à la constante <see langword="vbBoolean" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt;. (0 through 255.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbByte&quot; /&gt;.">
        <see langword="Byte" />. (0 à 255) Ce membre est équivalent à la constante Visual Basic <see langword="vbByte" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary vsli:raw="&lt;see langword=&quot;Char&quot; /&gt;. (0 through 65535.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbChar&quot; /&gt;.">
        <see langword="Char" />. (0 à 65535) Ce membre est équivalent à la constante Visual Basic <see langword="vbChar" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary vsli:raw="Currency. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCurrency&quot; /&gt;.">Currency. Ce membre est équivalent à la constante Visual Basic <see langword="vbCurrency" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary vsli:raw="DataObject.">DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary vsli:raw="&lt;see langword=&quot;Date&quot; /&gt;. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDate&quot; /&gt;.">
        <see langword="Date" />. (Du 1er janvier 0001 0:00:00 au 31 décembre 9999 23:59:59.) Ce membre est équivalent à la constante Visual Basic <see langword="vbDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary vsli:raw="&lt;see langword=&quot;Decimal&quot; /&gt;. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDecimal&quot; /&gt;.">
        <see langword="Decimal" />. (0 à +/-79,228,162,514,264,337,593,543,950,335 sans virgule décimale ; 0 à +/-7,9228162514264337593543950335 avec 28 chiffres après la décimale ; le plus petit nombre différent de zéro est +/-0,0000000000000000000000000001.) Ce membre est équivalent à la constante Visual Basic <see langword="vbDecimal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary vsli:raw="&lt;see langword=&quot;Double&quot; /&gt;. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDouble&quot; /&gt;.">
        <see langword="Double" />. (-1.79769313486231E+308 à -4.94065645841247E-324 pour les valeurs négatives ; 4,94065645841247E-324 à 1,79769313486231E+308 pour les valeurs positives.) Ce membre est équivalent à la constante Visual Basic <see langword="vbDouble" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary vsli:raw="Null reference. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbEmpty&quot; /&gt;.">Référence null. Ce membre est équivalent à la constante Visual Basic <see langword="vbEmpty" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Exception&quot; /&gt;">
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInteger&quot; /&gt;.">
        <see langword="Integer" />. (-2,147,483,648 à 2,147,483,647). Ce membre est équivalent à la constante Visual Basic <see langword="vbInteger" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary vsli:raw="&lt;see langword=&quot;Long&quot; /&gt;. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLong&quot; /&gt;.">
        <see langword="Long" />. (–9 223 372 036 854 775 808 à 9 223 372 036 854 775 807) Ce membre est équivalent à la constante Visual Basic <see langword="vbLong" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary vsli:raw="Null object. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNull&quot; /&gt;.">Objet null. Ce membre est équivalent à la constante Visual Basic <see langword="vbNull" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary vsli:raw="Any type can be stored in a variable of type &lt;see langword=&quot;Object&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbObject&quot; /&gt;.">Tout type peut être stocké dans une variable de type <see langword="Object" />. Ce membre est équivalent à la constante Visual Basic <see langword="vbObject" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary vsli:raw="&lt;see langword=&quot;Short&quot; /&gt;. (-32,768 through 32,767.)">
        <see langword="Short" />. (–32 768 à 32 767)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary vsli:raw="&lt;see langword=&quot;Single&quot; /&gt;. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSingle&quot; /&gt;.">
        <see langword="Single" />. (-3.402823E+38 à -1.401298E-45 pour les valeurs négatives ; 1,401298E-45 à 3,402823E+38 pour les valeurs positives). Ce membre est équivalent à la constante Visual Basic <see langword="vbSingle" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbString&quot; /&gt;.">
        <see langword="String" />. (0 à environ 2 milliards de caractères Unicode). Ce membre est équivalent à la constante Visual Basic <see langword="vbString" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary vsli:raw="User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUserDefinedType&quot; /&gt;.">Type défini par l'utilisateur. Chaque membre de la structure a une plage déterminée par son type de données et indépendante des plages des autres membres. Ce membre est équivalent à la constante Visual Basic <see langword="vbUserDefinedType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary vsli:raw="&lt;see langword=&quot;Variant&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVariant&quot; /&gt;.">
        <see langword="Variant" />. Ce membre est équivalent à la constante Visual Basic <see langword="vbVariant" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary vsli:raw="Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.">Indique qu'un tableau dans une structure ou une variable non locale doit être traité comme un tableau de longueur fixe.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">Initialise la valeur de la propriété <see langword="Bounds" />.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">Initialise la valeur du champ supérieur, qui représente la taille de la première dimension du tableau.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">Initialise la valeur de la propriété <see langword="Bounds" />.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">Initialise la valeur du champ supérieur, qui représente la taille de la première dimension du tableau.</param>
      <param name="UpperBound2" vsli:raw="Initializes the value of upper field, which represents the size of the second dimension of the array.">Initialise la valeur du champ supérieur, qui représente la taille de la deuxième dimension du tableau.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary vsli:raw="Returns the bounds of the array.">Retourne les limites du tableau.</summary>
      <returns vsli:raw="Contains an integer array that represents the bounds of the array.">Contient un tableau d'entiers, qui représente les limites du tableau.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary vsli:raw="Returns the size of the array.">Retourne la taille du tableau.</summary>
      <returns vsli:raw="Contains an integer that represents the number of elements in the array.">Contient un entier qui représente le nombre d'éléments dans le tableau.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary vsli:raw="Indicates that a string should be treated as if it were fixed length.">Indique qu'une chaîne doit être traitée comme si elle était de longueur fixe.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;SizeConst&quot; /&gt; field.">Initialise la valeur du champ <see langword="SizeConst" />.</summary>
      <param name="Length" vsli:raw="The length of the fixed string.">Longueur de la chaîne fixe.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary vsli:raw="Gets the length of the string.">Obtient la longueur de la chaîne.</summary>
      <returns vsli:raw="The length of the string.">Longueur de la chaîne.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary vsli:raw="The &lt;see langword=&quot;VbMath&quot; /&gt; module contains procedures used to perform mathematical operations.">Le module <see langword="VbMath" /> contient les procédures utilisées pour effectuer des opérations mathématiques.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary vsli:raw="Initializes the random-number generator.">Initialise le générateur de nombres aléatoires.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary vsli:raw="Initializes the random-number generator.">Initialise le générateur de nombres aléatoires.</summary>
      <param name="Number" vsli:raw="Optional. An &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression.">Optionnel. <see langword="Object" /> ou toute expression numérique valide.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Retourne un nombre aléatoire de type <see langword="Single" />.</summary>
      <returns vsli:raw="The next random number in the sequence.">Le nombre aléatoire suivant dans la série.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Retourne un nombre aléatoire de type <see langword="Single" />.</summary>
      <param name="Number" vsli:raw="Optional. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value or any valid &lt;see cref=&quot;T:System.Single&quot; /&gt; expression.">Facultatif. Une valeur <see langword="Single" /> ou toute expression <see langword="Single" /> valide.</param>
      <returns vsli:raw="If number is less than zero, Rnd generates the same number every time, using &lt;paramref name=&quot;Number&quot; /&gt; as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.">Si le nombre est inférieur à zéro, Rnd génère même nombre à chaque fois, en utilisant l'argument <paramref name="Number" />comme valeur initiale. Si le nombre est supérieur à zéro, Rnd génère le nombre aléatoire suivant dans la séquence. Si le nombre est égal à zéro, Rnd génère le dernier nombre généré. Si le nombre n'est pas fourni, Rnd génère le nombre aléatoire suivant dans la séquence.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary vsli:raw="Indicates which type of conversion to perform when calling the &lt;see langword=&quot;StrConv&quot; /&gt; function.">Indique le type de conversion à exécuter lors de l’appel de la fonction <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary vsli:raw="Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHiragana&quot; /&gt;.">Convertit les caractères Katakana dans la chaîne en caractères Hiragana . S’applique aux paramètres régionaux japonais uniquement. Ce membre est équivalent à la constante Visual Basic <see langword="vbHiragana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary vsli:raw="Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbKatakana&quot; /&gt;.">Convertit les caractères Hiragana dans la chaîne en caractères Katakana. S’applique aux paramètres régionaux japonais uniquement. Ce membre est équivalent à la constante Visual Basic <see langword="vbKatakana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary vsli:raw="Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLinguisticCasing&quot; /&gt;.">Convertit la chaîne depuis les règles de système de fichiers pour la casse en règles linguistiques. Ce membre est équivalent à la constante Visual Basic <see langword="vbLinguisticCasing" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary vsli:raw="Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLowerCase&quot; /&gt;.">Convertit la chaîne spécifiée en minuscules. Ce membre est équivalent à la constante Visual Basic <see langword="vbLowerCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary vsli:raw="Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNarrow&quot; /&gt;.">Convertit des caractères larges (double octet) dans la chaîne en caractères étroits (simple octet). S’applique aux paramètres régionaux asiatiques. Ce membre est équivalent à la constante Visual Basic <see langword="vbNarrow" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary vsli:raw="Performs no conversion.">N’exécute aucune conversion.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary vsli:raw="Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbProperCase&quot; /&gt;.">Convertit la première lettre de chaque mot de la chaîne en majuscule. Ce membre est équivalent à la constante Visual Basic <see langword="vbProperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary vsli:raw="Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSimplifiedChinese&quot; /&gt;.">Convertit la chaîne en caractères Chinois simplifié. Ce membre est équivalent à la constante Visual Basic <see langword="vbSimplifiedChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary vsli:raw="Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTraditionalChinese&quot; /&gt;.">Convertit la chaîne en caractères Chinois traditionnel. Ce membre est équivalent à la constante Visual Basic <see langword="vbTraditionalChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary vsli:raw="Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUpperCase&quot; /&gt;.">Convertit la chaîne spécifiée en majuscules. Ce membre est équivalent à la constante Visual Basic <see langword="vbUpperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary vsli:raw="Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWide&quot; /&gt;. The conversion may use Normalization Form C even if an input character is already full-width. For example, the string &quot;は゛&quot; (which is already full-width) is normalized to &quot;ば&quot;. See Unicode normalization forms.">Convertit des caractères étroits (simple octet) dans la chaîne en caractères larges (double octet). S’applique aux paramètres régionaux asiatiques. Ce membre est équivalent à la constante Visual Basic <see langword="vbWide" />. La conversion peut utiliser la forme de normalisation C même si un caractère d’entrée est déjà en pleine chasse. Par exemple, la chaîne « は゛ » (qui est déjà en pleine chasse) est normalisée en « ば ». Consultez Unicode normalization forms.</summary>
    </member>
  </members>
</doc>