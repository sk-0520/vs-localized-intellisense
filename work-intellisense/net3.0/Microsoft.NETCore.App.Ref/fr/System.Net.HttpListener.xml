<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.HttpListener</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemeSelector">
      <summary>Sélectionne le schéma d’authentification d’une instance de <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="httpRequest">Instance de <see cref="T:System.Net.HttpListenerRequest" /> pour laquelle un schéma d’authentification doit être sélectionné.</param>
      <returns>Une des valeurs <see cref="T:System.Net.AuthenticationSchemes" /> qui indique la méthode d’authentification à utiliser pour la demande du client spécifiée.</returns>
    </member>
    <member name="T:System.Net.HttpListener">
      <summary>Fournit un écouteur de protocole HTTP simple, contrôlé par programme. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Net.HttpListener.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpListener" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Cette classe ne peut pas être utilisée sur le système d'exploitation actuel. Windows Server 2003 ou Windows XP SP2 est requis pour utiliser des instances de cette classe.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Abort">
      <summary>Arrête immédiatement l'objet <see cref="T:System.Net.HttpListener" />, en ignorant toutes les demandes actuellement mises en file d'attente.</summary>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemes">
      <summary>Obtient ou définit le schéma utilisé pour authentifier les clients.</summary>
      <returns>Combinaison d'opérations de bits de valeurs d'énumération <see cref="T:System.Net.AuthenticationSchemes" /> qui indiquent la manière dont les clients doivent être authentifiés. La valeur par défaut est <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’objet a été fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
      <summary>Obtient ou définit le délégué appelé pour déterminer le protocole utilisé lors de l'authentification des clients.</summary>
      <returns>Délégué <see cref="T:System.Net.AuthenticationSchemeSelector" /> qui appelle la méthode utilisée pour sélectionner un protocole d'authentification. La valeur par défaut est <see langword="null" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’objet a été fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
      <summary>Commence à récupérer une demande entrante de façon asynchrone.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler lorsqu'une demande du client est disponible.</param>
      <param name="state">Objet défini par l'utilisateur qui comporte des informations sur l'opération. Cet objet est passé au délégué <paramref name="callback" /> quand l'opération se termine.</param>
      <returns>Objet <see cref="T:System.IAsyncResult" /> qui indique l'état de l'opération asynchrone.</returns>
      <exception cref="T:System.Net.HttpListenerException">Un appel de fonction Win32 a échoué. Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</exception>
      <exception cref="T:System.InvalidOperationException">Cet objet n'a pas été démarré ou été actuellement arrêté.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Close">
      <summary>Arrête le <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="P:System.Net.HttpListener.DefaultServiceNames">
      <summary>Obtient une liste par défaut des noms de fournisseurs de services (SPN) déterminée par les préfixes enregistrés.</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> qui contient une liste de SPN.</returns>
    </member>
    <member name="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
      <summary>Met fin à une opération asynchrone pour récupérer une demande du client entrante.</summary>
      <param name="asyncResult">Objet <see cref="T:System.IAsyncResult" /> qui a été obtenu lors du démarrage de l'opération asynchrone.</param>
      <returns>Objet <see cref="T:System.Net.HttpListenerContext" /> qui représente la demande du client.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n'a pas été obtenu en appelant la méthode <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.HttpListenerException">Un appel de fonction Win32 a échoué. Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> a déjà été appelée pour l'objet <paramref name="asyncResult" /> spécifié.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionPolicy">
      <summary>Obtient ou définit le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> à utiliser pour la protection étendue d’une session.</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie la stratégie à utiliser pour la protection étendue.</returns>
      <exception cref="T:System.ArgumentException">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> a eu lieu, mais la propriété <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> n'était pas <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Une tentative d'attribution de la valeur <see langword="null" /> à la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> a eu lieu.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> a eu lieu après l'appel de la méthode <see cref="M:System.Net.HttpListener.Start" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La propriété <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</exception>
    </member>
    <member name="T:System.Net.HttpListener.ExtendedProtectionSelector">
      <summary>Délégué appelé pour déterminer le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> à utiliser pour chaque requête <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="request">
        <see cref="T:System.Net.HttpListenerRequest" /> qui détermine la stratégie de protection étendue que l’instance de <see cref="T:System.Net.HttpListener" /> utilisera pour assurer la protection étendue.</param>
      <returns>Objet <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie la stratégie de protection étendue à utiliser pour cette requête.</returns>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
      <summary>Obtient ou définit le délégué appelé pour déterminer le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> à utiliser pour chaque demande.</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie la stratégie à utiliser pour la protection étendue.</returns>
      <exception cref="T:System.ArgumentException">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> a eu lieu, mais la propriété <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> doit avoir la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Une tentative d'attribution de la valeur <see langword="null" /> à la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> a eu lieu.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> a eu lieu après l'appel de la méthode <see cref="M:System.Net.HttpListener.Start" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Il a été tenté de définir la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> sur une plateforme qui ne prend pas en charge la protection étendue.</exception>
    </member>
    <member name="M:System.Net.HttpListener.GetContext">
      <summary>Attend une demande entrante et retourne les résultats lorsqu'elle est reçue.</summary>
      <returns>Objet <see cref="T:System.Net.HttpListenerContext" /> qui représente une demande du client.</returns>
      <exception cref="T:System.Net.HttpListenerException">Un appel de fonction Win32 a échoué. Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</exception>
      <exception cref="T:System.InvalidOperationException">Cet objet n'a pas été démarré ou été actuellement arrêté.  

ou - 
<see cref="T:System.Net.HttpListener" /> ne possède pas de préfixe URI (Uniform Resource Identifier) auquel répondre.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListener.GetContextAsync">
      <summary>Attend une requête entrante en tant qu'opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un objet <see cref="T:System.Net.HttpListenerContext" /> qui représente une requête client.</returns>
    </member>
    <member name="P:System.Net.HttpListener.IgnoreWriteExceptions">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> spécifiant si votre application reçoit des exceptions qui se produisent lorsque <see cref="T:System.Net.HttpListener" /> envoie la réponse au client.</summary>
      <returns>
        <see langword="true" />Si ce <see cref="T:System.Net.HttpListener" /> ne doit pas retourner les exceptions qui se produisent lors de l’envoi de la réponse <see langword="false" />au client; sinon,. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’objet a été fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListener.IsListening">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Net.HttpListener" /> a été démarré.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.HttpListener" /> a été démarré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.IsSupported">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Net.HttpListener" /> peut être utilisé avec le système d'exploitation actuel.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.HttpListener" /> est pris en charge ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.Prefixes">
      <summary>Obtient les préfixes URI (Uniform Resource Identifier) gérés par cet objet <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>
        <see cref="T:System.Net.HttpListenerPrefixCollection" /> contenant les préfixes URI que cet objet <see cref="T:System.Net.HttpListener" /> est configuré pour gérer.</returns>
      <exception cref="T:System.ObjectDisposedException">L’objet a été fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListener.Realm">
      <summary>Obtient ou définit le domaine, ou partition de ressource, associé à cet objet <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>Valeur <see cref="T:System.String" /> contenant le nom du domaine associé à l'objet <see cref="T:System.Net.HttpListener" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’objet a été fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Start">
      <summary>Permet à cette instance de recevoir des demandes entrantes.</summary>
      <exception cref="T:System.Net.HttpListenerException">Un appel de fonction Win32 a échoué. Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Stop">
      <summary>Entraîne l'arrêt de la réception des demandes entrantes par cette instance.</summary>
      <exception cref="T:System.ObjectDisposedException">L’objet a été fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListener.System#IDisposable#Dispose">
      <summary>Libère les ressources détenues par cet objet <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="P:System.Net.HttpListener.TimeoutManager">
      <summary>Gestionnaire de délai d'attente pour cette instance <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>Gestionnaire de délai d'attente pour cette instance <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui contrôle si, lorsque NTLM est utilisé, les demandes supplémentaires utilisant la même connexion TCP (Transmission Control Protocol) doivent être authentifiées.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.Principal.IIdentity" /> de la première demande doit être utilisé pour les demandes suivantes sur la même connexion ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’objet a été fermé.</exception>
    </member>
    <member name="T:System.Net.HttpListenerBasicIdentity">
      <summary>Contient le nom d’utilisateur et le mot de passe d’une demande d’authentification de base.</summary>
    </member>
    <member name="M:System.Net.HttpListenerBasicIdentity.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpListenerBasicIdentity" /> à l'aide du nom d'utilisateur et du mot de passe spécifiés.</summary>
      <param name="username">Nom d'utilisateur.</param>
      <param name="password">Mot de passe.</param>
    </member>
    <member name="P:System.Net.HttpListenerBasicIdentity.Password">
      <summary>Indique le mot de passe d’une tentative d’authentification de base.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le mot de passe.</returns>
    </member>
    <member name="T:System.Net.HttpListenerContext">
      <summary>Permet d'accéder aux objets de demande et de réponse utilisés par la classe <see cref="T:System.Net.HttpListener" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)">
      <summary>Accepte une connexion WebSocket en tant qu'opération asynchrone.</summary>
      <param name="subProtocol">Sub-protocole WebSocket pris en charge.</param>
      <returns>Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un objet <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> est une chaîne vide. 
ou 
 <paramref name="subProtocol" /> contient des caractères non conformes.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Une erreur s'est produite lors de l'envoi de la réponse pour terminer le protocole de transfert de WebSocket.</exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)">
      <summary>Accepte une connexion WebSocket spécifiant le sous-protocole WebSocket pris en charge, reçoit la taille de la mémoire tampon et l'intervalle de WebSocket pendant lequel maintenir l'activité en tant qu'opération asynchrone.</summary>
      <param name="subProtocol">Sub-protocole WebSocket pris en charge.</param>
      <param name="receiveBufferSize">Taille de la mémoire tampon de réception en octets.</param>
      <param name="keepAliveInterval">Intervalle, en millisecondes, pendant lequel maintenir l'activité du protocole WebSocket.</param>
      <returns>Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un objet <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> est une chaîne vide. 
ou 
 <paramref name="subProtocol" /> contient des caractères non conformes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> est trop petite.  

ou - 
<paramref name="receiveBufferSize" /> est inférieur à 16 octets. 
ou 
<paramref name="receiveBufferSize" /> est supérieur à 64K octets.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Une erreur s'est produite lors de l'envoi de la réponse pour terminer le protocole de transfert de WebSocket.</exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})">
      <summary>Accepte une connexion de WebSocket spécifiant le sous-protocole WebSocket pris en charge, reçoit la taille de la mémoire tampon, l'intervalle de WebSocket pendant lequel maintenir l'activité et la mémoire tampon interne en tant qu'opération asynchrone.</summary>
      <param name="subProtocol">Sub-protocole WebSocket pris en charge.</param>
      <param name="receiveBufferSize">Taille de la mémoire tampon de réception en octets.</param>
      <param name="keepAliveInterval">Intervalle, en millisecondes, pendant lequel maintenir l'activité du protocole WebSocket.</param>
      <param name="internalBuffer">Mémoire tampon interne à utiliser pour cette opération.</param>
      <returns>Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un objet <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> est une chaîne vide. 

ou - 
<paramref name="subProtocol" /> contient des caractères non conformes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> est trop petite.  

ou - 
<paramref name="receiveBufferSize" /> est inférieur à 16 octets. 
ou 
<paramref name="receiveBufferSize" /> est supérieur à 64K octets.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Une erreur s'est produite lors de l'envoi de la réponse pour terminer le protocole de transfert de WebSocket.</exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)">
      <summary>Accepte une connexion WebSocket spécifiant le sous-protocole WebSocket pris en charge et l'intervalle de WebSocket pendant lequel maintenir l'activité en tant qu'opération asynchrone.</summary>
      <param name="subProtocol">Sub-protocole WebSocket pris en charge.</param>
      <param name="keepAliveInterval">Intervalle, en millisecondes, pendant lequel maintenir l'activité du protocole WebSocket.</param>
      <returns>Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un objet <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> est une chaîne vide. 

ou - 
<paramref name="subProtocol" /> contient des caractères non conformes.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> est trop petite.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Une erreur s'est produite lors de l'envoi de la réponse pour terminer le protocole de transfert de WebSocket.</exception>
    </member>
    <member name="P:System.Net.HttpListenerContext.Request">
      <summary>Obtient le <see cref="T:System.Net.HttpListenerRequest" /> qui représente la demande de ressource par un client.</summary>
      <returns>Objet <see cref="T:System.Net.HttpListenerRequest" /> qui représente la demande du client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.Response">
      <summary>Obtient l'objet <see cref="T:System.Net.HttpListenerResponse" /> qui sera envoyé au client en réponse à sa demande.</summary>
      <returns>Objet <see cref="T:System.Net.HttpListenerResponse" /> utilisé pour renvoyer une réponse au client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.User">
      <summary>Obtient un objet utilisé pour obtenir l'identité, les informations d'authentification et les rôles de sécurité du client dont la demande est représentée par cet objet <see cref="T:System.Net.HttpListenerContext" />.</summary>
      <returns>Objet <see cref="T:System.Security.Principal.IPrincipal" /> qui décrit le client, ou <see langword="null" /> si le <see cref="T:System.Net.HttpListener" /> qui a fourni ce <see cref="T:System.Net.HttpListenerContext" /> n'exige pas d'authentification.</returns>
    </member>
    <member name="T:System.Net.HttpListenerException">
      <summary>Exception levée quand une erreur se produit pendant le traitement d’une requête HTTP.</summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpListenerException" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpListenerException" /> à l'aide du code d'erreur spécifié.</summary>
      <param name="errorCode">Valeur <see cref="T:System.Int32" /> identifiant l'erreur qui s'est produite.</param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpListenerException" /> à l'aide du code et du message d'erreur spécifiés.</summary>
      <param name="errorCode">Valeur <see cref="T:System.Int32" /> identifiant l'erreur qui s'est produite.</param>
      <param name="message">
        <see cref="T:System.String" /> décrivant l'erreur qui s'est produite.</param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpListenerException" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations nécessaires pour désérialiser le nouvel objet <see cref="T:System.Net.HttpListenerException" />.</param>
      <param name="streamingContext">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Net.HttpListenerException.ErrorCode">
      <summary>Obtient une valeur identifiant l'erreur qui s'est produite.</summary>
      <returns>Valeur <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:System.Net.HttpListenerPrefixCollection">
      <summary>Représente la collection utilisée pour stocker des préfixes URI (Uniform Resource Identifier) pour les objets <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
      <summary>Ajoute un préfixe URI (Uniform Resource Identifier) à la collection.</summary>
      <param name="uriPrefix">Un <see cref="T:System.String" /> qui identifie les informations d’URI qui sont comparées dans les demandes entrantes. Le préfixe doit se terminer par une barre oblique (« / »).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriPrefix" /> n’utilise pas le schéma http:// ou https://. Ces schémas sont les seuls pris en charge pour les objets <see cref="T:System.Net.HttpListener" />.  
ou 
 <paramref name="uriPrefix" /> n’est pas un préfixe d’URI correctement mis en forme. Assurez-vous que la chaîne se termine par une barre oblique (« / »).</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</exception>
      <exception cref="T:System.Net.HttpListenerException">Un appel de fonction Windows a échoué. Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception. Cette exception est levée si un autre <see cref="T:System.Net.HttpListener" /> a déjà ajouté le préfixe <paramref name="uriPrefix" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Clear">
      <summary>Supprime tous les préfixes URI (Uniform Resource Identifier) de la collection.</summary>
      <exception cref="T:System.Net.HttpListenerException">Un appel de fonction Windows a échoué. Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
      <summary>Retourne une valeur <see cref="T:System.Boolean" /> qui indique si le préfixe spécifié est contenu dans la collection.</summary>
      <param name="uriPrefix">
        <see cref="T:System.String" /> qui contient le préfixe URI (Uniform Resource Identifier) à tester.</param>
      <returns>
        <see langword="true" /> si la collection contient le préfixe spécifié par <paramref name="uriPrefix" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie le contenu d'un <see cref="T:System.Net.HttpListenerPrefixCollection" /> dans le tableau spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui reçoit les chaînes de préfixes URI (Uniform Resource Identifier) contenues dans cette collection.</param>
      <param name="offset">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Cette collection contient plus d'éléments que <paramref name="array" /> ne peut en stocker en commençant à <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="array" /> ne peut pas stocker de valeurs de chaîne.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copie le contenu d'un <see cref="T:System.Net.HttpListenerPrefixCollection" /> dans le tableau de chaînes spécifié.</summary>
      <param name="array">Tableau de chaînes unidimensionnel qui reçoit les chaînes de préfixes URI (Uniform Resource Identifier) contenues dans cette collection.</param>
      <param name="offset">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Cette collection contient plus d'éléments que <paramref name="array" /> ne peut en stocker en commençant à <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.Count">
      <summary>Obtient le nombre de préfixes contenus dans la collection.</summary>
      <returns>
        <see cref="T:System.Int32" /> qui contient le nombre de préfixes de cette collection.</returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
      <summary>Retourne un objet qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Objet qui implémente l'interface <see cref="T:System.Collections.IEnumerator" /> et fournit l'accès aux chaînes contenues dans cette collection.</returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
      <summary>Obtient une valeur qui indique si l'accès à la collection est en lecture seule.</summary>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
      <summary>Obtient une valeur qui indique si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns>Cette propriété retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
      <summary>Supprime l'URI (Uniform Resource Identifier) spécifié de la liste de préfixes gérée par l'objet <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="uriPrefix">
        <see cref="T:System.String" /> contenant le préfixe URI à supprimer.</param>
      <returns>
        <see langword="true" /> si <paramref name="uriPrefix" /> a été trouvé dans <see cref="T:System.Net.HttpListenerPrefixCollection" /> et supprimé ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.HttpListenerException">Un appel de fonction Windows a échoué. Pour déterminer la cause de l'exception, vérifiez le code d'erreur de l'exception.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un objet qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Objet qui implémente l'interface <see cref="T:System.Collections.IEnumerator" /> et fournit l'accès aux chaînes contenues dans cette collection.</returns>
    </member>
    <member name="T:System.Net.HttpListenerRequest">
      <summary>Décrit une demande HTTP entrante d'un objet <see cref="T:System.Net.HttpListener" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Net.HttpListenerRequest.AcceptTypes">
      <summary>Obtient les types MIME acceptés par le client.</summary>
      <returns>Tableau <see cref="T:System.String" /> contenant les noms de types spécifiés dans l'en-tête <see langword="Accept" /> de la demande ou <see langword="null" /> si la demande du client ne comprenait pas d'en-tête <see langword="Accept" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
      <summary>Commence une demande asynchrone du certificat X.509 v.3 du client.</summary>
      <param name="requestCallback">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state">Objet défini par l'utilisateur qui comporte des informations sur l'opération. Cet objet est passé au délégué de rappel lorsque l'opération se termine.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ClientCertificateError">
      <summary>Obtient un code d'erreur qui identifie un problème avec le <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> fourni par le client.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> contenant un code d'erreur Windows.</returns>
      <exception cref="T:System.InvalidOperationException">Le certificat client n'a pas encore été initialisé par un appel aux méthodes <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> ou <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> 
ou 
L'opération est encore en cours.</exception>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentEncoding">
      <summary>Obtient l'encodage du contenu qui peut être utilisé pour les données envoyées avec la demande</summary>
      <returns>Objet <see cref="T:System.Text.Encoding" /> approprié à une utilisation avec les données contenues dans la propriété <see cref="P:System.Net.HttpListenerRequest.InputStream" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentLength64">
      <summary>Obtient la longueur des données relatives au corps incluse dans la demande.</summary>
      <returns>Valeur de l'en-tête <see langword="Content-Length" /> de la demande. Il s'agit de la valeur -1 si la longueur du contenu est inconnue.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentType">
      <summary>Obtient le type MIME des données relatives au corps compris dans la demande.</summary>
      <returns>Objet <see cref="T:System.String" /> contenant le texte de l'en-tête <see langword="Content-Type" /> de la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Cookies">
      <summary>Obtient les cookies envoyés avec la demande.</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> contenant les cookies qui accompagnent la demande. Cette propriété retourne une collection vide si la demande ne contient pas de cookies.</returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
      <summary>Met fin à une demande asynchrone du certificat X.509 v.3 du client.</summary>
      <param name="asyncResult">Demande du certificat en attente.</param>
      <returns>Objet <see cref="T:System.IAsyncResult" /> retourné lorsque l'opération a démarré.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n'a pas été obtenu en appelant <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." />.</exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée pour l'opération identifiée par <paramref name="asyncResult" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificate">
      <summary>Récupère le certificat X.509 v.3 du client.</summary>
      <returns>Objet <see cref="N:System.Security.Cryptography.X509Certificates" /> contenant le certificat X.509 v.3 du client.</returns>
      <exception cref="T:System.InvalidOperationException">Un appel à cette méthode pour récupérer le certificat X.509 v.3 du client est en cours et, par conséquent, aucun autre appel à cette méthode ne peut être effectué.</exception>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
      <summary>Récupère le certificat X.509 v.3 du client comme une opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un objet <see cref="N:System.Security.Cryptography.X509Certificates" /> qui contient le certificat X.509 v.3 du client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HasEntityBody">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si la demande possède des données relatives au corps associées.</summary>
      <returns>
        <see langword="true" /> si la demande possède des données relatives au corps associées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Headers">
      <summary>Obtient la collection de paires nom/valeur d'en-tête envoyées dans la demande.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenant les en-têtes HTTP compris dans la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HttpMethod">
      <summary>Obtient la méthode HTTP spécifiée par le client.</summary>
      <returns>
        <see cref="T:System.String" /> contenant la méthode utilisée dans la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.InputStream">
      <summary>Obtient un flux contenant les données relatives au corps envoyées par le client.</summary>
      <returns>Objet <see cref="T:System.IO.Stream" /> lisible qui contient les octets envoyés par le client dans le corps de la demande. Cette propriété retourne <see cref="F:System.IO.Stream.Null" /> si aucune donnée n'est envoyée avec la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsAuthenticated">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le client qui envoie cette demande est authentifié.</summary>
      <returns>
        <see langword="true" /> si le client est authentifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsLocal">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> indiquant si la demande est envoyée par l'ordinateur local.</summary>
      <returns>
        <see langword="true" /> si la demande provient du même ordinateur que l'objet <see cref="T:System.Net.HttpListener" /> qui a fourni la demande ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsSecureConnection">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> indiquant si la connexion TCP utilisée pour envoyer la demande utilise le protocole SSL (Secure Sockets Layer).</summary>
      <returns>
        <see langword="true" /> si la connexion TCP utilise SSL ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si la connexion TCP était une requête WebSocket.</summary>
      <returns>retourne <see cref="T:System.Boolean" /> ;  
 <see langword="true" /> si la connexion TCP est une requête WebSocket ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.KeepAlive">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le client exige une connexion persistante.</summary>
      <returns>
        <see langword="true" /> si la connexion doit être maintenue ouverte ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.LocalEndPoint">
      <summary>Obtient l'adresse IP et le numéro de port du serveur vers lequel la demande est dirigée.</summary>
      <returns>
        <see cref="T:System.Net.IPEndPoint" /> qui représente l'adresse IP à laquelle la demande est envoyée.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ProtocolVersion">
      <summary>Obtient la version HTTP utilisée par le client demandeur.</summary>
      <returns>
        <see cref="T:System.Version" /> identifiant la version du client de HTTP.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.QueryString">
      <summary>Obtient la chaîne de requête incluse dans la demande.</summary>
      <returns>Objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> contenant les données de requête incluses dans le <see cref="P:System.Net.HttpListenerRequest.Url" /> de la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RawUrl">
      <summary>Obtient les informations d'URL (sans l'hôte et le port) demandées par le client.</summary>
      <returns>
        <see cref="T:System.String" /> contenant l'URL brute de cette demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RemoteEndPoint">
      <summary>Obtient l'adresse IP et le numéro de port du client à l'origine de la demande.</summary>
      <returns>
        <see cref="T:System.Net.IPEndPoint" /> représentant l'adresse IP et le numéro de port à l'origine de la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
      <summary>Obtient l'identificateur de la demande HTTP entrante.</summary>
      <returns>Objet <see cref="T:System.Guid" /> qui contient l'identificateur de la demande HTTP.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ServiceName">
      <summary>Obtient le nom du fournisseur de services (SPN) que le client a envoyé sur la requête.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le SPN que le client a envoyé sur la requête.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.TransportContext">
      <summary>Obtient le <see cref="T:System.Net.TransportContext" /> de la requête client.</summary>
      <returns>Objet <see cref="T:System.Net.TransportContext" /> de la requête client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Url">
      <summary>Obtient l'objet <see cref="T:System.Uri" /> demandé par le client.</summary>
      <returns>Objet <see cref="T:System.Uri" /> identifiant la ressource demandé par le client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UrlReferrer">
      <summary>Obtient l'URI (Uniform Resource Identifier) de la ressource qui a signalé le client au serveur.</summary>
      <returns>Objet <see cref="T:System.Uri" /> contenant le texte de l'en-tête <see cref="F:System.Net.HttpRequestHeader.Referer" /> de la demande, ou <see langword="null" /> si l'en-tête n'a pas été compris dans la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserAgent">
      <summary>Obtient l'agent utilisateur (user agent) présenté par le client.</summary>
      <returns>Objet <see cref="T:System.String" /> contenant le texte de l'en-tête <see langword="User-Agent" /> de la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostAddress">
      <summary>Obtient l'adresse IP et le numéro de port du serveur vers lequel la demande est dirigée.</summary>
      <returns>
        <see cref="T:System.String" /> contenant les informations sur l'adresse de l'hôte.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostName">
      <summary>Obtient le nom DNS et, s'il est fourni, le numéro de port spécifié par le client.</summary>
      <returns>Valeur <see cref="T:System.String" /> contenant le texte de l'en-tête <see langword="Host" /> de la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserLanguages">
      <summary>Obtient les langages naturels préférés pour la réponse.</summary>
      <returns>Tableau <see cref="T:System.String" /> contenant les langages spécifiés dans l'en-tête <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> de la demande ou <see langword="null" /> si la demande du client ne comprenait pas d'en-tête <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />.</returns>
    </member>
    <member name="T:System.Net.HttpListenerResponse">
      <summary>Représente une réponse à une demande gérée par un objet <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Abort">
      <summary>Ferme la connexion au client sans envoyer de réponse.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)">
      <summary>Ajoute l'en-tête et la valeur spécifiés aux en-têtes HTTP pour cette réponse.</summary>
      <param name="name">Nom de l'en-tête HTTP à définir.</param>
      <param name="value">Valeur de l'en-tête <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <see langword="null" /> est une chaîne vide ("").</exception>
      <exception cref="T:System.ArgumentException">Vous n'êtes pas autorisé à spécifier une valeur pour l'en-tête spécifié.  

ou - 
<paramref name="name" /> ou <paramref name="value" /> contient des caractères non valides.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de <paramref name="value" /> est supérieure à 65 535 caractères.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)">
      <summary>Ajoute le <see cref="T:System.Net.Cookie" /> spécifié à la collection de cookies de cette réponse.</summary>
      <param name="cookie">Le <see cref="T:System.Net.Cookie" /> à ajouter à la collection à envoyer avec cette réponse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)">
      <summary>Ajoute une valeur à l'en-tête HTTP spécifié qui doit être envoyé avec cette réponse.</summary>
      <param name="name">Nom de l'en-tête HTTP auquel ajouter <paramref name="value" />.</param>
      <param name="value">Valeur à ajouter à l'en-tête <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ou <see langword="null" /> est une chaîne vide ("").  

ou - 
Vous n'êtes pas autorisé à spécifier une valeur pour l'en-tête spécifié.  

ou 
 <paramref name="name" /> ou <paramref name="value" /> contient des caractères non valides.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de <paramref name="value" /> est supérieure à 65 535 caractères.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close">
      <summary>Envoie la réponse au client et libère les ressources détenues par cette instance de <see cref="T:System.Net.HttpListenerResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)">
      <summary>Retourne le tableau d'octets spécifié au client et libère les ressources détenues par cette instance de <see cref="T:System.Net.HttpListenerResponse" />.</summary>
      <param name="responseEntity">Tableau <see cref="T:System.Byte" /> qui contient la réponse à envoyer au client.</param>
      <param name="willBlock">
        <see langword="true" /> pour bloquer l'exécution en vidant le flux vers le client ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="responseEntity" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentEncoding">
      <summary>Obtient ou définit <see cref="T:System.Text.Encoding" /> pour le <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> de cette réponse.</summary>
      <returns>Objet <see cref="T:System.Text.Encoding" /> pouvant être utilisé avec les données contenues dans la propriété <see cref="P:System.Net.HttpListenerResponse.OutputStream" />, ou <see langword="null" /> si aucun encodage n'est spécifié.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentLength64">
      <summary>Obtient ou définit le nombre d'octets dans les données relatives au corps incluses dans la réponse.</summary>
      <returns>Valeur de l'en-tête <see langword="Content-Length" /> de la réponse.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération set est inférieure à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">La réponse est déjà envoyée.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentType">
      <summary>Obtient ou définit le type MIME du contenu retourné.</summary>
      <returns>Instance de <see cref="T:System.String" /> contenant le texte de l'en-tête <see langword="Content-Type" /> de la réponse.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La valeur spécifiée pour une opération set est une chaîne vide ("").</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Cookies">
      <summary>Obtient ou définit la collection de cookies retournée avec la réponse.</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> contenant les cookies qui doivent accompagner la réponse. La collection est vide si aucun cookie n'a été ajouté à la réponse.</returns>
    </member>
    <member name="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)">
      <summary>Copie les propriétés du <see cref="T:System.Net.HttpListenerResponse" /> spécifié vers cette réponse.</summary>
      <param name="templateResponse">Instance du <see cref="T:System.Net.HttpListenerResponse" /> à copier.</param>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Headers">
      <summary>Obtient ou définit la collection de paires nom/valeur d'en-tête retournées par le serveur.</summary>
      <returns>Instance de <see cref="T:System.Net.WebHeaderCollection" /> qui contient tous les en-têtes HTTP explicitement définis à inclure dans la réponse.</returns>
      <exception cref="T:System.InvalidOperationException">L'instance de <see cref="T:System.Net.WebHeaderCollection" /> spécifiée pour une opération set n'est pas valide pour une réponse.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.KeepAlive">
      <summary>Obtient ou définit une valeur indiquant si le serveur exige une connexion persistante.</summary>
      <returns>
        <see langword="true" /> si le serveur exige une connexion persistante ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.OutputStream">
      <summary>Obtient un objet <see cref="T:System.IO.Stream" /> dans lequel une réponse peut être écrite.</summary>
      <returns>Objet <see cref="T:System.IO.Stream" /> dans lequel une réponse peut être écrite.</returns>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ProtocolVersion">
      <summary>Obtient ou définit la version HTTP utilisée pour la réponse.</summary>
      <returns>Objet <see cref="T:System.Version" /> qui indique la version HTTP utilisée lors de la réponse au client. Notez que cette propriété est maintenant obsolète.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La valeur spécifiée pour une opération set n'a pas sa propriété <see cref="P:System.Version.Major" /> avec pour valeur 1 ou sa propriété <see cref="P:System.Version.Minor" /> avec pour valeur 0 ou 1.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Redirect(System.String)">
      <summary>Configure la réponse afin de rediriger le client vers l'URL spécifiée.</summary>
      <param name="url">URL que le client doit utiliser pour rechercher la ressource demandée.</param>
    </member>
    <member name="P:System.Net.HttpListenerResponse.RedirectLocation">
      <summary>Obtient ou définit la valeur de l'en-tête <see langword="Location" /> HTTP dans cette réponse.</summary>
      <returns>
        <see cref="T:System.String" /> contenant l'URL absolue à envoyer au client dans l'en-tête <see langword="Location" />.</returns>
      <exception cref="T:System.ArgumentException">La valeur spécifiée pour une opération set est une chaîne vide ("").</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.SendChunked">
      <summary>Obtient ou définit si la réponse utilise l'encodage de transfert mémorisé en bloc.</summary>
      <returns>
        <see langword="true" /> si la réponse est configurée pour utiliser l'encodage de transfert mémorisé en bloc ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)">
      <summary>Ajoute ou met à jour <see cref="T:System.Net.Cookie" /> dans la collection de cookies envoyée avec cette réponse.</summary>
      <param name="cookie">
        <see cref="T:System.Net.Cookie" /> pour cette réponse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le cookie existe déjà dans la collection et n'a pas pu être remplacé.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusCode">
      <summary>Obtient ou définit le code d'état HTTP à retourner au client.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui spécifie le code d'état HTTP pour la ressource demandée. La valeur par défaut est <see cref="F:System.Net.HttpStatusCode.OK" />, indiquant que le serveur a traité correctement la demande du client et a inclus la ressource demandée dans le corps de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">Cet objet est fermé.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La valeur spécifiée pour une opération set n'est pas valide. Les valeurs autorisées sont comprises entre 100 et 999 (inclus).</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusDescription">
      <summary>Obtient ou définit une description du code d'état HTTP retourné au client.</summary>
      <returns>La description du code d'état HTTP est retournée au client. La valeur par défaut est la description de la RFC 2616 pour la valeur de la propriété <see cref="P:System.Net.HttpListenerResponse.StatusCode" />, ou une chaîne vide ("") s'il n'existe aucune description de la RFC 2616.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La valeur spécifiée pour une opération ensembliste contient des caractères transparents.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.Net.HttpListenerResponse" />.</summary>
    </member>
    <member name="T:System.Net.HttpListenerTimeoutManager">
      <summary>Gestionnaire de délai d'attente à utiliser pour un objet <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody">
      <summary>Obtient ou définit le temps octroyé à <see cref="T:System.Net.HttpListener" /> pour vider le corps d’entité sur une connexion persistante.</summary>
      <returns>Temps accordé <see cref="T:System.Net.HttpListener" /> au pour vider le corps d’entité sur une connexion Keep-Alive.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.EntityBody">
      <summary>Obtient ou définit la durée impartie pour l’arrivée du corps d’entité de la demande.</summary>
      <returns>Temps d’arrivée du corps d’entité de requête.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.HeaderWait">
      <summary>Obtient ou définit le temps octroyé à <see cref="T:System.Net.HttpListener" /> pour analyser l’en-tête de la demande.</summary>
      <returns>Temps accordé <see cref="T:System.Net.HttpListener" /> au pour analyser l’en-tête de la demande.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.IdleConnection">
      <summary>Obtient ou définit la durée autorisée pour une connexion inactive.</summary>
      <returns>Durée autorisée pour une connexion inactive.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond">
      <summary>Obtient ou définit la vitesse d'envoi minimale, en octets par seconde, pour la réponse.</summary>
      <returns>Vitesse d'envoi minimale, en octets par seconde, pour la réponse.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.RequestQueue">
      <summary>Obtient ou définit la durée de séjour de la demande dans la file d’attente des demandes avant que <see cref="T:System.Net.HttpListener" /> ne la récupère.</summary>
      <returns>Heure à laquelle la demande doit rester dans la file d’attente des demandes <see cref="T:System.Net.HttpListener" /> avant que la récupère.</returns>
    </member>
    <member name="T:System.Net.WebSockets.HttpListenerWebSocketContext">
      <summary>Permet d'accéder aux données reçues par la classe <see cref="T:System.Net.HttpListener" /> lors de l'acceptation des connexions de WebSocket.</summary>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.CookieCollection">
      <summary>Obtient les cookies reçus par l'objet <see cref="T:System.Net.HttpListener" /> dans le protocole de transfert d'ouverture de WebSocket.</summary>
      <returns>Cookies reçus par l'objet <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Headers">
      <summary>Obtient les en-têtes HTTP reçus par l'objet <see cref="T:System.Net.HttpListener" /> dans le protocole de transfert d'ouverture de WebSocket.</summary>
      <returns>En-têtes HTTP reçus par l'objet <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsAuthenticated">
      <summary>Obtient une valeur qui indique si le client WebSocket est authentifié.</summary>
      <returns>
        <see langword="true" />Si le client WebSocket est authentifié; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsLocal">
      <summary>Obtient une valeur qui indique si le client WebSocket s'est connecté sur l'ordinateur local.</summary>
      <returns>
        <see langword="true" />Si le client WebSocket est connecté à partir de l’ordinateur local; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsSecureConnection">
      <summary>Obtient une valeur qui indique si la connexion de WebSocket est sécurisée à l'aide de SSL (secure Sockets Layer).</summary>
      <returns>
        <see langword="true" />Si la connexion WebSocket est sécurisée à l’aide de SSL; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Origin">
      <summary>Obtient la valeur de l'en-tête HTTP d'origine inclus dans l'établissement de la liaison d'ouverture WebSocket.</summary>
      <returns>Valeur de l'en-tête HTTP d'origine.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.RequestUri">
      <summary>Obtient l'URI demandée par le client WebSocket.</summary>
      <returns>URI demandée par le client WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketKey">
      <summary>Obtient la valeur de l'en-tête HTTP de SecWebSocketKey inclus dans le protocole de transfert d'ouverture WebSocket.</summary>
      <returns>Valeur de l'en-tête HTTP de SecWebSocketKey.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketProtocols">
      <summary>Obtient la liste des protocoles WebSocket sécurisés inclus dans le protocole de transfert d'ouverture de WebSocket.</summary>
      <returns>Liste des protocoles WebSocket sécurisés.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketVersion">
      <summary>Obtient la liste des sous-protocoles demandés par le client WebSocket.</summary>
      <returns>Liste des sous-protocoles demandés par le client WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.User">
      <summary>Obtient un objet utilisé pour obtenir les informations d'authentification et d'identité, ainsi que les rôles de sécurité pour le client WebSocket.</summary>
      <returns>Informations d'authentification et d'identité, ainsi que les rôles de sécurité pour le client WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.WebSocket">
      <summary>Obtient l’instance <see cref="T:System.Net.WebSockets.WebSocket" /> utilisée pour envoyer et recevoir des données par le biais de la connexion <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <returns>Instance utilisée pour envoyer et recevoir des données via la <see cref="T:System.Net.WebSockets.WebSocket" /> connexion. <see cref="T:System.Net.WebSockets.WebSocket" /></returns>
    </member>
  </members>
</doc>