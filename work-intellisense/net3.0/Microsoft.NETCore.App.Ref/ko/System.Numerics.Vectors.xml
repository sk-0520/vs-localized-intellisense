<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary vsli:raw="Represents a 3x2 matrix.">3x2 행렬을 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 3x2 matrix from the specified components.">지정된 구성 요소에서 3x2 행렬을 만듭니다.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">첫 번째 행의 첫 번째 요소에 할당할 값입니다.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">첫 번째 행의 두 번째 요소에 할당할 값입니다.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">두 번째 행의 첫 번째 요소에 할당할 값입니다.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">두 번째 행의 두 번째 요소에 할당할 값입니다.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">세 번째 행의 첫 번째 요소에 할당할 값입니다.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">세 번째 행의 두 번째 요소에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">한 행렬의 각 요소와 두 번째 행렬의 해당 요소를 더합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />를 합한 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary vsli:raw="Creates a rotation matrix using the given rotation in radians.">라디안으로 지정된 회전을 사용하여 회전 행렬을 만듭니다.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">회전량(라디안)입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a rotation matrix using the specified rotation in radians and a center point.">라디안으로 지정된 회전 및 중심점을 사용하여 회전 행렬을 만듭니다.</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">회전량(라디안)입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">지정된 벡터 배율에서 크기 조정 행렬을 만듭니다.</summary>
      <param name="scales" vsli:raw="The scale to use.">사용할 배율입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale with an offset from the specified center point.">지정된 중심점부터 오프셋을 사용하여 지정된 벡터 배율에서 크기 조정 행렬을 만듭니다.</summary>
      <param name="scales" vsli:raw="The scale to use.">사용할 배율입니다.</param>
      <param name="centerPoint" vsli:raw="The center offset.">중심 오프셋입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the given scale.">지정된 배율로 균일하게 크기가 조정되는 크기 조정 행렬을 만듭니다.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">사용할 균일한 배율입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.">지정된 중심점부터 오프셋을 사용하여 지정된 배율로 균일하게 크기가 조정되는 크기 조정 행렬을 만듭니다.</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">사용할 균일한 배율입니다.</param>
      <param name="centerPoint" vsli:raw="The center offset.">중심 오프셋입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X and Y components.">지정된 X 및 Y 구성 요소에서 크기 조정 행렬을 만듭니다.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X축에서 크기를 조정할 값입니다.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y축에서 크기를 조정할 값입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">지정된 중심점만큼 오프셋되는 크기 조정 행렬을 만듭니다.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X축에서 크기를 조정할 값입니다.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y축에서 크기를 조정할 값입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians.">라디안으로 지정된 각도에서 교대 행렬을 만듭니다.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 각도(라디안)입니다.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 각도(라디안)입니다.</param>
      <returns vsli:raw="The skew matrix.">교대 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians and a center point.">라디안으로 지정된 각도 및 중심점에서 교대 행렬을 만듭니다.</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 각도(라디안)입니다.</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 각도(라디안)입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The skew matrix.">교대 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a translation matrix from the specified 2-dimensional vector.">지정된 2차원 벡터에서 변환 행렬을 만듭니다.</summary>
      <param name="position" vsli:raw="The translation position.">변환 위치입니다.</param>
      <returns vsli:raw="The translation matrix.">변환 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X and Y components.">지정된 X 및 Y 구성 요소에서 변환 행렬을 만듭니다.</summary>
      <param name="xPosition" vsli:raw="The X position.">X 위치입니다.</param>
      <param name="yPosition" vsli:raw="The Y position.">Y 위치입니다.</param>
      <returns vsli:raw="The translation matrix.">변환 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 3x2 matrix are equal.">이 인스턴스와 다른 3x2 행렬이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The other matrix.">다른 행렬입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 행렬이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">이 인스턴스와 지정된 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="obj" />가 <see langword="null" />이면 메서드에서 <see langword="false" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary vsli:raw="Calculates the determinant for this matrix.">이 행렬의 행렬식을 계산합니다.</summary>
      <returns vsli:raw="The determinant.">행렬식입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">곱하기 ID 행렬을 가져옵니다.</summary>
      <returns vsli:raw="The multiplicative identify matrix.">곱하기 ID 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">지정된 행렬을 반전합니다. 반환 값은 작업의 성공 여부를 나타냅니다.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">반전할 행렬입니다.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">이 메서드가 반환될 때 작업이 성공한 경우 반전된 행렬을 포함합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="matrix" />가 성공적으로 변환되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">현재 행렬이 ID 행렬인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 행렬이 ID 행렬이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">두 번째 행렬의 가중치를 지정하는 값에 따라 한 행렬과 두 번째 행렬 사이의 선형 보간을 수행합니다.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="matrix2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" />의 상대적 가중치입니다.</param>
      <returns vsli:raw="The interpolated matrix.">보간된 행렬입니다.</returns>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary vsli:raw="The first element of the first row.">첫 번째 행의 첫 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary vsli:raw="The second element of the first row.">첫 번째 행의 두 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary vsli:raw="The first element of the second row.">두 번째 행의 첫 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary vsli:raw="The second element of the second row.">두 번째 행의 두 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary vsli:raw="The first element of the third row.">세 번째 행의 첫 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary vsli:raw="The second element of the third row.">세 번째 행의 두 번째 요소입니다.</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">두 행렬을 곱한 결과로 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The product matrix.">행렬곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">지정된 행렬의 모든 요소를 스칼라 인수로 크기 조정하여 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">크기를 조정할 행렬입니다.</param>
      <param name="value2" vsli:raw="The scaling value to use.">사용할 크기 조정 값입니다.</param>
      <returns vsli:raw="The scaled matrix.">크기 조정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">해당 값에 모두 -1을 곱하여 지정된 행렬을 부정합니다.</summary>
      <param name="value" vsli:raw="The matrix to negate.">부정할 행렬입니다.</param>
      <returns vsli:raw="The negated matrix.">부정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">한 행렬의 각 요소와 두 번째 행렬의 해당 요소를 더합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix that contains the summed values.">합한 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">지정된 행렬이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">비교할 첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">비교할 두 번째 행렬입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">지정된 행렬이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">비교할 첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">비교할 두 번째 행렬입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">두 행렬을 곱한 결과로 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The product matrix.">행렬곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">지정된 행렬의 모든 요소를 스칼라 인수로 크기 조정하여 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">크기를 조정할 행렬입니다.</param>
      <param name="value2" vsli:raw="The scaling value to use.">사용할 크기 조정 값입니다.</param>
      <returns vsli:raw="The scaled matrix.">크기 조정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">두 번째 행렬의 각 요소를 첫 번째 행렬의 해당 요소에서 뺍니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" />의 각 요소를 <paramref name="value1" />의 해당 요소에서 뺀 결과로 생성되는 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">해당 값에 모두 -1을 곱하여 지정된 행렬을 부정합니다.</summary>
      <param name="value" vsli:raw="The matrix to negate.">부정할 행렬입니다.</param>
      <returns vsli:raw="The negated matrix.">부정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">두 번째 행렬의 각 요소를 첫 번째 행렬의 해당 요소에서 뺍니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" />의 각 요소를 <paramref name="value1" />의 해당 요소에서 뺀 결과로 생성되는 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">이 행렬을 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="The string representation of this matrix.">이 행렬의 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">이 행렬의 변환 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The translation component of the current instance.">현재 인스턴스의 변환 구성 요소입니다.</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary vsli:raw="Represents a 4x4 matrix.">4x4 행렬을 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Matrix4x4&quot; /&gt; object from a specified &lt;see cref=&quot;T:System.Numerics.Matrix3x2&quot; /&gt; object.">지정된 <see cref="T:System.Numerics.Matrix3x2" /> 개체에서 <see cref="T:System.Numerics.Matrix4x4" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="A 3x2 matrix.">3x2 행렬입니다.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 4x4 matrix from the specified components.">지정된 구성 요소에서 4x4 행렬을 만듭니다.</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">첫 번째 행의 첫 번째 요소에 할당할 값입니다.</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">첫 번째 행의 두 번째 요소에 할당할 값입니다.</param>
      <param name="m33" vsli:raw="The value to assign to the third element in the third row.">세 번째 행의 세 번째 요소에 할당할 값입니다.</param>
      <param name="m34" vsli:raw="The value to assign to the fourth element in the third row.">세 번째 행의 네 번째 요소에 할당할 값입니다.</param>
      <param name="m41" vsli:raw="The value to assign to the first element in the fourth row.">네 번째 행의 첫 번째 요소에 할당할 값입니다.</param>
      <param name="m42" vsli:raw="The value to assign to the second element in the fourth row.">네 번째 행의 두 번째 요소에 할당할 값입니다.</param>
      <param name="m43" vsli:raw="The value to assign to the third element in the fourth row.">네 번째 행의 세 번째 요소에 할당할 값입니다.</param>
      <param name="m44" vsli:raw="The value to assign to the fourth element in the fourth row.">네 번째 행의 네 번째 요소에 할당할 값입니다.</param>
      <param name="m13" vsli:raw="The value to assign to the third element in the first row.">첫 번째 행의 세 번째 요소에 할당할 값입니다.</param>
      <param name="m14" vsli:raw="The value to assign to the fourth element in the first row.">첫 번째 행의 네 번째 요소에 할당할 값입니다.</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">두 번째 행의 첫 번째 요소에 할당할 값입니다.</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">두 번째 행의 두 번째 요소에 할당할 값입니다.</param>
      <param name="m23" vsli:raw="The value to assign to the third element in the second row.">두 번째 행의 세 번째 요소에 할당할 값입니다.</param>
      <param name="m24" vsli:raw="The value to assign to the fourth element in the second row.">두 번째 행의 세 번째 요소에 할당할 값입니다.</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">세 번째 행의 첫 번째 요소에 할당할 값입니다.</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">세 번째 행의 두 번째 요소에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">한 행렬의 각 요소와 두 번째 행렬의 해당 요소를 더합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />를 합한 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a spherical billboard that rotates around a specified object position.">지정된 개체 위치를 중심으로 회전하는 구면 빌보드를 만듭니다.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">빌보드의 회전 중심으로 사용할 개체의 위치입니다.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">카메라의 위치입니다.</param>
      <param name="cameraUpVector" vsli:raw="The up vector of the camera.">카메라의 상향 벡터입니다.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">카메라의 정방향 벡터입니다.</param>
      <returns vsli:raw="The created billboard.">만든 빌보드입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a cylindrical billboard that rotates around a specified axis.">지정된 축을 중심으로 회전하는 원통형 빌보드를 만듭니다.</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">빌보드의 회전 중심으로 사용할 개체의 위치입니다.</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">카메라의 위치입니다.</param>
      <param name="rotateAxis" vsli:raw="The axis to rotate the billboard around.">빌보드의 회전 중심으로 사용할 축입니다.</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">카메라의 정방향 벡터입니다.</param>
      <param name="objectForwardVector" vsli:raw="The forward vector of the object.">개체의 정방향 벡터입니다.</param>
      <returns vsli:raw="The billboard matrix.">빌보드 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a matrix that rotates around an arbitrary vector.">임의의 벡터를 중심으로 회전하는 행렬을 만듭니다.</summary>
      <param name="axis" vsli:raw="The axis to rotate around.">회전 중심으로 사용할 축입니다.</param>
      <param name="angle" vsli:raw="The angle to rotate around &lt;paramref name=&quot;axis&quot; /&gt;, in radians.">
        <paramref name="axis" /> 중심으로 회전할 각도(라디안)입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary vsli:raw="Creates a rotation matrix from the specified Quaternion rotation value.">지정된 쿼터니언 회전 값에서 회전 행렬을 만듭니다.</summary>
      <param name="quaternion" vsli:raw="The source Quaternion.">원본 쿼터니언입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a rotation matrix from the specified yaw, pitch, and roll.">지정된 요, 피치 및 롤에서 회전 행렬을 만듭니다.</summary>
      <param name="yaw" vsli:raw="The angle of rotation, in radians, around the Y axis.">Y축을 중심으로 하는 회전 각도(라디안)입니다.</param>
      <param name="pitch" vsli:raw="The angle of rotation, in radians, around the X axis.">X축을 중심으로 하는 회전 각도(라디안)입니다.</param>
      <param name="roll" vsli:raw="The angle of rotation, in radians, around the Z axis.">Z축을 중심으로 하는 회전 각도(라디안)입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a view matrix.">보기 행렬을 만듭니다.</summary>
      <param name="cameraPosition" vsli:raw="The position of the camera.">카메라의 위치입니다.</param>
      <param name="cameraTarget" vsli:raw="The target towards which the camera is pointing.">카메라가 가리키는 대상입니다.</param>
      <param name="cameraUpVector" vsli:raw="The direction that is &quot;up&quot; from the camera's point of view.">카메라의 관점에서 "위쪽" 방향입니다.</param>
      <returns vsli:raw="The view matrix.">보기 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates an orthographic perspective matrix from the given view volume dimensions.">지정된 보기 볼륨 차원에서 직교 원근 행렬을 만듭니다.</summary>
      <param name="width" vsli:raw="The width of the view volume.">보기 볼륨의 너비입니다.</param>
      <param name="height" vsli:raw="The height of the view volume.">보기 볼륨의 높이입니다.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">보기 볼륨의 최소 Z 값입니다.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">보기 볼륨의 최대 Z 값입니다.</param>
      <returns vsli:raw="The orthographic projection matrix.">직교 투영 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized orthographic projection matrix.">사용자 지정 직교 투영 행렬을 만듭니다.</summary>
      <param name="left" vsli:raw="The minimum X-value of the view volume.">보기 볼륨의 최소 X 값입니다.</param>
      <param name="right" vsli:raw="The maximum X-value of the view volume.">보기 볼륨의 최대 X 값입니다.</param>
      <param name="bottom" vsli:raw="The minimum Y-value of the view volume.">보기 볼륨의 최소 Y 값입니다.</param>
      <param name="top" vsli:raw="The maximum Y-value of the view volume.">보기 볼륨의 최대 Y 값입니다.</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">보기 볼륨의 최소 Z 값입니다.</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">보기 볼륨의 최대 Z 값입니다.</param>
      <returns vsli:raw="The orthographic projection matrix.">직교 투영 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix from the given view volume dimensions.">지정된 보기 볼륨 차원에서 원근 투영 행렬을 만듭니다.</summary>
      <param name="width" vsli:raw="The width of the view volume at the near view plane.">근거리 보기 평면에서 보기 볼륨의 너비입니다.</param>
      <param name="height" vsli:raw="The height of the view volume at the near view plane.">근거리 보기 평면에서 보기 볼륨의 높이입니다.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">근거리 보기 평면까지의 거리입니다.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">원거리 보기 평면까지의 거리입니다.</param>
      <returns vsli:raw="The perspective projection matrix.">원근 투영 행렬입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" />가 0보다 작거나 같습니다.  
또는 
 <paramref name="farPlaneDistance" />가 0보다 작거나 같습니다.  
또는 
 <paramref name="nearPlaneDistance" />가 <paramref name="farPlaneDistance" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.">보기 필드, 가로 세로 비율, 근거리 및 원거리 보기 평면 거리에 따라 원근 투영 행렬을 만듭니다.</summary>
      <param name="fieldOfView" vsli:raw="The field of view in the y direction, in radians.">Y 방향의 보기 필드(라디안)입니다.</param>
      <param name="aspectRatio" vsli:raw="The aspect ratio, defined as view space width divided by height.">보기 공간 너비를 높이로 나눈 값으로 정의되는 가로 세로 비율입니다.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">근거리 보기 평면까지의 거리입니다.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">원거리 보기 평면까지의 거리입니다.</param>
      <returns vsli:raw="The perspective projection matrix.">원근 투영 행렬입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;fieldOfView&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fieldOfView&quot; /&gt; is greater than or equal to &lt;see cref=&quot;F:System.Math.PI&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="fieldOfView" />가 0보다 작거나 같습니다.  
또는 
 <paramref name="fieldOfView" />가 <see cref="F:System.Math.PI" />보다 크거나 같은 경우  
 <paramref name="nearPlaneDistance" />가 0보다 작거나 같은 경우  
또는 
 <paramref name="farPlaneDistance" />가 0보다 작거나 같습니다.  
또는 
 <paramref name="nearPlaneDistance" />가 <paramref name="farPlaneDistance" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized perspective projection matrix.">사용자 지정 원근 투영 행렬을 만듭니다.</summary>
      <param name="left" vsli:raw="The minimum x-value of the view volume at the near view plane.">근거리 보기 평면에서 보기 볼륨의 최소 X 값입니다.</param>
      <param name="right" vsli:raw="The maximum x-value of the view volume at the near view plane.">근거리 보기 평면에서 보기 볼륨의 최대 X 값입니다.</param>
      <param name="bottom" vsli:raw="The minimum y-value of the view volume at the near view plane.">근거리 보기 평면에서 보기 볼륨의 최소 Y 값입니다.</param>
      <param name="top" vsli:raw="The maximum y-value of the view volume at the near view plane.">근거리 보기 평면에서 보기 볼륨의 최대 Y 값입니다.</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">근거리 보기 평면까지의 거리입니다.</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">원거리 보기 평면까지의 거리입니다.</param>
      <returns vsli:raw="The perspective projection matrix.">원근 투영 행렬입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" />가 0보다 작거나 같습니다.  
또는 
 <paramref name="farPlaneDistance" />가 0보다 작거나 같습니다.  
또는 
 <paramref name="nearPlaneDistance" />가 <paramref name="farPlaneDistance" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that reflects the coordinate system about a specified plane.">지정된 평면을 중심으로 하는 좌표계를 반영하는 행렬을 만듭니다.</summary>
      <param name="value" vsli:raw="The plane about which to create a reflection.">반사를 만들 때 중심으로 사용할 평면입니다.</param>
      <returns vsli:raw="A new matrix expressing the reflection.">반사를 표현하는 새 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis.">X축을 중심으로 점을 회전하기 위한 행렬을 만듭니다.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">X축을 중심으로 회전할 양(라디안)입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis from a center point.">중심점부터 X축을 중심으로 점을 회전하기 위한 행렬을 만듭니다.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">X축을 중심으로 회전할 양(라디안)입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Y axis.">Y축을 중심으로 점을 회전하기 위한 행렬을 만듭니다.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Y축을 중심으로 회전할 양(라디안)입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="The amount, in radians, by which to rotate around the Y axis from a center point.">중심점부터 Y축을 중심으로 회전할 양(라디안)입니다.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Y축을 중심으로 회전할 양(라디안)입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis.">Z축을 중심으로 점을 회전하기 위한 행렬을 만듭니다.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Z축을 중심으로 회전할 양(라디안)입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis from a center point.">중심점부터 Z축을 중심으로 점을 회전하기 위한 행렬을 만듭니다.</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Z축을 중심으로 회전할 양(라디안)입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The rotation matrix.">회전 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">지정된 벡터 배율에서 크기 조정 행렬을 만듭니다.</summary>
      <param name="scales" vsli:raw="The scale to use.">사용할 배율입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix with a center point.">중심점을 사용하여 크기 조정 행렬을 만듭니다.</summary>
      <param name="scales" vsli:raw="The vector that contains the amount to scale on each axis.">각 축에서 크기를 조정할 양을 포함하는 벡터입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary vsli:raw="Creates a uniform scaling matrix that scale equally on each axis.">각 축에서 동일하게 크기가 조정되는 균일한 크기 조정 행렬을 만듭니다.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">균일한 크기 조정 인수입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a uniform scaling matrix that scales equally on each axis with a center point.">중심점을 사용하여 각 축에서 동일하게 크기가 조정되는 균일한 크기 조정 행렬을 만듭니다.</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">균일한 크기 조정 인수입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X, Y, and Z components.">지정된 X, Y 및 Z 구성 요소에서 크기 조정 행렬을 만듭니다.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X축에서 크기를 조정할 값입니다.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y축에서 크기를 조정할 값입니다.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Z축에서 크기를 조정할 값입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">지정된 중심점만큼 오프셋되는 크기 조정 행렬을 만듭니다.</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X축에서 크기를 조정할 값입니다.</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y축에서 크기를 조정할 값입니다.</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Z축에서 크기를 조정할 값입니다.</param>
      <param name="centerPoint" vsli:raw="The center point.">중심점입니다.</param>
      <returns vsli:raw="The scaling matrix.">크기 조정 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light source.">지정된 광원에서 그림자를 만드는 것처럼 지정된 평면에 기하 도형을 평면화하는 행렬을 만듭니다.</summary>
      <param name="lightDirection" vsli:raw="The direction from which the light that will cast the shadow is coming.">그림자를 생성할 빛이 들어오는 방향입니다.</param>
      <param name="plane" vsli:raw="The plane onto which the new matrix should flatten geometry so as to cast a shadow.">그림자를 생성하기 위해 새 행렬이 기하 도형을 평면화해야 하는 평면입니다.</param>
      <returns vsli:raw="A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.">지정된 방향에서 지정된 평면에 기하 도형을 평면화하는 데 사용할 수 있는 새 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a translation matrix from the specified 3-dimensional vector.">지정된 3차원 벡터에서 변환 행렬을 만듭니다.</summary>
      <param name="position" vsli:raw="The amount to translate in each axis.">각 축에서 변환할 양입니다.</param>
      <returns vsli:raw="The translation matrix.">변환 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X, Y, and Z components.">지정된 X, Y 및 Z 구성 요소에서 변환 행렬을 만듭니다.</summary>
      <param name="xPosition" vsli:raw="The amount to translate on the X axis.">X축에서 변환할 양입니다.</param>
      <param name="yPosition" vsli:raw="The amount to translate on the Y axis.">Y축에서 변환할 양입니다.</param>
      <param name="zPosition" vsli:raw="The amount to translate on the Z axis.">Z축에서 변환할 양입니다.</param>
      <returns vsli:raw="The translation matrix.">변환 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a world matrix with the specified parameters.">지정된 매개 변수를 사용하여 월드 행렬을 만듭니다.</summary>
      <param name="position" vsli:raw="The position of the object.">개체의 위치입니다.</param>
      <param name="forward" vsli:raw="The forward direction of the object.">개체의 정방향입니다.</param>
      <param name="up" vsli:raw="The upward direction of the object. Its value is usually &lt;c&gt;[0, 1, 0]&lt;/c&gt;.">개체의 위쪽 방향입니다. 해당 값은 일반적으로 <c>[0, 1, 0]</c>입니다.</param>
      <returns vsli:raw="The world matrix.">월드 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary vsli:raw="Attempts to extract the scale, translation, and rotation components from the given scale, rotation, or translation matrix. The return value indicates whether the operation succeeded.">지정된 크기 조정, 회전 또는 변환 행렬에서 크기 조정, 변환 및 회전 구성 요소를 추출하려고 합니다. 반환 값은 작업의 성공 여부를 나타냅니다.</summary>
      <param name="matrix" vsli:raw="The source matrix.">원본 행렬입니다.</param>
      <param name="scale" vsli:raw="When this method returns, contains the scaling component of the transformation matrix if the operation succeeded.">이 메서드가 반환될 때 작업이 성공한 경우 변환 행렬의 크기 조정 구성 요소를 포함합니다.</param>
      <param name="rotation" vsli:raw="When this method returns, contains the rotation component of the transformation matrix if the operation succeeded.">이 메서드가 반환될 때 작업이 성공한 경우 변형 행렬의 회전 구성 요소를 포함합니다.</param>
      <param name="translation" vsli:raw="When the method returns, contains the translation component of the transformation matrix if the operation succeeded.">메서드가 반환될 때 작업이 성공한 경우 변환 행렬의 변환 구성 요소를 포함합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was decomposed successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="matrix" />가 성공적으로 분해되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 4x4 matrix are equal.">이 인스턴스와 다른 4x4 행렬이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The other matrix.">다른 행렬입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 행렬이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">이 인스턴스와 지정된 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="obj" />가 <see langword="null" />이면 메서드에서 <see langword="false" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary vsli:raw="Calculates the determinant of the current 4x4 matrix.">현재 4x4 행렬의 행렬식을 계산합니다.</summary>
      <returns vsli:raw="The determinant.">행렬식입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">곱하기 ID 행렬을 가져옵니다.</summary>
      <returns vsli:raw="Gets the multiplicative identity matrix.">곱하기 ID 행렬을 가져옵니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">지정된 행렬을 반전합니다. 반환 값은 작업의 성공 여부를 나타냅니다.</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">반전할 행렬입니다.</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">이 메서드가 반환될 때 작업이 성공한 경우 반전된 행렬을 포함합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="matrix" />가 성공적으로 변환되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">현재 행렬이 ID 행렬인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 행렬이 ID 행렬이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">두 번째 행렬의 가중치를 지정하는 값에 따라 한 행렬과 두 번째 행렬 사이의 선형 보간을 수행합니다.</summary>
      <param name="matrix1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="matrix2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" />의 상대적 가중치입니다.</param>
      <returns vsli:raw="The interpolated matrix.">보간된 행렬입니다.</returns>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary vsli:raw="The first element of the first row.">첫 번째 행의 첫 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary vsli:raw="The second element of the first row.">첫 번째 행의 두 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary vsli:raw="The third element of the first row.">첫 번째 행의 세 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary vsli:raw="The fourth element of the first row.">첫 번째 행의 네 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary vsli:raw="The first element of the second row.">두 번째 행의 첫 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary vsli:raw="The second element of the second row.">두 번째 행의 두 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary vsli:raw="The third element of the second row.">두 번째 행의 세 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary vsli:raw="The fourth element of the second row.">두 번째 행의 네 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary vsli:raw="The first element of the third row.">세 번째 행의 첫 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary vsli:raw="The second element of the third row.">세 번째 행의 두 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary vsli:raw="The third element of the third row.">세 번째 행의 세 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary vsli:raw="The fourth element of the third row.">세 번째 행의 네 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary vsli:raw="The first element of the fourth row.">네 번째 행의 첫 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary vsli:raw="The second element of the fourth row.">네 번째 행의 두 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary vsli:raw="The third element of the fourth row.">네 번째 행의 세 번째 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary vsli:raw="The fourth element of the fourth row.">네 번째 행의 네 번째 요소입니다.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">두 행렬을 곱한 결과로 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The product matrix.">행렬곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">지정된 행렬의 모든 요소를 스칼라 인수로 크기 조정하여 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">크기를 조정할 행렬입니다.</param>
      <param name="value2" vsli:raw="The scaling value to use.">사용할 크기 조정 값입니다.</param>
      <returns vsli:raw="The scaled matrix.">크기 조정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">해당 값에 모두 -1을 곱하여 지정된 행렬을 부정합니다.</summary>
      <param name="value" vsli:raw="The matrix to negate.">부정할 행렬입니다.</param>
      <returns vsli:raw="The negated matrix.">부정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">한 행렬의 각 요소와 두 번째 행렬의 해당 요소를 더합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix that contains the summed values.">합한 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">지정된 행렬이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">비교할 첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix to care.">비교할 두 번째 행렬입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">지정된 행렬이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">비교할 첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix to compare.">비교할 두 번째 행렬입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">두 행렬을 곱한 결과로 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The product matrix.">행렬곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">지정된 행렬의 모든 요소를 스칼라 인수로 크기 조정하여 생성되는 행렬을 반환합니다.</summary>
      <param name="value1" vsli:raw="The matrix to scale.">크기를 조정할 행렬입니다.</param>
      <param name="value2" vsli:raw="The scaling value to use.">사용할 크기 조정 값입니다.</param>
      <returns vsli:raw="The scaled matrix.">크기 조정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">두 번째 행렬의 각 요소를 첫 번째 행렬의 해당 요소에서 뺍니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" />의 각 요소를 <paramref name="value1" />의 해당 요소에서 뺀 결과로 생성되는 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">해당 값에 모두 -1을 곱하여 지정된 행렬을 부정합니다.</summary>
      <param name="value" vsli:raw="The matrix to negate.">부정할 행렬입니다.</param>
      <returns vsli:raw="The negated matrix.">부정된 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">두 번째 행렬의 각 요소를 첫 번째 행렬의 해당 요소에서 뺍니다.</summary>
      <param name="value1" vsli:raw="The first matrix.">첫 번째 행렬입니다.</param>
      <param name="value2" vsli:raw="The second matrix.">두 번째 행렬입니다.</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" />의 각 요소를 <paramref name="value1" />의 해당 요소에서 뺀 결과로 생성되는 값을 포함하는 행렬입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">이 행렬을 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="The string representation of this matrix.">이 행렬의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms the specified matrix by applying the specified Quaternion rotation.">지정된 쿼터니언 회전을 적용하여 지정된 행렬을 변환합니다.</summary>
      <param name="value" vsli:raw="The matrix to transform.">변형할 행렬입니다.</param>
      <param name="rotation" vsli:raw="The rotation t apply.">적용할 회전입니다.</param>
      <returns vsli:raw="The transformed matrix.">변형된 행렬입니다.</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">이 행렬의 변환 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The translation component of the current instance.">현재 인스턴스의 변환 구성 요소입니다.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transposes the rows and columns of a matrix.">행렬의 행과 열을 바꿉니다.</summary>
      <param name="matrix" vsli:raw="The matrix to transpose.">바꿀 행렬입니다.</param>
      <returns vsli:raw="The transposed matrix.">바뀐 행렬입니다.</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary vsli:raw="Represents a plane in three-dimensional space.">평면을 3차원 공간으로 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified normal and the distance along the normal from the origin.">지정된 법선 및 법선을 따라 원점으로부터의 거리를 사용하여 <see cref="T:System.Numerics.Plane" /> 개체를 만듭니다.</summary>
      <param name="normal" vsli:raw="The plane's normal vector.">평면의 법선 벡터입니다.</param>
      <param name="d" vsli:raw="The plane's distance from the origin along its normal vector.">법선 벡터를 따라 원점으로부터 평면의 거리입니다.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified four-dimensional vector.">지정된 4차원 벡터에서 <see cref="T:System.Numerics.Plane" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="A vector whose first three elements describe the normal vector, and whose &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; defines the distance along that normal from the origin.">처음 세 요소는 법선 벡터를 설명하고 <see cref="F:System.Numerics.Vector4.W" />는 해당 법선을 따라 원점으로부터의 거리를 정의하는 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.">법선의 X, Y, Z 구성 요소와 해당 법선에서 원점으로부터의 거리를 사용하여 <see cref="T:System.Numerics.Plane" /> 개체를 만듭니다.</summary>
      <param name="x" vsli:raw="The X component of the normal.">법선의 X 구성 요소입니다.</param>
      <param name="y" vsli:raw="The Y component of the normal.">법선의 Y 구성 요소입니다.</param>
      <param name="z" vsli:raw="The Z component of the normal.">법선의 Z 구성 요소입니다.</param>
      <param name="d" vsli:raw="The distance of the plane along its normal from the origin.">해당 법선을 따라 원점으로부터 평면의 거리입니다.</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object that contains three specified points.">지정된 세 점을 포함하는 <see cref="T:System.Numerics.Plane" /> 개체를 만듭니다.</summary>
      <param name="point1" vsli:raw="The first point defining the plane.">평면을 정의하는 첫 번째 점입니다.</param>
      <param name="point2" vsli:raw="The second point defining the plane.">평면을 정의하는 두 번째 점입니다.</param>
      <param name="point3" vsli:raw="The third point defining the plane.">평면을 정의하는 세 번째 점입니다.</param>
      <returns vsli:raw="The plane containing the three points.">세 점을 포함하는 평면입니다.</returns>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary vsli:raw="The distance of the plane along its normal from the origin.">해당 법선을 따라 원점으로부터 평면의 거리입니다.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary vsli:raw="Calculates the dot product of a plane and a 4-dimensional vector.">평면과 4차원 벡터의 내적을 계산합니다.</summary>
      <param name="plane" vsli:raw="The plane.">평면입니다.</param>
      <param name="value" vsli:raw="The four-dimensional vector.">4차원 벡터입니다.</param>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (&lt;see cref=&quot;F:System.Numerics.Plane.D&quot; /&gt;) value of the plane.">이 평면의 지정된 3차원 벡터와 법선 벡터의 내적과 평면의 거리(<see cref="F:System.Numerics.Plane.D" />)를 더한 값을 반환합니다.</summary>
      <param name="plane" vsli:raw="The plane.">평면입니다.</param>
      <param name="value" vsli:raw="The 3-dimensional vector.">3차원 벡터입니다.</param>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the &lt;see cref=&quot;F:System.Numerics.Plane.Normal&quot; /&gt; vector of this plane.">이 평면의 지정된 3차원 벡터와 <see cref="F:System.Numerics.Plane.Normal" /> 벡터의 내적을 반환합니다.</summary>
      <param name="plane" vsli:raw="The plane.">평면입니다.</param>
      <param name="value" vsli:raw="The three-dimensional vector.">3차원 벡터입니다.</param>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another plane object are equal.">이 인스턴스와 다른 평면 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The other plane.">다른 평면입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two planes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 평면이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">이 인스턴스와 지정된 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="obj" />가 <see langword="null" />이면 메서드에서 <see langword="false" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary vsli:raw="The normal vector of the plane.">평면의 법선 벡터입니다.</summary>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object whose normal vector is the source plane's normal vector normalized.">법선 벡터가 정규화된 소스 평면의 법선 벡터인 새 <see cref="T:System.Numerics.Plane" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="The source plane.">원본 평면입니다.</param>
      <returns vsli:raw="The normalized plane.">정규화된 평면입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are equal.">두 평면이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">비교할 첫 번째 평면입니다.</param>
      <param name="value2" vsli:raw="The second plane to compare.">비교할 두 번째 평면입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are not equal.">두 평면이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first plane to compare.">비교할 첫 번째 평면입니다.</param>
      <param name="value2" vsli:raw="The second plane to compare.">비교할 두 번째 평면입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary vsli:raw="Returns the string representation of this plane object.">이 평면 개체의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A string that represents this &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object.">이 <see cref="T:System.Numerics.Plane" /> 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a normalized plane by a 4x4 matrix.">4x4 행렬로 정규화된 평면을 변형합니다.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">변형할 정규화된 평면입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix to apply to &lt;paramref name=&quot;plane&quot; /&gt;.">
        <paramref name="plane" />에 적용할 변환 행렬입니다.</param>
      <returns vsli:raw="The transformed plane.">변형된 평면입니다.</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a normalized plane by a Quaternion rotation.">쿼터니언 회전으로 정규화된 평면을 변환합니다.</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">변형할 정규화된 평면입니다.</param>
      <param name="rotation" vsli:raw="The Quaternion rotation to apply to the plane.">평면에 적용할 쿼터니언 회전입니다.</param>
      <returns vsli:raw="A new plane that results from applying the Quaternion rotation.">쿼터니언 회전을 적용한 결과로 생성되는 새 평면입니다.</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary vsli:raw="Represents a vector that is used to encode three-dimensional physical rotations.">3차원 물리적 회전을 인코드하는 데 사용되는 벡터를 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from the specified vector and rotation parts.">지정된 벡터 및 회전 부분에서 쿼터니언을 만듭니다.</summary>
      <param name="vectorPart" vsli:raw="The vector part of the quaternion.">쿼터니언의 벡터 부분입니다.</param>
      <param name="scalarPart" vsli:raw="The rotation part of the quaternion.">쿼터니언의 회전 부분입니다.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Constructs a quaternion from the specified components.">지정된 구성 요소에서 쿼터니언을 생성합니다.</summary>
      <param name="x" vsli:raw="The value to assign to the X component of the quaternion.">쿼터니언의 X 구성 요소에 할당할 값입니다.</param>
      <param name="y" vsli:raw="The value to assign to the Y component of the quaternion.">쿼터니언의 Y 구성 요소에 할당할 값입니다.</param>
      <param name="z" vsli:raw="The value to assign to the Z component of the quaternion.">쿼터니언의 Z 구성 요소에 할당할 값입니다.</param>
      <param name="w" vsli:raw="The value to assign to the W component of the quaternion.">쿼터니언의 W 구성 요소에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">한 쿼터니언의 각 요소와 두 번째 쿼터니언의 해당 요소를 더합니다.</summary>
      <param name="value1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />를 합한 값을 포함하는 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Concatenates two quaternions.">두 쿼터니언을 연결합니다.</summary>
      <param name="value1" vsli:raw="The first quaternion rotation in the series.">시리즈에서 첫 번째 쿼터니언 회전입니다.</param>
      <param name="value2" vsli:raw="The second quaternion rotation in the series.">시리즈에서 두 번째 쿼터니언 회전입니다.</param>
      <returns vsli:raw="A new quaternion representing the concatenation of the &lt;paramref name=&quot;value1&quot; /&gt; rotation followed by the &lt;paramref name=&quot;value2&quot; /&gt; rotation.">
        <paramref name="value1" /> 회전과 <paramref name="value2" /> 회전의 연결을 나타내는 새 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the conjugate of a specified quaternion.">지정된 쿼터니언의 켤레를 반환합니다.</summary>
      <param name="value" vsli:raw="The quaternion.">쿼터니언입니다.</param>
      <returns vsli:raw="A new quaternion that is the conjugate of &lt;see langword=&quot;value&quot; /&gt;.">
        <see langword="value" />의 켤레인 새 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from a unit vector and an angle to rotate around the vector.">단위 벡터와 벡터를 중심으로 회전할 각도에서 쿼터니언을 만듭니다.</summary>
      <param name="axis" vsli:raw="The unit vector to rotate around.">회전 중심으로 사용할 단위 벡터입니다.</param>
      <param name="angle" vsli:raw="The angle, in radians, to rotate around the vector.">벡터를 중심으로 회전할 각도(라디안)입니다.</param>
      <returns vsli:raw="The newly created quaternion.">새로 만든 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Creates a quaternion from the specified rotation matrix.">지정된 회전 행렬에서 쿼터니언을 만듭니다.</summary>
      <param name="matrix" vsli:raw="The rotation matrix.">회전 행렬입니다.</param>
      <returns vsli:raw="The newly created quaternion.">새로 만든 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a new quaternion from the given yaw, pitch, and roll.">지정된 요, 피치 및 롤에서 새 쿼터니언을 만듭니다.</summary>
      <param name="yaw" vsli:raw="The yaw angle, in radians, around the Y axis.">Y축을 중심으로 하는 요 각도(라디안)입니다.</param>
      <param name="pitch" vsli:raw="The pitch angle, in radians, around the X axis.">X축을 중심으로 하는 피치 각도(라디안)입니다.</param>
      <param name="roll" vsli:raw="The roll angle, in radians, around the Z axis.">Z축을 중심으로 하는 롤 각도(라디안)입니다.</param>
      <returns vsli:raw="The resulting quaternion.">결과로 생성되는 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">한 쿼터니언을 두 번째 쿼터니언으로 나눕니다.</summary>
      <param name="value1" vsli:raw="The dividend.">피제수입니다.</param>
      <param name="value2" vsli:raw="The divisor.">제수입니다.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" />을 <paramref name="value2" />로 나눈 결과로 생성되는 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Calculates the dot product of two quaternions.">두 쿼터니언의 내적을 계산합니다.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another quaternion are equal.">이 인스턴스와 다른 쿼터니언이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The other quaternion.">다른 쿼터니언입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 쿼터니언이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">이 인스턴스와 지정된 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="obj" />가 <see langword="null" />이면 메서드에서 <see langword="false" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary vsli:raw="Gets a quaternion that represents no rotation.">회전 없음을 나타내는 쿼터니언을 가져옵니다.</summary>
      <returns vsli:raw="A quaternion whose values are &lt;c&gt;(0, 0, 0, 1)&lt;/c&gt;.">값이 포함 된 쿼터 니 언을 <c>(0, 0, 0, 1)</c>합니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the inverse of a quaternion.">쿼터니언의 역수를 반환합니다.</summary>
      <param name="value" vsli:raw="The quaternion.">쿼터니언입니다.</param>
      <returns vsli:raw="The inverted quaternion.">역 쿼터니언입니다.</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether the current instance is the identity quaternion.">현재 인스턴스가 ID 쿼터니언인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is the identity quaternion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스가 ID 쿼터니언이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary vsli:raw="Calculates the length of the quaternion.">쿼터니언 길이를 계산합니다.</summary>
      <returns vsli:raw="The computed length of the quaternion.">계산된 쿼터니언 길이입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary vsli:raw="Calculates the squared length of the quaternion.">쿼터니언 길이 제곱을 계산합니다.</summary>
      <returns vsli:raw="The length squared of the quaternion.">쿼터니언 길이 제곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.">두 번째 쿼터니언의 가중치를 지정하는 값에 따라 두 쿼터니언 사이의 선형 보간을 수행합니다.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <param name="amount" vsli:raw="The relative weight of &lt;paramref name=&quot;quaternion2&quot; /&gt; in the interpolation.">보간에서 <paramref name="quaternion2" />의 상대적 가중치입니다.</param>
      <returns vsli:raw="The interpolated quaternion.">보간된 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">두 쿼터니언을 곱한 결과로 생성되는 쿼터니언을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="The product quaternion.">쿼터니언 곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">지정된 쿼터니언의 모든 구성 요소를 스칼라 인수로 크기 조정하여 생성되는 쿼터니언을 반환합니다.</summary>
      <param name="value1" vsli:raw="The source quaternion.">원본 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled quaternion.">크기 조정된 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">쿼터니언의 각 구성 요소 부호를 반대로 바꿉니다.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">부정할 쿼터니언입니다.</param>
      <returns vsli:raw="The negated quaternion.">부정된 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary vsli:raw="Divides each component of a specified &lt;see cref=&quot;T:System.Numerics.Quaternion&quot; /&gt; by its length.">지정된 <see cref="T:System.Numerics.Quaternion" />의 각 구성 요소를 해당 길이로 나눕니다.</summary>
      <param name="value" vsli:raw="The quaternion to normalize.">정규화할 쿼터니언입니다.</param>
      <returns vsli:raw="The normalized quaternion.">정규화된 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">한 쿼터니언의 각 요소와 두 번째 쿼터니언의 해당 요소를 더합니다.</summary>
      <param name="value1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />를 합한 값을 포함하는 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">한 쿼터니언을 두 번째 쿼터니언으로 나눕니다.</summary>
      <param name="value1" vsli:raw="The dividend.">피제수입니다.</param>
      <param name="value2" vsli:raw="The divisor.">제수입니다.</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" />을 <paramref name="value2" />로 나눈 결과로 생성되는 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are equal.">두 쿼터니언이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">비교할 첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">비교할 두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 쿼터니언이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are not equal.">두 쿼터니언이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">비교할 첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">비교할 두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value1" />과 <paramref name="value2" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">두 쿼터니언을 곱한 결과로 생성되는 쿼터니언을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="The product quaternion.">쿼터니언 곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">지정된 쿼터니언의 모든 구성 요소를 스칼라 인수로 크기 조정하여 생성되는 쿼터니언을 반환합니다.</summary>
      <param name="value1" vsli:raw="The source quaternion.">원본 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled quaternion.">크기 조정된 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">두 번째 쿼터니언의 각 요소를 첫 번째 쿼터니언의 해당 요소에서 뺍니다.</summary>
      <param name="value1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" />의 각 요소를 <paramref name="value1" />의 해당 요소에서 뺀 결과로 생성되는 값을 포함하는 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">쿼터니언의 각 구성 요소 부호를 반대로 바꿉니다.</summary>
      <param name="value" vsli:raw="The quaternion to negate.">부정할 쿼터니언입니다.</param>
      <returns vsli:raw="The negated quaternion.">부정된 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Interpolates between two quaternions, using spherical linear interpolation.">구면 선형 보간을 사용하여 두 쿼터니언을 보간합니다.</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <param name="amount" vsli:raw="The relative weight of the second quaternion in the interpolation.">보간에서 두 번째 쿼터니언의 상대적 가중치입니다.</param>
      <returns vsli:raw="The interpolated quaternion.">보간된 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">두 번째 쿼터니언의 각 요소를 첫 번째 쿼터니언의 해당 요소에서 뺍니다.</summary>
      <param name="value1" vsli:raw="The first quaternion.">첫 번째 쿼터니언입니다.</param>
      <param name="value2" vsli:raw="The second quaternion.">두 번째 쿼터니언입니다.</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" />의 각 요소를 <paramref name="value1" />의 해당 요소에서 뺀 결과로 생성되는 값을 포함하는 쿼터니언입니다.</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary vsli:raw="Returns a string that represents this quaternion.">이 쿼터니언을 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="The string representation of this quaternion.">이 쿼터니언의 문자열 표현입니다.</returns>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary vsli:raw="The rotation component of the quaternion.">쿼터니언의 회전 구성 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary vsli:raw="The X value of the vector component of the quaternion.">쿼터니언 벡터 구성 요소의 X 값입니다.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary vsli:raw="The Y value of the vector component of the quaternion.">쿼터니언 벡터 구성 요소의 Y 값입니다.</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary vsli:raw="The Z value of the vector component of the quaternion.">쿼터니언 벡터 구성 요소의 Z 값입니다.</summary>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary vsli:raw="Provides a collection of static methods for creating, manipulating, and otherwise operating on generic vectors.">일반 벡터 만들기, 조작, 결합 및 변환을 위한 정적 편의 메서드 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the absolute values of the given vector's elements.">요소가 지정된 벡터 요소의 절대 값인 새 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The absolute value vector.">절대 값 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the sum of each pair of elements from two given vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 합계인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.">두 벡터의 해당하는 각 요소 쌍에서 비트 And Not 연산을 수행하여 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.">지정된 벡터의 비트를 부호 없는 바이트 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.">지정된 벡터의 비트를 배정밀도 부동 소수점 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.">지정된 벡터의 비트를 16비트 정수 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of integers.">지정된 벡터의 비트를 정수 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of long integers.">지정된 벡터의 비트를 정수(Long) 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of signed bytes.">지정된 벡터의 비트를 부호 있는 바이트 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.">지정된 벡터의 비트를 단정밀도 부동 소수점 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.">지정된 벡터의 비트를 부호 없는 16비트 정수 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned integers.">지정된 벡터의 비트를 부호 없는 정수 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.">지정된 벡터의 비트를 부호 없는 정수(Long) 벡터의 비트로 재해석합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each pair of elements in two vectors.">두 벡터의 각 요소 쌍에서 비트 <see langword="And" /> 연산을 수행하여 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each pair of elements in two vectors.">두 벡터의 각 요소 쌍에서 비트 <see langword="Or" /> 연산을 수행하여 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.">정수 마스크 벡터를 기반으로 지정된 두 단정밀도 원본 벡터 사이에서 선택된 요소로 새 단정밀도 벡터를 만듭니다.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">선택을 실행하는 데 사용되는 정수 마스크 벡터입니다.</param>
      <param name="left" vsli:raw="The first source vector.">첫 번째 원본 벡터입니다.</param>
      <param name="right" vsli:raw="The second source vector.">두 번째 원본 벡터입니다.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">마스크를 기반으로 선택된 요소가 있는 새 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.">정수 마스크 벡터를 기반으로 지정된 두 배정밀도 원본 벡터 사이에서 선택된 요소로 새 배정밀도 벡터를 만듭니다.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">선택을 실행하는 데 사용되는 정수 마스크 벡터입니다.</param>
      <param name="left" vsli:raw="The first source vector.">첫 번째 원본 벡터입니다.</param>
      <param name="right" vsli:raw="The second source vector.">두 번째 원본 벡터입니다.</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">마스크를 기반으로 선택된 요소가 있는 새 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.">정수 마스크 벡터를 기반으로 지정된 같은 형식의 두 원본 벡터 사이에서 선택된 요소로 지정된 형식의 새 벡터를 만듭니다.</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">선택을 실행하는 데 사용되는 정수 마스크 벡터입니다.</param>
      <param name="left" vsli:raw="The first source vector.">첫 번째 원본 벡터입니다.</param>
      <param name="right" vsli:raw="The second source vector.">두 번째 원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The new vector with elements selected based on the mask.">마스크를 기반으로 선택된 요소가 있는 새 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.Int64}" /> 를 <see cref="System.Numerics.Vector{System.Double}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.UInt64}" /> 를 <see cref="System.Numerics.Vector{System.Double}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.Single}" /> 를 <see cref="System.Numerics.Vector{System.Int32}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.Double}" /> 를 <see cref="System.Numerics.Vector{System.Int64}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.Int32}" /> 를 <see cref="System.Numerics.Vector{System.Single}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.UInt32}" /> 를 <see cref="System.Numerics.Vector{System.Single}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.Single}" /> 를 <see cref="System.Numerics.Vector{System.UInt32}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt;.">
        <see cref="System.Numerics.Vector{System.Double}" /> 를 <see cref="System.Numerics.Vector{System.UInt64}" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The converted vector.">변환된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.">값이 첫 번째 벡터의 요소를 두 번째 벡터의 해당 요소로 나눈 결과인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The divided vector.">나누어진 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns the dot product of two vectors.">두 벡터의 내적을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.">지정된 두 배정밀도 벡터의 요소가 같은지 여부를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.">지정된 두 정수 벡터의 요소가 같은지 여부를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.">지정된 두 정수(long) 벡터의 요소가 같은지 여부를 신호로 알리는 요소가 포함된 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting long integer vector.">결과 정수(long) 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.">지정된 두 단정밀도 벡터의 요소가 같은지 여부를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.">같은 형식의 지정된 두 벡터에 있는 요소가 같은지 여부를 신호로 알리는 요소가 포함된 지정된 형식의 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in the given vectors is equal.">지정된 벡터의 각 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" />의 모든 요소가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the given vectors is equal.">지정된 벡터의 단일 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pair in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" />의 임의 요소 쌍이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.">한 배정밀도 부동 소수점 벡터의 요소가 두 번째 배정밀도 부동 소수점 벡터의 해당 요소보다 큰지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.">한 정수 벡터의 요소가 두 번째 정수 벡터의 해당 요소보다 큰지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.">한 정수(long) 벡터의 요소가 두 번째 정수(long) 벡터의 해당 요소보다 큰지를 신호로 알리는 요소가 포함된 새 정수(long) 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting long integer vector.">결과 정수(long) 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.">한 단정밀도 부동 소수점 벡터의 요소가 두 번째 단정밀도 부동 소수점 벡터의 해당 요소보다 큰지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.">지정된 형식의 한 벡터에 있는 요소가 같은 형식의 두 번째 벡터에 있는 해당 요소보다 큰지를 신호로 알리는 요소가 포함된 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.">첫 번째 벡터의 모든 요소가 두 번째 벡터의 해당 요소보다 큰지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 모든 요소가 <paramref name="right" />의 해당 요소보다 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.">첫 번째 벡터의 임의 요소가 두 번째 벡터의 해당 요소보다 큰지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 임의 요소가 <paramref name="right" />의 해당 요소보다 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.">한 벡터의 요소가 두 번째 배정밀도 부동 소수점 벡터의 해당 요소보가 크거나 같은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.">한 정수 벡터의 요소가 두 번째 정수 벡터의 해당 요소보다 크거나 같은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.">한 정수(long) 벡터의 요소가 두 번째 정수(long) 벡터의 해당 요소보다 크거나 같은지를 신호로 알리는 요소가 포함된 새 정수(long) 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting long integer vector.">결과 정수(long) 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.">한 벡터의 요소가 두 번째 단정밀도 부동 소수점 벡터의 해당 요소보다 크거나 같은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.">지정된 형식의 한 벡터에 있는 요소가 같은 형식의 두 번째 벡터에 있는 해당 요소보다 크거나 같은지를 신호로 알리는 요소가 포함된 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.">첫 번째 벡터의 모든 요소가 두 번째 벡터의 모든 해당 요소보다 크거나 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 모든 요소가 <paramref name="right" />의 해당 요소보다 크거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.">첫 번째 벡터의 임의 요소가 두 번째 벡터의 해당 요소보다 크거나 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 임의 요소가 <paramref name="right" />의 해당 요소보다 크거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary vsli:raw="Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.">JIT 내장 지원을 통해 벡터 연산에 하드웨어 가속이 적용되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if vector operations are subject to hardware acceleration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">벡터 작업에 하드웨어 가속이 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.">한 배정밀도 부동 소수점 벡터의 요소가 두 번째 배정밀도 부동 소수점 벡터의 해당 요소보다 작은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.">한 정수 벡터의 요소가 두 번째 정수 벡터의 해당 요소보다 작은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.">한 정수(long) 벡터의 요소가 두 번째 정수(long) 벡터의 해당 요소보다 작은지를 신호로 알리는 요소가 포함된 새 정수(long) 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting long integer vector.">결과 정수(long) 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.">한 단정밀도 벡터의 요소가 두 번째 단정밀도 벡터의 해당 요소보다 작은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.">한 벡터의 요소가 두 번째 벡터의 해당 요소보다 작은지를 신호로 알리는 요소가 포함된 지정된 형식의 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.">첫 번째 벡터의 모든 요소가 두 번째 벡터의 해당 요소보다 작은지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 모든 요소가 <paramref name="right" />의 해당 요소보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.">첫 번째 벡터의 임의 요소가 두 번째 벡터의 해당 요소보다 작은지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 임의 요소가 <paramref name="right" />의 해당 요소보다 작으면  <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.">한 배정밀도 부동 소수점 벡터의 요소가 두 번째 배정밀도 부동 소수점 벡터의 해당 요소보다 작거나 같은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.">한 정수 벡터의 요소가 두 번째 정수 벡터의 해당 요소보다 작거나 같은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.">한 정수(long) 벡터의 요소가 두 번째 정수(long) 벡터의 해당 요소보다 작거나 같은지를 신호로 알리는 요소가 포함된 새 정수(long) 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting long integer vector.">결과 정수(long) 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.">한 단정밀도 부동 소수점 벡터의 요소가 두 번째 단정밀도 부동 소수점 벡터의 해당 요소보다 작거나 같은지를 신호로 알리는 요소가 포함된 새 정수 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The resulting integral vector.">결과 정수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.">한 벡터의 요소가 두 번째 벡터의 해당 요소보다 작거나 같은지를 신호로 알리는 요소가 포함된 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.">첫 번째 벡터의 모든 요소가 두 번째 벡터의 해당 요소보다 작거나 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 모든 요소가 <paramref name="right" />의 해당 요소보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.">첫 번째 벡터의 임의 요소가 두 번째 벡터의 해당 요소보다 작거나 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />의 임의 요소가 <paramref name="right" />의 해당 요소보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.">요소가 지정된 두 벡터에 있는 각 요소 쌍의 최대값인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The maximum vector.">최대 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.">요소가 지정된 두 벡터에 있는 각 요소 쌍의 최소값인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The minimum vector.">최소 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.">값이 스칼라 값에 지정된 벡터의 각 값을 곱한 결과인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <param name="right" vsli:raw="The vector.">벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary vsli:raw="Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.">값이 지정된 벡터의 값에 각각 스칼라 값을 곱한 결과인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">두 <see cref="System.Numerics.Vector{System.Double}" /> 인스턴스를 한 <see cref="System.Numerics.Vector{System.Single}" />로 축소합니다.</summary>
      <param name="source1">요소가 반환 값의 하위 인덱스 요소가 되는 첫 번째 소스 벡터입니다.</param>
      <param name="source2">요소가 반환 값의 상위 인덱스 요소가 되는 두 번째 소스 벡터입니다.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">소스 벡터에서 축소된 요소를 포함하는 <see cref="System.Numerics.Vector{System.Single}" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt;.">두 <see cref="System.Numerics.Vector{System.Int16}" /> 인스턴스를 한 <see cref="System.Numerics.Vector{System.SByte}" />로 축소합니다.</summary>
      <param name="source1">요소가 반환 값의 하위 인덱스 요소가 되는 첫 번째 소스 벡터입니다.</param>
      <param name="source2">요소가 반환 값의 상위 인덱스 요소가 되는 두 번째 소스 벡터입니다.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">소스 벡터에서 축소된 요소를 포함하는 <see cref="System.Numerics.Vector{System.SByte}" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt;.">두 <see cref="System.Numerics.Vector{System.Int32}" /> 인스턴스를 한 <see cref="System.Numerics.Vector{System.Int16}" />로 축소합니다.</summary>
      <param name="source1">요소가 반환 값의 하위 인덱스 요소가 되는 첫 번째 소스 벡터입니다.</param>
      <param name="source2">요소가 반환 값의 상위 인덱스 요소가 되는 두 번째 소스 벡터입니다.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">소스 벡터에서 축소된 요소를 포함하는 <see cref="System.Numerics.Vector{System.Int16}" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">두 <see cref="System.Numerics.Vector{System.Int64}" /> 인스턴스를 한 <see cref="System.Numerics.Vector{System.Int32}" />로 축소합니다.</summary>
      <param name="source1">요소가 반환 값의 하위 인덱스 요소가 되는 첫 번째 소스 벡터입니다.</param>
      <param name="source2">요소가 반환 값의 상위 인덱스 요소가 되는 두 번째 소스 벡터입니다.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">소스 벡터에서 축소된 요소를 포함하는 <see cref="System.Numerics.Vector{System.Int32}" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt;.">두 <see cref="System.Numerics.Vector{System.UInt16}" /> 인스턴스를 한 <see cref="System.Numerics.Vector{System.Byte}" />로 축소합니다.</summary>
      <param name="source1">요소가 반환 값의 하위 인덱스 요소가 되는 첫 번째 소스 벡터입니다.</param>
      <param name="source2">요소가 반환 값의 상위 인덱스 요소가 되는 두 번째 소스 벡터입니다.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">소스 벡터에서 축소된 요소를 포함하는 <see cref="System.Numerics.Vector{System.Byte}" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt;.">두 <see cref="System.Numerics.Vector{System.UInt32}" /> 인스턴스를 한 <see cref="System.Numerics.Vector{System.UInt16}" />로 축소합니다.</summary>
      <param name="source1">요소가 반환 값의 하위 인덱스 요소가 되는 첫 번째 소스 벡터입니다.</param>
      <param name="source2">요소가 반환 값의 상위 인덱스 요소가 되는 두 번째 소스 벡터입니다.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">소스 벡터에서 축소된 요소를 포함하는 <see cref="System.Numerics.Vector{System.UInt16}" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">두 <see cref="System.Numerics.Vector{System.UInt64}" /> 인스턴스를 한 <see cref="System.Numerics.Vector{System.UInt32}" />로 축소합니다.</summary>
      <param name="source1">요소가 반환 값의 하위 인덱스 요소가 되는 첫 번째 소스 벡터입니다.</param>
      <param name="source2">요소가 반환 값의 상위 인덱스 요소가 되는 두 번째 소스 벡터입니다.</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">소스 벡터에서 축소된 요소를 포함하는 <see cref="System.Numerics.Vector{System.UInt32}" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the negation of the corresponding element in the specified vector.">지정된 벡터에 있는 해당 요소의 부정인 요소가 포함된 새 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">지정된 벡터 요소에서 1의 보수를 가져와서 구한 요소가 포함된 새 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the square roots of a specified vector's elements.">요소가 지정된 벡터 요소의 제곱근인 새 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The square root vector.">제곱근 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.">값이 두 번째 벡터의 요소와 첫 번째 벡터에 있는 해당 요소 간의 차인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The difference vector.">차이 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances.">
        <see cref="System.Numerics.Vector{System.Byte}" />를 두 <see cref="System.Numerics.Vector{System.UInt16}" /> 인스턴스로 확장합니다.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">요소가 출력으로 확장되는 소스 벡터입니다.</param>
      <param name="dest1">요소가 소스 벡터의 하위 인덱스에서 확장된 요소를 포함하는 첫 번째 출력 벡터입니다.</param>
      <param name="dest2">요소가 소스 벡터의 상위 인덱스에서 확장된 요소를 포함하는 두 번째 출력 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances.">
        <see cref="System.Numerics.Vector{System.Int16}" />를 두 <see cref="System.Numerics.Vector{System.Int32}" /> 인스턴스로 확장합니다.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">요소가 출력으로 확장되는 소스 벡터입니다.</param>
      <param name="dest1">요소가 소스 벡터의 하위 인덱스에서 확장된 요소를 포함하는 첫 번째 출력 벡터입니다.</param>
      <param name="dest2">요소가 소스 벡터의 상위 인덱스에서 확장된 요소를 포함하는 두 번째 출력 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances.">
        <see cref="System.Numerics.Vector{System.Int32}" />를 두 <see cref="System.Numerics.Vector{System.Int64}" /> 인스턴스로 확장합니다.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">요소가 출력으로 확장되는 소스 벡터입니다.</param>
      <param name="dest1">요소가 소스 벡터의 하위 인덱스에서 확장된 요소를 포함하는 첫 번째 출력 벡터입니다.</param>
      <param name="dest2">요소가 소스 벡터의 상위 인덱스에서 확장된 요소를 포함하는 두 번째 출력 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances.">
        <see cref="System.Numerics.Vector{System.SByte}" />를 두 <see cref="System.Numerics.Vector{System.Int16}" /> 인스턴스로 확장합니다.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">요소가 출력으로 확장되는 소스 벡터입니다.</param>
      <param name="dest1">요소가 소스 벡터의 하위 인덱스에서 확장된 요소를 포함하는 첫 번째 출력 벡터입니다.</param>
      <param name="dest2">요소가 소스 벡터의 상위 인덱스에서 확장된 요소를 포함하는 두 번째 출력 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances.">
        <see cref="System.Numerics.Vector{System.Single}" />를 두 <see cref="System.Numerics.Vector{System.Double}" /> 인스턴스로 확장합니다.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">요소가 출력으로 확장되는 소스 벡터입니다.</param>
      <param name="dest1">요소가 소스 벡터의 하위 인덱스에서 확장된 요소를 포함하는 첫 번째 출력 벡터입니다.</param>
      <param name="dest2">요소가 소스 벡터의 상위 인덱스에서 확장된 요소를 포함하는 두 번째 출력 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances.">
        <see cref="System.Numerics.Vector{System.UInt16}" />를 두 <see cref="System.Numerics.Vector{System.UInt32}" /> 인스턴스로 확장합니다.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">요소가 출력으로 확장되는 소스 벡터입니다.</param>
      <param name="dest1">요소가 소스 벡터의 하위 인덱스에서 확장된 요소를 포함하는 첫 번째 출력 벡터입니다.</param>
      <param name="dest2">요소가 소스 벡터의 상위 인덱스에서 확장된 요소를 포함하는 두 번째 출력 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances.">
        <see cref="System.Numerics.Vector{System.UInt32}" />를 두 <see cref="System.Numerics.Vector{System.UInt64}" /> 인스턴스로 확장합니다.</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">요소가 출력으로 확장되는 소스 벡터입니다.</param>
      <param name="dest1">요소가 소스 벡터의 하위 인덱스에서 확장된 요소를 포함하는 첫 번째 출력 벡터입니다.</param>
      <param name="dest2">요소가 소스 벡터의 상위 인덱스에서 확장된 요소를 포함하는 두 번째 출력 벡터입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise exclusive Or (&lt;see langword=&quot;XOr&quot; /&gt;) operation on each pair of elements in two vectors.">두 벡터의 각 요소 쌍에서 배타적 비트 Or(<see langword="XOr" />) 연산을 수행하여 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
      <returns vsli:raw="The resulting vector.">결과 벡터입니다.</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary vsli:raw="Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.">병렬 알고리즘의 낮은 수준 최적화에 적합한 지정된 숫자 형식의 단일 벡터를 나타냅니다.</summary>
      <typeparam name="T" vsli:raw="The type of the elements in the vector. &lt;typeparamref name=&quot;T&quot; /&gt; can be any primitive numeric type.">벡터 형식입니다. <c>T</c>는 기본 숫자 형식일 수 있습니다.</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary vsli:raw="Creates a vector whose components are of a specified type.">구성 요소가 지정된 형식인 벡터를 만듭니다.</summary>
      <param name="value" vsli:raw="The numeric type that defines the type of the components in the vector.">벡터에서 구성 요소의 형식을 정의하는 숫자 형식입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary vsli:raw="Creates a vector from a specified array.">지정된 배열에서 벡터를 만듭니다.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">숫자 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary vsli:raw="Creates a vector from a specified array starting at a specified index position.">지정된 인덱스 위치에서 시작하는 지정된 배열에서 벡터를 만듭니다.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements from the specified index and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">숫자 배열입니다.</param>
      <param name="index" vsli:raw="The starting index position from which to create the vector.">벡터를 만들려는 시작 인덱스 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of &lt;paramref name=&quot;values&quot; /&gt; minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
<paramref name="values" />에서 <paramref name="index" />를 뺀 길이가 <see cref="P:System.Numerics.Vector`1.Count" />보다 작은 경우</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.ReadOnlySpan`1&quot; /&gt;.">지정된 <see cref="T:System.ReadOnlySpan`1" />에서 벡터를 구성합니다.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a read-only span of objects of type &lt;see langword=&quot;T&quot; /&gt;. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">T 형식의 읽기 전용 개체 범위로 벡터에 추가할 값입니다. 범위는 적어도 <see cref="P:System.Numerics.Vector`1.Count" /> 요소를 포함해야 합니다.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Constructs a vector from the given read-only span of bytes.">지정된 읽기 전용 바이트 범위에서 벡터를 구성합니다.</summary>
      <param name="values" vsli:raw="A read-only span of bytes that contains the values to add to the vector. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">벡터에 추가할 값을 포함하는 읽기 전용 바이트 범위입니다. 범위는 적어도 <see cref="P:System.Numerics.Vector`1.Count" /> 요소를 포함해야 합니다.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">지정된 <see cref="T:System.Span`1" />에서 벡터를 구성합니다.</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a span of objects of type T. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">T 형식의 개체 범위로 벡터에 추가할 값입니다. 범위는 적어도 <see cref="P:System.Numerics.Vector`1.Count" /> 요소를 포함해야 합니다.</param>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the vector instance to a specified destination array.">지정된 대상 배열에 벡터 인스턴스를 복사합니다.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">벡터 값의 복사본을 받을 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current vector is greater than the number of elements available in the &lt;paramref name=&quot;destination&quot; /&gt; array.">현재 벡터에 있는 요소의 개수가 <paramref name="destination" /> 배열에서 사용할 수 있는 요소의 개수보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the vector instance to a specified destination array starting at a specified index position.">지정된 인덱스 위치에서 시작하는 지정된 대상 배열에 벡터 인스턴스를 복사합니다.</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">벡터 값의 복사본을 받을 배열입니다.</param>
      <param name="startIndex" vsli:raw="The starting index in &lt;paramref name=&quot;destination&quot; /&gt; at which to begin the copy operation.">복사 작업을 시작할 <paramref name="destination" />의 시작 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than the number of elements available from &lt;paramref name=&quot;startIndex&quot; /&gt; to the end of the &lt;paramref name=&quot;destination&quot; /&gt; array.">현재 인스턴스에 있는 요소의 개수가 <paramref name="startIndex" />부터 <paramref name="destination" /> 배열 끝까지 사용할 수 있는 요소의 개수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero or greater than the last index in &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="index" />가 0보다 작거나 <paramref name="destination" />의 마지막 인덱스보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary vsli:raw="Copies the vector to the given span. .">벡터를 지정된 범위에 복사합니다. .</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">값이 복사되는 대상 범위입니다. 대상 범위는 적어도 <see cref="P:System.Numerics.Vector`1.Count" /> 크기여야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">소스 벡터의 요소 수가 대상 범위에서 사용할 수 있는 요소 수보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">벡터를 지정된 <see cref="T:System.Span`1" />에 복사합니다.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">값이 복사되는 대상 범위입니다. 대상 범위는 적어도 <see cref="P:System.Numerics.Vector`1.Count" /> 크기여야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">소스 벡터의 요소 수가 대상 범위에서 사용할 수 있는 요소 수보다 큽니다.</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary vsli:raw="Returns the number of elements stored in the vector.">벡터에 저장된 요소의 수를 반환합니다.</summary>
      <returns vsli:raw="The number of elements stored in the vector.">벡터에 저장된 요소의 수입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Access to the property getter via reflection is not supported.&#xA;        &#xA;-or-&#xA;        &#xA;.NET 5 and later: Type &lt;see langword=&quot;T&quot; /&gt; is not supported.">리플렉션을 통한 속성 getter에 대한 액세스는 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified vector.">이 인스턴스가 지정된 벡터와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The vector to compare with this instance.">이 인스턴스와 비교할 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;other&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="other" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">이 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is null, or if &lt;paramref name=&quot;obj&quot; /&gt; is a vector of a different type than the current instance.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 메서드는 <paramref name="obj" />가 null이거나 <paramref name="obj" />가 현재 인스턴스와 다른 형식의 벡터이면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary vsli:raw="Gets the element at a specified index.">지정된 인덱스에 있는 요소를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the element to return.">반환할 요소의 인덱스입니다.</param>
      <returns vsli:raw="The element at index &lt;paramref name=&quot;index&quot; /&gt;.">인덱스 <paramref name="index" />의 요소입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
 <paramref name="index" />가 <see cref="P:System.Numerics.Vector`1.Count" />보다 크거나 같은 경우</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary vsli:raw="Returns a vector containing all ones.">1을 모두 포함하는 벡터를 반환합니다.</summary>
      <returns vsli:raw="A vector containing all ones.">1을 모두 포함하는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Adds two vectors together.">두 벡터를 더합니다.</summary>
      <param name="left" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each of the elements in two vectors.">두 벡터의 각 요소에서 비트 <see langword="And" /> 연산을 수행하여 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;And&quot; /&gt; of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" />의 비트 <see langword="And" /> 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each of the elements in two vectors.">두 벡터의 각 요소에서 비트 <see langword="Or" /> 연산을 수행하여 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;Or&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" />에 있는 요소의 비트 <see langword="Or" /> 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Divides the first vector by the second.">첫 번째 벡터를 두 번째 벡터로 나눕니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />를 <paramref name="right" />로 나눈 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors are equal.">지정된 두 벡터의 각 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;XOr&quot; /&gt; operation on each of the elements in two vectors.">두 벡터의 각 요소에서 비트 <see langword="XOr" /> 연산을 수행하여 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;XOr&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" />에 있는 요소의 비트 <see langword="XOr" /> 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.Byte" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Double&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.Double" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.Int16" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.Int32" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.Int64" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.SByte" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.Single" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.UInt16" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.UInt32" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">지정된 벡터의 비트를 <see cref="T:System.UInt64" /> 형식의 벡터로 재해석합니다.</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">재해석할 벡터입니다.</param>
      <returns vsli:raw="The reinterpreted vector.">재해석된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the specified vectors is equal.">지정된 벡터의 단일 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pairs in left and right are equal. &lt;see langword=&quot;false&quot; /&gt; if no element pairs are equal.">왼쪽과 오른쪽의 임의 요소 쌍이 같으면 <see langword="true" />입니다. 같은 요소 쌍이 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">벡터와 지정된 스칼라 값을 곱합니다.</summary>
      <param name="factor" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">벡터와 지정된 스칼라 값을 곱합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <param name="factor" vsli:raw="A scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">지정된 벡터 요소에서 1의 보수를 가져와서 구한 요소가 포함된 새 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <returns vsli:raw="The one's complement vector.">1의 보수 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Subtracts the second vector from the first.">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary vsli:raw="Negates a given vector.">지정된 벡터를 부정합니다.</summary>
      <param name="value" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary vsli:raw="Returns the string representation of this vector using default formatting.">기본 형식을 사용하여 이 벡터의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="The string representation of this vector.">이 벡터의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements.">지정된 형식 문자열로 개별 요소의 형식을 지정하여 이 벡터의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="The format of individual elements.">개별 요소의 형식을 지정하는 {0} 또는 {0}입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">지정된 형식 문자열로 개별 요소의 형식을 지정하고 지정된 형식 공급자로 문화권별 형식 지정을 정의하여 이 벡터의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="The format of individual elements.">개별 요소의 형식을 지정하는 {0} 또는 {0}입니다.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">문화권별 형식 지정 정보를 제공하는 형식 공급자입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary vsli:raw="Attempts to copy the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">벡터를 지정된 <see cref="T:System.Span`1" />에 복사하려고 시도합니다.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">값이 복사되는 대상 범위입니다. 대상 범위는 적어도 <see cref="P:System.Numerics.Vector`1.Count" /> 크기여야 합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">소스 벡터가 성공적으로 <paramref name="destination" />에 복사된 경우 <see langword="true" />입니다. <paramref name="destination" />이 소스 벡터를 보유할 만큼 크지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Attempts to copy the vector to the given byte span.">벡터를 지정된 바이트 범위에 복사하려고 시도합니다.</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">값이 복사되는 대상 범위입니다. 대상 범위는 적어도 <see cref="P:System.Numerics.Vector`1.Count" /> 크기여야 합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">소스 벡터가 성공적으로 <paramref name="destination" />에 복사된 경우 <see langword="true" />입니다. <paramref name="destination" />이 소스 벡터를 보유할 만큼 크지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary vsli:raw="Returns a vector containing all zeroes.">0을 모두 포함하는 벡터를 반환합니다.</summary>
      <returns vsli:raw="A vector containing all zeroes.">0을 모두 포함하는 벡터입니다.</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary vsli:raw="Represents a vector with two single-precision floating-point values.">두 개의 단정밀도 부동 소수점 값을 사용하여 벡터를 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object whose two elements have the same value.">두 개의 요소가 동일한 값을 가진 새 <see cref="T:System.Numerics.Vector2" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="The value to assign to both elements.">두 요소에 모두 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">해당 요소가 지정된 값을 가진 벡터를 만듭니다.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.X&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector2.X" /> 필드에 할당할 값입니다.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.Y&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector2.Y" /> 필드에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">해당 요소가 지정된 각 벡터 요소의 절대 값인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="A vector.">벡터입니다.</param>
      <returns vsli:raw="The absolute value vector.">절대 값 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">두 벡터를 더합니다.</summary>
      <param name="left" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">최소값과 최대값 사이로 벡터를 제한합니다.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">제한할 벡터입니다.</param>
      <param name="min" vsli:raw="The minimum value.">최소값입니다.</param>
      <param name="max" vsli:raw="The maximum value.">최대값입니다.</param>
      <returns vsli:raw="The restricted vector.">제한된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">벡터의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The destination array.">대상 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">현재 인스턴스에 있는 요소의 개수가 배열에 있는 개수보다 큽니다.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" />가 다차원 배열인 경우</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">지정한 인덱스 위치부터 벡터의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The destination array.">대상 배열입니다.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">벡터의 첫 번째 요소를 복사할 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">현재 인스턴스에 있는 요소의 개수가 배열에 있는 개수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
 <paramref name="index" />가 배열 길이보다 크거나 같은 경우</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" />가 다차원 배열인 경우</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">지정된 두 점 사이의 유클리드 거리를 계산합니다.</summary>
      <param name="value1" vsli:raw="The first point.">첫 번째 점입니다.</param>
      <param name="value2" vsli:raw="The second point.">두 번째 점입니다.</param>
      <returns vsli:raw="The distance.">거리입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">지정된 두 점 사이의 유클리드 거리 제곱을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first point.">첫 번째 점입니다.</param>
      <param name="value2" vsli:raw="The second point.">두 번째 점입니다.</param>
      <returns vsli:raw="The distance squared.">거리 제곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">첫 번째 벡터를 두 번째 벡터로 나눕니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector resulting from the division.">나누기 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">지정된 벡터를 지정된 스칼라 값으로 나눕니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="divisor" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The vector that results from the division.">나누기 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the dot product of two vectors.">두 벡터의 내적을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">이 인스턴스와 다른 벡터가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The other vector.">다른 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 벡터가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">이 인스턴스와 지정된 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="obj" />가 <see langword="null" />이면 메서드에서 <see langword="false" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary vsli:raw="Returns the length of the vector.">벡터의 길이를 반환합니다.</summary>
      <returns vsli:raw="The vector's length.">벡터 길이입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">벡터 길이 제곱을 반환합니다.</summary>
      <returns vsli:raw="The vector's length squared.">벡터 길이 제곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">지정된 가중치에 따라 두 벡터 사이의 선형 보간을 수행합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value2" />의 가중치를 나타내는 0과 1 사이의 값입니다.</param>
      <returns vsli:raw="The interpolated vector.">보간된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">해당 요소가 지정된 두 벡터에 있는 각 요소 쌍의 최대값인 벡터를 반환합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The maximized vector.">최대화된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">해당 요소가 지정된 두 벡터에 있는 각 요소 쌍의 최소값인 벡터를 반환합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The minimized vector.">최소화된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">벡터와 지정된 스칼라를 곱합니다.</summary>
      <param name="left" vsli:raw="The vector to multiply.">곱할 벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">스칼라 값과 지정된 벡터를 곱합니다.</summary>
      <param name="left" vsli:raw="The scaled value.">크기 조정된 값입니다.</param>
      <param name="right" vsli:raw="The vector.">벡터입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary vsli:raw="Negates a specified vector.">지정된 벡터를 부정합니다.</summary>
      <param name="value" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">지정된 벡터와 방향은 같지만 길이가 1인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="The vector to normalize.">정규화할 벡터입니다.</param>
      <returns vsli:raw="The normalized vector.">정규화된 벡터입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary vsli:raw="Gets a vector whose 2 elements are equal to one.">두 개의 요소가 1과 같은 벡터를 가져옵니다.</summary>
      <returns vsli:raw="A vector whose two elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1)&lt;/c&gt;).">두 개의 요소가 들어 있는 하 나와 동일한 벡터 (즉, 벡터를 반환 <c>(1, 1)</c>합니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">두 벡터를 더합니다.</summary>
      <param name="left" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">첫 번째 벡터를 두 번째 벡터로 나눕니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />를 <paramref name="right" />로 나눈 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">지정된 벡터를 지정된 스칼라 값으로 나눕니다.</summary>
      <param name="value1" vsli:raw="The vector.">벡터입니다.</param>
      <param name="value2" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The result of the division.">나누기 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">지정된 두 벡터의 각 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">지정된 두 벡터가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">지정된 벡터와 지정된 스칼라 값을 곱합니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">스칼라 값과 지정된 벡터를 곱합니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary vsli:raw="Negates the specified vector.">지정된 벡터를 부정합니다.</summary>
      <param name="value" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">지정된 법선이 있는 표면에서의 벡터 반사를 반환합니다.</summary>
      <param name="vector" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">반사되는 표면의 법선입니다.</param>
      <returns vsli:raw="The reflected vector.">반사된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">해당 요소가 지정된 각 벡터 요소의 제곱근인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="A vector.">벡터입니다.</param>
      <returns vsli:raw="The square root vector.">제곱근 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The difference vector.">차이 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">기본 형식을 사용하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">지정된 형식 문자열로 개별 요소의 형식을 지정하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">개별 요소의 형식을 정의하는 표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">지정된 형식 문자열로 개별 요소의 형식을 지정하고 지정된 형식 공급자로 문화권별 형식 지정을 정의하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">개별 요소의 형식을 정의하는 표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">문화권별 형식 지정 정보를 제공하는 형식 공급자입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector by a specified 3x2 matrix.">지정된 3x2 행렬로 벡터를 변환합니다.</summary>
      <param name="position" vsli:raw="The vector to transform.">변환할 벡터입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변환 행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">지정된 4x4 행렬로 벡터를 변형합니다.</summary>
      <param name="position" vsli:raw="The vector to transform.">변환할 벡터입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변환 행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">지정된 쿼터니언 회전 값으로 벡터를 변환합니다.</summary>
      <param name="value" vsli:raw="The vector to rotate.">회전할 벡터입니다.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">적용할 회전입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector normal by the given 3x2 matrix.">지정된 3x2 행렬로 벡터 법선을 변형합니다.</summary>
      <param name="normal" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <param name="matrix" vsli:raw="The matrix.">행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">지정된 4x4 행렬로 벡터 법선을 변형합니다.</summary>
      <param name="normal" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <param name="matrix" vsli:raw="The matrix.">행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary vsli:raw="Gets the vector (1,0).">벡터 (1,0)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0)&lt;/c&gt;.">벡터 <c>(1, 0)</c>합니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary vsli:raw="Gets the vector (0,1).">벡터 (0,1)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1)&lt;/c&gt;.">벡터 <c>(0, 1)</c>합니다.</returns>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary vsli:raw="The X component of the vector.">벡터의 X 구성 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary vsli:raw="The Y component of the vector.">벡터의 Y 구성 요소입니다.</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary vsli:raw="Returns a vector whose 2 elements are equal to zero.">두 개의 요소가 0과 같은 벡터를 반환합니다.</summary>
      <returns vsli:raw="A vector whose two elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0)&lt;/c&gt;).">두 개의 요소가 0과 같은 벡터 (즉, 벡터를 반환 <c>(0, 0)</c>합니다.</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary vsli:raw="Represents a vector with three  single-precision floating-point values.">세 개의 단정밀도 부동 소수점 값을 사용하여 벡터를 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and the specified value.">지정된 <see cref="T:System.Numerics.Vector2" /> 개체와 지정된 값에서 새 <see cref="T:System.Numerics.Vector3" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="The vector with two elements.">두 개의 요소가 있는 벡터입니다.</param>
      <param name="z" vsli:raw="The additional value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.Z" /> 필드에 할당할 추가 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object whose three elements have the same value.">세 개의 요소가 동일한 값을 가진 새 <see cref="T:System.Numerics.Vector3" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="The value to assign to all three elements.">세 개의 요소에 모두 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">해당 요소가 지정된 값을 가진 벡터를 만듭니다.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.X&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.X" /> 필드에 할당할 값입니다.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Y&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.Y" /> 필드에 할당할 값입니다.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.Z" /> 필드에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">해당 요소가 지정된 각 벡터 요소의 절대 값인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="A vector.">벡터입니다.</param>
      <returns vsli:raw="The absolute value vector.">절대 값 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">두 벡터를 더합니다.</summary>
      <param name="left" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">최소값과 최대값 사이로 벡터를 제한합니다.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">제한할 벡터입니다.</param>
      <param name="min" vsli:raw="The minimum value.">최소값입니다.</param>
      <param name="max" vsli:raw="The maximum value.">최대값입니다.</param>
      <returns vsli:raw="The restricted vector.">제한된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">벡터의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The destination array.">대상 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">현재 인스턴스에 있는 요소의 개수가 배열에 있는 개수보다 큽니다.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" />가 다차원 배열인 경우</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">지정한 인덱스 위치부터 벡터의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The destination array.">대상 배열입니다.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">벡터의 첫 번째 요소를 복사할 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">현재 인스턴스에 있는 요소의 개수가 배열에 있는 개수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
 <paramref name="index" />가 배열 길이보다 크거나 같은 경우</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" />가 다차원 배열인 경우</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the cross product of two vectors.">두 벡터의 외적을 계산합니다.</summary>
      <param name="vector1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The cross product.">외적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">지정된 두 점 사이의 유클리드 거리를 계산합니다.</summary>
      <param name="value1" vsli:raw="The first point.">첫 번째 점입니다.</param>
      <param name="value2" vsli:raw="The second point.">두 번째 점입니다.</param>
      <returns vsli:raw="The distance.">거리입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">지정된 두 점 사이의 유클리드 거리 제곱을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first point.">첫 번째 점입니다.</param>
      <param name="value2" vsli:raw="The second point.">두 번째 점입니다.</param>
      <returns vsli:raw="The distance squared.">거리 제곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">첫 번째 벡터를 두 번째 벡터로 나눕니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector resulting from the division.">나누기 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">지정된 벡터를 지정된 스칼라 값으로 나눕니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="divisor" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The vector that results from the division.">나누기 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of two vectors.">두 벡터의 내적을 반환합니다.</summary>
      <param name="vector1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">이 인스턴스와 다른 벡터가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The other vector.">다른 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 벡터가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">이 인스턴스와 지정된 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="obj" />가 <see langword="null" />이면 메서드에서 <see langword="false" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary vsli:raw="Returns the length of this vector object.">이 벡터 개체의 길이를 반환합니다.</summary>
      <returns vsli:raw="The vector's length.">벡터 길이입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">벡터 길이 제곱을 반환합니다.</summary>
      <returns vsli:raw="The vector's length squared.">벡터 길이 제곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">지정된 가중치에 따라 두 벡터 사이의 선형 보간을 수행합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value2" />의 가중치를 나타내는 0과 1 사이의 값입니다.</param>
      <returns vsli:raw="The interpolated vector.">보간된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">해당 요소가 지정된 두 벡터에 있는 각 요소 쌍의 최대값인 벡터를 반환합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The maximized vector.">최대화된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">해당 요소가 지정된 두 벡터에 있는 각 요소 쌍의 최소값인 벡터를 반환합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The minimized vector.">최소화된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">벡터와 지정된 스칼라를 곱합니다.</summary>
      <param name="left" vsli:raw="The vector to multiply.">곱할 벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">스칼라 값과 지정된 벡터를 곱합니다.</summary>
      <param name="left" vsli:raw="The scaled value.">크기 조정된 값입니다.</param>
      <param name="right" vsli:raw="The vector.">벡터입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary vsli:raw="Negates a specified vector.">지정된 벡터를 부정합니다.</summary>
      <param name="value" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">지정된 벡터와 방향은 같지만 길이가 1인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="The vector to normalize.">정규화할 벡터입니다.</param>
      <returns vsli:raw="The normalized vector.">정규화된 벡터입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to one.">세 개의 요소가 1과 같은 벡터를 가져옵니다.</summary>
      <returns vsli:raw="A vector whose three elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1,1)&lt;/c&gt;).">세 개의 요소가 들어 있는 하 나와 동일한 벡터 (즉, 벡터를 반환 <c>(1,1,1)</c>합니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">두 벡터를 더합니다.</summary>
      <param name="left" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">첫 번째 벡터를 두 번째 벡터로 나눕니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />를 <paramref name="right" />로 나눈 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">지정된 벡터를 지정된 스칼라 값으로 나눕니다.</summary>
      <param name="value1" vsli:raw="The vector.">벡터입니다.</param>
      <param name="value2" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The result of the division.">나누기 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">지정된 두 벡터의 각 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">지정된 두 벡터가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">지정된 벡터와 지정된 스칼라 값을 곱합니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">스칼라 값과 지정된 벡터를 곱합니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary vsli:raw="Negates the specified vector.">지정된 벡터를 부정합니다.</summary>
      <param name="value" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">지정된 법선이 있는 표면에서의 벡터 반사를 반환합니다.</summary>
      <param name="vector" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">반사되는 표면의 법선입니다.</param>
      <returns vsli:raw="The reflected vector.">반사된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">해당 요소가 지정된 각 벡터 요소의 제곱근인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="A vector.">벡터입니다.</param>
      <returns vsli:raw="The square root vector.">제곱근 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The difference vector.">차이 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">기본 형식을 사용하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">지정된 형식 문자열로 개별 요소의 형식을 지정하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">개별 요소의 형식을 정의하는 표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">지정된 형식 문자열로 개별 요소의 형식을 지정하고 지정된 형식 공급자로 문화권별 형식 지정을 정의하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">개별 요소의 형식을 정의하는 표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">문화권별 형식 지정 정보를 제공하는 형식 공급자입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">지정된 4x4 행렬로 벡터를 변형합니다.</summary>
      <param name="position" vsli:raw="The vector to transform.">변환할 벡터입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변환 행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">지정된 쿼터니언 회전 값으로 벡터를 변환합니다.</summary>
      <param name="value" vsli:raw="The vector to rotate.">회전할 벡터입니다.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">적용할 회전입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">지정된 4x4 행렬로 벡터 법선을 변형합니다.</summary>
      <param name="normal" vsli:raw="The source vector.">원본 벡터입니다.</param>
      <param name="matrix" vsli:raw="The matrix.">행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0).">벡터 (1,0,0)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0)&lt;/c&gt;.">벡터 <c>(1,0,0)</c>합니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0).">벡터 (0,1,0)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0)&lt;/c&gt;.">벡터 <c>(0, 1, 0)</c>입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1).">벡터 (0,0,1)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1)&lt;/c&gt;.">벡터 <c>(0,0,1)</c>합니다.</returns>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary vsli:raw="The X component of the vector.">벡터의 X 구성 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary vsli:raw="The Y component of the vector.">벡터의 Y 구성 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary vsli:raw="The Z component of the vector.">벡터의 Z 구성 요소입니다.</summary>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to zero.">세 개의 요소가 0과 같은 벡터를 가져옵니다.</summary>
      <returns vsli:raw="A vector whose three elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0)&lt;/c&gt;).">세 개의 요소가 0과 같은 벡터 (즉, 벡터를 반환 <c>(0,0,0)</c>합니다.</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary vsli:raw="Represents a vector with four single-precision floating-point values.">네 개의 단정밀도 부동 소수점 값을 사용하여 벡터를 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and a Z and a W component.">지정된 <see cref="T:System.Numerics.Vector2" /> 개체와 Z 및 W 구성 요소에서 새 <see cref="T:System.Numerics.Vector4" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="The vector to use for the X and Y components.">X 및 Y 구성 요소에 사용할 벡터입니다.</param>
      <param name="z" vsli:raw="The Z component.">Z 구성 요소입니다.</param>
      <param name="w" vsli:raw="The W component.">W 구성 요소입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object and a W component.">지정된 <see cref="T:System.Numerics.Vector3" /> 개체와 W 구성 요소에서 새 <see cref="T:System.Numerics.Vector4" /> 개체를 생성합니다.</summary>
      <param name="value" vsli:raw="The vector to use for the X, Y, and Z components.">X, Y 및 Z 구성 요소에 사용할 벡터입니다.</param>
      <param name="w" vsli:raw="The W component.">W 구성 요소입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object whose four elements have the same value.">네 개의 요소가 동일한 값을 가진 새 <see cref="T:System.Numerics.Vector4" /> 개체를 만듭니다.</summary>
      <param name="value" vsli:raw="The value to assign to all four elements.">네 개의 요소에 모두 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">해당 요소가 지정된 값을 가진 벡터를 만듭니다.</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.X&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.X" /> 필드에 할당할 값입니다.</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Y&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.Y" /> 필드에 할당할 값입니다.</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Z&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.Z" /> 필드에 할당할 값입니다.</param>
      <param name="w" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.W" /> 필드에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">해당 요소가 지정된 각 벡터 요소의 절대 값인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="A vector.">벡터입니다.</param>
      <returns vsli:raw="The absolute value vector.">절대 값 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">두 벡터를 더합니다.</summary>
      <param name="left" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">최소값과 최대값 사이로 벡터를 제한합니다.</summary>
      <param name="value1" vsli:raw="The vector to restrict.">제한할 벡터입니다.</param>
      <param name="min" vsli:raw="The minimum value.">최소값입니다.</param>
      <param name="max" vsli:raw="The maximum value.">최대값입니다.</param>
      <returns vsli:raw="The restricted vector.">제한된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">벡터의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The destination array.">대상 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">현재 인스턴스에 있는 요소의 개수가 배열에 있는 개수보다 큽니다.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" />가 다차원 배열인 경우</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">지정한 인덱스 위치부터 벡터의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The destination array.">대상 배열입니다.</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">벡터의 첫 번째 요소를 복사할 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">현재 인스턴스에 있는 요소의 개수가 배열에 있는 개수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
 <paramref name="index" />가 배열 길이보다 크거나 같은 경우</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" />가 다차원 배열인 경우</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">지정된 두 점 사이의 유클리드 거리를 계산합니다.</summary>
      <param name="value1" vsli:raw="The first point.">첫 번째 점입니다.</param>
      <param name="value2" vsli:raw="The second point.">두 번째 점입니다.</param>
      <returns vsli:raw="The distance.">거리입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">지정된 두 점 사이의 유클리드 거리 제곱을 반환합니다.</summary>
      <param name="value1" vsli:raw="The first point.">첫 번째 점입니다.</param>
      <param name="value2" vsli:raw="The second point.">두 번째 점입니다.</param>
      <returns vsli:raw="The distance squared.">거리 제곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">첫 번째 벡터를 두 번째 벡터로 나눕니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector resulting from the division.">나누기 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">지정된 벡터를 지정된 스칼라 값으로 나눕니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="divisor" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The vector that results from the division.">나누기 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the dot product of two vectors.">두 벡터의 내적을 반환합니다.</summary>
      <param name="vector1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The dot product.">내적입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">이 인스턴스와 다른 벡터가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The other vector.">다른 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 벡터가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">이 인스턴스와 지정된 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 <paramref name="obj" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="obj" />가 <see langword="null" />이면 메서드에서 <see langword="false" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary vsli:raw="Returns the length of this vector object.">이 벡터 개체의 길이를 반환합니다.</summary>
      <returns vsli:raw="The vector's length.">벡터 길이입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">벡터 길이 제곱을 반환합니다.</summary>
      <returns vsli:raw="The vector's length squared.">벡터 길이 제곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">지정된 가중치에 따라 두 벡터 사이의 선형 보간을 수행합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value2" />의 가중치를 나타내는 0과 1 사이의 값입니다.</param>
      <returns vsli:raw="The interpolated vector.">보간된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">해당 요소가 지정된 두 벡터에 있는 각 요소 쌍의 최대값인 벡터를 반환합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The maximized vector.">최대화된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">해당 요소가 지정된 두 벡터에 있는 각 요소 쌍의 최소값인 벡터를 반환합니다.</summary>
      <param name="value1" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="value2" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The minimized vector.">최소화된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">벡터와 지정된 스칼라를 곱합니다.</summary>
      <param name="left" vsli:raw="The vector to multiply.">곱할 벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">스칼라 값과 지정된 벡터를 곱합니다.</summary>
      <param name="left" vsli:raw="The scaled value.">크기 조정된 값입니다.</param>
      <param name="right" vsli:raw="The vector.">벡터입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary vsli:raw="Negates a specified vector.">지정된 벡터를 부정합니다.</summary>
      <param name="value" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">지정된 벡터와 방향은 같지만 길이가 1인 벡터를 반환합니다.</summary>
      <param name="vector" vsli:raw="The vector to normalize.">정규화할 벡터입니다.</param>
      <returns vsli:raw="The normalized vector.">정규화된 벡터입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to one.">네 개의 요소가 1과 같은 벡터를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt;.">
        <see cref="T:System.Numerics.Vector4" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">두 벡터를 더합니다.</summary>
      <param name="left" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The summed vector.">합한 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">첫 번째 벡터를 두 번째 벡터로 나눕니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />를 <paramref name="right" />로 나눈 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">지정된 벡터를 지정된 스칼라 값으로 나눕니다.</summary>
      <param name="value1" vsli:raw="The vector.">벡터입니다.</param>
      <param name="value2" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The result of the division.">나누기 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">지정된 두 벡터의 각 요소 쌍이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">지정된 두 벡터가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">값이 지정된 두 벡터에 있는 각 요소 쌍의 곱인 새 벡터를 반환합니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The element-wise product vector.">element-wise 제품 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">지정된 벡터와 지정된 스칼라 값을 곱합니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">스칼라 값과 지정된 벡터를 곱합니다.</summary>
      <param name="left" vsli:raw="The vector.">벡터입니다.</param>
      <param name="right" vsli:raw="The scalar value.">스칼라 값입니다.</param>
      <returns vsli:raw="The scaled vector.">크기 조정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과로 생성되는 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary vsli:raw="Negates the specified vector.">지정된 벡터를 부정합니다.</summary>
      <param name="value" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="The negated vector.">부정된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">해당 요소가 지정된 각 벡터 요소의 제곱근인 벡터를 반환합니다.</summary>
      <param name="value" vsli:raw="A vector.">벡터입니다.</param>
      <returns vsli:raw="The square root vector.">제곱근 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">첫 번째 벡터에서 두 번째 벡터를 뺍니다.</summary>
      <param name="left" vsli:raw="The first vector.">첫 번째 벡터입니다.</param>
      <param name="right" vsli:raw="The second vector.">두 번째 벡터입니다.</param>
      <returns vsli:raw="The difference vector.">차이 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">기본 형식을 사용하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">지정된 형식 문자열로 개별 요소의 형식을 지정하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">개별 요소의 형식을 정의하는 표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">지정된 형식 문자열로 개별 요소의 형식을 지정하고 지정된 형식 공급자로 문화권별 형식 지정을 정의하여 현재 인스턴스의 문자열 표현을 반환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">개별 요소의 형식을 정의하는 표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">문화권별 형식 지정 정보를 제공하는 형식 공급자입니다.</param>
      <returns vsli:raw="The string representation of the current instance.">현재 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a two-dimensional vector by a specified 4x4 matrix.">지정된 4x4 행렬로 2차원 벡터를 변형합니다.</summary>
      <param name="position" vsli:raw="The vector to transform.">변환할 벡터입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변환 행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a two-dimensional vector by the specified Quaternion rotation value.">지정된 쿼터니언 회전 값으로 2차원 벡터를 변형합니다.</summary>
      <param name="value" vsli:raw="The vector to rotate.">회전할 벡터입니다.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">적용할 회전입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a three-dimensional vector by a specified 4x4 matrix.">지정된 4x4 행렬로 3차원 벡터를 변형합니다.</summary>
      <param name="position" vsli:raw="The vector to transform.">변환할 벡터입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변환 행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a three-dimensional vector by the specified Quaternion rotation value.">지정된 쿼터니언 회전 값으로 3차원 벡터를 변형합니다.</summary>
      <param name="value" vsli:raw="The vector to rotate.">회전할 벡터입니다.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">적용할 회전입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a four-dimensional vector by a specified 4x4 matrix.">지정된 4x4 행렬로 4차원 벡터를 변형합니다.</summary>
      <param name="vector" vsli:raw="The vector to transform.">변환할 벡터입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변환 행렬입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a four-dimensional vector by the specified Quaternion rotation value.">지정된 쿼터니언 회전 값으로 4차원 벡터를 변환합니다.</summary>
      <param name="value" vsli:raw="The vector to rotate.">회전할 벡터입니다.</param>
      <param name="rotation" vsli:raw="The rotation to apply.">적용할 회전입니다.</param>
      <returns vsli:raw="The transformed vector.">변형된 벡터입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary vsli:raw="Gets the vector (0,0,0,1).">벡터 (0,0,0,1)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,0,1)&lt;/c&gt;.">벡터 <c>(0,0,0,1)</c>합니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0,0).">벡터 (1,0,0,0)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0,0)&lt;/c&gt;.">벡터 <c>(1,0,0,0)</c>합니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0,0).">벡터 (0,1,0,0)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0,0)&lt;/c&gt;.">벡터 <c>(0, 1, 0, 0)</c>입니다.</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1,0).">벡터 (0,0,1,0)을 가져옵니다.</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1,0)&lt;/c&gt;.">벡터 <c>(0,0,1,0)</c>합니다.</returns>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary vsli:raw="The W component of the vector.">벡터의 W 구성 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary vsli:raw="The X component of the vector.">벡터의 X 구성 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary vsli:raw="The Y component of the vector.">벡터의 Y 구성 요소입니다.</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary vsli:raw="The Z component of the vector.">벡터의 Z 구성 요소입니다.</summary>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to zero.">네 개의 요소가 0과 같은 벡터를 가져옵니다.</summary>
      <returns vsli:raw="A vector whose four elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0,0)&lt;/c&gt;).">4 개의 요소가 0과 같은 벡터 (즉, 벡터를 반환 <c>(0,0,0,0)</c>합니다.</returns>
    </member>
  </members>
</doc>