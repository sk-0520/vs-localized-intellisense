<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Process</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <summary>프로세스 핸들에 대한 관리형 래퍼를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>지정한 핸들에서 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> 클래스의 새 인스턴스를 초기화하여, 종료 단계에서 핸들을 해제할지 여부를 나타냅니다.</summary>
      <param name="existingHandle">래핑할 핸들입니다.</param>
      <param name="ownsHandle">종료 단계에 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" />에서 핸들을 안정적으로 해제할 수 있게 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeProcessHandle.IsInvalid" />
    <member name="T:System.Diagnostics.DataReceivedEventArgs">
      <summary>
        <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 및 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <summary>리디렉션된 <see cref="T:System.Diagnostics.Process" /> 출력 스트림에 쓰여진 문자 줄을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Diagnostics.Process" />가 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 또는 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 쓴 줄입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DataReceivedEventHandler">
      <summary>
        <see cref="E:System.Diagnostics.Process.OutputDataReceived" />의 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 이벤트 또는 <see cref="T:System.Diagnostics.Process" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Diagnostics.DataReceivedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <summary>속성 또는 이벤트에 대한 설명을 지정합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <summary>지정된 설명을 사용하여 <see cref="T:System.Diagnostics.MonitoringDescriptionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="description">애플리케이션에서 정의한 설명입니다.</param>
    </member>
    <member name="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <summary>모니터링된 항목과 관련된 설명 텍스트를 가져옵니다.</summary>
      <returns>애플리케이션에서 정의한 설명입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Process">
      <summary>로컬 및 원격 프로세스에 대한 액세스를 제공하고 로컬 시스템 프로세스를 시작하고 중지할 수 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Process" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.BasePriority">
      <summary>연결된 프로세스의 기본 우선 순위를 가져옵니다.</summary>
      <returns>연결된 프로세스의 <see cref="P:System.Diagnostics.Process.PriorityClass" />에서 계산되는 기본 우선 순위입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스가 종료되었습니다.  
 또는  
 프로세스가 시작되지 않아서 프로세스 ID가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginErrorReadLine">
      <summary>애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 대해 비동기 읽기 작업을 시작합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 속성이 <see langword="false" />일 경우(이 속성은  
또는 
<see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에서 비동기 읽기 작업이 이미 진행 중입니다.  
또는 
<see cref="P:System.Diagnostics.Process.StandardError" /> 스트림이 동기적 읽기 작업에 사용되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginOutputReadLine">
      <summary>애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 대해 비동기 읽기 작업을 시작합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 속성이 <see langword="false" />일 경우(이 속성은  
또는 
<see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에서 비동기 읽기 작업이 이미 진행 중입니다.  
또는 
<see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림이 동기적 읽기 작업에 사용되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelErrorRead">
      <summary>애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 대해 비동기 읽기 작업을 취소합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림을 비동기 읽기 작업용으로 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelOutputRead">
      <summary>애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 대해 비동기 읽기 작업을 취소합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림을 비동기 읽기 작업용으로 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Close">
      <summary>해당 구성 요소에 연결된 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.CloseMainWindow">
      <summary>주 창에 닫기 메시지를 보내 사용자 인터페이스가 있는 프로세스를 닫습니다.</summary>
      <returns>닫기 메시지를 보낸 경우에는 <see langword="true" />이고 연결된 프로세스에 주 창이 없거나 모달 대화 상자가 표시된 때 같이 주 창을 사용할 수 없는 경우에는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스가 이미 종료되었습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <summary>이 프로세스에서 사용하는 리소스를 모두 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Process.EnableRaisingEvents">
      <summary>프로세스가 종료될 때 <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트를 발생시켜야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>종료 명령 또는 <see cref="M:System.Diagnostics.Process.Kill" /> 호출을 통해 연결된 프로세스가 종료될 때 <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트가 발생해야 한다면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다. <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트는 경우에 값 <see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /> 는 <see langword="false" /> 중 프로세스가 종료 될 때 또는 사용자가 연산을 수행 하기 전에 <see cref="P:System.Diagnostics.Process.HasExited" /> 확인 합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.EnterDebugMode">
      <summary>현재 스레드에서 네이티브 속성 <see cref="T:System.Diagnostics.Process" />를 활성화하여 <see langword="SeDebugPrivilege" /> 구성 요소를 특수 모드에서 실행되는 운영 체제 프로세스와 상호 작용하는 상태로 만듭니다.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.ErrorDataReceived">
      <summary>애플리케이션이 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 쓸 때 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitCode">
      <summary>연결된 프로세스가 종료될 때 연결된 프로세스에서 지정한 값을 가져옵니다.</summary>
      <returns>연결된 프로세스가 종료될 때 연결된 프로세스에서 지정한 코드입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스가 끝나지 않았습니다.  
또는 
프로세스 <see cref="P:System.Diagnostics.Process.Handle" />이 유효하지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.ExitCode" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="E:System.Diagnostics.Process.Exited">
      <summary>프로세스가 종료될 때 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitTime">
      <summary>연결된 프로세스가 종료된 시간을 가져옵니다.</summary>
      <returns>연결된 프로세스가 종료된 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.ExitTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetCurrentProcess">
      <summary>새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 가져온 후 현재 활성화되어 있는 프로세스에 연결합니다.</summary>
      <returns>호출하는 애플리케이션에서 실행 중인 프로세스 리소스에 연결된 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <summary>로컬 컴퓨터의 프로세서에 대한 식별자가 주어지면 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 반환합니다.</summary>
      <param name="processId">프로세스 리소스의 시스템 고유 식별자입니다.</param>
      <returns>
        <paramref name="processId" /> 매개 변수에 의해 식별되는 로컬 프로세스 리소스에 연결된 <see cref="T:System.Diagnostics.Process" /> 구성 요소입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="processId" /> 매개 변수로 지정된 프로세스가 실행되고 있지 않습니다. 식별자가 만료되었을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 이 개체에 의해 시작되지 않았습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <summary>프로세스 식별자 및 네트워크에 있는 컴퓨터의 이름이 주어지면 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 반환합니다.</summary>
      <param name="processId">프로세스 리소스의 시스템 고유 식별자입니다.</param>
      <param name="machineName">네트워크에 있는 컴퓨터 이름입니다.</param>
      <returns>
        <paramref name="processId" /> 매개 변수에 의해 식별되는 원격 프로세스 리소스에 연결된 <see cref="T:System.Diagnostics.Process" /> 구성 요소입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="processId" /> 매개 변수로 지정된 프로세스가 실행되고 있지 않습니다. 식별자가 만료되었을 수 있습니다.  
또는 
<paramref name="machineName" /> 매개 변수 구문이 잘못되었습니다. 이름의 길이가 0일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 이 개체에 의해 시작되지 않았습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses">
      <summary>로컬 컴퓨터의 각 프로세스 리소스에 대해 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 만듭니다.</summary>
      <returns>로컬 컴퓨터에서 실행 중인 모든 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <summary>지정한 컴퓨터의 각 프로세스 리소스에 대해 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 만듭니다.</summary>
      <param name="machineName">프로세스 목록을 읽어 올 컴퓨터입니다.</param>
      <returns>지정된 컴퓨터에서 실행 중인 모든 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 매개 변수 구문이 잘못되었습니다. 길이가 0일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제 플랫폼이 원격 컴퓨터에서 이 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">프로세스 정보를 가져오는 데 사용되는  성능 카운터 API에 액세스하는 데 문제가 있습니다. 이 예외는 Windows NT, Windows 2000 및 Windows XP에 해당됩니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">내부 시스템 API에 액세스하는 동안 문제가 발생했습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.Process" /> 구성 요소로 이루어진 새 배열을 만들어 지정한 프로세스 이름을 공유하는 로컬 컴퓨터의 모든 프로세스 리소스에 연결합니다.</summary>
      <param name="processName">프로세스의 이름입니다.</param>
      <returns>지정한 애플리케이션 또는 파일을 실행 중인 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스 정보를 가져오는 데 사용되는  성능 카운터 API에 액세스하는 데 문제가 있습니다. 이 예외는 Windows NT, Windows 2000 및 Windows XP에 해당됩니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.Process" /> 구성 요소로 이루어진 새 배열을 만들어 지정한 프로세스 이름을 공유하는 원격 컴퓨터에 있는 모든 프로세스 리소스에 연결합니다.</summary>
      <param name="processName">프로세스의 이름입니다.</param>
      <param name="machineName">네트워크에 있는 컴퓨터 이름입니다.</param>
      <returns>지정한 애플리케이션 또는 파일을 실행 중인 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 매개 변수 구문이 잘못되었습니다. 길이가 0일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제 플랫폼이 원격 컴퓨터에서 이 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="machineName" />에 연결하려는 시도가 실패했습니다.
또는 
프로세스 정보를 가져오는 데 사용되는  성능 카운터 API에 액세스하는 데 문제가 있습니다. 이 예외는 Windows NT, Windows 2000 및 Windows XP에 해당됩니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">내부 시스템 API에 액세스하는 동안 문제가 발생했습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Handle">
      <summary>연결된 프로세스의 기본 핸들을 가져옵니다.</summary>
      <returns>연결된 프로세스가 시작될 때 운영 체제에서 해당 프로세스에 할당한 핸들입니다. 시스템에서는 이 핸들을 사용하여 프로세스 특성을 추적합니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스가 시작되지 않았거나 종료되었습니다. 이 <see cref="P:System.Diagnostics.Process.Handle" /> 인스턴스에 연결된 프로세스가 없으므로 <see cref="T:System.Diagnostics.Process" /> 속성을 읽을 수 없습니다.  
또는 
<see cref="T:System.Diagnostics.Process" /> 인스턴스가 실행 프로세스에 연결되었지만 모든 액세스 권한을 가진 핸들을 가져오는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.Handle" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.HandleCount">
      <summary>프로세스에서 연 핸들 수를 가져옵니다.</summary>
      <returns>프로세스에서 연 운영 체제 핸들의 수입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.HasExited">
      <summary>연결된 프로세스가 종료되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Process" /> 구성 요소가 참조하는 운영 체제 프로세스가 종료되었으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">개체와 연결된 프로세스가 없습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">프로세스의 종료 코드를 검색할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Id">
      <summary>연결된 프로세스의 고유 식별자를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Diagnostics.Process" /> 인스턴스에서 참조하는 프로세스의 고유 식별자입니다. 이 식별자는 시스템에서 생성됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스의 <see cref="P:System.Diagnostics.Process.Id" /> 속성이 설정되어 있지 않습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill">
      <summary>연결된 프로세스를 즉시 중지합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 프로세스를 종료할 수 없습니다.  
 또는  
 프로세스가 종료됩니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.Kill" />를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 이미 종료되었습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill(System.Boolean)">
      <summary>연결된 프로세스를 즉시 중지하고, 선택적으로 자식/하위 프로세스를 중지합니다.</summary>
      <param name="entireProcessTree">연결된 프로세스 및 해당 하위 항목을 종료하려면 <see langword="true" />, 연결된 프로세스만 종료하려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 프로세스를 종료할 수 없습니다.  
 또는  
 프로세스가 종료됩니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.Kill" />를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 이미 종료되었습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.
또는
호출 프로세스는 연결된 프로세스의 하위 트리의 멤버입니다.</exception>
      <exception cref="T:System.AggregateException">연결된 프로세스의 하위 트리에 있는 일부 프로세스를 종료할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.LeaveDebugMode">
      <summary>
        <see cref="T:System.Diagnostics.Process" /> 구성 요소를 특수 모드에서 실행되는 운영 체제 프로세스와 상호 작용할 수 없는 상태로 만듭니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.MachineName">
      <summary>연결된 프로세스가 실행 중인 컴퓨터 이름을 가져옵니다.</summary>
      <returns>연결된 프로세스가 실행 중인 컴퓨터 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainModule">
      <summary>연결된 프로세스의 주 모듈을 가져옵니다.</summary>
      <returns>프로세스를 시작하는 데 사용된 <see cref="T:System.Diagnostics.ProcessModule" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MainModule" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">32비트 프로세스가 64비트 프로세스의 모듈에 액세스하려고 합니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.  
또는 
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowHandle">
      <summary>연결된 프로세스의 주 창에 대한 창 핸들을 가져옵니다.</summary>
      <returns>연결된 프로세스의 주 창에 대한 창 핸들입니다. 이 창 핸들은 시스템에서 생성됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스가 종료되었으므로 <see cref="P:System.Diagnostics.Process.MainWindowHandle" />이 정의되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowTitle">
      <summary>프로세스의 주 창에 대한 캡션을 가져옵니다.</summary>
      <returns>프로세스의 주 창 제목입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스가 종료되었으므로 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 속성이 정의되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MaxWorkingSet">
      <summary>연결된 프로세스에 대한 최대 허용 작업 집합 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns>프로세스에 대해 메모리에서 허용된 작업 집합의 최대 크기(바이트)입니다.</returns>
      <exception cref="T:System.ArgumentException">최대 작업 집합 크기가 잘못 되었습니다. 최소 작업 집합 크기보다 크거나 같아야 합니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">작업 집합 정보를 연결된 프로세스 리소스에서 검색할 수 없습니다.  
 또는  
 프로세스가 시작되지 않아서 프로세스 식별자 또는 프로세스 핸들이 0입니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.  
또는 
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MinWorkingSet">
      <summary>연결된 프로세스에 대해 허용되는 작업 집합의 최소 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns>프로세스에 대해 메모리에서 필요로 하는 작업 집합의 최소 크기(바이트)입니다.</returns>
      <exception cref="T:System.ArgumentException">최소 작업 집합 크기가 잘못되었습니다. 최대 작업 집합 크기와 작거나 같아야 합니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">작업 집합 정보를 연결된 프로세스 리소스에서 검색할 수 없습니다.  
 또는  
 프로세스가 시작되지 않아서 프로세스 식별자 또는 프로세스 핸들이 0입니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.  
또는 
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Modules">
      <summary>연결된 프로세스에 의해 로드된 모듈을 가져옵니다.</summary>
      <returns>연결된 프로세스에 의해 로드된 모듈을 나타내는 <see cref="T:System.Diagnostics.ProcessModule" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.Modules" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">시스템 프로세스 또는 유휴 프로세스에 대한 <see cref="P:System.Diagnostics.Process.Modules" /> 속성에 액세스하려고 합니다. 이러한 프로세스에 모듈이 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <summary>연결된 프로세스에 할당된 비페이징 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>가상 메모리 페이징 파일에 쓸 수 없는 연결된 프로세스에 대해 시스템에서 할당한 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <summary>연결된 프로세스에 할당된 비페이징 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>가상 메모리 페이징 파일에 쓸 수 없는 연결된 프로세스에 대해 시스템에서 할당한 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.OnExited">
      <summary>
        <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트를 발생시킵니다.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.OutputDataReceived">
      <summary>애플리케이션이 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 쓸 때마다 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize">
      <summary>연결된 프로세스에 할당된 페이징 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 의해 할당된 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize64">
      <summary>연결된 프로세스에 할당된 페이징 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스의 가상 메모리 페이징 파일에 할당된 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <summary>연결된 프로세스에 할당된 페이징할 수 있는 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 대해 시스템에서 할당한 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <summary>연결된 프로세스에 할당된 페이징할 수 있는 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 대해 할당된 시스템 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <summary>연결된 프로세스에서 사용하는 가상 메모리 페이징 파일의 최대 메모리 양(바이트)을 가져옵니다.</summary>
      <returns>가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 의해 할당된 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <summary>연결된 프로세스에서 사용하는 가상 메모리 페이징 파일의 최대 메모리 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스가 시작된 이후 연결된 프로세스의 가상 메모리 페이징 파일에 할당된 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <summary>연결된 프로세스에서 사용되는 가상 메모리의 최대 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스에서 요청한 가상 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <summary>연결된 프로세스에서 사용되는 가상 메모리의 최대 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스가 시작된 이후 해당 프로세스에 할당된 가상 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet">
      <summary>연결된 프로세스의 최대 작업 집합 크기(바이트)를 가져옵니다.</summary>
      <returns>연결된 프로세스에서 한 번에 요청한 실제 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet64">
      <summary>연결된 프로세스에서 사용되는 실제 메모리의 최대 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스가 시작된 이후 해당 프로세스에 할당된 실제 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <summary>포커스가 주 창에 있을 때 운영 체제가 연결된 프로세스의 우선 순위를 일시적으로 높일지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>프로세스가 대기 상태에서 빠져나올 때 프로세스의 우선 순위를 동적으로 높여야 하는 경우<see langword="true" /> 이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 프로세스 리소스에서 우선순위 높임 정보를 검색할 수 없습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">프로세스 식별자 또는 프로세스 핸들이 0입니다. (프로세스가 시작되지 않았습니다.)</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityClass">
      <summary>연결된 프로세스에 대한 전체 우선 순위 범주를 가져오거나 설정합니다.</summary>
      <returns>연결된 프로세스에 대한 우선 순위 범주입니다. 이를 통해 해당 프로세스의 <see cref="P:System.Diagnostics.Process.BasePriority" />를 계산할 수 있습니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">프로세스 우선 순위 정보를 연결된 프로세스 리소스에서 설정하거나 검색할 수 없습니다.  
 또는  
 프로세스 식별자 또는 프로세스 핸들이 0입니다. (프로세스가 시작되지 않았습니다.)</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.PriorityClass" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 열거형에 정의된 유효한 값이 사용되지 않으므로 우선 순위 클래스를 설정할 수 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize">
      <summary>연결된 프로세스에 할당된 프라이빗 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스에서 할당하여 다른 프로세스에서는 공유할 수 없는 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize64">
      <summary>연결된 프로세스에 할당된 전용 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스에 할당되어 다른 프로세스와는 공유할 수 없는 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <summary>해당 프로세스의 권한 있는 프로세서 시간을 가져옵니다.</summary>
      <returns>프로세스가 운영 체제 코어 내부에서 코드를 실행하는 데 소비한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessName">
      <summary>프로세스의 이름을 가져옵니다.</summary>
      <returns>사용자가 프로세스를 식별할 수 있도록 시스템에서 사용하는 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스에 식별자가 없거나 <see cref="T:System.Diagnostics.Process" />와 연결된 프로세스가 없습니다.  
또는 
연결된 프로세스가 종료되었습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 컴퓨터에서 진행되는 프로세스가 아닙니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessorAffinity">
      <summary>이 프로세스에 포함된 스레드의 실행을 예약할 수 있는 프로세서를 가져오거나 설정합니다.</summary>
      <returns>연결된 프로세스의 스레드가 실행될 수 있는 프로세서를 나타내는 비트 마스크입니다. 기본값은 컴퓨터의 프로세서 수에 따라 다릅니다. 기본값은 2 n -1로, 여기서 n은 프로세서의 수입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
        <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 정보를 연결된 프로세스 리소스에서 설정하거나 검색할 수 없습니다.  
또는 
프로세스 식별자 또는 프로세스 핸들이 0입니다. (프로세스가 시작되지 않았습니다.)</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.  
또는 
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Refresh">
      <summary>프로세스 구성 요소 내에 캐시되어 있는 연결된 프로세스 정보를 모두 삭제합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.Responding">
      <summary>프로세스의 사용자 인터페이스가 응답하는지를 나타내는 값을 가져옵니다.</summary>
      <returns>연결된 프로세스의 사용자 인터페이스가 시스템에 응답하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.Responding" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SafeHandle">
      <summary>이 프로세스에 대한 기본 핸들을 가져옵니다.</summary>
      <returns>이 프로세스에 대한 기본 핸들입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.SessionId">
      <summary>연결된 프로세스의 터미널 서비스 세션 식별자를 가져옵니다.</summary>
      <returns>연결된 프로세스의 터미널 서비스 세션 식별자입니다.</returns>
      <exception cref="T:System.NullReferenceException">이 프로세스에 연결된 세션이 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">이 세션 식별자와 연결된 프로세스가 없습니다.  
 또는  
 연결된 프로세스가 이 컴퓨터에 있지 않습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardError">
      <summary>애플리케이션의 오류 출력을 읽는 데 사용되는 스트림을 가져옵니다.</summary>
      <returns>애플리케이션의 표준 오류 스트림을 읽는 데 사용할 수 있는 <see cref="T:System.IO.StreamReader" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림이 리디렉션에 대해 정의되지 않았습니다. <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />가 <see langword="true" />로 설정되고 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="false" />로 설정되어 있는지 확인하세요.  
또는 
<see cref="P:System.Diagnostics.Process.StandardError" /> 스트림이 <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" />을 사용한 비동기 읽기 작업을 위해 열려 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardInput">
      <summary>애플리케이션의 입력을 쓰는 데 사용되는 스트림을 가져옵니다.</summary>
      <returns>애플리케이션의 표준 입력 스트림을 쓰는 데 사용할 수 있는 <see cref="T:System.IO.StreamWriter" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />이 <see langword="false" />로 설정되어 있어서 <see cref="P:System.Diagnostics.Process.StandardInput" /> 스트림이 정의되지 않았습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardOutput">
      <summary>애플리케이션의 텍스트 출력을 읽는 데 사용되는 스트림을 가져옵니다.</summary>
      <returns>애플리케이션의 표준 출력 스트림을 읽는 데 사용할 수 있는 <see cref="T:System.IO.StreamReader" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림이 리디렉션에 대해 정의되지 않았습니다. <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />가 <see langword="true" />로 설정되고 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="false" />로 설정되어 있는지 확인하세요.  
또는 
<see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림이 <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" />을 사용한 비동기 읽기 작업을 위해 열려 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start">
      <summary>이 <see cref="P:System.Diagnostics.Process.StartInfo" /> 구성 요소의 <see cref="T:System.Diagnostics.Process" /> 속성으로 지정된 프로세스 리소스를 시작하거나 다시 사용하여 구성 요소에 연결합니다.</summary>
      <returns>프로세스 리소스가 시작된 경우에는 <see langword="true" />이고 기존 프로세스를 다시 사용한 경우처럼 새 프로세스 리소스가 시작되지 않은 경우에는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.Process" /> 구성 요소의 <see cref="P:System.Diagnostics.Process.StartInfo" />에 파일 이름이 지정되지 않았습니다.
또는 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 또는 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />가 <see langword="true" />인 동안 <see cref="P:System.Diagnostics.Process.StartInfo" /> 속성의 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 멤버는 <see langword="true" />입니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 파일을 여는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">메서드는 Nano Server와 같은 셸 지원 없이 운영 체제에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <summary>시작할 프로세스의 파일 이름 같은 프로세스 시작 정보가 포함된 매개 변수에 의해 지정된 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="startInfo">파일 이름 및 모든 명령줄 인수를 포함하여 프로세스를 시작하는 데 사용되는 정보가 들어 있는 <see cref="T:System.Diagnostics.ProcessStartInfo" />입니다.</param>
      <returns>프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성에 파일 이름이 지정되지 않았습니다.  
또는 
<paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="true" /> 및 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />이고, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 또는 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 속성 또한 <see langword="true" />입니다.  
또는 
<paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="true" />이고 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성이 <see langword="null" /> 또는 비어 있거나 <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> 속성이 <see langword="null" />이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="startInfo" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 파일을 열 때 오류가 발생합니다.  
 또는  
 인수의 길이와 프로세스에 대한 전체 경로 길이를 합하면 2080을 초과합니다. 이 예외와 관련된 오류 메시지는 다음 중 하나일 수 있습니다. "시스템 호출에 전달된 데이터 영역이 너무 작습니다." 또는 “액세스가 거부되었습니다.”</exception>
      <exception cref="T:System.PlatformNotSupportedException">메서드는 Nano Server와 같은 셸 지원 없이 운영 체제에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String)">
      <summary>문서 또는 애플리케이션 파일 이름을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName">프로세스에서 실행될 문서 또는 애플리케이션 파일의 이름입니다.</param>
      <returns>프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 파일을 열 때 오류가 발생합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">PATH 환경 변수에 따옴표를 포함하는 문자열이 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <summary>애플리케이션 이름 및 명령줄 인수 집합을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName">프로세스에서 실행될 애플리케이션 파일 이름입니다.</param>
      <param name="arguments">프로세스를 시작할 때 전달할 명령줄 인수입니다.</param>
      <returns>프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="fileName" /> 또는 <paramref name="arguments" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 파일을 열 때 오류가 발생합니다.  
 또는  
 인수의 길이와 프로세스에 대한 전체 경로 길이를 합하면 2080을 초과합니다. 이 예외와 관련된 오류 메시지는 다음 중 하나일 수 있습니다. "시스템 호출에 전달된 데이터 영역이 너무 작습니다." 또는 “액세스가 거부되었습니다.”</exception>
      <exception cref="T:System.ObjectDisposedException">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">PATH 환경 변수에 따옴표를 포함하는 문자열이 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <summary>애플리케이션 이름, 사용자 이름, 암호 및 도메인을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName">프로세스에서 실행될 애플리케이션 파일 이름입니다.</param>
      <param name="userName">프로세스를 시작할 때 사용할 사용자 이름입니다.</param>
      <param name="password">프로세스를 시작할 때 사용할 암호가 포함된 <see cref="T:System.Security.SecureString" />입니다.</param>
      <param name="domain">프로세스를 시작할 때 사용할 도메인입니다.</param>
      <returns>프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException">파일 이름을 지정하지 않았습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 파일을 여는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">이 메서드는 Linux 또는 macOS에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <summary>애플리케이션 이름, 명령줄 인수 집합, 사용자 이름, 암호 및 도메인을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName">프로세스에서 실행될 애플리케이션 파일 이름입니다.</param>
      <param name="arguments">프로세스를 시작할 때 전달할 명령줄 인수입니다.</param>
      <param name="userName">프로세스를 시작할 때 사용할 사용자 이름입니다.</param>
      <param name="password">프로세스를 시작할 때 사용할 암호가 포함된 <see cref="T:System.Security.SecureString" />입니다.</param>
      <param name="domain">프로세스를 시작할 때 사용할 도메인입니다.</param>
      <returns>프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException">파일 이름을 지정하지 않았습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">연결된 파일을 열 때 오류가 발생합니다.  
 또는  
 인수의 길이와 연결된 파일의 전체 경로 길이를 합하면 2080을 초과합니다. 이 예외와 관련된 오류 메시지는 다음 중 하나일 수 있습니다. "시스템 호출에 전달된 데이터 영역이 너무 작습니다." 또는 “액세스가 거부되었습니다.”</exception>
      <exception cref="T:System.ObjectDisposedException">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">이 메서드는 Linux 또는 macOS에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartInfo">
      <summary>
        <see cref="T:System.Diagnostics.Process" />의 <see cref="M:System.Diagnostics.Process.Start" /> 메서드에 전달할 속성을 가져오거나 설정합니다.</summary>
      <returns>프로세스를 시작하는 데 사용된 데이터를 나타내는 <see cref="T:System.Diagnostics.ProcessStartInfo" />입니다. 이러한 인수에는 프로세스를 시작하는 데 사용된 실행 파일이나 문서 이름이 포함됩니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.Process.StartInfo" />를 지정하는 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Diagnostics.Process.Start" /> 메서드는 프로세스를 시작하는 데 사용되지 않습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartTime">
      <summary>연결된 프로세스가 시작된 시간을 가져옵니다.</summary>
      <returns>해당 프로세스가 시작된 시간을 나타내는 개체입니다. 프로세스가 실행되고 있지 않으면 예외가 throw됩니다.</returns>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.StartTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 종료되었습니다.  
 또는  
 프로세스가 시작되지 않았습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Windows 함수 호출 시 오류가 발생 했습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SynchronizingObject">
      <summary>프로세스 종료 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 개체를 가져오거나 설정합니다.</summary>
      <returns>프로세스에서 <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 <see cref="T:System.ComponentModel.ISynchronizeInvoke" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.Threads">
      <summary>연결된 프로세스에서 실행 중인 스레드를 가져오거나 설정합니다.</summary>
      <returns>연결된 프로세스에서 현재 실행 중인 운영 체제 스레드를 나타내는 <see cref="T:System.Diagnostics.ProcessThread" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.SystemException">프로세스에 <see cref="P:System.Diagnostics.Process.Id" />가 없거나 <see cref="T:System.Diagnostics.Process" /> 인스턴스와 연결된 프로세스가 없습니다.  
또는 
연결된 프로세스가 종료되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.ToString">
      <summary>가능한 경우 부모 구성 요소 형식을 결합하여 프로세스 이름을 문자열로 서식화합니다.</summary>
      <returns>기본 구성 요소의 <see cref="P:System.Diagnostics.Process.ProcessName" /> 반환 값과 결합된 <see cref="M:System.Object.ToString" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.TotalProcessorTime">
      <summary>이 프로세스의 총 프로세서 시간을 가져옵니다.</summary>
      <returns>연결된 프로세스에서 CPU를 사용해 소비한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다. 이 값은 <see cref="P:System.Diagnostics.Process.UserProcessorTime" />과 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />의 합입니다.</returns>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.UserProcessorTime">
      <summary>이 프로세스의 사용자 프로세서 시간을 가져옵니다.</summary>
      <returns>연결된 프로세스가 운영 체제 코어 내부가 아닌 프로세스의 애플리케이션 부분 내부에서 코드를 실행하는 데 소비한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize">
      <summary>프로세스의 가상 메모리 크기(바이트)를 가져옵니다.</summary>
      <returns>연결된 프로세스에서 요청한 가상 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize64">
      <summary>연결된 프로세스에 할당된 가상 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스에 할당된 가상 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit">
      <summary>연결된 프로세스가 종료될 때까지 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 무기한 대기하게 합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">대기 설정에 액세스할 수 없습니다.</exception>
      <exception cref="T:System.SystemException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스가 설정되지 않았으며, <see cref="P:System.Diagnostics.Process.Id" /> 속성을 파악할 수 있는 <see cref="P:System.Diagnostics.Process.Handle" />이 없습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.  
또는 
원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.WaitForExit" /> 를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <summary>연결된 프로세스가 종료되도록 지정한 밀리초 동안 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 대기하게 합니다.</summary>
      <param name="milliseconds">연결된 프로세스가 종료될 때까지 대기하는 시간(밀리초)입니다. 최대값은 사용 가능한 가장 큰 32비트 정수 값이며, 이는 운영 체제에서 사실상 무기한 대기한다는 것을 나타냅니다.</param>
      <returns>연결된 프로세스가 종료된 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">대기 설정에 액세스할 수 없습니다.</exception>
      <exception cref="T:System.SystemException">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스가 설정되지 않았으며, <see cref="P:System.Diagnostics.Process.Id" /> 속성을 파악할 수 있는 <see cref="P:System.Diagnostics.Process.Handle" />이 없습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.  
또는 
원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> 를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle">
      <summary>연결된 프로세스가 유휴 상태가 될 때까지 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 무기한 대기하도록 합니다. 이 오버로드는 사용자 인터페이스가 있는, 즉 메시지 루프가 있는 프로세스에만 적용됩니다.</summary>
      <returns>연결된 프로세스가 유휴 상태에 도달한 경우 <see langword="true" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스에 그래픽 인터페이스가 없습니다.  
또는 
알 수 없는 오류가 발생했습니다. 프로세스가 유휴 상태로 전환하지 못했습니다.  
또는 
프로세스가 이미 종료되었습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <summary>연결된 프로세스가 유휴 상태가 될 때까지 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 지정한 시간(밀리초) 동안 대기하도록 합니다. 이 오버로드는 사용자 인터페이스가 있는, 즉 메시지 루프가 있는 프로세스에만 적용됩니다.</summary>
      <param name="milliseconds">
        <see cref="F:System.Int32.MaxValue" />에 대한 값 1은 연결된 프로세스가 유휴 상태가 될 때까지 대기하는 시간(밀리초)입니다. 값이 0이면 즉시 반환이 이루어지고, 값이 -1이면 무기한 대기하게 됩니다.</param>
      <returns>연결된 프로세스가 유휴 상태에 도달한 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">프로세스에 그래픽 인터페이스가 없습니다.  
또는 
알 수 없는 오류가 발생했습니다. 프로세스가 유휴 상태로 전환하지 못했습니다.  
또는 
프로세스가 이미 종료되었습니다.  
또는 
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet">
      <summary>연결된 프로세스의 실제 메모리 사용량(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스에서 사용 중인 실제 메모리의 총 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet64">
      <summary>연결된 프로세스에 할당된 실제 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns>연결된 프로세스에 할당된 실제 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModule">
      <summary>특정 프로세스에 로드된 .dll 또는 .exe 파일을 나타냅니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.BaseAddress">
      <summary>모듈이 로드된 메모리 주소를 가져옵니다.</summary>
      <returns>모듈의 로드 주소입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <summary>시스템에서 모듈을 로드하고 실행할 때 실행되는 함수의 메모리 주소를 가져옵니다.</summary>
      <returns>모듈의 진입점입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileName">
      <summary>모듈의 전체 경로를 가져옵니다.</summary>
      <returns>모듈의 위치를 정의하는 정규화된 경로입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <summary>모듈의 버전 정보를 가져옵니다.</summary>
      <returns>모듈의 버전 정보가 포함된 <see cref="T:System.Diagnostics.FileVersionInfo" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <summary>모듈을 로드하는 데 필요한 메모리의 양을 가져옵니다.</summary>
      <returns>모듈이 차지하는 메모리의 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleName">
      <summary>프로세스 모듈의 이름을 가져옵니다.</summary>
      <returns>모듈의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModule.ToString">
      <summary>모듈 이름을 문자열로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Diagnostics.ProcessModule.ModuleName" /> 속성 값</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModuleCollection">
      <summary>
        <see cref="T:System.Diagnostics.ProcessModule" /> 개체의 강력한 형식의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <summary>연결된 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스가 없는 상태에서 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <summary>
        <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스의 지정된 배열을 사용하여 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="processModules">이 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스의 배열입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <summary>지정된 프로세스 모듈이 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="module">이 컬렉션에서 찾을 모듈을 나타내는 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스입니다.</param>
      <returns>모듈이 컬렉션에 있으면 <see langword="true" />이고, 있지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스의 배열을 복사합니다.</summary>
      <param name="array">컬렉션에 추가할 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스의 배열입니다.</param>
      <param name="index">새 인스턴스를 추가할 위치입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <summary>컬렉션 내의 지정된 모듈 위치를 제공합니다.</summary>
      <param name="module">해당 인덱스가 검색되는 <see cref="T:System.Diagnostics.ProcessModule" />입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 내의 모듈 위치를 정의하는 0부터 시작하는 인덱스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <summary>프로세스 모듈의 집합을 반복하기 위한 인덱스를 가져옵니다.</summary>
      <param name="index">컬렉션에 있는 모듈의 0부터 시작하는 인덱스 값입니다.</param>
      <returns>컬렉션에 있는 모듈을 인덱싱하는 <see cref="T:System.Diagnostics.ProcessModule" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessPriorityClass">
      <summary>시스템이 프로세스와 연결되는 우선 순위를 나타냅니다. 이 값은 각 프로세스 스레드의 우선 순위 값과 더불어 각 스레드의 기본 우선 순위 수준을 결정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <summary>프로세스 우선 순위를 <see langword="Normal" />보다는 높지만, <see langword="High" />보다는 낮게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <summary>프로세스 우선 순위를 <see langword="Idle" />보다는 높게, <see langword="Normal" />보다는 낮게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.High">
      <summary>운영 체제의 부하와 관계없이 사용자가 호출하면 즉시 응답해야 하는 <see langword="Task List" /> 대화 상자 같이 즉각 실행되어야 하는 시간 위험 작업을 프로세스가 수행하도록 지정합니다. 프로세스의 스레드는 정상 또는 유휴 우선 순위 클래스 프로세스의 스레드를 우선합니다. 우선 순위가 높은 클래스 애플리케이션은 거의 모든 사용 가능한 프로세서 시간을 사용할 수 있으므로 프로세스의 우선 순위 클래스에 <see langword="High" />를 지정할 경우 매우 주의해야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <summary>화면 보호기와 같이 시스템이 유휴 상태일 때에만 이 프로세스의 스레드가 실행되도록 지정합니다. 프로세스의 스레드는 더 높은 우선 순위 클래스에서 실행되는 프로세스의 스레드가 우선합니다. 자식 프로세스는 이 우선 순위 클래스를 상속합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <summary>프로세스를 특별히 예약할 필요가 없도록 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <summary>프로세스의 우선 순위가 최고가 되도록 지정합니다. <see langword="RealTime" /> 우선 순위가 포함된 프로세스의 스레드는 중요 작업을 수행하는 운영 체제 프로세스를 포함하여 다른 모든 프로세스의 스레드를 선점합니다. 따라서 매우 짧은 간격 이상으로 실행되는 <see langword="RealTime" /> 우선 순위 프로세스로 인해 디스크 캐시가 플러시되지 않거나 마우스가 응답하지 않을 수 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ProcessStartInfo">
      <summary>프로세스를 시작할 때 사용되는 값 집합을 지정합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <summary>프로세스를 시작할 때 사용할 파일 이름을 지정하지 않고 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화하고 프로세스를 시작할 때 사용할 애플리케이션이나 문서와 같은 파일 이름을 지정합니다.</summary>
      <param name="fileName">프로세스를 시작할 때 사용할 애플리케이션이나 문서입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화하고, 프로세스를 시작할 애플리케이션 파일 이름과 애플리케이션에 전달할 명령줄 인수 집합을 지정합니다.</summary>
      <param name="fileName">프로세스를 시작할 때 사용할 애플리케이션입니다.</param>
      <param name="arguments">프로세스가 시작될 때 애플리케이션에 전달할 명령줄 인수입니다.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ArgumentList">
      <summary>애플리케이션을 시작할 때 사용할 명령줄 인수 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>컬렉션 명령줄 인수입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <summary>애플리케이션을 시작할 때 사용할 명령줄 인수 집합을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성에 지정된 대상 애플리케이션으로 전달할 인수를 포함한 단일 문자열입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <summary>프로세스를 새 창에서 시작할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>프로세스를 포함할 새 창을 만들지 않고 프로세스를 시작해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" /> 입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Domain">
      <summary>프로세스를 시작할 때 사용할 도메인을 식별하는 값을 가져오거나 설정합니다. 이 값이 <see langword="null" />이면 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성은 UPN 형식으로 지정되어야 합니다.</summary>
      <returns>프로세스를 시작할 때 사용할 Active Directory 도메인입니다. 이 값이 <see langword="null" />이면 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성은 UPN 형식으로 지정되어야 합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Environment">
      <summary>이 프로세스와 자식 프로세스에 적용되는 환경 변수를 가져옵니다.</summary>
      <returns>이 프로세스와 해당 자식 프로세스에 적용되는 환경 변수를 포함하는 제네릭 사전입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <summary>파일 검색 경로, 임시파일의 디렉터리, 애플리케이션별 옵션 및 기타 유사한 정보를 가져옵니다.</summary>
      <returns>이 프로세스와 자식 프로세스에 적용되는 환경 변수를 제공하는 문자열 사전입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <summary>프로세스를 시작할 수 없는 경우 사용자에게 오류 대화 상자를 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>프로세스를 시작할 수 없는 경우 화면에 오류 대화 상자를 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <summary>프로세스를 시작할 수 없음을 알리는 오류 대화 상자가 표시될 때 사용할 창 핸들을 가져오거나 설정합니다.</summary>
      <returns>프로세스를 시작할 수 없을 때 표시되는 오류 대화 상자의 핸들에 대한 포인터입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
      <summary>시작할 애플리케이션 또는 문서를 가져오거나 설정합니다.</summary>
      <returns>애플리케이션과 연결되며 그 애플리케이션에서 사용할 수 있는 기본 열기 동작이 있는 파일 형식의 문서 이름 또는 시작할 애플리케이션의 이름입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <summary>Windows 사용자 프로필을 레지스트리에서 로드할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>Windows 사용자 프로필을 로드해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Password">
      <summary>프로세스를 시작할 때 사용할 사용자 암호가 포함된 보안 문자열을 가져오거나 설정합니다.</summary>
      <returns>프로세스를 시작할 때 사용할 사용자 암호입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <summary>프로세스를 시작할 때 사용할 일반 텍스트 형식의 사용자 암호를 가져오거나 설정합니다.</summary>
      <returns>일반 텍스트 형식의 사용자 암호입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <summary>애플리케이션의 오류 출력을 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>오류 출력을 <see cref="P:System.Diagnostics.Process.StandardError" />에 써야 하는 경우 <see langword="true" />이고, 그렇지 않으면<see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <summary>애플리케이션의 입력을 <see cref="P:System.Diagnostics.Process.StandardInput" /> 스트림에서 읽을지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>입력을 <see cref="P:System.Diagnostics.Process.StandardInput" />에서 읽어야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <summary>애플리케이션의 텍스트 출력을 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>출력을 <see cref="P:System.Diagnostics.Process.StandardOutput" />에 써야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <summary>오류 출력에 대한 기본 설정 인코딩을 가져오거나 설정합니다.</summary>
      <returns>오류 출력에 대한 기본 설정 인코딩을 나타내는 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <summary>표준 출력에 대한 기본 설정 인코딩을 가져오거나 설정합니다.</summary>
      <returns>표준 출력에 대한 기본 설정 인코딩을 나타내는 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
      <summary>프로세스를 시작할 때 사용할 사용자 이름을 가져오거나 설정합니다. <paramref name="user" />@<paramref name="DNS_domain_name" /> UPN 형식을 사용 하는 경우 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 속성은 <see langword="null" />이어야 합니다.</summary>
      <returns>프로세스를 시작할 때 사용할 사용자 이름입니다. <paramref name="user" />@<paramref name="DNS_domain_name" /> UPN 형식을 사용 하는 경우 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 속성은 <see langword="null" />이어야 합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <summary>프로세스를 시작할 때 운영 체제 셸을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>프로세스를 시작할 때 셸을 사용하려면 <see langword="true" />이고, 실행 파일에서 직접 프로세스를 만들어야 하면 <see langword="false" />입니다. 기본값은 <see langword="true" /> .NET Framework 앱 및 <see langword="false" /> .NET Core 앱에서.</returns>
      <exception cref="T:System.PlatformNotSupportedException">UWP(유니버설 Windows 플랫폼) 앱에서 값을 <see langword="true" />로 설정하려고 시도합니다.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verb">
      <summary>
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 지정한 애플리케이션이나 문서를 열 때 사용할 동사를 가져오거나 설정합니다.</summary>
      <returns>프로세스가 여는 파일을 사용하여 수행할 작업입니다. 기본값은 작업이 없음을 나타내는 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <summary>
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 지정한 파일 형식과 연결된 동사 집합을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 나타내는 파일에 시스템이 적용할 수 있는 작업입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <summary>프로세스가 시작될 때 사용할 창 상태를 가져오거나 설정합니다.</summary>
      <returns>최대화, 최소화, 표준(최대화되거나 최소화되지 않은) 또는 표시되지 않는 창 중 어느 상태에서 프로세스가 시작되는지 나타내는 열거형 값 중 하나입니다. 기본값은 <see langword="Normal" />입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">창 스타일이 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 열거형 멤버 중 하나가 아닌 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <summary>
        <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="false" />인 경우 시작할 프로세스의 작업 디렉터리를 가져오거나 설정합니다. <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="true" />인 경우 시작할 프로세스가 포함된 디렉터리를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="true" />이면 시작할 프로세스가 들어 있는 디렉터리의 정규화된 이름입니다. <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="false" />인 경우 시작할 프로세스의 작업 디렉터리입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessThread">
      <summary>운영 체제 프로세스 스레드를 나타냅니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.BasePriority">
      <summary>스레드의 기본 우선 순위를 가져옵니다.</summary>
      <returns>프로세스 우선 순위 클래스와 관련 스레드의 우선 순위 수준을 결합하여 계산되는 스레드의 기본 우선 순위입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <summary>스레드의 현재 우선 순위를 가져옵니다.</summary>
      <returns>운영 체제에서 스레드를 예약하는 방법에 따라 기본 우선 순위에서 벗어날 수도 있는 스레드의 현재 우선 순위입니다. 활성 스레드의 경우 우선 순위가 일시적으로 높아질 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.Id">
      <summary>스레드의 고유 식별자를 가져옵니다.</summary>
      <returns>특정 스레드와 관련된 고유 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <summary>이 스레드가 실행될 기본 설정 프로세서를 설정합니다.</summary>
      <returns>스레드를 실행할 프로세서를 결정하기 위해 시스템에서 스레드를 예약할 때 사용하는 스레드의 기본 설정 프로세서입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">지정한 프로세스에서 스레드가 시작되도록 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <summary>스레드 프로세스의 주 창이 포커스를 받을 때마다 운영 체제에서 관련 스레드의 우선 순위를 일시적으로 높여야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>프로세스의 인터페이스와 상호 작용할 때 스레드의 우선 순위를 높이려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">우선 순위 높임 정보를 검색할 수 없는 경우  
 또는  
 우선 순위 높임 정보를 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <summary>스레드의 우선 순위 수준을 가져오거나 설정합니다.</summary>
      <returns>스레드의 우선 순위를 한정하는 범위를 지정하는 <see cref="T:System.Diagnostics.ThreadPriorityLevel" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">스레드 우선 순위 수준 정보를 검색할 수 없는 경우  
 또는  
 스레드 우선 순위 수준을 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <summary>스레드가 운영 체제 코어 내부에서 코드를 실행하는데 사용한 시간을 가져옵니다.</summary>
      <returns>스레드가 운영 체제 코어 내부에서 코드를 실행하는데 사용한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <summary>관련 스레드가 실행될 수 있는 프로세서를 설정합니다.</summary>
      <returns>비트 집합을 가리키는 <see cref="T:System.IntPtr" />입니다. 각각의 비트는 스레드가 실행될 수 있는 프로세서를 나타냅니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">프로세서 선호도를 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <summary>이 스레드의 최적 프로세서를 다시 설정하여 단일 최적 프로세서가 없음을 나타냅니다. 다시 말해서 모든 프로세서가 최적 프로세서가 되도록 다시 설정합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">최적 프로세서를 다시 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartAddress">
      <summary>이 스레드를 시작한 운영 체제가 호출한 함수의 메모리 주소를 가져옵니다.</summary>
      <returns>스레드가 실행하는 애플리케이션 정의 함수를 가리키는 스레드의 시작 주소입니다.</returns>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartTime">
      <summary>운영 체제가 스레드를 시작한 시간을 가져옵니다.</summary>
      <returns>운영 체제가 스레드를 시작했을 때의 시스템 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ThreadState">
      <summary>이 스레드의 현재 상태를 가져옵니다.</summary>
      <returns>실행, 대기, 종료 등 스레드의 실행을 나타내는 <see cref="T:System.Diagnostics.ThreadState" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <summary>이 스레드가 프로세서를 사용하는데 소비한 총 시간을 가져옵니다.</summary>
      <returns>스레드가 프로세서의 제어를 받고 있던 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <summary>관련 스레드가 애플리케이션 내부에서 코드를 실행하는데 사용한 시간을 가져옵니다.</summary>
      <returns>운영 체제 코어 내부와 반대로 스레드가 애플리케이션 내부에서 코드를 실행하는데 사용한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.WaitReason">
      <summary>스레드가 대기 상태에 있는 이유를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.ThreadWaitReason" />은 스레드가 대기 상태에 있는 이유를 나타냅니다.</returns>
      <exception cref="T:System.InvalidOperationException">스레드가 대기 상태에 있지 않은 경우</exception>
      <exception cref="T:System.NotSupportedException">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="T:System.Diagnostics.ProcessThreadCollection">
      <summary>
        <see cref="T:System.Diagnostics.ProcessThread" /> 개체의 강력한 형식의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <summary>연결된 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스가 없는 상태에서 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <summary>
        <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 지정된 배열을 사용하여 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="processThreads">이 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 배열입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <summary>컬렉션에 프로세스 스레드를 추가합니다.</summary>
      <param name="thread">컬렉션에 추가할 스레드입니다.</param>
      <returns>컬렉션 스레드의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <summary>지정한 프로세스 스레드가 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="thread">이 컬렉션에서 찾을 스레드를 나타내는 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스입니다.</param>
      <returns>해당 스레드가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 배열을 복사합니다.</summary>
      <param name="array">컬렉션에 추가할 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 배열입니다.</param>
      <param name="index">새 인스턴스를 추가할 위치입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <summary>컬렉션 내에서 지정된 스레드의 위치를 제공합니다.</summary>
      <param name="thread">해당 인덱스가 검색되는 <see cref="T:System.Diagnostics.ProcessThread" />입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 내에서 스레드의 위치를 정의하는 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <summary>컬렉션의 지정된 위치에 프로세스 스레드를 삽입합니다.</summary>
      <param name="index">스레드가 삽입될 위치를 나타내는 인덱스(0부터 시작)입니다.</param>
      <param name="thread">컬렉션에 삽입할 스레드입니다.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <summary>프로세스 스레드 집합 전체를 반복하기 위한 인덱스를 가져옵니다.</summary>
      <param name="index">컬렉션 내의 스레드 값에 대한 인덱스(0부터 시작)입니다.</param>
      <returns>컬렉션의 스레드를 인덱싱하는 <see cref="T:System.Diagnostics.ProcessThread" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <summary>컬렉션에서 프로세스 스레드를 삭제합니다.</summary>
      <param name="thread">컬렉션에서 제거할 스레드입니다.</param>
    </member>
    <member name="T:System.Diagnostics.ProcessWindowStyle">
      <summary>시스템에서 프로세스가 시작될 때 새 창이 나타나는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <summary>숨겨진 창 스타일입니다. 창은 표시하거나 숨길 수 있습니다. 시스템은 창을 그리지 않고 숨겨진 창을 표시합니다. 창이 숨겨지면 효과적으로 사용할 수 없습니다. 숨겨진 창은 시스템 또는 다른 창에서 발생한 메시지를 처리할 수 있지만, 사용자가 입력한 내용을 처리하거나 출력 내용을 표시할 수 없습니다. 애플리케이션에서는 창 모양을 사용자 지정하는 동안 새 창을 숨겨 놓고 그 과정이 끝난 후에는 다시 창 스타일을 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />로 만들 수 있습니다. <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />을 사용하려면 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성은 <see langword="true" />여야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <summary>최대화된 창 스타일입니다. 기본적으로 시스템은 화면을 채우거나 자식 창인 경우에는 부모 창의 클라이언트 영역을 채우도록 최대화된 창을 확대합니다. 제목 표시줄이 있는 창은 자동으로 화면 또는 부모 창의 클라이언트 영역에 나타납니다. 또한 사용자가 제목 표시줄을 끌어 창을 옮길 수 없도록 제목 표시줄의 창 크기 조정 테두리와 창 위치 지정 기능이 비활성화됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <summary>최소화된 창 스타일입니다. 기본적으로 시스템은 최소화된 창을 작업 표시줄 단추 크기로 줄인 다음 작업 표시줄로 이동합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <summary>일반적으로 볼 수 있는 창 스타일입니다. 시스템은 화면의 기본 위치에 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" /> 스타일의 창을 표시합니다. 창이 표시되면 사용자는 창에 입력을 하고 창의 출력을 볼 수 있습니다. 애플리케이션에서는 창 모양을 사용자 지정하는 동안 새 창을 <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" /> 스타일로 초기화하고 그 과정이 끝난 후에는 다시 창 스타일을 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />로 만들 수 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadPriorityLevel">
      <summary>스레드의 우선 순위 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <summary>관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위 보다 한 단계 높게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <summary>관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위 보다 한 단계 낮게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <summary>최고 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위보다 두 단계 높습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <summary>유휴 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 값에 관계없이 모든 스레드의 우선 순위 값중 가장 낮습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <summary>최저 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위보다 두 단계 낮습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <summary>관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <summary>시간 위험 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 값에 관계없이 모든 스레드의 최고 우선 순위입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadState">
      <summary>스레드의 현재 실행 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Initialized">
      <summary>스레드가 초기화되었으나 아직 시작되지 않았음을 나타내는 상태입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Ready">
      <summary>사용 가능한 프로세서가 없으므로 스레드가 프로세서를 사용하기 위해 대기 중임을 나타내는 상태입니다. 스레드는 사용 가능한 다음 프로세서에서 실행될 준비가 되어 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Running">
      <summary>스레드가 현재 프로세서를 사용 중임을 나타내는 상태입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Standby">
      <summary>스레드가 곧 프로세서를 사용할 것임을 나타내는 상태입니다. 한 번에 하나의 스레드만 이 상태가 될 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Terminated">
      <summary>스레드가 실행을 마치고 종료되었음을 나타내는 상태입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Transition">
      <summary>스레드가 실행 전에 프로세서가 아닌 리소스를 대기하고 있음을 나타내는 상태입니다. 예를 들어, 디스크에서 해당 실행 스택을 페이지로 나누기 위해 대기하고 있을 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Unknown">
      <summary>스레드의 상태를 알 수 없습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Wait">
      <summary>스레드가 주변 작업이 완료되거나 리소스가 사용 가능해질 때까지 기다리고 있으므로 프로세서를 사용할 준비가 되어 있지 않음을 나타내는 상태입니다. 스레드가 준비 상태가 되면 다시 일정을 잡습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadWaitReason">
      <summary>스레드 대기 원인을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <summary>스레드가 상위 이벤트 쌍을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <summary>스레드가 하위 이벤트 쌍을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <summary>스레드 실행이 지연됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Executive">
      <summary>스레드가 스케줄러를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <summary>스레드가 사용 가능한 가상 메모리 페이지를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <summary>스레드가 로컬 프로시저 호출이 도착하기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <summary>스레드가 로컬 프로시저 호출의 응답이 도착하기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <summary>스레드가 메모리에 가상 메모리 페이지가 도착하기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <summary>스레드가 디스크에 가상 메모리 페이지가 쓰여지기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <summary>스레드 실행이 일시 중단됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <summary>스레드가 시스템 할당을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <summary>스레드가 알 수 없는 이유로 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <summary>스레드가 사용자 요청을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <summary>스레드가 시스템에서 가상 메모리를 할당하기를 기다리고 있습니다.</summary>
    </member>
  </members>
</doc>