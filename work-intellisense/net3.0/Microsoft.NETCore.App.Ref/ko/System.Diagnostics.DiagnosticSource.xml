<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>로깅에 사용되는 컨텍스트를 통해 작업을 표시합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="operationName">작업의 이름입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>작업과 연결된 플래그(W3C ID 사양에 의해 정의됨)를 가져옵니다.</summary>
      <returns>활동과 연결 된 플래그입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>지정된 키와 값으로 새 수하물 항목을 가져오도록 <see cref="T:System.Diagnostics.Activity" />를 업데이트합니다.</summary>
      <param name="key">수하물 키입니다.</param>
      <param name="value">수하물 값입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>제공된 <paramref name="key" /> 및 <paramref name="value" />를 사용하여 새 태그를 갖도록 <see cref="T:System.Diagnostics.Activity" />를 업데이트합니다. .</summary>
      <param name="key">태그 키입니다.</param>
      <param name="value">태그 값입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />의 자식 항목으로 전달되는 정보를 나타내는 키/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns>문자열 문자열 키-값 쌍의 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>현재 스레드에 대한 현재 작업(<see cref="T:System.Diagnostics.Activity" />)을 가져오거나 설정합니다.  이는 비동기 호출 간에 이동합니다.</summary>
      <returns>현재 스레드의 현재 작업입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>
        <see cref="T:System.Diagnostics.Activity" />에 대한 기본 ID 형식을 가져오거나 설정합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>작업 기간을 가져옵니다.</summary>
      <returns>가 종료 되었거나 <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> ( <see cref="T:System.Diagnostics.Activity" /><see cref="M:System.Diagnostics.Activity.Stop" /> 또는<see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />가 호출 <see cref="F:System.TimeSpan.Zero" /> 된경우)와종료시간사이의델타이거나,이종료되지않고가호출되지않은경우에는입니다.<see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /><see cref="T:System.Diagnostics.Activity" /></returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />이 항상 기본 ID 형식을 정의하는 데 사용되는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" />항상을 사용 <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />하려면이 고, <see langword="false" />그렇지 않으면입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>
        <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />을 사용하여 작업에 추가된 키-값 쌍의 값을 반환합니다.</summary>
      <param name="key">수하물 키입니다.</param>
      <returns>키-값 쌍 항목의 값(있는 경우) 또는 <see langword="null" />(존재 하지 않는 경우).</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>특정 요청과 관련된 식별자를 가져옵니다.</summary>
      <returns>활동 ID입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" />에 대한 형식을 가져옵니다.</summary>
      <returns>의 형식 <see cref="P:System.Diagnostics.Activity.Id" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>작업 이름을 가져옵니다.</summary>
      <returns>작업의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>이 작업을 생성한 부모 <see cref="T:System.Diagnostics.Activity" />를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Diagnostics.Activity" />의 부모 이거나 <see langword="null" /> , 같은 프로세스에 있는 경우이 고,이 인스턴스에 부모 (루트 활동)가 없거나 부모가 프로세스 외부에 있는 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>이 작업의 부모 ID를 가져옵니다.</summary>
      <returns>부모 ID (있는 경우) 이거나 <see langword="null" /> 그렇지 않은 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>부모의 <see cref="P:System.Diagnostics.Activity.SpanId" />를 가져옵니다.</summary>
      <returns>부모의 <see cref="P:System.Diagnostics.Activity.SpanId" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>W3CIdFlags.Recorded 플래그가 설정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" />W3CIdFlags 플래그가 설정 되어 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />의 루트 ID를 가져옵니다.</summary>
      <returns>루트 ID 이거나 <see langword="null" /> , 현재 인스턴스에 <see cref="P:System.Diagnostics.Activity.ParentId" /> 또는 <see cref="P:System.Diagnostics.Activity.Id" />가 있는 경우입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>해당 <see cref="P:System.Diagnostics.Activity.Duration" />을 <see cref="P:System.Diagnostics.Activity.StartTimeUtc" />와 지정된 중지 시간 간의 차이로 설정하도록 <see cref="T:System.Diagnostics.Activity" />를 업데이트합니다.</summary>
      <param name="endTimeUtc">UTC 중지 시간입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>시작하기 전에 이 <see cref="T:System.Diagnostics.Activity" />의 ID 형식을 설정합니다.</summary>
      <param name="format">
        <see cref="P:System.Diagnostics.Activity.Id" /> 속성의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>TraceId 및 SpanId의 W3C 규칙을 사용하여 부모 ID를 설정합니다.</summary>
      <param name="traceId">부모 활동의 TraceId입니다.</param>
      <param name="spanId">부모 작업의 SpanId입니다.</param>
      <param name="activityTraceFlags">작업과 연결된 W3C 표준에 의해 정의된 플래그를 지정하는 열거 값 중 하나입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />를 업데이트하여 ID가 <paramref name="parentId" />인 <see cref="T:System.Diagnostics.Activity" />가 이 <see cref="T:System.Diagnostics.Activity" />의 원인임을 나타냅니다.</summary>
      <param name="parentId">부모 작업의 ID입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />의 시작 시간을 설정합니다.</summary>
      <param name="startTimeUtc">
        <see cref="T:System.Diagnostics.Activity" /> 시작 시간(UTC)입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" />의 SPAN 부분을 가져옵니다.</summary>
      <returns>에 <see langword="SpanId" /><see cref="P:System.Diagnostics.Activity.Id" /> W3C형식이있으면의범위부분에대한ID이고,그렇지않으면0입니다.<see cref="T:System.Diagnostics.Activity" /></returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>작업을 시작합니다.</summary>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>작업이 시작된 시간을 가져옵니다.</summary>
      <returns>작업이 시작 된 UTC 시간입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>작업을 중지합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>로깅 시스템에 <see cref="T:System.Diagnostics.Activity" />와 함께 기록될 정보를 나타내는 키/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns>문자열 문자열 키-값 쌍의 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" />의 TraceId 부분을 가져옵니다.</summary>
      <returns>Id에 W3C 형식이 있는 경우의 <see cref="P:System.Diagnostics.Activity.Id" />traceid 부분에 대 한 id이 고, 그렇지 않으면 0 traceid입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>W3C <see langword="tracestate" /> 헤더를 가져옵니다.</summary>
      <returns>W3C <see langword="tracestate" /> 헤더입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" /> 속성의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>계층 구조 형식입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>알 수 없는 형식입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>W3C 형식입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>W3C 표준에 따라 서식이 지정된 <see cref="P:System.Diagnostics.Activity.SpanId" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>현재 <see cref="T:System.Diagnostics.ActivitySpanId" />의 8바이트를 지정된 범위에 복사합니다.</summary>
      <param name="destination">SpanID의 8바이트를 복사할 범위입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>8바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData">8바이트의 읽기 전용 범위입니다.</param>
      <returns>새 범위 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에 8바이트가 포함되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>16개의 16진수 문자의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData">16개의 16진수 문자를 포함하는 범위입니다.</param>
      <returns>새 범위 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에는 16개의 16진수 문자가 포함되어 있지 않습니다.
또는 
<paramref name="idData" />의 문자는 모두 소문자 16진수 문자 또는 모두 0이 아닙니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>UTF8로 인코딩된 바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData">UTF8로 인코딩된 바이트의 읽기 전용 범위입니다.</param>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>임의의 숫자를 기반으로 새 <see cref="T:System.Diagnostics.ActivitySpanId" />를 만듭니다(고유할 가능성이 매우 높음).</summary>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>이 인스턴스와 지정된 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="spanId">비교할 인스턴스입니다.</param>
      <returns>
        <paramref name="spanId" />에 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>현재스턴스와 지정된 개체(<see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스여야 함)의 값이 동일해야 합니다.</summary>
      <param name="obj">비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.Diagnostics.ActivitySpanId" />의 인스턴스이고 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>SpanId의 해시 코드를 반환합니다.</summary>
      <returns>SpanId의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="spanId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="spandId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="spanId1" />의 SpanId가 <paramref name="spandId2" />의 SpanId와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 다른지 확인합니다.</summary>
      <param name="spanId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="spandId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="spanId1" />의 SpanId가 <paramref name="spandId2" />의 SpanId와 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns>이 범위 ID의 16자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns>이 범위 ID의 16자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>작업과 연결된 W3C 표준에 의해 정의된 플래그를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>활동이 표시되지 않았습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>활동(또는 부모)이 기록에 유용한 것으로 표시되었습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>형식이 W3C 표준을 기반으로 하는 <see cref="P:System.Diagnostics.Activity.TraceId" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>현재 <see cref="T:System.Diagnostics.ActivityTraceId" />의 16바이트를 지정된 범위에 복사합니다.</summary>
      <param name="destination">추적 ID의 16바이트를 복사할 범위입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>16바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData">16바이트의 읽기 전용 범위입니다.</param>
      <returns>새 추적 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에 8바이트가 포함되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>32개의 16진수 문자의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData">32개의 16진수 문자를 포함하는 범위입니다.</param>
      <returns>새 추적 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에는 16개의 16진수 문자가 포함되어 있지 않습니다.
또는
<paramref name="idData" />의 문자는 모두 소문자 16진수 문자 또는 모두 0이 아닙니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>UTF8로 인코딩된 바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData">UTF8로 인코딩된 바이트의 읽기 전용 범위입니다.</param>
      <returns>새 추적 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>임의의 숫자를 기반으로 새 <see cref="T:System.Diagnostics.ActivitySpanId" />를 만듭니다(고유할 가능성이 매우 높음).</summary>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>현재 인스턴스와 지정된 <see cref="T:System.Diagnostics.ActivityTraceId" />가 같은지 여부를 확인합니다.</summary>
      <param name="traceId">비교할 인스턴스입니다.</param>
      <returns>
        <paramref name="traceId" />에 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>이 인스턴스와 지정된 개체(<see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스여야 함)의 값이 같은지를 확인합니다.</summary>
      <param name="obj">비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.Diagnostics.ActivityTraceId" />의 인스턴스이고 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>TraceId의 해시 코드를 반환합니다.</summary>
      <returns>TraceId의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="traceId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="traceId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="traceId1" />의 TraceId가 <paramref name="traceId2" />의 TraceId와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="traceId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="traceId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="traceId1" />의 TraceId가 <paramref name="traceId2" />의 TraceId와 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns>이 추적 ID의 32자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>이 추적 ID를 나타내는 32자의 16진수 문자열을 반환합니다.</summary>
      <returns>이 추적 ID의 32자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>소스가 해당 정보(이벤트)를 보내는 명명된 위치를 나타내는 추상 <see cref="T:System.Diagnostics.DiagnosticSource" /> 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>새 <see cref="T:System.Diagnostics.DiagnosticListener" />를 만듭니다.</summary>
      <param name="name">이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름입니다.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 수신기 컬렉션을 가져옵니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>NotificationListeners를 삭제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>등록된 구독자가 있는지 여부를 결정합니다.</summary>
      <returns>등록된 구독자가 있으며 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.DiagnosticListener" />의 활성화 여부를 확인합니다.</summary>
      <param name="name" />
      <returns>알림이 활성화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>DiagnosticListener의 활성화 여부를 확인합니다.</summary>
      <param name="name" />
      <param name="arg1" />
      <param name="arg2" />
      <returns>사용하도록 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>모든 구독자의 OnActivityExport 메서드를 호출합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">보내는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>모든 구독자의 OnActivityImport 메서드를 호출합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">들어오는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>구독자를 추가합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>구독자를 추가하고 필요에 따라 이름과 최대 두 개의 컨텍스트 개체를 기준으로 이벤트를 필터링합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <param name="isEnabled">이름 및 최대 두 개의 컨텍스트 개체(<see langword="null" />일 수 있음)에 따라 이벤트를 필터링하는 대리자이거나 이벤트 필터가 바람직하지 않은 경우 <see langword="null" />입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>구독자를 추가하고, 필요에 따라 이름과 최대 두 개의 컨텍스트 개체를 기준으로 이벤트를 필터링하고, 공급자가 프로세스 외부에서 활동을 가져오거나 내보낼 때 호출할 메서드를 지정합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <param name="isEnabled">이름 및 최대 두 개의 컨텍스트 개체(<see langword="null" />일 수 있음)에 따라 이벤트를 필터링하는 대리자이거나 이벤트 필터가 바람직하지 않은 경우 <see langword="null" />입니다.</param>
      <param name="onActivityImport">들어오는 요청을 나타내는 개체와 외부 이벤트의 영향을 받는 활동을 받는 작업 대리자입니다.</param>
      <param name="onActivityExport">나가는 요청을 나타내는 개체와 외부 이벤트의 영향을 받는 활동을 받는 작업 대리자입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>구독자를 추가하고 필요에 따라 이름을 기준으로 이벤트를 필터링합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <param name="isEnabled">해당 이름(<see cref="T:System.String" />)에 따라 이벤트를 필터링하는 대리자입니다. 이벤트가 활성화된 경우 대리자는 <see langword="true" />를 반환해야 합니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>이 DiagnosticListener의 이름이 있는 문자열을 반환합니다.</summary>
      <returns>이 DiagnosticListener의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>알림을 기록합니다.</summary>
      <param name="name">기록할 이벤트의 이름입니다.</param>
      <param name="value">이벤트의 페이로드를 나타내는 개체입니다.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>계측된 프로세스 내에서 사용하기 위한 다양한 데이터 페이로드의 프로덕션 시간 로깅에 대한 코드를 계측할 수 있는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.DiagnosticSource" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>알림 이벤트가 설정되었는지 여부를 확인합니다.</summary>
      <param name="name">작성 중인 이벤트의 이름입니다.</param>
      <returns>알림 이벤트가 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>알림 이벤트가 활성화되었는지 확인합니다.</summary>
      <param name="name">작성 중인 이벤트의 이름입니다.</param>
      <param name="arg1">IsEnabled에 대한 추가 컨텍스트를 나타내는 개체입니다. 소비자는 <see langword="null" />을 받을 것으로 예상해야 합니다. 이는 소비자가 이러한 이벤트에 대한 알림을 받기를 원하는지 여부를 확인하기 위해 순수 IsEnabled(string)라고 하는 생산자를 나타낼 수 있습니다. 이를 기반으로 생산자는 <see langword="null" /> 이외의 컨텍스트를 사용하여 IsEnabled(문자열, 개체, 개체)를 다시 호출할 수 있습니다.</param>
      <param name="arg2">선택 사항입니다. IsEnabled에 대한 추가 컨텍스트를 나타내는 개체입니다. 기본적으로 <see langword="null" />입니다. 소비자는 <see langword="null" />을 받을 것으로 예상해야 합니다. 이는 순수 IsEnabled(문자열) 또는 생산자라고 하는 생산자가 <paramref name="arg1" />에서 필요한 모든 컨텍스트를 통과했음을 나타낼 수 있습니다.</param>
      <returns>알림 이벤트가 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>프로세스 외부에서 발생하는 나가는 HTTP 요청과 같은 일부 이벤트 또는 작업으로 상태를 전송합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">보내는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>프로세스 외부에서 발생한 들어오는 요청과 같은 이벤트 또는 작업에서 상태를 활동으로 전송합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">들어오는 요청을 나타내는 페이로드입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>
        <see cref="T:System.Diagnostics.Activity" />를 시작하고 이벤트를 씁니다.</summary>
      <param name="activity">
        <see cref="T:System.Diagnostics.Activity" />가 시작됩니다.</param>
      <param name="args">이벤트의 페이로드로 전달되는 값을 나타내는 개체입니다.</param>
      <returns>편리한 연결을 위한 시작 작업입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>지정된 <see cref="T:System.Diagnostics.Activity" />를 중지하고, 글로벌 <see cref="P:System.Diagnostics.Activity.Current" /> 작업을 유지 관리하고, 소비자에게 <see cref="T:System.Diagnostics.Activity" />가 중지되었음을 알립니다.</summary>
      <param name="activity">중지할 작업입니다.</param>
      <param name="args">이벤트의 페이로드로 전달된 값을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>복잡한 페이로드를 로깅하는 일반적인 방법을 제공합니다.</summary>
      <param name="name">작성 중인 이벤트의 이름입니다.</param>
      <param name="value">이벤트의 페이로드로 전달되는 값을 나타내는 개체입니다. 이는 종종 여러 하위 값을 포함하는 익명 형식입니다.</param>
    </member>
  </members>
</doc>