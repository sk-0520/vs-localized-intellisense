<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.Pipes</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary vsli:raw="Represents a wrapper class for a pipe handle.">파이프 핸들에 대한 래퍼 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; class.">
        <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="preexistingHandle" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; object that represents the pre-existing handle to use.">사용할 기존 핸들을 나타내는 <see cref="T:System.IntPtr" /> 개체입니다.</param>
      <param name="ownsHandle" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to reliably release the handle during the finalization phase; &lt;see langword=&quot;false&quot; /&gt; to prevent reliable release (not recommended).">종료 단계에서 핸들을 안정적으로 해제하려면 <see langword="true" />이고, 안정적으로 해제할 수 없게 하려면 <see langword="false" />(권장되지 않음)입니다.</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafePipeHandle.IsInvalid" />
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary vsli:raw="Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations (without cancellation support on Windows platforms).">동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 익명 파이프 스트림의 클라이언트 측을 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class from the specified handle.">지정된 핸들을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object will encapsulate.">이 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid handle.">
        <paramref name="safePipeHandle" />는 유효한 핸들이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error, such as a disk error, has occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream has been closed.">디스크 오류 등의 I/O 오류가 발생한 경우  
 또는  
 스트림이 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class with the specified pipe direction and a string representation of the pipe handle.">지정된 파이프 방향 및 파이프 핸들의 문자열 표현을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="pipeHandleAsString" vsli:raw="A string that represents the pipe handle.">파이프 핸들을 나타내는 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is an invalid handle.">
        <paramref name="pipeHandleAsString" />은(는) 잘못된 핸들입니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeHandleAsString" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class with the specified string representation of the pipe handle.">파이프 핸들의 지정된 문자열 표현을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeHandleAsString" vsli:raw="A string that represents the pipe handle.">파이프 핸들을 나타내는 문자열입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is not a valid pipe handle.">
        <paramref name="pipeHandleAsString" />이 유효한 파이프 핸들이 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; instance is reclaimed by garbage collection.">가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary vsli:raw="Sets the reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 대한 읽기 모드를 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 개체에 대한 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The transmission mode is not valid. For anonymous pipes, only &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt; is supported.">전송 모드가 올바르지 않습니다. 익명 파이프의 경우 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />만 지원됩니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The transmission mode is &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;.">전송 모드는 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />입니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The connection is broken or another I/O error occurs.">연결이 끊어졌거나 다른 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode supported by the current pipe.">현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; supported by the current pipe.">현재 파이프에서 지원하는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary vsli:raw="Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.">동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 익명 파이프 주위의 스트림을 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction.">지정된 파이프 방향을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class from the specified pipe handles.">지정된 파이프 핸들을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="serverSafePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object will encapsulate.">이 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <param name="clientSafePipeHandle" vsli:raw="A safe handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 SafeHandle입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serverSafePipeHandle&quot; /&gt; or &lt;paramref name=&quot;clientSafePipeHandle&quot; /&gt; is an invalid handle.">
        <paramref name="serverSafePipeHandle" />또는 <paramref name="clientSafePipeHandle" />이 잘못된 핸들인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverSafePipeHandle&quot; /&gt; or &lt;paramref name=&quot;clientSafePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverSafePipeHandle" /> 또는 <paramref name="clientSafePipeHandle" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error, such as a disk error, has occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream has been closed.">디스크 오류 등의 I/O 오류가 발생한 경우  
 또는  
 스트림이 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction and inheritability mode.">지정된 파이프 방향 및 상속 모드를 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다. <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정해야 합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;inheritability&quot; /&gt; is not set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">
        <paramref name="inheritability" />가 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정되어 있지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction, inheritability mode, and buffer size.">지정된 파이프 방향, 상속 모드 및 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다. <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정해야 합니다.</param>
      <param name="bufferSize" vsli:raw="The size of the buffer. This value must be greater than or equal to 0.">버퍼의 크기입니다. 이 값은 0보다 크거나 같아야 합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;inheritability&quot; /&gt; is not set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="inheritability" />가 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정되어 있지 않습니다.  
또는 
 <paramref name="bufferSize" />가 0보다 작은 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary vsli:raw="Gets the safe handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object that is currently connected to the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">현재 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 연결된 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 안전한 핸들을 가져옵니다.</summary>
      <returns vsli:raw="A handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object that is currently connected to the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">현재 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 연결된 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체의 핸들입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary vsli:raw="Closes the local copy of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체 핸들의 로컬 복사본을 종료합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; instance is reclaimed by garbage collection.">가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary vsli:raw="Gets the connected &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle as a string.">연결된 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 핸들을 문자열로 가져옵니다.</summary>
      <returns vsli:raw="A string that represents the connected &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle.">연결된 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 핸들을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary vsli:raw="Sets the reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object. For anonymous pipes, transmission mode must be &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 읽기 모드를 설정합니다. 익명 파이프의 경우 전송 모드가 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />여야 합니다.</summary>
      <returns vsli:raw="The reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 읽기 모드입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The transmission mode is not valid. For anonymous pipes, only &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt; is supported.">전송 모드가 올바르지 않습니다. 익명 파이프의 경우 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />만 지원됩니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;, which is not supported for anonymous pipes.">속성이 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />로 설정되며, 이는 익명 파이프를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The connection is broken or another I/O error occurs.">연결이 끊어졌거나 다른 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode that is supported by the current pipe.">현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; that is supported by the current pipe.">현재 파이프에서 지원하는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; around a named pipe, which supports both synchronous and asynchronous read and write operations.">동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 명명된 파이프 주위의 <see cref="T:System.IO.Stream" />을 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class for the specified pipe handle with the specified pipe direction.">지정된 파이프 방향을 사용하여 지정된 파이프 핸들에 대한 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">핸들이 비동기 방식으로 열린 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="isConnected" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the pipe is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">파이프가 연결된 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; object will encapsulate.">이 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream has been closed.">스트림이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid handle.">
        <paramref name="safePipeHandle" />는 유효한 핸들이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe name.">지정된 파이프 이름을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names.">지정된 파이프 및 서버 이름을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction.">지정된 파이프와 서버 이름 및 지정된 파이프 방향을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction and pipe options.">지정된 파이프와 서버 이름 및 지정된 파이프 방향과 파이프 옵션을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />은 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="options" />는 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.">지정된 파이프와 서버 이름, 지정된 파이프 방향, 파이프 옵션 및 보안 가장 수준을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="impersonationLevel" vsli:raw="One of the enumeration values that determines the security impersonation level.">보안 가장 수준을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;impersonationLevel&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; value.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />은 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="options" />은 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.  
또는 
 <paramref name="impersonationLevel" />는 유효한 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.">지정된 파이프와 서버 이름, 지정된 파이프 방향, 파이프 옵션, 보안 가장 수준 및 상속 모드를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="impersonationLevel" vsli:raw="One of the enumeration values that determines the security impersonation level.">보안 가장 수준을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.">기본 핸들이 자식 프로세스로 상속되는지 여부를 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;impersonationLevel&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; value.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />은 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="options" />은 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.  
또는 
 <paramref name="impersonationLevel" />은 유효한 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값이 아닙니다.  
또는 
 <paramref name="inheritability" />는 유효한 <see cref="T:System.IO.HandleInheritability" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary vsli:raw="Connects to a waiting server with an infinite time-out value.">무한 시간 제한 값을 사용하여 대기 중인 서버에 연결합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The client is already connected.">클라이언트가 이미 연결되어 있습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary vsli:raw="Connects to a waiting server within the specified time-out period.">지정된 시간 제한 기간 내에 대기 서버에 연결합니다.</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</param>
      <exception cref="T:System.TimeoutException" vsli:raw="Could not connect to the server within the specified &lt;paramref name=&quot;timeout&quot; /&gt; period.">지정된 <paramref name="timeout" /> 기간 내에 서버에 연결할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is less than 0 and not set to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">
        <paramref name="timeout" />이 0보다 작고 <see cref="F:System.Threading.Timeout.Infinite" />로 설정되지 않았습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The client is already connected.">클라이언트가 이미 연결되어 있습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The server is connected to another client and the time-out period has expired.">서버가 다른 클라이언트에 연결되었고 시간 초과 기간이 만료 되었습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <summary vsli:raw="Asynchronously connects to a waiting server with an infinite timeout period.">시간 제한 없이 대기 중인 서버에 비동기 방식으로 연결합니다.</summary>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <summary vsli:raw="Asynchronously connects to a waiting server within the specified timeout period.">지정된 시간 제한 내에 대기 중인 서버에 비동기 방식으로 연결합니다.</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.">지정된 시간 제한 내에 대기 중인 서버에 비동기 방식으로 연결하고 취소 요청을 모니터링합니다.</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously connects to a waiting server and monitors cancellation requests.">대기 중인 서버에 비동기 방식으로 연결하고 취소 요청을 모니터링합니다.</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; instance is reclaimed by garbage collection.">가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary vsli:raw="Gets the number of server instances that share the same pipe name.">같은 파이프 이름을 공유하는 서버 인스턴스의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of server instances that share the same pipe name.">같은 파이프 이름을 공유하는 서버 인스턴스의 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The current &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; object has not yet connected to a &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">파이프 핸들이 설정되지 않은 경우  
또는 
현재 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 개체가 아직 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결되지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or an I/O error occurred.">파이프가 끊어졌거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying pipe handle is closed.">내부 파이프 핸들이 닫혔습니다.</exception>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; around a named pipe, supporting both synchronous and asynchronous read and write operations.">동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 명명된 파이프 주위의 <see cref="T:System.IO.Stream" />을 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class from the specified pipe handle.">지정된 파이프 핸들을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">핸들이 비동기 방식으로 열린 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="isConnected" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the pipe is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">파이프가 연결된 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object will encapsulate.">이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is an invalid handle.">
        <paramref name="safePipeHandle" />은(는) 잘못된 핸들입니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid pipe handle.  &#xA;  &#xA; -or-  &#xA;  &#xA; The maximum number of server instances has been exceeded.">
        <paramref name="safePipeHandle" />이 유효한 파이프 핸들이 아닌 경우  
또는 
서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name.">지정된 파이프 이름을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" /> 이 "익명"으로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name and pipe direction.">지정된 파이프 이름 및 파이프 방향을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, and maximum number of server instances.">지정된 파이프 이름, 파이프 방향 및 최대 서버 인스턴스 수를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A non-negative number is required.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt; is required.  &#xA;  &#xA; -or-  &#xA;  &#xA; Access rights is limited to the &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.ChangePermissions&quot; /&gt; , &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.TakeOwnership&quot; /&gt; , and &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity&quot; /&gt; flags.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />은 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
음수가 아닌 숫자가 필요합니다.  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄) 
또는 
 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />이 필요한 경우  
또는 
액세스 권한이 <see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" /> , <see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> 및 <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> 플래그로 제한되는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, and transmission mode.">지정된 파이프 이름, 파이프 방향, 최대 서버 인스턴스 수 및 전송 모드를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">파이프의 전송 모드를 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />은 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄)</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, and pipe options.">지정된 파이프 이름, 파이프 방향, 최대 서버 인스턴스 수, 전송 모드 및 파이프 옵션을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">파이프의 전송 모드를 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />은 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄) 
또는 
 <paramref name="options" />는 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, pipe options, and recommended in and out buffer sizes.">지정된 파이프 이름, 파이프 방향, 최대 서버 인스턴스 수, 전송 모드, 파이프 옵션 및 권장 입출력 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">파이프의 이름입니다.</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">파이프의 전송 모드를 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="inBufferSize" vsli:raw="A positive value greater than 0 that indicates the input buffer size.">입력 버퍼 크기를 나타내는 0보다 큰 양의 값입니다.</param>
      <param name="outBufferSize" vsli:raw="A positive value greater than 0 that indicates the output buffer size.">출력 버퍼 크기를 나타내는 0보다 큰 양의 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inBufferSize&quot; /&gt; is negative.">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
또는 
 <paramref name="direction" />은 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄) 
또는 
 <paramref name="options" />은 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.  
또는 
 <paramref name="inBufferSize" />가 음수입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to wait for a client to connect.">클라이언트 연결을 대기할 비동기 작업을 시작합니다.</summary>
      <param name="callback" vsli:raw="The method to call when a client connects to the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">클라이언트가 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결할 때 호출할 메서드입니다.</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous request from other requests.">다른 요청에서 특정 비동기 요청을 구별하는 사용자 제공 개체입니다.</param>
      <returns vsli:raw="An object that references the asynchronous request.">비동기 요청을 참조하는 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe was not opened asynchronously.  &#xA;  &#xA; -or-  &#xA;  &#xA; A pipe connection has already been established.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">파이프가 비동기적으로 열리지 않은 경우  
 또는  
 파이프 연결이 이미 설정된 경우  
 또는  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">파이프 연결이 끊어진 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary vsli:raw="Disconnects the current connection.">현재 연결을 끊습니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">파이프 연결이 아직 설정되지 않은 경우  
 또는  
 연결된 파이프가 이미 연결이 끊긴 경우  
 또는  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous operation to wait for a client to connect.">클라이언트 연결을 대기할 비동기 작업을 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="The pending asynchronous request.">보류 중인 비동기 요청입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe was not opened asynchronously.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">파이프가 비동기적으로 열리지 않은 경우  
 또는  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">파이프 연결이 끊어진 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; instance is reclaimed by garbage collection.">가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary vsli:raw="Gets the user name of the client on the other end of the pipe.">파이프 반대쪽 끝에서 클라이언트의 사용자 이름을 가져옵니다.</summary>
      <returns vsli:raw="The user name of the client on the other end of the pipe.">파이프 반대쪽 끝에 있는 클라이언트의 사용자 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">파이프 연결이 아직 설정되지 않은 경우  
 또는  
 연결된 파이프가 이미 연결이 끊긴 경우  
 또는  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.  &#xA;  &#xA; -or-  &#xA;  &#xA; The user name of the client is longer than 19 characters.">파이프 연결이 끊어진 경우  
 또는  
 클라이언트의 사용자 이름이 19자보다 깁니다.</exception>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary vsli:raw="Represents the maximum number of server instances that the system resources allow.">시스템 리소스가 허용하는 최대 서버 인스턴스 수를 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary vsli:raw="Calls a delegate while impersonating the client.">클라이언트를 가장하는 동안 대리자를 호출합니다.</summary>
      <param name="impersonationWorker" vsli:raw="The delegate that specifies a method to call.">호출할 메서드를 지정하는 대리자입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">파이프 연결이 아직 설정되지 않은 경우  
 또는  
 연결된 파이프가 이미 연결이 끊긴 경우  
 또는  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">파이프 연결이 끊어진 경우  
 또는  
 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary vsli:raw="Waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">클라이언트가 이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결할 때까지 기다립니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A pipe connection has already been established.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">파이프 연결이 이미 설정된 경우  
 또는  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">파이프 연결이 끊어진 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <summary vsli:raw="Asynchronously waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">클라이언트가 이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 비동기 방식으로 연결할 때까지 기다립니다.</summary>
      <returns vsli:raw="A task that represents the asynchronous wait operation.">비동기 대기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object and monitors cancellation requests.">클라이언트가 이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결할 때까지 비동기 방식으로 기다리고 취소 요청을 모니터링합니다.</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">취소 요청을 모니터링할 토큰입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous wait operation.">비동기 대기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary vsli:raw="Specifies the direction of the pipe.">파이프의 방향을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary vsli:raw="Specifies that the pipe direction is in.">파이프 방향을 안쪽으로 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary vsli:raw="Specifies that the pipe direction is two-way.">파이프 방향을 양쪽으로 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary vsli:raw="Specifies that the pipe direction is out.">파이프 방향을 바깥쪽으로 지정합니다.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary vsli:raw="Provides options for creating a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object. This enumeration has a &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt; attribute that allows a bitwise combination of its member values.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체를 만들기 위한 옵션을 제공합니다. 이 열거형에는 멤버 값의 비트 조합을 허용하는 <see cref="T:System.FlagsAttribute" />가 있습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary vsli:raw="Indicates that the pipe can be used for asynchronous reading and writing.">파이프를 비동기 읽기 및 쓰기에 사용할 수 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.CurrentUserOnly" />
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary vsli:raw="Indicates that there are no additional parameters.">추가 매개 변수가 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary vsli:raw="Indicates that the system should write through any intermediate cache and go directly to the pipe.">시스템에서 중간 캐시를 통해 데이터를 기록하고 파이프로 직접 이동해야 함을 나타냅니다.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object around a pipe, which supports both anonymous and named pipes.">익명 파이프와 명명된 파이프를 모두 지원하는 파이프 주위의 <see cref="T:System.IO.Stream" /> 개체를 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value and buffer size.">지정된 <see cref="T:System.IO.Pipes.PipeStream" /> 값과 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.PipeDirection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; values that indicates the direction of the pipe object.">파이프 개체의 방향을 나타내는 <see cref="T:System.IO.Pipes.PipeDirection" /> 값 중 하나입니다.</param>
      <param name="bufferSize" vsli:raw="A positive &lt;see cref=&quot;T:System.Int32&quot; /&gt; value greater than or equal to 0 that indicates the buffer size.">버퍼 크기를 나타내는 0 또는 0보다 큰 양의 <see cref="T:System.Int32" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="bufferSize" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt;, &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt;, and buffer size.">지정된 <see cref="T:System.IO.Pipes.PipeStream" />, <see cref="T:System.IO.Pipes.PipeDirection" /> 및 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; values that indicates the direction of the pipe object.">파이프 개체의 방향을 나타내는 <see cref="T:System.IO.Pipes.PipeDirection" /> 값 중 하나입니다.</param>
      <param name="transmissionMode" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates the transmission mode of the pipe object.">파이프 개체의 전송 모드를 나타내는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값 중 하나입니다.</param>
      <param name="outBufferSize" vsli:raw="A positive &lt;see cref=&quot;T:System.Int32&quot; /&gt; value greater than or equal to 0 that indicates the buffer size.">버퍼 크기를 나타내는 0 또는 0보다 큰 양의 <see cref="T:System.Int32" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;transmissionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
또는 
 <paramref name="transmissionMode" />은 유효한 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값이 아닙니다.  
또는 
 <paramref name="bufferSize" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read operation.">비동기 읽기 작업을 시작합니다.</summary>
      <param name="buffer" vsli:raw="The buffer to read data into.">데이터를 읽어올 버퍼입니다.</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading.">읽기를 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">읽을 최대 바이트 수입니다.</param>
      <param name="callback" vsli:raw="The method to call when the asynchronous read operation is completed.">비동기 읽기 작업이 완료되면 호출할 메서드입니다.</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous read request from other requests.">다른 요청에서 특정 비동기 읽기 요청을 구별하는 사용자 제공 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous read.">비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" />가 0보다 작은 경우  
또는 
 <paramref name="count" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">파이프에서 읽기 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write operation.">비동기 쓰기 작업을 시작합니다.</summary>
      <param name="buffer" vsli:raw="The buffer that contains the data to write to the current stream.">현재 스트림에 쓸 데이터를 포함하는 버퍼입니다.</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin copying bytes to the current stream.">현재 스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">쓸 최대 바이트 수입니다.</param>
      <param name="callback" vsli:raw="The method to call when the asynchronous write operation is completed.">비동기 쓰기 작업이 완료되면 호출할 메서드입니다.</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous write request from other requests.">다른 요청에서 특정 비동기 쓰기 요청을 구별하는 사용자 제공 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous write operation.">비동기 쓰기 작업을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" />가 0보다 작은 경우  
또는 
 <paramref name="count" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary vsli:raw="Gets a value indicating whether the current stream supports read operations.">현재 스트림이 읽기 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the stream supports read operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스트림이 읽기 작업을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary vsli:raw="Gets a value indicating whether the current stream supports seek operations.">현재 스트림이 검색 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary vsli:raw="Gets a value indicating whether the current stream supports write operations.">현재 스트림이 쓰기 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the stream supports write operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스트림이 쓰기 작업을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary vsli:raw="Verifies that the pipe is in a proper state for getting or setting properties.">파이프가 속성을 가져오거나 설정할 수 있는 적절한 상태인지 확인합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary vsli:raw="Verifies that the pipe is in a connected state for read operations.">파이프가 읽기 작업을 위해 연결된 상태인지 확인합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary vsli:raw="Verifies that the pipe is in a connected state for write operations.">파이프가 쓰기 작업을 위해 연결된 상태인지 확인합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class and optionally releases the managed resources.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 클래스에 사용되는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous read request.">보류 중인 비동기 읽기 요청을 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request.">보류 중인 비동기 요청에 대한 참조입니다.</param>
      <returns vsli:raw="The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).">지금까지 읽은 바이트 수입니다. 반환 값 0은 스트림의 끝(파이프가 닫힘)을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" />가 현재 스트림의 <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 메서드에서 시작되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream is closed or an internal error has occurred.">스트림이 닫혔거나 내부 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous write request.">보류 중인 비동기 쓰기 요청을 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request.">보류 중인 비동기 요청에 대한 참조입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" />가 현재 스트림의 <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 메서드에서 시작되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream is closed or an internal error has occurred.">스트림이 닫혔거나 내부 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary vsli:raw="Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.">현재 스트림에 대한 버퍼를 지우고 버퍼링된 모든 데이터를 내부 디바이스에 기록합니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary vsli:raw="Gets the size, in bytes, of the inbound buffer for a pipe.">파이프에 대한 인바운드 버퍼의 크기(바이트 단위)를 가져옵니다.</summary>
      <returns vsli:raw="An integer value that represents the inbound buffer size, in bytes.">바이트 단위로 인바운드 버퍼 크기를 나타내는 정수 값입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream is unreadable.">스트림을 읽을 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is waiting to connect.">파이프가 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object from the specified &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object.">지정된 <see cref="T:System.IO.Pipes.PipeStream" /> 개체에서 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 개체를 초기화합니다.</summary>
      <param name="handle" vsli:raw="The &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object of the pipe to initialize.">초기화할 파이프의 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 개체입니다.</param>
      <param name="isExposed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to expose the handle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">핸들을 노출하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">핸들이 비동기 방식으로 열린 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="A handle cannot be bound to the pipe.">핸들을 파이프에 바인딩할 수 없는 경우</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object was opened asynchronously or synchronously.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 동기적으로 열렸는지 비동기적으로 열렸는지 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 비동기적으로 열렸으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary vsli:raw="Gets or sets a value indicating whether a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is connected.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 연결되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary vsli:raw="Gets a value indicating whether a handle to a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is exposed.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체에 대한 핸들이 노출되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a handle to the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체에 대한 핸들이 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary vsli:raw="Gets a value indicating whether there is more data in the message returned from the most recent read operation.">가장 최근의 읽기 작업을 통해 반환된 메시지에 다른 데이터가 더 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are no more characters to read in the message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지에서 읽을 문자가 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe's &lt;see cref=&quot;P:System.IO.Pipes.PipeStream.ReadMode&quot; /&gt; property value is not &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;.">파이프가 연결되지 않은 경우  
또는 
파이프 핸들이 설정되지 않은 경우  
또는 
파이프의 <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> 속성 값이 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />가 아닌 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary vsli:raw="Gets the length of a stream, in bytes.">스트림의 길이(바이트 단위)를 가져옵니다.</summary>
      <returns vsli:raw="0 in all cases.">모든 경우에 0입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">항상 throw됩니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary vsli:raw="Gets the size, in bytes, of the outbound buffer for a pipe.">파이프에 대한 아웃바운드 버퍼의 크기(바이트 단위)를 가져옵니다.</summary>
      <returns vsli:raw="The outbound buffer size, in bytes.">바이트 단위로 표현한 아웃바운드 버퍼 크기입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream is unwriteable.">스트림이 쓸 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is waiting to connect.">파이프가 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary vsli:raw="Gets or sets the current position of the current stream.">현재 스트림의 현재 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="0 in all cases.">모든 경우에 0입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">항상 throw됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a block of bytes from a stream and writes the data to a specified buffer starting at a specified position for a specified length.">스트림에서 바이트 블록을 읽고 지정된 길이에 대해 지정된 위치에서 시작하는 지정 버퍼에 데이터를 씁니다.</summary>
      <param name="buffer" vsli:raw="When this method returns, contains the specified byte array with the values between &lt;paramref name=&quot;offset&quot; /&gt; and (&lt;paramref name=&quot;offset&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1) replaced by the bytes read from the current source.">이 메서드는 지정된 바이트 배열의 값이 <paramref name="offset" />과 (<paramref name="offset" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 바이트로 교체된 상태로 반환됩니다.</param>
      <param name="offset" vsli:raw="The byte offset in the &lt;paramref name=&quot;buffer&quot; /&gt; array at which the bytes that are read will be placed.">읽은 바이트를 배치할 <paramref name="buffer" /> 배열의 바이트 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">읽을 최대 바이트 수입니다.</param>
      <returns vsli:raw="The total number of bytes that are read into &lt;paramref name=&quot;buffer&quot; /&gt;. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.">
        <paramref name="buffer" />로 읽어들인 바이트의 총 수입니다. 이 값은 현재 사용 가능한 바이트 수가 부족한 경우 요청된 바이트 수보다 작을 수 있으며, 스트림의 끝에 도달하면 0이 됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" />가 0보다 작은 경우  
또는 
 <paramref name="count" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">파이프에서 읽기 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Any I/O error occurred.">I/O 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Span{System.Byte})">
      <summary vsli:raw="Reads a sequence of bytes from the current stream, writes them to a byte array, and advances the position within the stream by the number of bytes read.">현재 스트림에서 바이트 시퀀스를 읽고, 이를 바이트 배열에 쓰고, 읽은 바이트 수만큼 스트림에서 위치를 앞으로 이동합니다.</summary>
      <param name="buffer" vsli:raw="A region of memory. When this method returns, the contents of this region are replaced by the bytes read from the current source.">메모리 영역입니다. 이 메서드가 반환될 때 이 영역의 내용은 현재 소스에서 읽은 바이트로 대체됩니다.</param>
      <returns vsli:raw="The total number of bytes read into the &lt;paramref name=&quot;buffer&quot; /&gt;. This can be less than the number of bytes allocated in &lt;paramref name=&quot;buffer&quot; /&gt; if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.">
        <paramref name="buffer" />로 읽어온 총 바이트 수입니다. 많은 바이트가 현재 사용 가능하지 않은 경우 <paramref name="buffer" />에 할당된 바이트 수보다 적을 수 있으며 스트림의 끝에 도달하면 0이 됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The number of bytes read was longer than the buffer length.">읽은 바이트 수가 버퍼 길이보다 깁니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">스트림이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">파이프가 아직 연결되지 않았습니다.
또는
파이프 연결이 끊어진 상태입니다.
또는
파이프 핸들이 설정되지 않은 경우  (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current stream to a byte array starting at a specified position for a specified number of bytes, advances the position within the stream by the number of bytes read, and monitors cancellation requests.">현재 스트림에서 지정된 바이트 수에 대해 지정된 위치에서 시작하는 바이트 배열까지 바이트의 시퀀스를 비동기적으로 읽고, 읽은 바이트 수만큼 스트림 내에서 앞으로 이동하며, 취소 요청을 모니터링합니다.</summary>
      <param name="buffer" vsli:raw="The buffer to write the data into.">데이터를 쓸 버퍼입니다.</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin writing data from the stream.">스트림의 데이터를 쓰기 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">읽을 최대 바이트 수입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.">비동기 읽기 작업을 나타내는 작업입니다. 해당 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성의 값에는 버퍼 안으로 읽어들인 총 바이트 수가 포함됩니다. 현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달한 경우에는 0이 될 수도 있습니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">스트림이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">파이프가 아직 연결되지 않았습니다.
또는
파이프 연결이 끊어진 상태입니다.
또는
파이프 핸들이 설정되지 않은 경우  (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current stream, writes them to a byte memory range, advances the position within the stream by the number of bytes read, and monitors cancellation requests.">현재 스트림에서 바이트의 시퀀스를 비동기적으로 읽고, 이를 바이트 메모리 범위에 쓰고, 읽은 바이트 수만큼 스트림 내에서 앞으로 이동하며, 취소 요청을 모니터링합니다.</summary>
      <param name="buffer" vsli:raw="The region of memory to write the data into.">데이터를 기록할 메모리의 영역입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.ValueTask`1.Result&quot; /&gt; property contains the total number of bytes read into the buffer. The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the stream has been reached.">비동기 읽기 작업을 나타내는 작업입니다. 해당 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 속성의 값에는 버퍼 안으로 읽어들인 총 바이트 수가 포함됩니다. 결과 값은 많은 바이트가 현재 사용 가능하지 않은 경우 버퍼에 할당된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달하면 0이 될 수 있습니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">스트림이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or- &#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">파이프가 아직 연결되지 않았습니다.
또는
파이프 연결이 끊어진 상태입니다.
또는
파이프 핸들이 설정되지 않은 경우  (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary vsli:raw="Reads a byte from a pipe.">파이프에서 바이트를 읽습니다.</summary>
      <returns vsli:raw="The byte, cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;, or -1 indicates the end of the stream (the pipe has been closed).">
        <see cref="T:System.Int32" />로 캐스팅된 바이트 또는 스트림의 끝(파이프가 닫힘)을 나타내는 -1입니다.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">파이프에서 읽기 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Any I/O error occurred.">I/O 오류가 발생한 경우</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary vsli:raw="Gets or sets the reading mode for a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체에 대한 읽기 모드를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates how the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object reads from the pipe.">파이프를 통한 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 개체의 읽기 모드를 나타내는 <see cref="T:System.IO.Pipes.PipeStream" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The supplied value is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value.">제공된 값이 유효한 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값이 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The supplied value is not a supported &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value for this pipe stream.">제공된 값은 이 파이프 스트림에 대해 지원되는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe is waiting to connect with a named client.">핸들을 설정하지 않은 경우  
 또는  
 파이프가 명명된 클라이언트와의 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or an I/O error occurred with a named client.">파이프가 끊어졌거나 명명된 클라이언트에 I/O 오류가 발생한 경우</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary vsli:raw="Gets the safe handle for the local end of the pipe that the current &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object encapsulates.">현재 <see cref="T:System.IO.Pipes.PipeStream" /> 개체에서 캡슐화하는 파이프의 로컬 끝에 대한 SafeHandle을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object for the pipe that is encapsulated by the current &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object.">현재 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 개체에서 캡슐화하는 파이프에 대한 <see cref="T:System.IO.Pipes.PipeStream" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe handle has not been set.">파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="Sets the current position of the current stream to the specified value.">현재 스트림의 현재 위치를 지정된 값으로 설정합니다.</summary>
      <param name="offset" vsli:raw="The point, relative to &lt;paramref name=&quot;origin&quot; /&gt;, to begin seeking from.">검색을 시작할 지점입니다. 이 위치는 <paramref name="origin" />을 기준으로 합니다.</param>
      <param name="origin" vsli:raw="Specifies the beginning, the end, or the current position as a reference point for &lt;paramref name=&quot;offset&quot; /&gt;, using a value of type &lt;see cref=&quot;T:System.IO.SeekOrigin&quot; /&gt;.">
        <see cref="T:System.IO.SeekOrigin" /> 형식의 값을 사용하여 시작, 끝 또는 현재 위치를 <paramref name="offset" />에 대한 참조 지점으로 지정합니다.</param>
      <returns vsli:raw="The new position in the stream.">스트림 내의 새 위치입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the current stream to the specified value.">현재 스트림의 길이를 지정된 값으로 설정합니다.</summary>
      <param name="value" vsli:raw="The new length of the stream.">스트림의 새 길이입니다.</param>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode supported by the current pipe.">현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates the transmission mode supported by the current pipe.">현재 파이프에서 지원하는 전송 모드를 나타내는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe is waiting to connect in an anonymous client/server operation or with a named client.">핸들을 설정하지 않은 경우  
 또는  
 파이프가 익명 클라이언트/서버 작업에서의 연결 또는 명명된 클라이언트와의 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary vsli:raw="Waits for the other end of the pipe to read all sent bytes.">전달된 바이트를 파이프의 다른 끝에서 모두 읽을 때까지 기다립니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes a block of bytes to the current stream using data from a buffer.">버퍼의 데이터를 사용하여 현재 스트림에 바이트 블록을 씁니다.</summary>
      <param name="buffer" vsli:raw="The buffer that contains data to write to the pipe.">파이프에 쓸 데이터를 포함하는 버퍼입니다.</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin copying bytes to the current stream.">현재 스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to write to the current stream.">현재 스트림에 쓸 최대 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" />가 0보다 작은 경우  
또는 
 <paramref name="count" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.">현재 스트림에 바이트 시퀀스를 쓰고 쓴 바이트 수만큼 이 스트림에서 현재 위치를 앞으로 이동합니다.</summary>
      <param name="buffer" vsli:raw="A region of memory. This method copies the contents of this region to the current stream.">메모리 영역입니다. 이 메서드는 이 영역의 내용을 현재의 스트림에 복사합니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support writing.">스트림이 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="">파이프가 끊어졌습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">파이프가 아직 연결되지 않았습니다.
또는
파이프 연결이 끊어진 상태입니다.
또는
파이프 핸들이 설정되지 않은 경우  (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes a specified number of bytes from a byte array starting at a specified position, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.">지정된 위치에서 시작하는 바이트 배열에서 지정된 바이트 수를 비동기적으로 쓰고, 쓴 바이트 수만큼 이 스트림 내의 현재 위치를 앞으로 이동하고, 취소 요청을 모니터링합니다.</summary>
      <param name="buffer" vsli:raw="The buffer to write data from.">데이터를 쓸 버퍼입니다.</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; from which to begin copying bytes to the stream.">스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">쓸 최대 바이트 수입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">비동기 쓰기 작업을 나타내는 작업입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; is negative.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;count&quot; /&gt; is negative.">
        <paramref name="offset" />가 음수입니다.
또는
<paramref name="count" />가 음수입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt;.Length - &lt;paramref name=&quot;offset&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="buffer" />.Length - <paramref name="offset" />이 <paramref name="count" />보다 작습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Stream does not support writing.">스트림이 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="">파이프가 끊어졌습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">파이프가 아직 연결되지 않았습니다.
또는
파이프 연결이 끊어진 상태입니다.
또는
파이프 핸들이 설정되지 않은 경우  (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.">바이트의 시퀀스를 현재 스트림에 비동기적으로 쓰고 쓰여진 바이트 수만큼 이 스트림 내의 현재 위치를 앞으로 이동한 후 취소 요청을 모니터링합니다.</summary>
      <param name="buffer" vsli:raw="The region of memory to write data from.">데이터를 기록할 메모리의 영역입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">비동기 쓰기 작업을 나타내는 작업입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Stream does not support writing.">스트림이 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="">파이프가 끊어졌습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">파이프가 아직 연결되지 않았습니다.
또는
파이프 연결이 끊어진 상태입니다.
또는
파이프 핸들이 설정되지 않은 경우  (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary vsli:raw="Writes a byte to the current stream.">현재 스트림에 바이트를 씁니다.</summary>
      <param name="value" vsli:raw="The byte to write to the stream.">스트림에 쓸 바이트입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary vsli:raw="Represents the method to call as the client.">클라이언트로 호출할 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary vsli:raw="Specifies the transmission mode of the pipe.">파이프의 전송 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary vsli:raw="Indicates that data in the pipe is transmitted and read as a stream of bytes.">파이프의 데이터를 바이트 스트림으로 전송하여 읽도록 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary vsli:raw="Indicates that data in the pipe is transmitted and read as a stream of messages.">파이프의 데이터를 메시지 스트림으로 전송하여 읽도록 지정합니다.</summary>
    </member>
  </members>
</doc>