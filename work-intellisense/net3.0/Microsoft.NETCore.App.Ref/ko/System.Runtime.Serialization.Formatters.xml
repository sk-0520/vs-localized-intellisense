<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary vsli:raw="Provides base functionality for the common language runtime serialization formatters.">공용 언어 런타임 serialization 포맷터의 기본 기능을 제공합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatter&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.Formatter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; used with the current formatter.">파생 클래스에서 재정의하는 경우 현재 포맷터에 사용되는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; used with the current formatter.">현재 포맷터에 사용되는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for the current serialization.">파생 클래스에서 재정의하는 경우 현재 serialization에 사용되는 <see cref="T:System.Runtime.Serialization.StreamingContext" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for the current serialization.">현재 serialization에 사용되는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="When overridden in a derived class, deserializes the stream attached to the formatter when it was created, creating a graph of objects identical to the graph originally serialized into that stream.">파생 클래스에서 재정의하는 경우, 포맷터에 연결된 스트림은 만들어질 때 deserialize되며 해당 스트림에 원래 serialize된 그래프와 동일한 개체 그래프가 만들어집니다.</summary>
      <param name="serializationStream" vsli:raw="The stream to deserialize.">deserialize할 스트림입니다.</param>
      <returns vsli:raw="The top object of the deserialized graph of objects.">deserialize된 개체 그래프의 최상위 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary vsli:raw="Returns the next object to serialize, from the formatter's internal work queue.">serialize할 다음 개체를 포맷터의 내부 작업 큐에서 반환합니다.</summary>
      <param name="objID" vsli:raw="The ID assigned to the current object during serialization.">serialization 중에 현재 개체에 할당된 ID입니다.</param>
      <returns vsli:raw="The next object to serialize.">serialize할 다음 개체입니다.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The next object retrieved from the work queue did not have an assigned ID.">작업 큐에서 검색된 다음 개체에 ID가 할당되지 않은 경우</exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; used with the current formatter.">현재 포맷터에 사용되는 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />가 들어 있습니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary vsli:raw="Contains a &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; of the objects left to serialize.">serialize할 개체의 <see cref="T:System.Collections.Queue" />가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary vsli:raw="Schedules an object for later serialization.">개체가 나중에 serialize되도록 예약합니다.</summary>
      <param name="obj" vsli:raw="The object to schedule for serialization.">serialize되도록 예약된 개체입니다.</param>
      <returns vsli:raw="The object ID assigned to the object.">개체에 할당된 개체 ID입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="When overridden in a derived class, serializes the graph of objects with the specified root to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 루트가 지정된 개체 그래프를 포맷터에 이미 연결된 스트림에 serialize합니다.</summary>
      <param name="serializationStream" vsli:raw="The stream to which the objects are serialized.">개체가 serialize되는 스트림입니다.</param>
      <param name="graph" vsli:raw="The object at the root of the graph to serialize.">그래프의 루트에 있는 serialize할 개체입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; used with the current formatter.">파생 클래스에서 재정의하는 경우 현재 포맷터에 사용되는 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; used with the current formatter.">현재 포맷터에 사용되는 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes an array to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 배열을 씁니다.</summary>
      <param name="obj" vsli:raw="The array to write.">쓸 배열입니다.</param>
      <param name="name" vsli:raw="The name of the array.">배열의 이름입니다.</param>
      <param name="memberType" vsli:raw="The type of elements that the array holds.">배열이 보유하는 요소의 형식입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a Boolean value to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 부울 값을 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an 8-bit unsigned integer to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 부호 없는 8비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a Unicode character to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 유니코드 문자를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 <see cref="T:System.DateTime" /> 값을 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 <see cref="T:System.Decimal" /> 값을 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a double-precision floating-point number to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 배정밀도 부동 소수점 숫자를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 16-bit signed integer to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 부호 있는 16비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 32-bit signed integer to the stream.">파생 클래스에서 재정의하는 경우 스트림에 부호 있는 32비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 64-bit signed integer to the stream.">파생 클래스에서 재정의하는 경우 스트림에 부호 있는 64비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary vsli:raw="Inspects the type of data received, and calls the appropriate &lt;see langword=&quot;Write&quot; /&gt; method to perform the write to the stream already attached to the formatter.">받은 데이터 형식을 검사한 다음 적절한 <see langword="Write" /> 메서드를 호출하여 포맷터에 이미 연결된 스트림에 씁니다.</summary>
      <param name="memberName" vsli:raw="The name of the member to serialize.">serialize할 멤버의 이름입니다.</param>
      <param name="data" vsli:raw="The object to write to the stream attached to the formatter.">포맷터에 연결된 스트림에 쓸 개체입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes an object reference to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 개체 참조를 씁니다.</summary>
      <param name="obj" vsli:raw="The object reference to write.">쓸 개체 참조입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
      <param name="memberType" vsli:raw="The type of object the reference points to.">참조가 가리키는 개체의 형식입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an 8-bit signed integer to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 부호 있는 8비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a single-precision floating-point number to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 단정밀도 부동 소수점 숫자를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 <see cref="T:System.TimeSpan" /> 값을 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 16-bit unsigned integer to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 부호 없는 16비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 32-bit unsigned integer to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 부호 없는 32비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 64-bit unsigned integer to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 부호 없는 64비트 정수를 씁니다.</summary>
      <param name="val" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes a value of the given type to the stream already attached to the formatter.">파생 클래스에서 재정의하는 경우 포맷터에 이미 연결된 스트림에 지정된 형식의 값을 씁니다.</summary>
      <param name="obj" vsli:raw="The object representing the value type.">값 형식을 나타내는 개체입니다.</param>
      <param name="name" vsli:raw="The name of the member.">멤버의 이름입니다.</param>
      <param name="memberType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value type.">값 형식의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary vsli:raw="Represents a base implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.IFormatterConverter&quot; /&gt; interface that uses the &lt;see cref=&quot;T:System.Convert&quot; /&gt; class and the &lt;see cref=&quot;T:System.IConvertible&quot; /&gt; interface.">
        <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> 클래스 및 <see cref="T:System.Convert" /> 인터페이스를 사용하는 <see cref="T:System.IConvertible" /> 인터페이스의 기본 구현을 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.FormatterConverter&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.FormatterConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary vsli:raw="Converts a value to the given &lt;see cref=&quot;T:System.Type&quot; /&gt;.">값을 지정된 <see cref="T:System.Type" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; into which &lt;paramref name=&quot;value&quot; /&gt; is converted.">
        <paramref name="value" />가 변환될 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary vsli:raw="Converts a value to the given &lt;see cref=&quot;T:System.TypeCode&quot; /&gt;.">값을 지정된 <see cref="T:System.TypeCode" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="typeCode" vsli:raw="The &lt;see cref=&quot;T:System.TypeCode&quot; /&gt; into which &lt;paramref name=&quot;value&quot; /&gt; is converted.">
        <paramref name="value" />가 변환될 <see cref="T:System.TypeCode" />입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">값을 <see cref="T:System.Boolean" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary vsli:raw="Converts a value to an 8-bit unsigned integer.">값을 부호 없는 8비트 정수로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary vsli:raw="Converts a value to a Unicode character.">값을 유니코드 문자로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">값을 <see cref="T:System.DateTime" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">값을 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary vsli:raw="Converts a value to a double-precision floating-point number.">값을 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary vsli:raw="Converts a value to a 16-bit signed integer.">값을 부호 있는 16비트 정수로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary vsli:raw="Converts a value to a 32-bit signed integer.">값을 부호 있는 32비트 정수로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary vsli:raw="Converts a value to a 64-bit signed integer.">값을 부호 있는 64비트 정수로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">값을 <see cref="T:System.SByte" />로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary vsli:raw="Converts a value to a single-precision floating-point number.">값을 단정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정한 개체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary vsli:raw="Converts a value to a 16-bit unsigned integer.">값을 부호 없는 16비트 정수로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary vsli:raw="Converts a value to a 32-bit unsigned integer.">값을 부호 없는 32비트 정수로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary vsli:raw="Converts a value to a 64-bit unsigned integer.">값을 부호 없는 64비트 정수로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">변환된 <paramref name="value" />이거나, <paramref name="type" /> 매개 변수가 <see langword="null" />이면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary vsli:raw="Serializes and deserializes an object, or an entire graph of connected objects, in binary format.">개체 또는 연결된 개체의 전체 그래프를 이진 형식으로 serialize 및 deserialize합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; class with default values.">기본값을 사용하여 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; class with a given surrogate selector and streaming context.">제공된 서로게이트 선택기와 스트리밍 컨텍스트를 사용하여 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="selector" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; to use. Can be &lt;see langword=&quot;null&quot; /&gt;.">사용할 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />입니다. <see langword="null" />일 수 있습니다.</param>
      <param name="context" vsli:raw="The source and destination for the serialized data.">serialize된 데이터의 소스와 대상입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary vsli:raw="Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.">어셈블리를 찾고 로드하는 작업과 관련된 deserializer 동작을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&quot; /&gt; values that specifies the deserializer behavior.">deserializer 동작을 지정하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary vsli:raw="(Insecure) Gets or sets an object of type &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that controls the binding of a serialized object to a type.">형식에 대해 serialize된 개체를 제어하는 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 형식의 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The serialization binder to use with this formatter.">이 포맷터와 함께 사용할 serialization 바인더입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; for this formatter.">이 포맷터에 대한 <see cref="T:System.Runtime.Serialization.StreamingContext" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The streaming context to use with this formatter.">이 포맷터와 함께 사용할 스트리밍 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the specified stream into an object graph.">지정된 스트림을 개체 그래프로 deserialize합니다.</summary>
      <param name="serializationStream" vsli:raw="The stream from which to deserialize the object graph.">개체 그래프를 deserialize할 스트림입니다.</param>
      <returns vsli:raw="The top (root) of the object graph.">개체 그래프의 최상위(루트) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serializationStream" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; supports seeking, but its length is 0.&#xA;&#xA; -or-&#xA;&#xA;The input stream does not represent a well-formed &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; serialized payload.&#xA;&#xA;-or-&#xA;&#xA;An error occurred while deserializing an object from the input stream.&#xA;&#xA;The &lt;see langword=&quot;InnerException&quot; /&gt; property may contain more information about the root cause.">
        <paramref name="serializationStream" />이 검색을 지원하지만 길이가 0입니다.  
또는 
대상 형식은 <see cref="T:System.Decimal" />이지만 값은 <see cref="T:System.Decimal" /> 형식의 범위를 벗어납니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; of automatic deserialization the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; performs.">
        <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />가 수행하는 자동 deserialization의 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; that represents the current automatic deserialization level.">현재 자동 deserialization 수준을 나타내는 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the object, or graph of objects with the specified top (root), to the given stream.">개체나 지정된 최상위(루트)를 가진 개체의 그래프를 해당 스트림으로 serialize합니다.</summary>
      <param name="serializationStream" vsli:raw="The stream to which the graph is to be serialized.">그래프가 serialize될 스트림입니다.</param>
      <param name="graph" vsli:raw="The object at the root of the graph to serialize.">그래프의 루트에 있는 serialize할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;graph&quot; /&gt; is null.">
        <paramref name="serializationStream" />이 <see langword="null" />인 경우  
또는 
<paramref name="graph" />가 null인 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An error has occurred during serialization, such as if an object in the &lt;paramref name=&quot;graph&quot; /&gt; parameter is not marked as serializable.">
        <paramref name="graph" /> 매개 변수의 개체가 serializable로 표시되지 않은 경우처럼 serialization을 수행하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that controls type substitution during serialization and deserialization.">serialization 및 deserialization을 수행하는 동안 형식 대체를 제어하는 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The surrogate selector to use with this formatter.">이 포맷터와 함께 사용할 서로게이트 선택기입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary vsli:raw="Gets or sets the format in which type descriptions are laid out in the serialized stream.">serialize된 스트림에서 형식 설명을 레이아웃하는 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The style of type layouts to use.">사용할 레이아웃 형식의 스타일입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary vsli:raw="Indicates the method that will be used during deserialization for locating and loading assemblies.">deserialize할 때 어셈블리를 찾아 로드하는 데 사용될 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary vsli:raw="In full mode, the assembly used during deserialization must match exactly the assembly used during serialization. The &lt;see cref=&quot;Overload:System.Reflection.Assembly.Load&quot; /&gt; method of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; class is used to load the assembly.">전체 모드에서 deserialize할 때 사용되는 어셈블리는 serialize할 때 사용된 어셈블리와 정확히 일치해야 합니다. <see cref="Overload:System.Reflection.Assembly.Load" /> 클래스의 <see cref="T:System.Reflection.Assembly" /> 메서드는 어셈블리를 로드하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary vsli:raw="In simple mode, the assembly used during deserialization need not match exactly the assembly used during serialization. Specifically, the version numbers need not match as the &lt;see cref=&quot;Overload:System.Reflection.Assembly.LoadWithPartialName&quot; /&gt; method is used to load the assembly.">단순 모드에서 deserialize할 때 사용되는 어셈블리는 serialize할 때 사용된 어셈블리와 정확히 일치하지 않아도 됩니다. 특히, 어셈블리를 로드하는 데 <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> 메서드가 사용될 경우 버전 번호는 일치하지 않아도 됩니다.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary vsli:raw="Indicates the format in which type descriptions are laid out in the serialized stream.">형식 설명을 serialize된 스트림에 레이아웃하는 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary vsli:raw="Indicates that types can be given to all object members and &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; object members.">형식이 모든 개체 멤버와 <see cref="T:System.Runtime.Serialization.ISerializable" /> 개체 멤버에 지정될 수 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary vsli:raw="Indicates that types can be stated only for arrays of objects, object members of type &lt;see cref=&quot;T:System.Object&quot; /&gt;, and &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; non-primitive value types.">개체 배열, <see cref="T:System.Object" /> 형식의 개체 멤버 및 기본 형식이 아닌 <see cref="T:System.Runtime.Serialization.ISerializable" /> 값 형식에 대해서만 형식을 지정할 수 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary vsli:raw="Indicates that strings can be given in the XSD format rather than SOAP. No string IDs are transmitted.">SOAP 형식이 아닌 XSD 형식으로 문자열을 지정할 수 있음을 나타냅니다. 문자열 ID는 전송되지 않습니다.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary vsli:raw="Allows access to field names and field types of objects that support the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface.">
        <see cref="T:System.Runtime.Serialization.ISerializable" /> 인터페이스를 지원하는 개체의 필드 이름과 필드 형식에 액세스할 수 있도록 합니다.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary vsli:raw="Gets or sets the field names of serialized objects.">serialize된 개체의 필드 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The field names of serialized objects.">serialize된 개체의 필드 이름입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary vsli:raw="Gets or sets the field types of the serialized objects.">serialize된 개체의 필드 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The field types of the serialized objects.">serialize된 개체의 필드 형식입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary vsli:raw="Specifies the level of automatic deserialization for .NET Framework remoting.">.NET Framework Remoting에 대한 자동 deserialization 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary vsli:raw="The full deserialization level for .NET Framework remoting. It supports all types that remoting supports in all situations.">.NET Framework Remoting에 대한 전체 deserialization 수준입니다. 이 수준은 모든 상황에서 원격 기능이 지원하는 모든 형식을 deserialize합니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary vsli:raw="The low deserialization level for .NET Framework remoting. It supports types associated with basic remoting functionality.">.NET Framework Remoting에 대한 낮은 deserialization 수준입니다. 이 수준은 기본 원격 기능과 관련된 형식을 deserialize합니다.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary vsli:raw="Provides static methods to aid with the implementation of a &lt;see cref=&quot;T:System.Runtime.Serialization.Formatter&quot; /&gt; for serialization. This class cannot be inherited.">serialization을 위한 <see cref="T:System.Runtime.Serialization.Formatter" />의 구현을 지원하는 정적 메서드를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; can be deserialized with the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property set to &lt;see langword=&quot;Low&quot; /&gt;.">
        <see cref="T:System.Type" /> 속성을 <see langword="Low" />로 설정한 상태에서 지정한 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />을 deserialize할 수 있는지 여부를 결정합니다.</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to check for the ability to deserialize.">deserialize 권한을 확인할 <see cref="T:System.Type" />입니다.</param>
      <param name="securityLevel" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property value.">
        <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 속성 값입니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is an advanced type and cannot be deserialized when the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property is set to &lt;see langword=&quot;Low&quot; /&gt;.">
        <paramref name="t" /> 매개 변수가 고급 형식이고 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 속성을 <see langword="Low" />로 설정하면 deserialize할 수 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary vsli:raw="Extracts the data from the specified object and returns it as an array of objects.">지정된 개체에서 데이터를 추출하여 개체의 배열로서 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to write to the formatter.">포맷터에 쓸 개체입니다.</param>
      <param name="members" vsli:raw="The members to extract from the object.">개체에서 추출할 멤버입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains data stored in &lt;paramref name=&quot;members&quot; /&gt; and associated with &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="members" />에 저장되어 있고 <paramref name="obj" />와 관련된 데이터가 포함된 <see cref="T:System.Object" />의 배열입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; or &lt;paramref name=&quot;members&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; An element of &lt;paramref name=&quot;members&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 또는 <paramref name="members" /> 매개 변수가 <see langword="null" />인 경우  
<paramref name="members" />의 요소가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An element of &lt;paramref name=&quot;members&quot; /&gt; does not represent a field.">
        <paramref name="members" />의 요소가 필드를 나타내지 않는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified object type.">지정된 개체 형식의 새 인스턴스를 만듭니다.</summary>
      <param name="type" vsli:raw="The type of object to create.">만들 개체의 형식입니다.</param>
      <returns vsli:raw="A zeroed object of the specified type.">0으로 초기화된 지정된 형식의 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is not a valid common language runtime type.">
        <paramref name="type" /> 매개 변수가 유효한 공용 언어 런타임 형식이 아닌 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary vsli:raw="Gets all the serializable members for a class of the specified &lt;see cref=&quot;T:System.Type&quot; /&gt;.">지정된 <see cref="T:System.Type" />의 클래스에 대한 serializable 멤버를 모두 가져옵니다.</summary>
      <param name="type" vsli:raw="The type being serialized.">serialize되는 형식입니다.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; of the non-transient, non-static members.">임시가 아닌 비정적 멤버의 <see cref="T:System.Reflection.MemberInfo" /> 형식 배열입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets all the serializable members for a class of the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; and in the provided &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">제공된 <see cref="T:System.Type" />에 위치하는, 지정된 <see cref="T:System.Runtime.Serialization.StreamingContext" />의 클래스에 대한 serializable 멤버를 모두 가져옵니다.</summary>
      <param name="type" vsli:raw="The type being serialized or cloned.">serialize 또는 복제되는 형식입니다.</param>
      <param name="context" vsli:raw="The context where the serialization occurs.">serialization이 발생하는 컨텍스트입니다.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; of the non-transient, non-static members.">임시가 아닌 비정적 멤버의 <see cref="T:System.Reflection.MemberInfo" /> 형식 배열입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary vsli:raw="Returns a serialization surrogate for the specified &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;.">지정된 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />의 serialization 서로게이트를 반환합니다.</summary>
      <param name="innerSurrogate" vsli:raw="The specified surrogate.">지정된 서로게이트입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt; for the specified &lt;paramref name=&quot;innerSurrogate&quot; /&gt;.">지정된 <paramref name="innerSurrogate" />에 대한 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Looks up the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the specified object in the provided &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">지정된 개체의 <see cref="T:System.Type" />을 제공된 <see cref="T:System.Reflection.Assembly" />에서 조회합니다.</summary>
      <param name="assem" vsli:raw="The assembly where you want to look up the object.">개체를 조회할 어셈블리입니다.</param>
      <param name="name" vsli:raw="The name of the object.">개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the named object.">명명된 개체의 <see cref="T:System.Type" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assem&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assem" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified object type.">지정된 개체 형식의 새 인스턴스를 만듭니다.</summary>
      <param name="type" vsli:raw="The type of object to create.">만들 개체의 형식입니다.</param>
      <returns vsli:raw="A zeroed object of the specified type.">0으로 초기화된 지정된 형식의 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary vsli:raw="Populates the specified object with values for each field drawn from the data array of objects.">지정된 개체를 개체의 데이터 배열에서 끌어 온 각 필드의 값으로 채웁니다.</summary>
      <param name="obj" vsli:raw="The object to populate.">채울 개체입니다.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that describes which fields and properties to populate.">채울 필드 및 속성을 설명하는 <see cref="T:System.Reflection.MemberInfo" />의 배열입니다.</param>
      <param name="data" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that specifies the values for each field and property to populate.">채울 각 필드 및 속성의 값을 지정하는 <see cref="T:System.Object" />의 배열입니다.</param>
      <returns vsli:raw="The newly populated object.">새로 채워진 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt;, &lt;paramref name=&quot;members&quot; /&gt;, or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; An element of &lt;paramref name=&quot;members&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" />, <paramref name="members" /> 또는 <paramref name="data" /> 매개 변수는 <see langword="null" />입니다.  
<paramref name="members" />의 요소가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;members&quot; /&gt; does not match the length of &lt;paramref name=&quot;data&quot; /&gt;.">
        <paramref name="members" />의 길이가 <paramref name="data" />의 길이와 일치하지 않는 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An element of &lt;paramref name=&quot;members&quot; /&gt; is not an instance of &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt;.">
        <paramref name="members" />의 요소가 <see cref="T:System.Reflection.FieldInfo" />의 인스턴스가 아닌 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary vsli:raw="Provides functionality for formatting serialized objects.">serialize된 개체의 형식을 지정하기 위한 기능을 제공합니다.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that performs type lookups during deserialization.">deserialization 중에 형식 조회를 수행하는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that performs type lookups during deserialization.">deserialization 중에 형식 조회를 수행하는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for serialization and deserialization.">serialization 및 deserialization에 사용되는 <see cref="T:System.Runtime.Serialization.StreamingContext" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for serialization and deserialization.">serialization 및 deserialization에 사용되는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the data on the provided stream and reconstitutes the graph of objects.">제공된 스트림의 데이터를 deserialize하고 개체의 그래프를 다시 구성합니다.</summary>
      <param name="serializationStream" vsli:raw="The stream that contains the data to deserialize.">deserialize할 데이터를 포함하는 스트림입니다.</param>
      <returns vsli:raw="The top object of the deserialized graph.">deserialize된 그래프의 최상위 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes an object, or graph of objects with the given root to the provided stream.">개체 또는 루트가 지정된 개체 그래프를 제공된 스트림에 Serialize합니다.</summary>
      <param name="serializationStream" vsli:raw="The stream where the formatter puts the serialized data. This stream can reference a variety of backing stores (such as files, network, memory, and so on).">포맷터가 serialize된 데이터를 두는 스트림입니다. 이 스트림은 파일, 네트워크, 메모리 같은 다양한 백업 저장소를 참조할 수 있습니다.</param>
      <param name="graph" vsli:raw="The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized.">serialize할 개체 그래프의 루트 또는 개체입니다. 이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; used by the current formatter.">현재 포맷터가 사용하는 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; used by this formatter.">이 포맷터가 사용하는 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary vsli:raw="Implements a serialization surrogate selector that allows one object to perform serialization and deserialization of another.">serialization 서로게이트 선택기를 구현하면 한 개체가 다른 개체의 serialization 및 deserialization을 수행할 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the provided &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the object.">개체를 serialize하는 데 필요한 데이터로 제공된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="obj" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Populates the object using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />의 정보를 사용하여 개체를 채웁니다.</summary>
      <param name="obj" vsli:raw="The object to populate.">채울 개체입니다.</param>
      <param name="info" vsli:raw="The information to populate the object.">개체를 채울 정보입니다.</param>
      <param name="context" vsli:raw="The source from which the object is deserialized.">개체가 deserialize되는 소스입니다.</param>
      <param name="selector" vsli:raw="The surrogate selector where the search for a compatible surrogate begins.">호환 가능한 서로게이트의 검색이 시작되는 서로게이트 선택기입니다.</param>
      <returns vsli:raw="The populated deserialized object.">채워진 deserialize된 개체입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary vsli:raw="Indicates a serialization surrogate selector class.">serialization 서로게이트 선택기 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Specifies the next &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; for surrogates to examine if the current instance does not have a surrogate for the specified type and assembly in the specified context.">현재 인스턴스가 지정된 형식의 서로게이트 및 어셈블리를 지정된 컨텍스트에 포함하는지 여부를 서로게이트가 검사하도록 다음 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />를 지정합니다.</summary>
      <param name="selector" vsli:raw="The next surrogate selector to examine.">검사할 다음 서로게이트 선택기입니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary vsli:raw="Returns the next surrogate selector in the chain.">체인에 있는 다음 서로게이트 선택기를 반환합니다.</summary>
      <returns vsli:raw="The next surrogate selector in the chain or &lt;see langword=&quot;null&quot; /&gt;.">체인에 있는 다음 서로게이트 선택기 또는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary vsli:raw="Finds the surrogate that represents the specified object's type, starting with the specified surrogate selector for the specified serialization context.">지정된 serialization 컨텍스트에 대한 지정된 서로게이트 선택기에서 시작하여, 지정된 개체 형식을 나타내는 서로게이트를 찾습니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of object (class) that needs a surrogate.">서로게이트를 필요로 하는 개체(클래스)의 <see cref="T:System.Type" />입니다.</param>
      <param name="context" vsli:raw="The source or destination context for the current serialization.">현재 serialization에 대한 소스 또는 대상 컨텍스트입니다.</param>
      <param name="selector" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that holds a reference to the surrogate selector where the appropriate surrogate was found. This parameter is passed uninitialized.">이 메서드가 반환할 때, 적절한 서로게이트가 위치한 서로게이트 선택기에 대한 참조를 보유하는 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <returns vsli:raw="The appropriate surrogate for the given type in the given context.">지정된 컨텍스트의 지정된 형식에 맞는 서로게이트입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary vsli:raw="Generates IDs for objects.">개체의 ID를 생성합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary vsli:raw="Returns the ID for the specified object, generating a new ID if the specified object has not already been identified by the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;.">지정된 개체의 ID를 반환합니다. 지정된 개체가 아직 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />에 의해 식별되지 않은 경우에는 새 ID가 생성됩니다.</summary>
      <param name="obj" vsli:raw="The object you want an ID for.">ID를 필요로 하는 개체입니다.</param>
      <param name="firstTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; was not previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" />가 이전에 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />에 알려지지 않았으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The object's ID is used for serialization. &lt;paramref name=&quot;firstTime&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; if this is the first time the object has been identified; otherwise, it is set to &lt;see langword=&quot;false&quot; /&gt;.">개체 ID는 serialization에 사용됩니다. 개체가 처음으로 식별되었다면 <paramref name="firstTime" />이 <see langword="true" />로 설정되고, 그렇지 않으면 <see langword="false" />로 설정됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; has been asked to keep track of too many objects.">
        <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />가 너무 많은 개체를 추적하도록 요청된 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary vsli:raw="Determines whether an object has already been assigned an ID.">개체에 ID가 할당되었는지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object you are asking for.">요청하고 있는 개체입니다.</param>
      <param name="firstTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; was not previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" />가 이전에 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />에 알려지지 않았으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The object ID of &lt;paramref name=&quot;obj&quot; /&gt; if previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, zero.">이전에 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />에 알려졌으면 <paramref name="obj" />의 개체 ID이고, 그렇지 않으면 0입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary vsli:raw="Keeps track of objects as they are deserialized.">개체가 deserialize될 때 추적합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectManager&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.ObjectManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="selector" vsli:raw="The surrogate selector to use. The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; determines the correct surrogate to use when deserializing objects of a given type. At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.">사용할 서로게이트 선택기입니다. <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />는 지정된 형식의 개체를 deserialize할 때 사용할 올바른 서로게이트를 결정합니다. deserialization 도중에 서로게이트 선택기는 스트림에 전송된 정보로 개체의 새 인스턴스를 만듭니다.</param>
      <param name="context" vsli:raw="The streaming context. The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; is not used by &lt;see langword=&quot;ObjectManager&quot; /&gt;, but is passed as a parameter to any objects implementing &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or having a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. These objects can take specific actions depending on the source of the information to deserialize.">스트리밍 컨텍스트입니다. <see cref="T:System.Runtime.Serialization.StreamingContext" />는 <see langword="ObjectManager" />에서 사용되지 않지만, <see cref="T:System.Runtime.Serialization.ISerializable" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />를 갖는 개체에 매개 변수로서 전달됩니다. 이러한 개체는 deserialize할 정보의 소스에 따라 특정 작업을 수행할 수 있습니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary vsli:raw="Performs all the recorded fixups.">기록된 픽스업을 모두 수행합니다.</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="A fixup was not successfully completed.">픽스업이 제대로 완료되지 않은 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary vsli:raw="Returns the object with the specified object ID.">지정된 개체 ID를 가진 개체를 반환합니다.</summary>
      <param name="objectID" vsli:raw="The ID of the requested object.">요청된 개체의 ID입니다.</param>
      <returns vsli:raw="The object with the specified object ID if it has been previously stored or &lt;see langword=&quot;null&quot; /&gt; if no such object has been registered.">지정된 개체 ID를 가진 개체가 이전에 저장된 경우에는 이 개체가 반환되고 이러한 개체가 등록되지 않은 경우에는 <see langword="null" />이 반환됩니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary vsli:raw="Raises the deserialization event to any registered object that implements &lt;see cref=&quot;T:System.Runtime.Serialization.IDeserializationCallback&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />을 구현하는 등록된 개체에 대해 deserialization 이벤트를 발생시킵니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary vsli:raw="Invokes the method marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.OnDeserializingAttribute&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />로 표시된 메서드를 호출합니다.</summary>
      <param name="obj" vsli:raw="The instance of the type that contains the method to be invoked.">호출할 메서드가 들어 있는 형식의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary vsli:raw="Records a fixup for one element in an array.">배열에 있는 한 요소에 대한 픽스업을 기록합니다.</summary>
      <param name="arrayToBeFixed" vsli:raw="The ID of the array used to record a fixup.">픽스업을 기록하는 데 사용되는 배열의 ID입니다.</param>
      <param name="index" vsli:raw="The index within &lt;c&gt;arrayFixup&lt;/c&gt; that a fixup is requested for.">픽스업이 요청된 <c>arrayFixup</c> 내부의 인덱스입니다.</param>
      <param name="objectRequired" vsli:raw="The ID of the object that the current array element will point to after fixup is completed.">픽스업이 완료된 후에 현재 배열 요소가 가리키는 개체의 ID입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;arrayToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="arrayToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="index" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary vsli:raw="Records fixups for the specified elements in an array, to be executed later.">배열에 있는 지정된 요소가 나중에 실행되도록 픽스업을 기록합니다.</summary>
      <param name="arrayToBeFixed" vsli:raw="The ID of the array used to record a fixup.">픽스업을 기록하는 데 사용되는 배열의 ID입니다.</param>
      <param name="indices" vsli:raw="The indexes within the multidimensional array that a fixup is requested for.">픽스업이 요청된 다차원 배열 내부의 인덱스입니다.</param>
      <param name="objectRequired" vsli:raw="The ID of the object the array elements will point to after fixup is completed.">픽스업이 완료된 후에 배열 요소가 가리키는 개체의 ID입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;arrayToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="arrayToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;indices&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="indices" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary vsli:raw="Records a fixup for an object member, to be executed later.">개체 멤버가 나중에 실행되도록 픽스업을 기록합니다.</summary>
      <param name="objectToBeFixed" vsli:raw="The ID of the object that needs the reference to &lt;paramref name=&quot;objectRequired&quot; /&gt;.">
        <paramref name="objectRequired" />에 대한 참조를 필요로 하는 개체의 ID입니다.</param>
      <param name="memberName" vsli:raw="The member name of &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; where the fixup will be performed.">픽스업이 수행될 <paramref name="objectToBeFixed" />의 멤버 이름입니다.</param>
      <param name="objectRequired" vsli:raw="The ID of the object required by &lt;paramref name=&quot;objectToBeFixed&quot; /&gt;.">
        <paramref name="objectToBeFixed" />에서 필요한 개체의 ID입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;objectToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="memberName" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary vsli:raw="Records a fixup for a member of an object, to be executed later.">개체 멤버가 나중에 실행되도록 픽스업을 기록합니다.</summary>
      <param name="objectToBeFixed" vsli:raw="The ID of the object that needs the reference to the &lt;paramref name=&quot;objectRequired&quot; /&gt; object.">
        <paramref name="objectRequired" /> 개체에 대한 참조를 필요로 하는 개체의 ID입니다.</param>
      <param name="member" vsli:raw="The member of &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; where the fixup will be performed.">픽스업이 수행될 <paramref name="objectToBeFixed" />의 멤버입니다.</param>
      <param name="objectRequired" vsli:raw="The ID of the object required by &lt;paramref name=&quot;objectToBeFixed&quot; /&gt;.">
        <paramref name="objectToBeFixed" />에서 필요한 개체의 ID입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary vsli:raw="Registers an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;.">개체가 deserialize될 때 개체를 등록하여 <paramref name="objectID" />와 연관시킵니다.</summary>
      <param name="obj" vsli:raw="The object to register.">등록할 개체입니다.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">등록할 개체의 ID입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="objectID" />가 <paramref name="obj" /> 이외의 개체에 대해 이미 등록된 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary vsli:raw="Registers an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used with it.">개체가 deserialize될 때 개체를 등록하여 <paramref name="objectID" />와 연관시키고 여기에 사용되는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 기록합니다.</summary>
      <param name="obj" vsli:raw="The object to register.">등록할 개체입니다.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">등록할 개체의 ID입니다.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">
        <paramref name="obj" />가 <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializable" />를 포함하는 경우 사용된 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />입니다. <paramref name="info" />는 필수 픽스업 정보를 사용하여 완료된 다음 필수 개체가 완료될 때 해당 개체에 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="objectID" />가 <paramref name="obj" /> 이외의 개체에 대해 이미 등록된 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary vsli:raw="Registers a member of an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">개체의 멤버가 deserialize될 때 개체의 멤버를 등록하여 <paramref name="objectID" />와 연관시키고 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 기록합니다.</summary>
      <param name="obj" vsli:raw="The object to register.">등록할 개체입니다.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">등록할 개체의 ID입니다.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">
        <paramref name="obj" />가 <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializable" />를 포함하는 경우 사용된 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />입니다. <paramref name="info" />는 필수 픽스업 정보를 사용하여 완료된 다음 필수 개체가 완료될 때 해당 개체에 전달됩니다.</param>
      <param name="idOfContainingObj" vsli:raw="The ID of the object that contains &lt;paramref name=&quot;obj&quot; /&gt;. This parameter is required only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">
        <paramref name="obj" />를 포함하는 개체의 ID입니다. 이 매개 변수는 <paramref name="obj" />가 값 형식인 경우에만 필요합니다.</param>
      <param name="member" vsli:raw="The field in the containing object where &lt;paramref name=&quot;obj&quot; /&gt; exists. This parameter has meaning only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">
        <paramref name="obj" />가 존재하는 포함 개체의 필드입니다. 이 매개 변수는 <paramref name="obj" />가 값 형식인 경우에만 의미가 있습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; and &lt;paramref name=&quot;member&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectID" />가 이미 <paramref name="obj" /> 이외의 개체에 대해 등록된 경우 또는 <paramref name="member" />가 <see cref="T:System.Reflection.FieldInfo" />가 아니며 <paramref name="member" />가 <see langword="null" />도 아닌 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary vsli:raw="Registers a member of an array contained in an object while it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">개체에 포함된 배열의 멤버가 deserialize될 때 해당 멤버를 등록하여 <paramref name="objectID" />와 연관시키고 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 기록합니다.</summary>
      <param name="obj" vsli:raw="The object to register.">등록할 개체입니다.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">등록할 개체의 ID입니다.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">
        <paramref name="obj" />가 <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializable" />를 포함하는 경우 사용된 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />입니다. <paramref name="info" />는 필수 픽스업 정보를 사용하여 완료된 다음 필수 개체가 완료될 때 해당 개체에 전달됩니다.</param>
      <param name="idOfContainingObj" vsli:raw="The ID of the object that contains &lt;paramref name=&quot;obj&quot; /&gt;. This parameter is required only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">
        <paramref name="obj" />를 포함하는 개체의 ID입니다. 이 매개 변수는 <paramref name="obj" />가 값 형식인 경우에만 필요합니다.</param>
      <param name="member" vsli:raw="The field in the containing object where &lt;paramref name=&quot;obj&quot; /&gt; exists. This parameter has meaning only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">
        <paramref name="obj" />가 존재하는 포함 개체의 필드입니다. 이 매개 변수는 <paramref name="obj" />가 값 형식인 경우에만 의미가 있습니다.</param>
      <param name="arrayIndex" vsli:raw="If &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.ValueType&quot; /&gt; and a member of an array, &lt;paramref name=&quot;arrayIndex&quot; /&gt; contains the index within that array where &lt;paramref name=&quot;obj&quot; /&gt; exists. &lt;paramref name=&quot;arrayIndex&quot; /&gt; is ignored if &lt;paramref name=&quot;obj&quot; /&gt; is not both a &lt;see cref=&quot;T:System.ValueType&quot; /&gt; and a member of an array.">
        <paramref name="obj" />가 <see cref="T:System.ValueType" />이고 배열의 멤버인 경우 <paramref name="arrayIndex" />에는 <paramref name="obj" />가 존재하는 해당 배열 내부의 인덱스가 포함됩니다. <paramref name="arrayIndex" />가 <see cref="T:System.ValueType" /> 또는 배열의 멤버가 아닌 경우에는 <paramref name="obj" />가 무시됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; and &lt;paramref name=&quot;member&quot; /&gt; isn't &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectID" />가 이미 <paramref name="obj" /> 이외의 개체에 대해 등록된 경우 또는 <paramref name="member" />가 <see cref="T:System.Reflection.FieldInfo" />가 아니며 <paramref name="member" />가 <see langword="null" />도 아닌 경우</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary vsli:raw="Allows users to control class loading and mandate what class to load.">사용자가 클래스 로딩을 제어하고 로드할 클래스를 지정할 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary vsli:raw="When overridden in a derived class, controls the binding of a serialized object to a type.">파생 클래스에서 재정의된 경우 형식으로 직렬화된 개체의 바인딩을 제어합니다.</summary>
      <param name="serializedType" vsli:raw="The type of the object the formatter creates a new instance of.">포맷터가 새 인스턴스를 만드는 개체의 형식입니다.</param>
      <param name="assemblyName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; name of the serialized object.">직렬화된 개체의 <see cref="T:System.Reflection.Assembly" /> 이름을 지정합니다.</param>
      <param name="typeName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; name of the serialized object.">직렬화된 개체의 <see cref="T:System.Type" /> 이름을 지정합니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, controls the binding of a serialized object to a type.">파생 클래스에서 재정의된 경우 형식으로 직렬화된 개체의 바인딩을 제어합니다.</summary>
      <param name="assemblyName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; name of the serialized object.">직렬화된 개체의 <see cref="T:System.Reflection.Assembly" /> 이름을 지정합니다.</param>
      <param name="typeName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; name of the serialized object.">직렬화된 개체의 <see cref="T:System.Type" /> 이름을 지정합니다.</param>
      <returns vsli:raw="The type of the object the formatter creates a new instance of.">포맷터가 새 인스턴스를 만드는 개체의 형식입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary vsli:raw="Manages serialization processes at run time. This class cannot be inherited.">런타임에 serialization 프로세스를 관리합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationObjectManager&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.SerializationObjectManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; class that contains information about the current serialization operation.">현재 serialization 작업에 대한 정보가 포함된 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary vsli:raw="Invokes the OnSerializing callback event if the type of the object has one; and registers the object for raising the OnSerialized event if the type of the object has one.">개체 형식에 OnSerializing 콜백 이벤트가 있으면 해당 이벤트를 호출하고, 개체 형식에 OnSerialized 이벤트가 있으면 해당 이벤트를 발생시키는 개체를 등록합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary vsli:raw="Registers the object upon which events will be raised.">이벤트를 발생시키는 개체를 등록합니다.</summary>
      <param name="obj" vsli:raw="The object to register.">등록할 개체입니다.</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary vsli:raw="Assists formatters in selection of the serialization surrogate to delegate the serialization or deserialization process to.">포맷터가 serialization 또는 deserialization 프로세스를 위임할 serialization 서로게이트를 선택하는 것을 지원합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary vsli:raw="Adds a surrogate to the list of checked surrogates.">확인된 서로게이트의 목록에 서로게이트를 추가합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which the surrogate is required.">서로게이트가 필요한 <see cref="T:System.Type" />입니다.</param>
      <param name="context" vsli:raw="The context-specific data.">컨텍스트별 데이터입니다.</param>
      <param name="surrogate" vsli:raw="The surrogate to call for this type.">이 형식을 요청하는 서로게이트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; or &lt;paramref name=&quot;surrogate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 또는 <paramref name="surrogate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A surrogate already exists for this type and context.">이 형식 및 컨텍스트에 대한 서로게이트가 이미 존재하는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that can handle a particular object type to the list of surrogates.">특정 개체 형식을 처리할 수 있는 지정된 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />를 서로게이트 목록에 추가합니다.</summary>
      <param name="selector" vsli:raw="The surrogate selector to add.">추가할 서로게이트 선택기입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;selector&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="selector" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The selector is already on the list of selectors.">이 선택기가 선택기 목록에 이미 있는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary vsli:raw="Returns the next selector on the chain of selectors.">선택기 체인에 있는 다음 선택기를 반환합니다.</summary>
      <returns vsli:raw="The next &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; on the chain of selectors.">선택기 체인에 있는 다음 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary vsli:raw="Returns the surrogate for a particular type.">특정 형식의 서로게이트를 반환합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which the surrogate is requested.">서로게이트가 요청되는 <see cref="T:System.Type" />입니다.</param>
      <param name="context" vsli:raw="The streaming context.">스트리밍 컨텍스트입니다.</param>
      <param name="selector" vsli:raw="The surrogate to use.">사용할 서로게이트입니다.</param>
      <returns vsli:raw="The surrogate for a particular type.">특정 형식의 서로게이트입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Removes the surrogate associated with a given type.">지정된 형식과 관련된 서로게이트를 제거합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which to remove the surrogate.">서로게이트를 제거할 <see cref="T:System.Type" />입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; for the current surrogate.">현재 서로게이트에 대한 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
  </members>
</doc>