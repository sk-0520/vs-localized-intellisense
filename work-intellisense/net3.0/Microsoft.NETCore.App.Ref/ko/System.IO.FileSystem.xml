<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.FileSystem</name>
  </assembly>
  <members>
    <member name="T:System.IO.Directory">
      <summary>디렉터리와 하위 디렉터리에서 만들기, 이동 및 열거를 위한 정적 메서드를 노출합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.IO.Directory.CreateDirectory(System.String)">
      <summary>이미 존재하지 않는 한 지정된 경로에 모든 디렉터리와 하위 디렉터리를 만듭니다.</summary>
      <param name="path">만들 디렉터리입니다.</param>
      <returns>지정된 경로에서 디렉터리를 나타내는 개체입니다. 이 개체는 지정된 경로에 디렉터리가 이미 존재하는지 여부와 관계없이 반환됩니다.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />에 의해 지정된 디렉터리가 파일입니다.  
또는 
네트워크 이름을 알 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 콜론 문자(:)가 <paramref name="path" /> 앞에 오거나 포함됩니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />에 드라이브 레이블("C:\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</exception>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String)">
      <summary>지정된 경로에서 빈 디렉터리를 삭제합니다.</summary>
      <param name="path">제거할 빈 디렉터리의 이름입니다. 해당 디렉터리는 쓰기가 가능하고 비어 있어야 합니다.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />에 지정된 이름 및 위치와 동일한 파일이 있습니다.  
또는 
이 디렉터리는 애플리케이션의 현재 작업 디렉터리입니다.  
또는 
<paramref name="path" />에 지정된 디렉터리가 비어 있지 않습니다.  
또는 
디렉터리가 읽기 전용이거나 읽기 전용 파일을 포함합니다.  
또는 
디렉터리가 다른 프로세스에서 사용 중입니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 존재하지 않거나 찾을 수 없습니다.  
또는 
지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String,System.Boolean)">
      <summary>지정된 디렉터리와 해당 디렉터리의 하위 디렉터리 및 파일을 삭제합니다.</summary>
      <param name="path">제거할 디렉터리의 이름입니다.</param>
      <param name="recursive">
        <paramref name="path" />의 디렉터리, 하위 디렉터리 및 파일을 제거하려면 <see langword="true" />이고, 제거하지 않으려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />에 지정된 이름 및 위치와 동일한 파일이 있습니다.  
또는 
<paramref name="path" />로 지정한 디렉터리가 읽기 전용이거나 <paramref name="recursive" />가 <see langword="false" />이고 <paramref name="path" />가 빈 디렉터리가 아닙니다.  
또는 
이 디렉터리는 애플리케이션의 현재 작업 디렉터리입니다.  
또는 
디렉터리에 읽기 전용 파일이 포함되어 있습니다.  
또는 
디렉터리가 다른 프로세스에서 사용 중입니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 존재하지 않거나 찾을 수 없습니다.  
또는 
지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String)">
      <summary>지정된 경로에 있는 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <returns>
        <paramref name="path" />로 지정된 디렉터리에서 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <paramref name="path" />로 지정되고 지정된 검색 패턴과 일치하는 디렉터리에서 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우  
또는 
 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 디렉터리 이름의 열거 가능 컬렉션을 반환하고 선택적으로 하위 디렉터리를 검색합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.  
기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>
        <paramref name="path" />로 지정되고 지정된 검색 패턴 및 옵션과 일치하는 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.  
또는 
 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String)">
      <summary>지정된 경로에 있는 파일 이름의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <returns>
        <paramref name="path" />로 지정된 파일에서 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 파일 이름의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <paramref name="path" />로 지정되고 지정된 검색 패턴과 일치하는 디렉터리에서 파일에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.  
또는 
 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 파일 이름의 열거 가능 컬렉션을 반환하고 선택적으로 하위 디렉터리를 검색합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.  
기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>
        <paramref name="path" />로 지정되고 지정된 검색 패턴 및 옵션과 일치하는 디렉터리에서 파일에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우  
또는 
 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
      <summary>지정된 경로에 있는 파일 이름 및 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <returns>
        <paramref name="path" />로 지정된 디렉터리에 있는 파일 시스템 항목의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 파일 이름 및 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 시스템 항목 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <paramref name="path" />로 지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일 시스템 항목의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.  
또는 
 <paramref name="searchPattern" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 파일 이름 및 디렉터리 이름의 열거 가능 컬렉션을 반환하고 선택적으로 하위 디렉터리를 검색합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 시스템 항목과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.  
기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>
        <paramref name="path" />로 지정된 디렉터리에서 지정된 검색 패턴 및 옵션과 일치하는 파일 시스템 항목의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.  
또는 
 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.Exists(System.String)">
      <summary>지정된 경로가 디스크에 있는 기존 디렉터리를 참조하는지를 확인합니다.</summary>
      <param name="path">테스트할 경로입니다.</param>
      <returns>
        <paramref name="path" />가 기존 디렉터리를 참조하면 <see langword="true" />이고, 디렉터리가 존재하지 않거나 지정된 디렉터리가 존재하는지 확인할 때 오류가 발생하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Directory.GetCreationTime(System.String)">
      <summary>디렉터리를 만든 날짜와 시간을 가져옵니다.</summary>
      <param name="path">디렉터리 경로입니다.</param>
      <returns>지정된 디렉터리를 만든 날짜와 시간으로 설정된 구조체입니다. 이 값은 현지 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
      <summary>디렉터리를 만든 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 가져옵니다.</summary>
      <param name="path">디렉터리 경로입니다.</param>
      <returns>지정된 디렉터리를 만든 날짜와 시간으로 설정된 구조체입니다. 이 값은 UTC 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetCurrentDirectory">
      <summary>애플리케이션의 현재 작업 디렉터리를 가져옵니다.</summary>
      <returns>현재 작업 디렉터리의 절대 경로를 포함하고 백슬래시(\)로 끝나지 않는 문자열입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">운영 체제가 현재 디렉터리 기능이 없는 Windows CE입니다.  
 이 메서드는 .NET Compact Framework에서 사용할 수 있지만 현재 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String)">
      <summary>지정된 디렉터리에 있는 하위 디렉터리의 이름(경로 포함)을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <returns>지정된 경로에서 하위 디렉터리의 전체 이름(경로 포함)의 배열이거나 디렉터리가 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String)">
      <summary>지정된 디렉터리에서 지정된 검색 패턴과 일치하는 하위 디렉터리 이름(파일 경로 포함)을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 하위 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다. 이 매개 변수는 유효한 리터럴 및 와일드카드 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>지정된 디렉터리에서 검색 패턴과 일치하는 하위 디렉터리의 전체 이름(경로 포함)의 배열이거나 디렉터리가 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" />를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>지정된 디렉터리에서 지정된 검색 패턴과 일치하는 하위 디렉터리(해당 경로 포함)의 이름을 가져오고 선택적으로 하위 디렉터리를 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 하위 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다. 이 매개 변수는 유효한 리터럴 및 와일드카드 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</param>
      <returns>지정된 조건과 일치하는 하위 디렉터리의 전체 이름(경로 포함)의 배열이거나 디렉터리가 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" /> 에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectoryRoot(System.String)">
      <summary>지정된 경로에 대한 볼륨 정보, 루트 정보 또는 두 정보 모두를 반환합니다.</summary>
      <param name="path">파일 또는 디렉터리의 경로입니다.</param>
      <returns>지정된 경로에 대한 볼륨 정보, 루트 정보 또는 두 정보 모두를 포함하는 문자열입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" />를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String)">
      <summary>지정된 디렉터리에 있는 파일의 이름(경로 포함)을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <returns>지정된 디렉터리에서 파일의 전체 이름(경로 포함)의 배열이거나 파일이 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.  
또는 
네트워크 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 없거나 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String)">
      <summary>지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일 이름(파일 경로 포함)을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일의 전체 이름(경로 포함)의 배열이거나 파일이 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.  
또는 
네트워크 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" />를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 없거나 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>하위 디렉터리를 검색할지를 나타내는 값을 사용하여 지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일 이름(파일 경로 포함)을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</param>
      <returns>지정된 디렉터리에서 지정된 검색 패턴 및 옵션과 일치하는 파일의 전체 이름(경로 포함)의 배열이거나 파일이 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" /> 에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="searchpattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 없거나 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.  
또는 
네트워크 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String)">
      <summary>지정된 경로에 있는 모든 파일과 하위 디렉터리의 이름을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <returns>지정된 디렉터리에서 파일 및 하위 디렉터리 이름의 배열이거나 파일 또는 디렉터리가 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" />를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 파일 및 디렉터리 이름 배열을 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 및 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>지정된 검색 조건과 일치하는 파일 이름 및 디렉터리 이름의 배열이거나 파일 또는 디렉터리가 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" /> 에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>지정된 경로에서 검색 패턴과 일치하는 모든 파일 이름 및 디렉터리 이름의 배열을 가져오고 선택적으로 하위 디렉터리를 반환합니다.</summary>
      <param name="path">검색할 디렉터리에 대한 상대 또는 절대 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="searchPattern">
        <paramref name="path" />에 있는 파일 및 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.  
기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>지정된 검색 조건과 일치하는 파일, 파일 이름 및 디렉터리 이름의 배열이거나 파일 또는 디렉터리가 없으면 빈 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.  
또는 
 <paramref name="searchPattern" />에 유효한 패턴이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.  
또는 
 <paramref name="searchPattern" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />는 파일 이름입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTime(System.String)">
      <summary>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간을 반환합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간으로 설정된 구조체입니다. 이 값은 현지 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
      <summary>지정된 파일 또는 디렉터리에 마지막으로 액세스한 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 반환합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간으로 설정된 구조체입니다. 이 값은 UTC 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTime(System.String)">
      <summary>지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간을 반환합니다.</summary>
      <param name="path">수정 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간으로 설정된 구조체입니다. 이 값은 현지 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
      <summary>지정된 파일이나 디렉터리에 마지막으로 쓴 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 반환합니다.</summary>
      <param name="path">수정 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간으로 설정된 구조체입니다. 이 값은 UTC 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLogicalDrives">
      <summary>해당 컴퓨터에서 "&lt;드라이브 문자&gt;:\"의 형식으로 논리 드라이브 이름을 검색합니다.</summary>
      <returns>해당 컴퓨터에 있는 논리 드라이브입니다.</returns>
      <exception cref="T:System.IO.IOException">I/O 오류(예: 디스크 오류)가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.Directory.GetParent(System.String)">
      <summary>지정된 경로의 절대 경로와 상대 경로를 모두 포함한 부모 디렉터리를 검색합니다.</summary>
      <param name="path">부모 디렉터리를 검색할 경로입니다.</param>
      <returns>부모 디렉터리이거나 <paramref name="path" />가 UNC 서버 또는 공유 이름의 루트를 포함한 루트 디렉터리일 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" />에 지정된 디렉터리가 읽기 전용입니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다. 자세한 내용은 <see cref="T:System.IO.PathTooLongException" /> 항목을 참조하세요.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">.NET Framework만 해당: 호출자에게 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.IO.Directory.Move(System.String,System.String)">
      <summary>파일 또는 디렉터리와 그 내용을 새 위치로 이동합니다.</summary>
      <param name="sourceDirName">이동할 파일 또는 디렉터리의 경로입니다.</param>
      <param name="destDirName">
        <paramref name="sourceDirName" />의 새 위치에 대한 경로입니다. <paramref name="sourceDirName" />이 파일이면 <paramref name="destDirName" />도 파일 이름이어야 합니다.</param>
      <exception cref="T:System.IO.IOException">디렉터리를 다른 볼륨으로 이동하려고 했습니다.
또는 
 <paramref name="destDirName" />가 이미 있는 경우 설명 섹션의 참고를 참조하세요.
또는 
<paramref name="sourceDirName" /> 및 <paramref name="destDirName" /> 매개 변수가 동일한 파일 또는 디렉터리를 참조합니다.  
또는 
디렉터리 또는 포함된 파일이 다른 프로세스에서 사용 중입니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceDirName" /> 또는 <paramref name="destDirName" />이 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirName" /> 또는 <paramref name="destDirName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceDirName" />에 의해 지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
      <summary>지정된 파일 또는 디렉터리에 대한 만든 날짜와 시간을 설정합니다.</summary>
      <param name="path">만든 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</param>
      <param name="creationTime">파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간입니다. 이 값은 현지 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>지정된 파일이나 디렉터리를 만든 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 설정합니다.</summary>
      <param name="path">만든 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</param>
      <param name="creationTimeUtc">디렉터리 또는 파일이 만들어진 날짜와 시간입니다. 이 값은 현지 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Directory.SetCurrentDirectory(System.String)">
      <summary>애플리케이션의 현재 작업 디렉터리를 지정된 디렉터리로 설정합니다.</summary>
      <param name="path">현재 작업 디렉터리로 설정될 경로입니다.</param>
      <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 관리되지 않는 코드에 액세스하는 데 필요한 권한이 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 디렉터리가 없습니다.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
      <summary>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간을 설정합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</param>
      <param name="lastAccessTime">
        <paramref name="path" />의 액세스 날짜와 시간을 설정할 값을 포함하는 개체입니다. 이 값은 현지 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>지정된 파일 또는 디렉터리에 마지막으로 액세스한 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 설정합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</param>
      <param name="lastAccessTimeUtc">
        <paramref name="path" />의 액세스 날짜와 시간을 설정할 값을 포함하는 개체입니다. 이 값은 UTC 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
      <summary>디렉터리를 마지막으로 쓴 날짜와 시간을 설정합니다.</summary>
      <param name="path">디렉터리 경로입니다.</param>
      <param name="lastWriteTime">디렉터리를 마지막으로 쓴 날짜와 시간입니다. 이 값은 현지 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />를 찾을 수 없습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />를 찾을 수 없습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>디렉터리에 마지막으로 쓴 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 설정합니다.</summary>
      <param name="path">디렉터리 경로입니다.</param>
      <param name="lastWriteTimeUtc">디렉터리를 마지막으로 쓴 날짜와 시간입니다. 이 값은 UTC 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />를 찾을 수 없습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />를 찾을 수 없습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다. <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="T:System.IO.DirectoryInfo">
      <summary>디렉터리 및 하위 디렉터리를 만들고, 이동하고, 열거하는 인스턴스 메서드를 노출합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.IO.DirectoryInfo.#ctor(System.String)">
      <summary>지정된 경로를 사용하여 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">
        <see langword="DirectoryInfo" />를 만들 경로를 지정하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />에 잘못된 문자(", &lt;, &gt; 또는 |)가 들어 있는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Create">
      <summary>디렉터리를 만듭니다.</summary>
      <exception cref="T:System.IO.IOException">디렉터리를 만들 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
      <summary>지정된 경로에 하위 디렉터리를 하나 이상 만듭니다. 지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</summary>
      <param name="path">지정된 경로입니다. 이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</param>
      <returns>
        <paramref name="path" />에 지정된 마지막 경로입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 올바른 파일 경로를 지정하지 않거나 잘못된 <see langword="DirectoryInfo" /> 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">하위 디렉터리를 만들 수 없습니다.  
또는 
<paramref name="path" />에 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.  
또는 
호출자가 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리를 읽기 위한 코드 액세스 권한이 없습니다.  이 문제는 <paramref name="path" /> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />에 드라이브 레이블("C:\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete">
      <summary>
        <see cref="T:System.IO.DirectoryInfo" />가 비어 있으면 이를 삭제합니다.</summary>
      <exception cref="T:System.UnauthorizedAccessException">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">이 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명하는 디렉터리가 없거나 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.IOException">디렉터리가 비어 있지 않은 경우  
또는 
이 디렉터리는 애플리케이션의 현재 작업 디렉터리입니다.  
또는 
디렉터리에 대한 열린 핸들이 있고 운영 체제가 Windows XP 또는 그 이전 버전인 경우. 이 열린 핸들은 디렉터리 열거로 인해 발생할 수 있습니다. 자세한 내용은 방법: 디렉터리 및 파일 열거를 참조하세요.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
      <summary>하위 디렉터리와 파일을 삭제할지 여부를 지정하여 <see cref="T:System.IO.DirectoryInfo" />의 이 인스턴스를 삭제합니다.</summary>
      <param name="recursive">이 디렉터리, 하위 디렉터리 및 모든 파일을 삭제하려면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.UnauthorizedAccessException">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">이 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명하는 디렉터리가 없거나 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.IOException">디렉터리가 읽기 전용인 경우  
또는 
디렉터리에 하나 이상의 파일이나 하위 디렉터리가 있으며 <paramref name="recursive" />가 <see langword="false" />인 경우  
또는 
이 디렉터리는 애플리케이션의 현재 작업 디렉터리입니다.  
또는 
디렉터리 또는 해당 파일 중 하나에 대한 열린 핸들이 있고 운영 체제가 Windows XP 또는 그 이전 버전인 경우. 이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다. 자세한 내용은 방법: 디렉터리 및 파일 열거를 참조하세요.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories">
      <summary>현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <returns>현재 디렉터리에 있는 디렉터리의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
      <summary>지정된 검색 패턴과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="searchPattern">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <paramref name="searchPattern" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
      <summary>지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="searchPattern">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>
        <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles">
      <summary>현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <returns>현재 디렉터리에 있는 파일의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
      <summary>검색 패턴과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="searchPattern">파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <paramref name="searchPattern" />과 일치하는 파일의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
      <summary>지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="searchPattern">파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>
        <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
      <summary>현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <returns>현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
      <summary>지정된 검색 패턴과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="searchPattern">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <paramref name="searchPattern" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</summary>
      <param name="searchPattern">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>
        <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Exists">
      <summary>디렉터리가 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>디렉터리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories">
      <summary>현재 디렉터리의 하위 디렉터리를 반환합니다.</summary>
      <returns>
        <see cref="T:System.IO.DirectoryInfo" /> 개체의 배열입니다.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로에 해당하는 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
      <summary>주어진 검색 조건에 일치하는 현재 <see cref="T:System.IO.DirectoryInfo" />에 있는 디렉터리의 배열을 반환합니다.</summary>
      <param name="searchPattern">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <paramref name="searchPattern" />에 일치하는 <see langword="DirectoryInfo" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see langword="DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
      <summary>하위 디렉터리를 검색할지 여부를 나타내는 값을 사용하여 현재 <see cref="T:System.IO.DirectoryInfo" />에서 지정된 검색 조건과 일치하는 디렉터리의 배열을 반환합니다.</summary>
      <param name="searchPattern">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</param>
      <returns>
        <paramref name="searchPattern" />에 일치하는 <see langword="DirectoryInfo" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see langword="DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles">
      <summary>현재 디렉터리에서 파일 목록을 반환합니다.</summary>
      <returns>
        <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String)">
      <summary>현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</summary>
      <param name="searchPattern">파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>
        <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
      <summary>하위 디렉터리를 검색할지 여부를 나타내는 값을 사용하여 현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</summary>
      <param name="searchPattern">파일 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</param>
      <returns>
        <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos">
      <summary>디렉터리의 모든 파일과 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 엔트리 배열을 반환합니다.</summary>
      <returns>강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 엔트리 배열입니다.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
      <summary>지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</summary>
      <param name="searchPattern">파일에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <returns>검색 기준과 일치하는 강력한 형식의 <see langword="FileSystemInfo" /> 개체 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</summary>
      <param name="searchPattern">파일에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.  이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</param>
      <param name="searchOption">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</param>
      <returns>검색 조건과 일치하는 파일 시스템 항목의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.MoveTo(System.String)">
      <summary>
        <see cref="T:System.IO.DirectoryInfo" /> 인스턴스 및 해당 내용을 새 경로로 이동합니다.</summary>
      <param name="destDirName">이 디렉터리를 이동할 곳의 이름과 경로입니다. 대상 디렉터리는 다른 디스크 볼륨이나 동일한 이름의 디렉터리가 될 수는 없지만, 이 디렉터리를 하위 디렉터리로 추가할 기존 디렉터리가 될 수는 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destDirName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destDirName" /> 이 빈 문자열(''")입니다.</exception>
      <exception cref="T:System.IO.IOException">디렉터리를 다른 볼륨으로 이동하려고 했습니다.  
또는 
 <paramref name="destDirName" /> 이 이미 있습니다.  
또는 
이 경로에 액세스할 권한이 없는 경우  
또는 
이동되는 디렉터리와 대상 디렉터리의 이름이 같은 경우</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">대상 디렉터리를 찾을 수 없는 경우</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Name">
      <summary>이 <see cref="T:System.IO.DirectoryInfo" /> 인스턴스의 이름을 가져옵니다.</summary>
      <returns>디렉터리 이름입니다.</returns>
    </member>
    <member name="P:System.IO.DirectoryInfo.Parent">
      <summary>지정된 하위 디렉터리의 부모 디렉터리를 가져옵니다.</summary>
      <returns>부모 디렉터리 이거나 <see langword="null" /> , 경로가 null 이거나 파일 경로가 루트 (예 \:, C:\또는 \\server\share)를 나타내는 경우입니다.</returns>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Root">
      <summary>디렉터리의 루트 부분을 가져옵니다.</summary>
      <returns>디렉터리의 루트를 나타내는 개체입니다.</returns>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.ToString">
      <summary>
        <see cref="T:System.IO.DirectoryInfo" /> 생성자에 전달된 원래 경로를 반환합니다. 전체 경로 또는 파일/디렉터리 이름에는 이 메서드 대신 <see cref="P:System.IO.DirectoryInfo.FullName" /> 또는 <see cref="P:System.IO.DirectoryInfo.Name" /> 속성을 사용합니다.</summary>
      <returns>사용자가 통과한 원래의 경로입니다.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEntry">
      <summary>찾기 결과를 처리하고 필터링하는 데 도움이 되는 <see cref="T:System.IO.FileSystemInfo" />의 하위 수준 보기를 제공합니다.</summary>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Attributes">
      <summary>이 항목에 대한 특성을 가져옵니다.</summary>
      <returns>이 항목에 대 한 특성입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.CreationTimeUtc">
      <summary>운영 체제에서 만들기 타임스탬프를 지원하지 않는 경우 항목의 만든 시간 또는 가장 오래된 사용 가능한 타임스탬프를 가져옵니다.</summary>
      <returns>항목을 만든 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Directory">
      <summary>이 항목이 있는 디렉터리의 전체 경로를 가져옵니다.</summary>
      <returns>이 항목 디렉터리의 전체 경로입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.FileName">
      <summary>이 항목의 파일 이름을 가져옵니다.</summary>
      <returns>이 항목의 파일 이름입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsDirectory">
      <summary>이 항목이 디렉터리인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" />항목이 디렉터리 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsHidden">
      <summary>파일에 숨겨진 특성이 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" />파일에 hidden 특성이 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastAccessTimeUtc">
      <summary>마지막 액세스 시간(UTC)을 나타내는 날짜/시간 오프셋을 가져옵니다.</summary>
      <returns>UTC의 마지막 액세스 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastWriteTimeUtc">
      <summary>마지막 쓰기 시간(UTC)을 나타내는 날짜/시간 오프셋을 가져옵니다.</summary>
      <returns>마지막으로 쓴 시간 (UTC)입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Length">
      <summary>파일의 길이(바이트)를 가져옵니다.</summary>
      <returns>파일 길이 (바이트)입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.OriginalRootDirectory">
      <summary>생성자에 지정된 열거형의 루트 디렉터리를 가져옵니다.</summary>
      <returns>원래 루트 디렉터리입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.RootDirectory">
      <summary>열거형에 사용되는 루트 디렉터리의 전체 경로를 가져옵니다.</summary>
      <returns>루트 디렉터리입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFileSystemInfo">
      <summary>이 인스턴스의 값을 <see cref="T:System.IO.FileSystemInfo" />으로 변환합니다.</summary>
      <returns>이 인스턴스의 <see cref="T:System.IO.FileSystemInfo" /> 값입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFullPath">
      <summary>찾기 결과의 전체 경로를 반환합니다.</summary>
      <returns>전체 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToSpecifiedFullPath">
      <summary>처음 제공된 경로를 기반으로 찾기 결과의 전체 경로를 반환합니다.</summary>
      <returns>전체 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1">
      <summary>열거를 위해 사용자 지정 필터 조건자 및 변환 대리자 사용을 허용합니다.</summary>
      <typeparam name="TResult">이 enumerable이 캡슐화 하는 형식입니다.</typeparam>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.#ctor(System.String,System.IO.Enumeration.FileSystemEnumerable{`0}.FindTransform,System.IO.EnumerationOptions)">
      <param name="directory" />
      <param name="transform" />
      <param name="options" />
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindPredicate">
      <summary>찾기 결과를 필터링하는 메서드를 캡슐화합니다.</summary>
      <param name="entry">조건자 조건으로 평가할 파일 시스템 항목에 대한 참조입니다.</param>
      <typeparam name="TResult" />
      <returns>조건자 조건이 충족되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindTransform">
      <summary>원시 데이터 찾기를 결과로 변환하는 메서드를 캡슐화합니다.</summary>
      <param name="entry">조건자 조건으로 평가할 파일 시스템 항목에 대한 참조입니다.</param>
      <typeparam name="TResult" />
      <returns>이 대리자가 캡슐화되는 유형의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.GetEnumerator">
      <summary>이 유형의 결과에 대한 열거자를 검색합니다.</summary>
      <returns>열거자입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldIncludePredicate">
      <summary>TResults를 포함할지 여부를 확인하는 데 사용할 수 있는 조건자를 가져오거나 설정합니다.</summary>
      <returns>Include 조건자입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldRecursePredicate">
      <summary>TResults가 재귀되는지 여부를 확인하는 데 사용할 수 있는 조건자를 가져오거나 설정합니다.</summary>
      <returns>재귀 조건자입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>반복하는 데 사용할 수 있는 열거자를 가져옵니다.</summary>
      <returns>열거자 인스턴스입니다.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerator`1">
      <typeparam name="TResult" />
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.#ctor(System.String,System.IO.EnumerationOptions)">
      <summary>찾기 작업을 캡슐화합니다.</summary>
      <param name="directory">검색할 디렉터리입니다.</param>
      <param name="options">사용할 열거형 옵션입니다.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ContinueOnError(System.Int32)">
      <summary>파생 클래스에서 재정의되는 경우 실행을 계속할지 기본 예외를 throw할지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="error">네이티브 오류 코드입니다.</param>
      <returns>계속하려면 <see langword="true" />이고, 지정된 오류에 대한 기본 예외를 throw하려면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.Current">
      <summary>현재 방문한 요소를 가져옵니다.</summary>
      <returns>현재 방문한 요소입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose">
      <summary>
        <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose(System.Boolean)">
      <summary>파생 클래스에서 재정의할 경우, <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" /> 클래스에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.MoveNext">
      <summary>열거자를 <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" />의 다음 항목으로 이동합니다.</summary>
      <returns>열거자가 다음 항목으로 이동한 경우 <see langword="true" />이며, 열거자의 끝을 지난 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.OnDirectoryFinished(System.ReadOnlySpan{System.Char})">
      <summary>파생 클래스에서 재정의되는 경우 디렉터리의 끝에 도달할 때마다 이 메서드가 호출됩니다.</summary>
      <param name="directory">읽기 전용 범위에 해당하는 디렉터리 경로입니다.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Reset">
      <summary>항상<see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldIncludeEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>파생 클래스에서 재정의되는 경우 지정된 파일 시스템 항목을 결과에 포함할지 여부를 결정합니다.</summary>
      <param name="entry">파일 시스템 항목 참조입니다.</param>
      <returns>지정된 파일 시스템 항목을 결과에 포함할 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldRecurseIntoEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>파생 클래스에서 재정의되는 경우 지정된 파일 시스템 항목이 재귀되는지 여부를 결정합니다.</summary>
      <param name="entry">파일 시스템 항목 참조입니다.</param>
      <returns>지정된 디렉터리 항목이 재귀되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.System#Collections#IEnumerator#Current">
      <summary>현재 방문한 개체를 가져옵니다.</summary>
      <returns>현재 방문한 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.TransformEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>파생 클래스에서 재정의되는 경우 현재 항목에서 결과 유형을 생성합니다.</summary>
      <param name="entry" />
      <returns>현재 항목의 결과 유형입니다.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemName">
      <summary>파일 시스템 이름 일치 방법을 제공합니다.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesSimpleExpression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>지정된 식이 지정된 이름과 일치하는지 여부를 확인합니다. ‘*’ 및 ‘?’ 와일드카드를 지원합니다. 백슬래시 문자 ‘'가 이스케이프됩니다.</summary>
      <param name="expression">일치하는 식입니다.</param>
      <param name="name">식에 대해 확인할 이름입니다.</param>
      <param name="ignoreCase">대/소문자를 무시하려면 <see langword="true" />(기본값)이고, 대/소문자를 구분해야 하는 경우 <see langword="false" />입니다.</param>
      <returns>지정된 식이 지정된 이름과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesWin32Expression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>지정된 Win32 식이 지정된 이름과 일치하는지 여부를 확인합니다. ‘*’, ‘?’, ‘&lt;’, ‘&gt;’, ‘”’ 와일드카드를 지원합니다. 백슬래시 문자 ‘'가 이스케이프됩니다.</summary>
      <param name="expression">일치하는 식입니다(예: “*.foo”).</param>
      <param name="name">식에 대해 확인할 이름입니다.</param>
      <param name="ignoreCase">대/소문자를 무시하려면 <see langword="true" />(기본값)이고, 대/소문자를 구분해야 하는 경우 <see langword="false" />입니다.</param>
      <returns>지정된 식이 지정된 이름과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)">
      <summary>지정된 Win32 식을 변환합니다. Win32 동작과 일치하도록 ‘*’ 및 ‘?’를 ‘&lt;’, ‘&gt;’로 변경합니다.</summary>
      <param name="expression">변환할 식입니다.</param>
      <returns>변환된 Win32 식을 포함하는 문자열입니다.</returns>
    </member>
    <member name="T:System.IO.EnumerationOptions" />
    <member name="M:System.IO.EnumerationOptions.#ctor">
      <summary>
        <see cref="T:System.IO.EnumerationOptions" /> 클래스의 새 인스턴스를 권장 기본 옵션으로 초기화합니다.</summary>
    </member>
    <member name="P:System.IO.EnumerationOptions.AttributesToSkip">
      <summary>건너뛸 특성을 가져오거나 설정합니다. 기본값은 <c>FileAttributes.Hidden | FileAttributes.System</c>입니다.</summary>
      <returns>건너뛸 특성입니다.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.BufferSize">
      <summary>제안된 버퍼 크기(바이트)를 가져오거나 설정합니다. 기본값은 0(제안 없음)입니다.</summary>
      <returns>버퍼 크기입니다.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.IgnoreInaccessible">
      <summary>액세스가 거부된 경우 파일 또는 디렉터리를 건너뛸지 여부를 나타내는 값을 가져오거나 설정합니다(예: <see cref="T:System.UnauthorizedAccessException" /> 또는 <see cref="T:System.Security.SecurityException" />). 기본값은 <see langword="true" />입니다.</summary>
      <returns>
        <see langword="true" />innacessible 파일이 나 디렉터리를 건너뛰려면 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchCasing">
      <summary>대/소문자 구분 동작을 가져오거나 설정합니다.</summary>
      <returns>대/소문자 일치 동작을 나타내는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchType">
      <summary>일치 유형을 가져오거나 설정합니다.</summary>
      <returns>일치 유형을 나타내는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.RecurseSubdirectories">
      <summary>열거하는 동안 하위 디렉터리에 재귀될지 여부를 나타내는 값을 가져오거나 설정합니다. 기본값은 <see langword="false" />입니다.</summary>
      <returns>
        <see langword="true" />하위 디렉터리를 재귀적으로 하려면 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.ReturnSpecialDirectories">
      <summary>특수 디렉터리 항목 “.” 및 “...”를 반환할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" />특수 디렉터리 항목 "." 및 "...";을 반환 하려면 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.IO.File">
      <summary>단일 파일에 대한 만들기, 복사, 삭제, 이동 및 열기를 위한 정적 메서드를 제공하고 <see cref="T:System.IO.FileStream" /> 개체 만들기를 지원합니다.</summary>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>파일에 줄을 추가한 다음 파일을 닫습니다. 지정한 파일이 없는 경우 이 메서드는 파일을 만들고 지정된 줄을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">줄을 추가할 파일입니다. 파일이 아직 없으면 새로 만들어집니다.</param>
      <param name="contents">파일에 추가할 줄입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="contents" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />로 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" />가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 파일에 쓸 수 있는 사용 권한이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />가 읽기 전용 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />는 디렉터리입니다.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>지정된 인코딩을 사용하여 파일에 줄을 추가한 다음 파일을 닫습니다. 지정한 파일이 없는 경우 이 메서드는 파일을 만들고 지정된 줄을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">줄을 추가할 파일입니다. 파일이 아직 없으면 새로 만들어집니다.</param>
      <param name="contents">파일에 추가할 줄입니다.</param>
      <param name="encoding">사용할 문자 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />, <paramref name="contents" /> 또는 <paramref name="encoding" />이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />로 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" />가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />가 읽기 전용 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />는 디렉터리입니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>지정된 인코딩을 사용하여 비동기식으로 파일에 줄을 추가한 다음 파일을 닫습니다. 지정한 파일이 없는 경우 이 메서드는 파일을 만들고 지정된 줄을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">줄을 추가할 파일입니다. 파일이 아직 없으면 새로 만들어집니다.</param>
      <param name="contents">파일에 추가할 줄입니다.</param>
      <param name="encoding">사용할 문자 인코딩입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 추가 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>파일에 비동기식으로 줄을 추가한 다음 파일을 닫습니다. 지정한 파일이 없는 경우 이 메서드는 파일을 만들고 지정된 줄을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">줄을 추가할 파일입니다. 파일이 아직 없으면 새로 만들어집니다.</param>
      <param name="contents">파일에 추가할 줄입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 추가 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String)">
      <summary>파일을 열고 지정된 문자열을 파일에 추가한 다음 파일을 닫습니다. 파일이 없는 경우 이 메서드는 파일을 만들고 지정된 문자열을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">지정된 문자열을 추가할 파일입니다.</param>
      <param name="contents">파일에 추가할 문자열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)">
      <summary>지정된 인코딩을 사용하여 지정된 문자열을 파일에 추가하며, 파일이 없는 경우 파일을 생성합니다.</summary>
      <param name="path">지정된 문자열을 추가할 파일입니다.</param>
      <param name="contents">파일에 추가할 문자열입니다.</param>
      <param name="encoding">사용할 문자 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>파일이 아직 없는 경우 비동기식으로 파일을 열거나 파일을 만든 다음, 지정된 인코딩을 사용하여 지정된 문자열을 파일에 추가한 후 파일을 닫습니다.</summary>
      <param name="path">지정된 문자열을 추가할 파일입니다.</param>
      <param name="contents">파일에 추가할 문자열입니다.</param>
      <param name="encoding">사용할 문자 인코딩입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 추가 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>파일이 없는 경우 비동기식으로 파일을 열거나 파일을 만든 다음, 지정된 문자열을 파일에 추가한 후 파일을 닫습니다.</summary>
      <param name="path">지정된 문자열을 추가할 파일입니다.</param>
      <param name="contents">파일에 추가할 문자열입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 추가 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.AppendText(System.String)">
      <summary>기존 파일 또는 지정된 파일이 존재하지 않는 경우 새 파일에 UTF-8 인코딩된 텍스트를 추가하는 <see cref="T:System.IO.StreamWriter" />를 만듭니다.</summary>
      <param name="path">추가 대상인 파일에 대한 경로입니다.</param>
      <returns>UTF-8로 인코딩된 텍스트를 지정된 파일 또는 새 파일에 추가하는 스트림 작성기입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 디렉터리가 없거나 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String)">
      <summary>새 파일에 기존 파일을 복사합니다. 같은 이름의 파일을 덮어쓸 수는 없습니다.</summary>
      <param name="sourceFileName">복사할 파일입니다.</param>
      <param name="destFileName">대상 파일 이름입니다. 대상 파일 이름은 디렉터리나 기존 파일일 수 없습니다.</param>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />이 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.  
또는 
 <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />이 디렉터리를 지정합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />에 지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="sourceFileName" />을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" />이 있습니다.  
또는 
I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String,System.Boolean)">
      <summary>새 파일에 기존 파일을 복사합니다. 같은 이름의 파일을 덮어쓸 수 있습니다.</summary>
      <param name="sourceFileName">복사할 파일입니다.</param>
      <param name="destFileName">대상 파일 이름입니다. 대상 파일 이름은 디렉터리가 될 수 없습니다.</param>
      <param name="overwrite">대상 파일을 덮어쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="destFileName" />이(가) 읽기 전용입니다.
또는 
<paramref name="overwrite" />는 <see langword="true" />이고, <paramref name="destFileName" />은 있지만 숨겨져 있고, <paramref name="sourceFileName" />은 숨겨지지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />이 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.  
또는 
 <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />이 디렉터리를 지정합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />에 지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="sourceFileName" />을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" />이(가) 있으며 <paramref name="overwrite" />이(가) <see langword="false" />입니다.  
또는 
I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String)">
      <summary>지정된 경로에 파일을 만들거나 지정된 경로의 파일을 덮어씁니다.</summary>
      <param name="path">만들 파일의 경로와 이름입니다.</param>
      <returns>
        <see cref="T:System.IO.FileStream" />에 지정된 파일에 대한 읽기/쓰기 권한을 제공하는 <paramref name="path" />입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 만드는 중 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32)">
      <summary>지정된 파일을 만들거나 덮어씁니다.</summary>
      <param name="path">파일의 이름입니다.</param>
      <param name="bufferSize">파일 읽기 및 쓰기를 위해 버퍼링할 바이트 수입니다.</param>
      <returns>
        <see cref="T:System.IO.FileStream" />에 지정된 파일에 대한 읽기/쓰기 권한을 제공하는 지정된 버퍼 크기의 <paramref name="path" />입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 만드는 중 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)">
      <summary>버퍼 크기와 파일을 만들거나 덮어쓸 방식을 설명하는 <see cref="T:System.IO.FileOptions" /> 값을 지정하여 지정된 파일을 만들거나 덮어씁니다.</summary>
      <param name="path">파일의 이름입니다.</param>
      <param name="bufferSize">파일 읽기 및 쓰기를 위해 버퍼링할 바이트 수입니다.</param>
      <param name="options">파일을 만들거나 덮어쓸 방식을 설명하는 <see cref="T:System.IO.FileOptions" /> 값 중 하나입니다.</param>
      <returns>지정된 버퍼 크기의 새 파일입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 만드는 중 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.CreateText(System.String)">
      <summary>UTF-8로 인코딩된 텍스트를 쓰기 위해 파일을 만들거나 엽니다. 파일이 이미 있으면 해당 콘텐츠를 덮어씁니다.</summary>
      <param name="path">쓰기용으로 열 파일입니다.</param>
      <returns>UTF-8 인코딩을 사용하여 지정된 파일에 쓸 <see cref="T:System.IO.StreamWriter" />입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Decrypt(System.String)">
      <summary>현재 계정으로 <see cref="M:System.IO.File.Encrypt(System.String)" /> 메서드를 통해 암호화된 파일을 해독합니다.</summary>
      <param name="path">해독할 파일을 나타내는 경로입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 매개 변수가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DriveNotFoundException">잘못된 드라이브를 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> 매개 변수에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다. 예를 들어 암호화된 파일이 이미 열려 있습니다.  
 또는  
 현재 플랫폼이 해당 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException">NTFS 파일 시스템이 아닙니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> 매개 변수가 읽기 전용 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
<paramref name="path" /> 매개 변수가 디렉터리를 지정합니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.Delete(System.String)">
      <summary>지정한 파일을 삭제합니다.</summary>
      <param name="path">삭제할 파일의 이름입니다. 와일드카드 문자는 지원되지 않습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">지정된 파일이 사용 중입니다.  
또는 
파일에 대해 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다. 이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다. 자세한 내용은 방법: 디렉터리 및 파일 열거를 참조하세요.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우  
또는 
파일이 사용 중인 실행 파일입니다.  
또는 
 <paramref name="path" />는 디렉터리입니다.  
또는 
 <paramref name="path" />가 읽기 전용 파일을 지정했습니다.</exception>
    </member>
    <member name="M:System.IO.File.Encrypt(System.String)">
      <summary>파일을 암호화하는 데 사용된 계정으로만 해독할 수 있도록 암호화합니다.</summary>
      <param name="path">암호화할 파일을 나타내는 경로입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 매개 변수가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DriveNotFoundException">잘못된 드라이브를 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> 매개 변수에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.  
 또는  
 현재 플랫폼이 해당 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException">NTFS 파일 시스템이 아닙니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> 매개 변수가 읽기 전용 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
<paramref name="path" /> 매개 변수가 디렉터리를 지정합니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.Exists(System.String)">
      <summary>지정된 파일이 있는지를 확인합니다.</summary>
      <param name="path">확인할 파일입니다.</param>
      <returns>호출자에게 필요한 권한이 있고 <see langword="true" />에 기존 파일의 이름이 포함되면 <paramref name="path" />이고, 그렇지 않으면 <see langword="false" />입니다. 또한 이 메서드는 <see langword="false" />가 <paramref name="path" />이거나 잘못된 경로이거나 빈 문자열이면 <see langword="null" />를 반환합니다. 호출자에게 지정된 파일을 읽을 권한이 없는 경우 예외가 throw되지 않으며 <see langword="false" />가 있는지 여부와 관계없이 <paramref name="path" />를 반환합니다.</returns>
    </member>
    <member name="M:System.IO.File.GetAttributes(System.String)">
      <summary>경로에 있는 파일의 <see cref="T:System.IO.FileAttributes" />를 가져옵니다.</summary>
      <param name="path">파일의 경로입니다.</param>
      <returns>경로에 있는 파일의 <see cref="T:System.IO.FileAttributes" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />이 비어 있거나, 공백만 포함하거나 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> 가 매핑되지 않은 드라이브에 있는 파일과 같이 올바르지 않은 파일을 나타내거나 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> 가 매핑되지 않은 드라이브에 있는 디렉터와 같이 올바르지 않은 디렉터리를 나타내거나 디렉터리를 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">이 파일을 다른 프로세서에서 사용 중입니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.GetCreationTime(System.String)">
      <summary>지정된 파일 또는 디렉터리의 만든 날짜와 시간을 반환합니다.</summary>
      <param name="path">만든 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일이나 디렉터리를 만든 날짜와 시간으로 설정된 <see cref="T:System.DateTime" /> 구조체입니다. 이 값은 현지 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.GetCreationTimeUtc(System.String)">
      <summary>지정된 파일이나 디렉터리를 만든 날짜와 시간을 UTC 기준으로 반환합니다.</summary>
      <param name="path">만든 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일이나 디렉터리를 만든 날짜와 시간으로 설정된 <see cref="T:System.DateTime" /> 구조체입니다. 이 값은 UTC 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.GetLastAccessTime(System.String)">
      <summary>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간을 반환합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간으로 설정된 <see cref="T:System.DateTime" /> 구조체입니다. 이 값은 현지 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.GetLastAccessTimeUtc(System.String)">
      <summary>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간을 UTC 기준으로 반환합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간으로 설정된 <see cref="T:System.DateTime" /> 구조체입니다. 이 값은 UTC 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.GetLastWriteTime(System.String)">
      <summary>지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간을 반환합니다.</summary>
      <param name="path">쓴 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간으로 설정된 <see cref="T:System.DateTime" /> 구조체입니다. 이 값은 현지 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.GetLastWriteTimeUtc(System.String)">
      <summary>지정된 파일 또는 디렉터리에 마지막으로 쓴 날짜와 시간을 UTC 기준으로 반환합니다.</summary>
      <param name="path">쓴 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</param>
      <returns>지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간으로 설정된 <see cref="T:System.DateTime" /> 구조체입니다. 이 값은 UTC 시간으로 표현됩니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String)">
      <summary>지정된 파일을 새 위치로 이동하고 새 파일의 이름을 지정할 수 있는 옵션을 제공합니다.</summary>
      <param name="sourceFileName">이동할 파일의 이름입니다. 상대 또는 절대 경로가 포함될 수 있습니다.</param>
      <param name="destFileName">파일에 대한 새 경로 및 이름입니다.</param>
      <exception cref="T:System.IO.IOException">대상 파일이 이미 있습니다.  
또는 
 <paramref name="sourceFileName" />을 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" /> 이 빈 문자열이거나 공백만을 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />에 정의된 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />에 지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String,System.Boolean)">
      <summary>새 파일 이름을 지정하고 대상 파일이 이미 있으면 덮어쓰는 옵션을 제공하여, 지정된 파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName">이동할 파일의 이름입니다. 상대 또는 절대 경로가 포함될 수 있습니다.</param>
      <param name="destFileName">파일에 대한 새 경로 및 이름입니다.</param>
      <param name="overwrite">대상 파일이 이미 있는 경우 덮어쓰려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="sourceFileName" />을 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" /> 이 빈 문자열이거나 공백만을 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />에 정의된 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />에 지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destFileName" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode)">
      <summary>지정된 경로에서 <see cref="T:System.IO.FileStream" />을 공유하지 않고 읽기/쓰기 액세스로 엽니다.</summary>
      <param name="path">열 파일입니다.</param>
      <param name="mode">파일이 없는 경우 파일을 만들 것인지를 지정하고, 기존 파일 내용을 유지할 것인지 덮어쓸 것인지를 결정하는 <see cref="T:System.IO.FileMode" /> 값입니다.</param>
      <returns>읽기/쓰기 액세스 및 공유하지 않는 상태로 지정된 모드와 경로에서 열린 <see cref="T:System.IO.FileStream" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="mode" /> 가 <see cref="F:System.IO.FileMode.Create" /> 이고 지정된 파일이 숨겨진 파일입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" />가 잘못된 값을 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>지정된 경로에서 <see cref="T:System.IO.FileStream" />을 공유하지 않고 지정된 모드와 액세스로 엽니다.</summary>
      <param name="path">열 파일입니다.</param>
      <param name="mode">파일이 없는 경우 파일을 만들 것인지를 지정하고, 기존 파일 내용을 유지할 것인지 덮어쓸 것인지를 결정하는 <see cref="T:System.IO.FileMode" /> 값입니다.</param>
      <param name="access">파일에 수행할 수 있는 작업을 지정하는 <see cref="T:System.IO.FileAccess" /> 값입니다.</param>
      <returns>지정된 모드와 액세스 권한으로 지정된 파일에 대한 액세스를 제공하는 공유되지 않는 <see cref="T:System.IO.FileStream" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.  
또는 
 <paramref name="access" /> 가 <see langword="Read" /> 를 지정하고, <paramref name="mode" /> 가 <see langword="Create" />, <see langword="CreateNew" />, <see langword="Truncate" />또는 <see langword="Append" />를 지정했습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> 가 읽기 전용인 파일을 지정하고 <paramref name="access" /> 가 <see langword="Read" />가 아닙니다.  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />이고 지정된 파일이 숨겨진 파일입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 또는 <paramref name="access" />가 잘못된 값을 지정합니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>읽기, 쓰기 또는 읽기/쓰기 권한과 지정된 공유 옵션을 사용하여 지정된 경로에서 지정된 모드를 갖는 <see cref="T:System.IO.FileStream" />을 엽니다.</summary>
      <param name="path">열 파일입니다.</param>
      <param name="mode">파일이 없는 경우 파일을 만들 것인지를 지정하고, 기존 파일 내용을 유지할 것인지 덮어쓸 것인지를 결정하는 <see cref="T:System.IO.FileMode" /> 값입니다.</param>
      <param name="access">파일에 수행할 수 있는 작업을 지정하는 <see cref="T:System.IO.FileAccess" /> 값입니다.</param>
      <param name="share">다른 스레드가 파일에 대해 가지는 액세스 형식을 지정하는 <see cref="T:System.IO.FileShare" /> 값입니다.</param>
      <returns>읽기, 쓰기 또는 읽기/쓰기 권한과 지정된 공유 옵션을 사용하여 지정된 경로에서 지정된 모드를 갖는 <see cref="T:System.IO.FileStream" />을 엽니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.  
또는 
 <paramref name="access" /> 가 <see langword="Read" /> 를 지정하고, <paramref name="mode" /> 가 <see langword="Create" />, <see langword="CreateNew" />, <see langword="Truncate" />또는 <see langword="Append" />를 지정했습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> 가 읽기 전용인 파일을 지정하고 <paramref name="access" /> 가 <see langword="Read" />가 아닙니다.  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />이고 지정된 파일이 숨겨진 파일입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" />, <paramref name="access" /> 또는 <paramref name="share" />이(가) 잘못된 값을 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.OpenRead(System.String)">
      <summary>읽기용으로 기존 파일을 엽니다.</summary>
      <param name="path">읽기용으로 열 파일입니다.</param>
      <returns>지정된 경로에 있는 읽기 전용 <see cref="T:System.IO.FileStream" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.File.OpenText(System.String)">
      <summary>UTF-8로 인코딩된 기존 텍스트 파일을 읽기용으로 엽니다.</summary>
      <param name="path">읽기용으로 열 파일입니다.</param>
      <returns>지정된 경로에 있는 <see cref="T:System.IO.StreamReader" />입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.OpenWrite(System.String)">
      <summary>쓰기 위해 기존 파일을 열거나 새 파일을 만듭니다.</summary>
      <param name="path">쓰기용으로 열 파일입니다.</param>
      <returns>
        <see cref="T:System.IO.FileStream" /> 액세스 권한이 있는 지정된 경로에서 공유되지 않은 <see cref="F:System.IO.FileAccess.Write" /> 개체입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우  
또는 
 <paramref name="path" /> 읽기 전용 파일 또는 디렉터리를 지정했습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.ReadAllBytes(System.String)">
      <summary>이진 파일을 열고 파일의 내용을 바이트 배열로 읽어 들인 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <returns>파일의 내용을 포함하는 바이트 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)">
      <summary>이진 파일을 비동기식으로 열고 파일의 내용을 바이트 배열로 읽은 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>파일의 내용을 포함하는 바이트 배열을 래핑하는 비동기 읽기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String)">
      <summary>텍스트 파일을 열고 파일의 모든 줄을 읽은 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <returns>파일의 모든 줄을 포함하는 문자열 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String,System.Text.Encoding)">
      <summary>파일을 열고 지정된 인코딩을 사용하여 파일의 모든 줄을 읽은 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <param name="encoding">파일의 내용에 적용되는 인코딩입니다.</param>
      <returns>파일의 모든 줄을 포함하는 문자열 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>비동기식으로 텍스트 파일을 열고 지정된 인코딩을 사용하여 파일의 모든 줄을 읽은 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <param name="encoding">파일의 내용에 적용되는 인코딩입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>파일의 모든 줄을 포함하는 문자열 배열을 래핑하는 비동기 읽기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)">
      <summary>텍스트 파일을 비동기식으로 열고 파일의 모든 줄을 읽은 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>파일의 모든 줄을 포함하는 문자열 배열을 래핑하는 비동기 읽기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String)">
      <summary>텍스트 파일을 열고, 파일의 모든 텍스트를 읽은 다음에 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <returns>파일의 모든 텍스트를 포함하는 문자열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)">
      <summary>파일을 열고, 지정된 인코딩을 사용하여 파일의 모든 텍스트를 읽은 다음에 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <param name="encoding">파일의 내용에 적용되는 인코딩입니다.</param>
      <returns>파일의 모든 텍스트를 포함하는 문자열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>비동기식으로 텍스트 파일을 열고 지정된 인코딩을 사용하여 파일의 모든 텍스트를 읽은 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <param name="encoding">파일의 내용에 적용되는 인코딩입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>파일의 모든 텍스트를 포함하는 문자열을 래핑하는 비동기 읽기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)">
      <summary>비동기식으로 텍스트 파일을 열고, 파일의 모든 텍스트를 읽은 다음 파일을 닫습니다.</summary>
      <param name="path">읽기 위해 열 파일입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>파일의 모든 텍스트를 포함하는 문자열을 래핑하는 비동기 읽기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String)">
      <summary>파일의 줄을 읽습니다.</summary>
      <param name="path">읽을 파일입니다.</param>
      <returns>파일의 모든 줄 또는 쿼리 결과의 줄입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />로 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" />가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />가 읽기 전용 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />는 디렉터리입니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String,System.Text.Encoding)">
      <summary>지정된 인코딩을 가진 파일의 줄을 읽습니다.</summary>
      <param name="path">읽을 파일입니다.</param>
      <param name="encoding">파일의 내용에 적용되는 인코딩입니다.</param>
      <returns>파일의 모든 줄 또는 쿼리 결과의 줄입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" />로 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" />가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />가 읽기 전용 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />는 디렉터리입니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String)">
      <summary>지정된 파일의 내용을 다른 파일의 내용으로 대체합니다. 이때 원래 파일은 삭제되고 대체된 파일의 백업이 만들어집니다.</summary>
      <param name="sourceFileName">
        <paramref name="destinationFileName" />으로 지정된 파일을 대체할 파일의 이름입니다.</param>
      <param name="destinationFileName">대체할 파일의 이름입니다.</param>
      <param name="destinationBackupFileName">백업 파일의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.  
또는 
<paramref name="destinationBackupFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DriveNotFoundException">잘못된 드라이브를 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">현재 <see cref="T:System.IO.FileInfo" /> 개체에 설명된 파일을 찾을 수 없습니다.  
또는 
<paramref name="destinationBackupFileName" /> 매개 변수에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.  
또는 
<paramref name="sourceFileName" /> 및 <paramref name="destinationFileName" /> 매개 변수는 동일한 파일을 지정합니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 Windows 98 Second Edition 또는 이전 버전이고 파일 시스템이 NTFS가 아닙니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destinationFileName" /> 매개 변수가 읽기 전용인 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
원본 또는 대상 매개 변수가 파일 대신 디렉터리를 지정합니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)">
      <summary>지정된 파일의 내용을 다른 파일의 내용으로 대체합니다. 이때 원래 파일은 삭제되고 대체된 파일의 백업이 만들어지며 선택적으로 병합 오류가 무시됩니다.</summary>
      <param name="sourceFileName">
        <paramref name="destinationFileName" />으로 지정된 파일을 대체할 파일의 이름입니다.</param>
      <param name="destinationFileName">대체할 파일의 이름입니다.</param>
      <param name="destinationBackupFileName">백업 파일의 이름입니다.</param>
      <param name="ignoreMetadataErrors">파일을 대체할 때 대체할 파일의 특성 및 ACL(액세스 제어 목록) 같은 병합 오류를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.  
또는 
<paramref name="destinationBackupFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DriveNotFoundException">잘못된 드라이브를 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">현재 <see cref="T:System.IO.FileInfo" /> 개체에 설명된 파일을 찾을 수 없습니다.  
또는 
<paramref name="destinationBackupFileName" /> 매개 변수에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.  
또는 
<paramref name="sourceFileName" /> 및 <paramref name="destinationFileName" /> 매개 변수는 동일한 파일을 지정합니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 Windows 98 Second Edition 또는 이전 버전이고 파일 시스템이 NTFS가 아닙니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="sourceFileName" /> 또는 <paramref name="destinationFileName" /> 매개 변수가 읽기 전용인 파일을 지정합니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
원본 또는 대상 매개 변수가 파일 대신 디렉터리를 지정합니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)">
      <summary>지정된 경로에 있는 파일의 지정된 <see cref="T:System.IO.FileAttributes" />를 가져옵니다.</summary>
      <param name="path">파일의 경로입니다.</param>
      <param name="fileAttributes">열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 비어 있거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 파일 특성이 올바르지 않습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> 에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTime(System.String,System.DateTime)">
      <summary>파일이 만들어진 날짜와 시간을 설정합니다.</summary>
      <param name="path">만든 날짜와 시간 정보를 설정할 파일입니다.</param>
      <param name="creationTime">
        <see cref="T:System.DateTime" />의 만든 날짜와 시간을 설정할 값이 포함된 <paramref name="path" />입니다. 이 값은 현지 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">작업을 수행하는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> 이 이 작업에 대해 허용되는 날짜나 시간 범위 또는 둘 다를 벗어나는 값을 지정합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>파일을 만든 날짜와 시간을 UTC 기준으로 설정합니다.</summary>
      <param name="path">만든 날짜와 시간 정보를 설정할 파일입니다.</param>
      <param name="creationTimeUtc">
        <see cref="T:System.DateTime" />의 만든 날짜와 시간을 설정할 값이 포함된 <paramref name="path" />입니다. 이 값은 UTC 시간으로 표현됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.IOException">작업을 수행하는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> 이 이 작업에 대해 허용되는 날짜나 시간 범위 또는 둘 다를 벗어나는 값을 지정합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTime(System.String,System.DateTime)">
      <summary>지정된 파일을 마지막으로 액세스한 날짜와 시간을 설정합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 설정할 파일입니다.</param>
      <param name="lastAccessTime">
        <see cref="T:System.DateTime" />에 마지막으로 액세스한 날짜와 시간을 설정할 값이 포함된 <paramref name="path" />입니다. 이 값은 현지 시간으로 표현됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>지정된 파일을 마지막으로 액세스한 날짜와 시간을 UTC 기준으로 설정합니다.</summary>
      <param name="path">액세스 날짜와 시간 정보를 설정할 파일입니다.</param>
      <param name="lastAccessTimeUtc">
        <see cref="T:System.DateTime" />에 마지막으로 액세스한 날짜와 시간을 설정할 값이 포함된 <paramref name="path" />입니다. 이 값은 UTC 시간으로 표현됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTime(System.String,System.DateTime)">
      <summary>지정된 파일에 마지막으로 쓴 날짜와 시간을 설정합니다.</summary>
      <param name="path">날짜와 시간 정보를 설정할 파일입니다.</param>
      <param name="lastWriteTime">
        <see cref="T:System.DateTime" />에 마지막으로 쓴 날짜와 시간을 설정할 값이 포함된 <paramref name="path" />입니다. 이 값은 현지 시간으로 표현됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>지정된 파일에 마지막으로 쓴 날짜와 시간을 UTC 기준으로 설정합니다.</summary>
      <param name="path">날짜와 시간 정보를 설정할 파일입니다.</param>
      <param name="lastWriteTimeUtc">
        <see cref="T:System.DateTime" />에 마지막으로 쓴 날짜와 시간을 설정할 값이 포함된 <paramref name="path" />입니다. 이 값은 UTC 시간으로 표현됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 경로를 찾을 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" />가 이 작업에 대해 허용되는 날짜 또는 시간 범위를 벗어나는 값을 지정합니다.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])">
      <summary>새 파일을 만들고 지정된 바이트 배열을 파일에 쓴 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="bytes">파일에 쓸 바이트입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 가 <see langword="null" /> 이거나 바이트 배열이 비어 있습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
      <summary>비동기식으로 새 파일을 만들고 지정된 바이트 배열을 파일에 쓴 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="bytes">파일에 쓸 바이트입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>새 파일을 만들고 문자열의 컬렉션을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 줄입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="contents" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" />가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />는 디렉터리입니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>지정된 인코딩을 사용하여 새 파일을 만들고 문자열의 컬렉션을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 줄입니다.</param>
      <param name="encoding">사용할 문자 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />, <paramref name="contents" /> 또는 <paramref name="encoding" />이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" />가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />는 디렉터리입니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[])">
      <summary>새 파일을 만들고 지정된 문자열 배열을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 문자열 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="contents" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
      <summary>새 파일을 만들고 지정된 인코딩을 사용하여 지정된 문자열 배열을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 문자열 배열입니다.</param>
      <param name="encoding">문자열 배열에 적용되는 문자 인코딩을 나타내는 <see cref="T:System.Text.Encoding" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 또는 <paramref name="contents" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>비동기식으로 새 파일을 만들고 지정된 인코딩을 사용하여 지정된 줄을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 줄입니다.</param>
      <param name="encoding">사용할 문자 인코딩입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>비동기식으로 새 파일을 만들고 지정된 줄을 파일에 쓴 다음 파일을 닫습니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 줄입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String)">
      <summary>새 파일을 만들고 지정된 문자열을 파일에 쓴 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 문자열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)">
      <summary>새 파일을 만들고 지정된 인코딩을 사용하여 지정된 문자열을 파일에 쓴 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 문자열입니다.</param>
      <param name="encoding">문자열에 적용할 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는 
 <paramref name="path" />는 숨겨진 파일을 지정했습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="path" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>비동기식으로 새 파일을 만들고 지정된 인코딩을 사용하여 지정된 문자열을 파일에 쓴 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 문자열입니다.</param>
      <param name="encoding">문자열에 적용할 인코딩입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>비동기식으로 새 파일을 만들고 지정된 문자열을 파일에 쓴 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다.</summary>
      <param name="path">쓸 파일입니다.</param>
      <param name="contents">파일에 쓸 문자열입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="T:System.IO.FileInfo">
      <summary>파일을 만들고, 복사하고, 삭제하고, 이동하고, 열기 위한 속성 및 인스턴스 메서드를 제공하고, <see cref="T:System.IO.FileStream" /> 개체를 만드는 것을 도와 줍니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.IO.FileInfo.#ctor(System.String)">
      <summary>파일 경로의 래퍼 역할을 하는 <see cref="T:System.IO.FileInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 파일의 정규화된 이름이거나 상대적인 파일 이름입니다. 경로가 디렉터리 구분 기호 문자로 끝나서는 안 됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">파일 이름이 비어 있거나, 공백만 포함하거나 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="fileName" />에 대한 액세스가 거부되었습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="fileName" />의 문자열 중간에 콜론(:)이 있습니다.</exception>
    </member>
    <member name="M:System.IO.FileInfo.AppendText">
      <summary>
        <see cref="T:System.IO.StreamWriter" />의 이 인스턴스가 나타내는 파일에 텍스트를 추가하는 <see cref="T:System.IO.FileInfo" />를 만듭니다.</summary>
      <returns>새 <see langword="StreamWriter" />입니다.</returns>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String)">
      <summary>새 파일에 기존 파일을 복사하고 기존 파일을 덮어쓸 수 없도록 합니다.</summary>
      <param name="destFileName">복사할 새 파일의 이름입니다.</param>
      <returns>정규화된 경로가 있는 새 파일입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" />이 비어 있거나, 공백만 포함하거나 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.IO.IOException">오류가 발생했거나 대상 파일이 이미 있습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">디렉터리 경로를 거치거나 파일이 다른 드라이브로 이동됩니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="destFileName" />에 지정된 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" />은 문자열 내에 콜론(:)을 포함하지만 볼륨을 지정하지는 않습니다.</exception>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
      <summary>새 파일에 기존 파일을 복사하고 기존 파일을 덮어쓸 수 있도록 합니다.</summary>
      <param name="destFileName">복사할 새 파일의 이름입니다.</param>
      <param name="overwrite">기존 파일을 덮어쓸 수 있도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>새 파일이 반환되거나, <paramref name="overwrite" />가 <see langword="true" />인 경우 기존 파일을 덮어씁니다. 파일이 있고 <paramref name="overwrite" />가 <see langword="false" />이면 <see cref="T:System.IO.IOException" />이 throw됩니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" />이 비어 있거나, 공백만 포함하거나 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.IO.IOException">오류가 발생했거나 대상 파일이 이미 있으며 <paramref name="overwrite" />가 <see langword="false" />입니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="destFileName" />에 지정된 디렉터리가 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">디렉터리 경로를 거치거나 파일이 다른 드라이브로 이동됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" />의 문자열 중간에 콜론(:)이 있습니다.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Create">
      <summary>파일을 만듭니다.</summary>
      <returns>새 파일입니다.</returns>
    </member>
    <member name="M:System.IO.FileInfo.CreateText">
      <summary>새 텍스트 파일을 쓰는 <see cref="T:System.IO.StreamWriter" />를 만듭니다.</summary>
      <returns>새 <see langword="StreamWriter" />입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">파일 이름이 디렉터리입니다.</exception>
      <exception cref="T:System.IO.IOException">디스크가 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.Decrypt">
      <summary>현재 계정으로 <see cref="M:System.IO.FileInfo.Encrypt" /> 메서드를 통해 암호화된 파일을 해독합니다.</summary>
      <exception cref="T:System.IO.DriveNotFoundException">잘못된 드라이브를 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">현재 <see cref="T:System.IO.FileInfo" /> 개체에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">NTFS 파일 시스템이 아닙니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Microsoft Windows NT 이상이 아닌 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:System.IO.FileInfo" /> 개체에서 설명하는 파일이 읽기 전용인 경우  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.Delete">
      <summary>파일을 영구적으로 삭제합니다.</summary>
      <exception cref="T:System.IO.IOException">Microsoft Windows NT를 실행하는 컴퓨터에 대상 파일이 열려 있거나 메모리 매핑된 경우  
또는 
파일에 대해 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다. 이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다. 자세한 내용은 방법: 디렉터리 및 파일 열거를 참조하세요.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">경로가 디렉터리인 경우</exception>
    </member>
    <member name="P:System.IO.FileInfo.Directory">
      <summary>부모 디렉터리의 인스턴스를 가져옵니다.</summary>
      <returns>이 파일의 부모 디렉터리를 나타내는 <see cref="T:System.IO.DirectoryInfo" /> 개체입니다.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.IO.FileInfo.DirectoryName">
      <summary>디렉터리의 전체 경로를 나타내는 문자열을 가져옵니다.</summary>
      <returns>디렉터리의 전체 경로를 나타내는 문자열입니다.</returns>
      <exception cref="T:System.ArgumentNullException">디렉터리 이름에 대해 <see langword="null" />이 전달된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">정규화된 경로 이름이 시스템 정의 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.Encrypt">
      <summary>파일을 암호화하는 데 사용된 계정으로만 해독할 수 있도록 암호화합니다.</summary>
      <exception cref="T:System.IO.DriveNotFoundException">잘못된 드라이브를 지정했습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">현재 <see cref="T:System.IO.FileInfo" /> 개체에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">NTFS 파일 시스템이 아닙니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Microsoft Windows NT 이상이 아닌 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:System.IO.FileInfo" /> 개체에서 설명하는 파일이 읽기 전용인 경우  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.IO.FileInfo.Exists">
      <summary>파일이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>파일이 있으면 <see langword="true" />이고, 파일이 없거나 파일이 디렉터리이면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.FileInfo.IsReadOnly">
      <summary>현재 파일이 읽기 전용인지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
      <returns>현재 파일이 읽기 전용이면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.IO.FileNotFoundException">현재 <see cref="T:System.IO.FileInfo" /> 개체에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 플랫폼이 해당 작업을 지원하지 않는 경우  
 또는  
 호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">사용자에게 쓰기 권한이 없지만 이 속성을 <see langword="false" />로 설정하려고 한 경우</exception>
    </member>
    <member name="P:System.IO.FileInfo.Length">
      <summary>현재 파일의 크기(바이트)를 가져옵니다.</summary>
      <returns>현재 파일의 크기(바이트)입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 파일이나 디렉터리의 상태를 업데이트할 수 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.  
또는 
<see langword="Length" /> 속성이 디렉터리에 대해 호출되는 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String)">
      <summary>지정된 파일을 새 위치로 이동하고 새 파일의 이름을 지정할 수 있는 옵션을 제공합니다.</summary>
      <param name="destFileName">파일을 이동할 경로입니다. 이 경로에서 다른 파일 이름을 지정할 수 있습니다.</param>
      <exception cref="T:System.IO.IOException">대상 파일이 이미 있거나 대상 디바이스가 준비되지 않은 것과 같은 I/O 오류가 발생합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" />이 비어 있거나, 공백만 포함하거나 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" />이 읽기 전용이거나 디렉터리인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" />의 문자열 중간에 콜론(:)이 있습니다.</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String,System.Boolean)">
      <summary>새 파일 이름을 지정하고 대상 파일이 이미 있으면 덮어쓰는 옵션을 제공하여, 지정된 파일을 새 위치로 이동합니다.</summary>
      <param name="destFileName">파일을 이동할 경로입니다. 이 경로에서 다른 파일 이름을 지정할 수 있습니다.</param>
      <param name="overwrite">대상 파일이 이미 있는 경우 덮어쓰려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
      <exception cref="T:System.IO.IOException">대상 디바이스가 준비되지 않은 경우와 같은 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" />이 비어 있거나, 공백만 포함하거나 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" />이 읽기 전용이거나 디렉터리인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" />의 문자열 중간에 콜론(:)이 있습니다.</exception>
    </member>
    <member name="P:System.IO.FileInfo.Name">
      <summary>파일 이름을 가져옵니다.</summary>
      <returns>파일의 이름입니다.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode)">
      <summary>지정된 모드로 파일을 엽니다.</summary>
      <param name="mode">파일을 여는 모드(예: <see langword="Open" /> 또는 <see langword="Append" />)를 지정하는 <see cref="T:System.IO.FileMode" /> 상수입니다.</param>
      <returns>공유 권한 없이 읽기/쓰기 권한을 사용하여 지정된 모드로 연 파일입니다.</returns>
      <exception cref="T:System.IO.FileNotFoundException">파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">파일이 읽기 전용이거나 디렉터리인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일이 이미 열려 있습니다.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
      <summary>읽기, 쓰기 또는 읽기/쓰기 권한을 사용하여 지정된 모드로 파일을 엽니다.</summary>
      <param name="mode">파일을 여는 모드(예: <see langword="Open" /> 또는 <see langword="Append" />)를 지정하는 <see cref="T:System.IO.FileMode" /> 상수입니다.</param>
      <param name="access">
        <see langword="Read" />, <see langword="Write" /> 또는 <see langword="ReadWrite" /> 파일 액세스 권한 중 어떤 권한으로 파일을 열지를 지정하는 <see cref="T:System.IO.FileAccess" /> 상수입니다.</param>
      <returns>공유 권한 없이 지정된 액세스 권한 및 모드로 연 <see cref="T:System.IO.FileStream" /> 개체입니다.</returns>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />이 읽기 전용이거나 디렉터리인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일이 이미 열려 있습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />에 아무 것도 없거나 공백만 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException">하나 이상의 인수가 null인 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>읽기, 쓰기 또는 읽기/쓰기 권한과 지정된 공유 옵션을 사용하여 특정 모드로 파일을 엽니다.</summary>
      <param name="mode">파일을 여는 모드(예: <see langword="Open" /> 또는 <see langword="Append" />)를 지정하는 <see cref="T:System.IO.FileMode" /> 상수입니다.</param>
      <param name="access">
        <see cref="T:System.IO.FileAccess" /> , <see langword="Read" />또는 <see langword="Write" />파일 액세스 권한 중 어떤 권한으로 파일을 열지를 지정하는 <see langword="ReadWrite" /> 상수입니다.</param>
      <param name="share">이 파일에 대해 다른 <see langword="FileStream" /> 개체의 액세스 형식을 지정하는 <see cref="T:System.IO.FileShare" /> 상수입니다.</param>
      <returns>지정된 액세스 권한 및 공유 옵션을 사용하여 특정 모드로 연 <see cref="T:System.IO.FileStream" /> 개체입니다.</returns>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />이 읽기 전용이거나 디렉터리인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일이 이미 열려 있습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />에 아무 것도 없거나 공백만 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException">하나 이상의 인수가 null인 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenRead">
      <summary>읽기 전용 <see cref="T:System.IO.FileStream" />을 만듭니다.</summary>
      <returns>새 읽기 전용 <see cref="T:System.IO.FileStream" /> 개체입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />이 읽기 전용이거나 디렉터리인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException">파일이 이미 열려 있습니다.</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenText">
      <summary>UTF8 인코딩 방식으로 기존 텍스트 파일에서 읽는 <see cref="T:System.IO.StreamReader" />를 만듭니다.</summary>
      <returns>UTF8 인코딩 방식을 사용하는 새 <see langword="StreamReader" />입니다.</returns>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" />이 읽기 전용이거나 디렉터리인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenWrite">
      <summary>쓰기 전용 <see cref="T:System.IO.FileStream" />을 만듭니다.</summary>
      <returns>새 파일 또는 기존 파일의 공유되지 않는 쓰기 전용 <see cref="T:System.IO.FileStream" /> 개체입니다.</returns>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:System.IO.FileInfo" /> 개체의 인스턴스를 만들 때 지정된 경로는 읽기 전용이거나 디렉터리입니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <see cref="T:System.IO.FileInfo" /> 개체의 인스턴스를 만들 때 지정한 경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로에 해당하는 경우)</exception>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String)">
      <summary>지정된 파일의 내용을 현재 <see cref="T:System.IO.FileInfo" /> 개체에서 설명하는 파일로 대체합니다. 이때 원본 파일을 삭제하고 대체된 파일의 백업을 만듭니다.</summary>
      <param name="destinationFileName">현재 파일로 대체할 파일의 이름입니다.</param>
      <param name="destinationBackupFileName">
        <paramref name="destFileName" /> 매개 변수에 설명된 파일의 백업을 만드는 데 사용할 파일 이름입니다.</param>
      <returns>
        <paramref name="destFileName" /> 매개 변수에 설명된 파일에 대한 정보를 캡슐화하는 <see cref="T:System.IO.FileInfo" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.  
또는 
<paramref name="destBackupFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">현재 <see cref="T:System.IO.FileInfo" /> 개체에 설명된 파일을 찾을 수 없습니다.  
또는 
<paramref name="destinationFileName" /> 매개 변수에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Microsoft Windows NT 이상이 아닌 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
      <summary>지정된 파일의 내용을 현재 <see cref="T:System.IO.FileInfo" /> 개체에서 설명하는 파일로 대체합니다. 이때 원본 파일을 삭제하고 대체된 파일의 백업을 만듭니다.  병합 오류를 무시할지 여부도 지정합니다.</summary>
      <param name="destinationFileName">현재 파일로 대체할 파일의 이름입니다.</param>
      <param name="destinationBackupFileName">
        <paramref name="destFileName" /> 매개 변수에 설명된 파일의 백업을 만드는 데 사용할 파일 이름입니다.</param>
      <param name="ignoreMetadataErrors">대체된 파일과 대체 파일 사이에 발생하는 병합 오류(예: 특성 및 ACL)를 무시하려면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <paramref name="destFileName" /> 매개 변수에 설명된 파일에 대한 정보를 캡슐화하는 <see cref="T:System.IO.FileInfo" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.  
또는 
<paramref name="destBackupFileName" /> 매개 변수에 설명된 경로가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">현재 <see cref="T:System.IO.FileInfo" /> 개체에 설명된 파일을 찾을 수 없습니다.  
또는 
<paramref name="destinationFileName" /> 매개 변수에 설명된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Microsoft Windows NT 이상이 아닌 경우</exception>
    </member>
    <member name="M:System.IO.FileInfo.ToString">
      <summary>경로를 문자열로 반환합니다. 전체 경로에는 <see cref="P:System.IO.FileInfo.Name" /> 속성을 사용합니다.</summary>
      <returns>경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.IO.FileSystemInfo">
      <summary>
        <see cref="T:System.IO.FileInfo" /> 및 <see cref="T:System.IO.DirectoryInfo" /> 개체에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor">
      <summary>
        <see cref="T:System.IO.FileSystemInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.IO.FileSystemInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />가 null인 경우</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Attributes">
      <summary>현재 파일 또는 디렉터리의 특성을 가져오거나 설정합니다.</summary>
      <returns>현재 <see cref="T:System.IO.FileAttributes" />의 <see cref="T:System.IO.FileSystemInfo" />입니다.</returns>
      <exception cref="T:System.IO.FileNotFoundException">지정된 파일이 없습니다. 속성 값을 설정할 때만 throw됩니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정한 경로가 잘못되었습니다. 예를 들어, 매핑되지 않은 드라이브에 있습니다. 속성 값을 설정할 때만 throw됩니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없습니다.</exception>
      <exception cref="T:System.ArgumentException">호출자가 잘못된 파일 특성을 설정하려고 한 경우  
 또는  
 사용자가 특성 값을 설정하려고 하지만 쓰기 권한이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTime">
      <summary>현재 파일 또는 디렉터리를 만든 시간을 가져오거나 설정합니다.</summary>
      <returns>현재 <see cref="T:System.IO.FileSystemInfo" /> 개체를 만든 날짜와 시간입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브의 경로를 지정한 경우).</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">호출자가 잘못된 만든 시간을 설정하려고 시도합니다.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTimeUtc">
      <summary>현재 파일 또는 디렉터리를 만든 시간을 UTC(협정 세계시) 기준으로 가져오거나 설정합니다.</summary>
      <returns>현재 <see cref="T:System.IO.FileSystemInfo" /> 개체를 만든 UTC 형식의 날짜와 시간입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브의 경로를 지정한 경우).</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">호출자가 잘못된 액세스 시간을 설정하려고 시도합니다.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.Delete">
      <summary>파일이나 디렉터리를 삭제합니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브의 경로를 지정한 경우).</exception>
      <exception cref="T:System.IO.IOException">파일 또는 디렉터리에 대한 열린 핸들이 있고 운영 체제가 Windows XP 또는 그 이전 버전인 경우. 이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다. 자세한 내용은 방법: 디렉터리 및 파일 열거를 참조하세요.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Exists">
      <summary>파일이나 디렉터리가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>파일이나 디렉터리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.Extension">
      <summary>파일의 확장명 부분을 나타내는 문자열을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.IO.FileSystemInfo" /> 확장명을 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.FullName">
      <summary>파일이나 디렉터리의 전체 경로를 가져옵니다.</summary>
      <returns>전체 경로를 포함하는 문자열입니다.</returns>
      <exception cref="T:System.IO.PathTooLongException">정규화된 경로 및 파일 이름이 시스템 정의 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="F:System.IO.FileSystemInfo.FullPath">
      <summary>파일이나 디렉터리의 정규화된 경로를 나타냅니다.</summary>
      <exception cref="T:System.IO.PathTooLongException">정규화된 경로가 시스템 정의 최대 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>파일 이름 및 추가 예외 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTime">
      <summary>현재 파일이나 디렉터리에 마지막으로 액세스한 시간을 가져오거나 설정합니다.</summary>
      <returns>현재 파일이나 디렉터리에 마지막으로 액세스한 시간입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">호출자가 잘못된 액세스 시간을 설정하려고 시도합니다.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTimeUtc">
      <summary>현재 파일이나 디렉터리를 마지막으로 액세스한 시간을 UTC 기준으로 가져오거나 설정합니다.</summary>
      <returns>현재 파일이나 디렉터리에 마지막으로 액세스한 UTC 시간입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">호출자가 잘못된 액세스 시간을 설정하려고 시도합니다.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTime">
      <summary>현재 파일이나 디렉터리에 마지막으로 쓴 시간을 가져오거나 설정합니다.</summary>
      <returns>현재 파일에 마지막으로 쓴 시간입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">호출자가 잘못된 쓰기 시간을 설정하려고 시도합니다.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTimeUtc">
      <summary>현재 파일이나 디렉터리에 마지막으로 쓴 시간을 UTC 기준으로 가져오거나 설정합니다.</summary>
      <returns>현재 파일에 마지막으로 쓴 UTC 시간입니다.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Windows NT 이상이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">호출자가 잘못된 쓰기 시간을 설정하려고 시도합니다.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Name">
      <summary>파일의 경우 파일 이름을 가져옵니다. 디렉터리의 경우 계층이 있으면 계층에 있는 마지막 디렉터리의 이름을 가져오고, 계층이 없으면 <see langword="Name" /> 속성이 디렉터리 이름을 가져옵니다.</summary>
      <returns>부모 디렉터리의 이름, 계층에 있는 마지막 디렉터리의 이름 또는 파일 확장명을 포함한 파일의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="F:System.IO.FileSystemInfo.OriginalPath">
      <summary>사용자가 원래 지정한 상대 또는 절대 경로입니다.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.Refresh">
      <summary>개체의 상태를 새로 고칩니다.</summary>
      <exception cref="T:System.IO.IOException">디스크 드라이브 같은 디바이스가 준비되지 않은 경우</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.ToString">
      <summary>원래 경로를 반환합니다. 전체 경로 또는 파일/디렉터리 이름의 <see cref="P:System.IO.FileSystemInfo.FullName" /> 또는 <see cref="P:System.IO.FileSystemInfo.Name" /> 속성을 사용합니다.</summary>
      <returns>원래 경로를 포함하는 문자열입니다.</returns>
    </member>
    <member name="T:System.IO.MatchCasing" />
    <member name="F:System.IO.MatchCasing.CaseInsensitive">
      <summary>대/소문자를 구분하지 않습니다.</summary>
    </member>
    <member name="F:System.IO.MatchCasing.CaseSensitive">
      <summary>대/소문자를 구분합니다.</summary>
    </member>
    <member name="F:System.IO.MatchCasing.PlatformDefault">
      <summary>지정된 플랫폼의 기본 대/소문자 구분을 사용합니다.</summary>
    </member>
    <member name="T:System.IO.MatchType" />
    <member name="F:System.IO.MatchType.Simple">
      <summary>‘*’ 및 ‘?’ 와일드카드를 사용하여 일치시킵니다.</summary>
    </member>
    <member name="F:System.IO.MatchType.Win32">
      <summary>Win32 DOS 스타일 일치 의미 체계를 사용하여 일치시킵니다. ‘*’, ‘?’, ‘&lt;’, ‘&gt;’ 및 ‘”’는 모두 와일드카드로 간주합니다.</summary>
    </member>
    <member name="T:System.IO.SearchOption">
      <summary>현재 디렉터리를 검색할 것인지 또는 현재 디렉터리와 모든 하위 디렉터리를 검색할 것인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.IO.SearchOption.AllDirectories">
      <summary>검색 작업에 현재 디렉터리와 모든 하위 디렉터리를 포함합니다. 이 옵션을 지정하면 탑재된 드라이브 및 심볼 링크와 같은 재분석 지점이 검색에 포함됩니다.</summary>
    </member>
    <member name="F:System.IO.SearchOption.TopDirectoryOnly">
      <summary>검색 작업에 현재 디렉터리만 포함합니다.</summary>
    </member>
  </members>
</doc>