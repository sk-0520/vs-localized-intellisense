<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">XML Web services 사용을 위해 .NET Framework 형식을 생성할 때 사용할 다양한 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">데이터 바인딩을 활성화합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">웹 메서드의 비동기 호출에 대한 이벤트를 만듭니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">웹 메서드의 비동기 호출에 대한 Begin 및 End 메서드를 만듭니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 및 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 특성의 <see langword="Order" /> 속성을 통해 지정된 대로 명시적으로 정해진 순서에 따라 직렬화 코드를 생성합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">속성별 기본 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">필드별 기본 형식과 <see cref="N:System" /> 네임스페이스 형식별 기본 형식을 나타냅니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">입력 텍스트를 코드 엔터티 이름으로 변환하는 정적 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">입력 문자열에서 카멜식 대/소문자 문자열을 생성합니다.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">일반적으로 XML 요소나 특성 이름에서 가져오는 메서드 매개 변수와 같은 코드 엔터티 이름입니다.</param>
      <returns vsli:raw="A camel-case version of the parameter string.">매개 변수 문자열의 카멜식 대/소문자 버전입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">입력 문자열에서 파스칼식 대/소문자 문자열을 생성합니다.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">일반적으로 XML 요소나 특성 이름에서 가져오는 메서드 매개 변수와 같은 코드 엔터티 이름입니다.</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">매개 변수 문자열의 파스칼식 대/소문자 버전입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">입력 문자열에서 올바른 코드 엔터티 이름을 생성합니다.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">일반적으로 XML 요소나 특성 이름에서 가져오는 메서드 매개 변수와 같은 코드 엔터티 이름입니다.</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">메서드 매개 변수의 이름과 같이 코드 식별자로 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">관련 코드 엔터티 이름의 그룹이나 .NET Framework XML serialization 인프라에서 생성한 형식 매핑을 유지합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 클래스의 새 인스턴스를 초기화하고 코드 식별자가 대/소문자를 구분하는지 여부를 확인합니다.</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">식별자가 대/소문자를 구분하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">명명된 코드 엔터티나 형식 매핑을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에 추가합니다.</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">코드 엔터티를 인덱싱할 때 사용되는 이름입니다.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">코드 엔터티 또는 형식 매핑 정보입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">지정한 이름을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 범위 내에서 사용하지 못하게 합니다.</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 범위 내에서 사용할 수 없게 되는 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">명명된 코드 항목이나 형식 매핑을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에 추가합니다. 이 때 이름은 범위 내에서 고유해야 합니다.</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">코드 엔터티를 인덱싱할 때 사용되는 후보 이름입니다.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">코드 엔터티 또는 형식 매핑 정보입니다.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에서 모든 코드 엔터티나 형식 매핑을 해당하는 이름과 함께 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">지정한 이름이 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 이미 사용되고 있는지 여부를 확인합니다.</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 사용되는지 확인할 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이름이 이미 사용되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">
        <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 속성 값에 따라 이름을 수정하여 입력의 대/소문자를 올바르게 만듭니다.</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">수정될 수 있는 이름입니다.</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">입력 식별자와 같거나 첫 문자의 대/소문자가 수정된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">입력 이름이 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내의 다른 이름과 충돌하는지 확인하고 충돌할 경우 수정된 문자열을 생성합니다.</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">고유하지 않은 경우 수정할 이름입니다.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에서 입력 이름으로 식별되는 코드 엔터티나 형식 매핑을 제거합니다.</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">제거할 코드 엔터티나 형식 매핑의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 예약된 이름에서 입력 이름을 제거합니다.</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 사용할 수 있게 될 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에 있는 코드 엔터티 또는 형식 매핑의 배열을 반환합니다.</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">인스턴스의 모든 코드 엔터티 또는 형식 매핑에 대한 형식입니다.</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 개체에서 저장한 코드 엔터티 또는 형식 매핑의 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">인스턴스가 카멜식 대/소문자를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">인스턴스가 카멜식 대/소문자를 사용하면 <see langword="true" />이고, 그렇지 않고 파스칼식 대/소문자를 사용하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">스키마 집합이 .NET Framework 코드 엔터티에 바인딩되는 컨텍스트를 설명합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">지정된 코드 식별자에 대해 지정된 형식 공유 옵션을 사용하여 <see cref="T:System.Xml.Serialization.ImportContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">컨텍스트가 적용되는 코드 엔터티입니다.</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">사용자 지정 형식이 스키마에서 공유되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">사용자 지정 형식이 공유되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용자 지정 형식이 스키마에서 공유되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">컨텍스트가 적용되는 코드 엔터티 집합을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">컨텍스트가 적용되는 코드 엔터티를 지정하는 <see cref="T:System.Xml.Serialization.CodeIdentifiers" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">코드 엔터티 설명을 가져올 때 생성되는 경고 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">코드 엔터티 설명을 가져올 때 생성된 경고를 포함하는 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">.NET Framework 인프라에서 사용할 <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> 속성을 설정합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">공백과 특성 값이 정규화되는지 여부를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">공백 특성 값이 정규화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">XML을 구문 분석할 때 공백을 처리하는 방법을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">XML을 구문 분석할 때 공백 처리 방법을 설명하는 <see cref="T:System.Xml.WhitespaceHandling" /> 열거형의 멤버입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">스키마 가져오기를 설명합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 멤버를 인코딩된 SOAP 특성으로 serialize하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">지정된 값을 XML 특성의 이름으로 사용하여 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">XML 특성의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 특성의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">XML 특성의 이름입니다. 기본값은 멤버 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 SOAP 특성의 XSD(XML Schema Definition language) 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An XML Schema data type.">XML 스키마 데이터 형식입니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">지정한 XML 스키마 데이터 형식을 .NET 데이터 형식에 매핑할 수 없는 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">XML 특성의 XML 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">XML 특성의 XML 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 개체를 인코딩된 SOAP로 serialize하거나 deserialize하는 경우 속성, 필드 및 클래스에 적용된 특성을 재정의할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />에 포함된 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />를 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.SoapAttributes" />로 재정의할 개체를 지정합니다. <paramref name="member" /> 매개 변수는 재정의되는 멤버의 이름을 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">재정의할 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="member" vsli:raw="The name of the member to override.">재정의할 멤버의 이름입니다.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.SoapAttributes" />로 재정의할 개체를 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">재정의되는 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">검색할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다. 해당 <paramref name="member" /> 매개 변수는 재정의되는 기본 클래스 멤버를 지정합니다.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">재정의할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">반환할 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 지정하는 재정의된 멤버의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 SOAP 메서드를 serialize 및 deserialize하는 방식을 제어하는 특성 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">지정된 사용자 지정 형식을 사용하여 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 클래스와 같은 <see cref="T:System.Type" /> 인터페이스를 구현하는 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">재정의할 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">멤버가serialize될 때 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />의 동작을 재정의하는 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">XML 요소 또는 특성의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">XML 요소 또는 특성의 기본값을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">재정의할 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">재정의할 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 SOAP 열거형을 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드나 속성을 인코딩된 SOAP XML로 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 필드 또는 속성을 serialize하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 개체 형식을 인코딩된 SOAP XML로 sealize하는 방식을 지시하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">클래스 선언에 적용되는 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />를 재정의하거나 클래스 선언에 적용되는 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 공용 멤버 값이 인코딩된 SOAP XML 요소로 serialize되도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 요소의 이름을 지정합니다.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">serialize된 멤버의 XML 요소 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">생성된 XML 요소의 XSD(XML Schema Definition language) 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the XML Schema data types.">XML 스키마 데이터 형식 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">생성된 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">생성된 XML 요소의 이름입니다. 기본값은 멤버 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="xsi:null" /> 특성이 "1"로 설정된 멤버를 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:null" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">지정된 요소 이름을 사용하여 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 요소 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 호출하여 공용 필드 또는 공용 읽기/쓰기 속성 값을 serialize하지 않도록 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 인코딩된 SOAP XML로 serialize하거나 deserialize할 때 형식을 인식할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">지정한 형식을 사용하여 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of the object to include.">포함시킬 개체의 형식입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">개체를 serialize하거나 deserialize할 때 사용할 개체의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of the object to include.">포함시킬 개체의 형식입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">.NET Framework 형식 또는 웹 서비스 메서드 정보에서 SOAP 인코딩된 메시지에 대한 매핑을 생성합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">가져온 형식 매핑의 기본 XML 네임스페이스를 지정하여 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">XML serialization의 재정의를 지정하여 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 클래스가  SOAP 인코딩을 사용하여 매핑된 형식을 serialize하는 방법을 재정의하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">XML serialization 재정의 및 기본 XML 네임스페이스를 지정하여 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 클래스가  SOAP 인코딩을 사용하여 매핑된 형식을 serialize하는 방법을 재정의하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL 메시지 부분에 해당하는 요소가 SOAP 메시지의 추가 래퍼 요소에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">RPC 스타일 웹 서비스 바인딩을 나타내려면 <see langword="true" />이고, 문서 스타일의 웹 서비스 바인딩 또는 SOAP 헤더를 나타내려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL 메시지 부분에 해당하는 요소가 SOAP 메시지의 추가 래퍼 요소에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">RPC 스타일 웹 서비스 바인딩을 나타내려면 <see langword="true" />이고, 문서 스타일의 웹 서비스 바인딩 또는 SOAP 헤더를 나타내려면 <see langword="false" />입니다.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">생성된 deserializer가 래퍼 요소에 필요한 정규화된 이름을 확인해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 이 매개 변수 값은 <paramref name="hasWrapperElement" /> 매개 변수 값이 <see langword="true" />인 경우에만 관련이 있습니다.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL 메시지 부분에 해당하는 요소가 SOAP 메시지의 추가 래퍼 요소에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">RPC 스타일 웹 서비스 바인딩을 나타내려면 <see langword="true" />이고, 문서 스타일의 웹 서비스 바인딩 또는 SOAP 헤더를 나타내려면 <see langword="false" />입니다.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">생성된 deserializer가 래퍼 요소에 필요한 정규화된 이름을 확인해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 이 매개 변수 값은 <paramref name="hasWrapperElement" /> 매개 변수 값이 <see langword="true" />인 경우에만 관련이 있습니다.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 값 중 하나입니다.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">.NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">.NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">사용할 기본 XML 네임스페이스입니다.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">나중에 가져오기 메서드를 호출할 때 사용할 수 있도록 형식에 대한 매핑을 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 인스턴스의 컨텍스트에 저장합니다.</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">형식 매핑 정보를 저장할 .NET Framework 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">나중에 가져오기 메서드를 호출할 때 사용할 수 있도록 파생 형식에 대한 매핑을 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 인스턴스의 컨텍스트에 저장합니다.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 특성에서 파생된 사용자 지정 특성을 포함하는 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 리플렉션 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">문서에서 클래스를 생성하기 위해 WSDL 문서의 XSD &lt;<see langword="part" />&gt; 요소에 대한 특정 속성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">WSDL part 요소의 이름 특성과 일치하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The element name.">요소 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">WSDL part 요소의 형식 특성과 일치하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">XML 형식과 일치하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">클래스 인스턴스를 SOAP 인코딩된 XML로 serialize할 때 <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성되는 스키마를 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 형식의 이름을 지정합니다.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 형식의 이름과 XML 네임스페이스를 지정합니다.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">형식의 XML 네임스페이스입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">SOAP 인코딩된 XML 스키마 문서에 형식을 포함시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">SOAP 인코딩된 XML 스키마 문서에 형식을 포함시키려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">XML 형식의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">XML 형식의 네임스페이스입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">XML 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">XML 형식의 이름입니다. 기본값은 클래스 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">deserialization 중에 암호화된 SOAP XML 스트림에서 발견한 알 수는 있지만 참조되지 않은 개체에 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="o" vsli:raw="The unreferenced object.">참조되지 않은 개체입니다.</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">참조되지 않은 개체를 식별하는 데 사용되는 고유 문자열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">개체의 ID를 가져옵니다.</summary>
      <returns vsli:raw="The ID of the object.">개체의 ID입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">deserialize되었지만 참조되지 않은 개체를 가져옵니다.</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">deserialize되었지만 참조되지 않은 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 컬렉션에 추가합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">추가할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">새로 추가한 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">원하는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">대상 배열의 지정된 인덱스에서 시작하여 전체 컬렉션을 호환 가능한 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 개체의 1차원 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">컬렉션에서 복사된 요소의 대상인 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 개체의 일차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스를 가져옵니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">원하는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">지정된 인덱스의 컬렉션에 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 삽입합니다.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 삽입되는 위치의 인덱스입니다.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">삽입할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 컬렉션에서 제거합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">제거할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 특정 클래스 멤버를 XML 요소의 배열로 serialize하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서 인스턴스에서 생성된 XML 요소의 이름을 지정합니다.</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">serialize된 배열에 지정되어 있는 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">serialize된 배열의 XML 요소 이름으로, 기본값은 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />가 할당된 멤버의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 생성한 XML 요소 이름이 정규화되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다. 기본값은 <see langword="XmlSchemaForm.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 멤버를 <see langword="xsi:nil" /> 특성이 <see langword="true" />로 설정된 빈 XML 태그로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">XML 요소의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The order of the code generation.">코드가 생성되는 순서입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize된 배열에 배치할 수 있는 파생 형식을 지정하는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 문서에 생성된 XML 요소의 이름을 지정합니다.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 요소의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 문서에 생성된 XML 요소의 이름 및 생성된 XML 문서에 삽입할 수 있는 <see cref="T:System.Type" />을 지정합니다.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 요소의 이름입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">serialize할 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화하고 serialize된 배열에 삽입할 수 있는 <see cref="T:System.Type" />을 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">serialize할 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">생성된 XML 요소의 XML 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">XSD (XML 스키마 정의) 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">생성된 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">생성된 XML 요소의 이름입니다. 기본값은 멤버 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">생성된 XML 요소의 이름이 정규화된 이름인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다. 기본값은 <see langword="XmlSchemaForm.None" />입니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 속성이 <see langword="XmlSchemaForm.Unqualified" />로 설정되어 있으며 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 값이 지정되어 있는 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 멤버를 <see langword="xsi:nil" /> 특성이 <see langword="true" />로 설정된 빈 XML 태그로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />이고 인스턴스가 생성되지 않습니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">생성된 XML 요소의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the generated XML element.">생성된 XML 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">XML 요소 계층 구조에서 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 영향을 주는 수준을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">배열의 배열에 있는 인덱스 집합의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">배열에 사용할 수 있는 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">배열에 사용할 수 있는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />를 컬렉션에 추가합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
      <returns vsli:raw="The index of the added item.">추가된 항목의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">컬렉션에 지정한 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />이 들어 있는지 여부를 확인합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">확인할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 지정한 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">지정한 대상 인덱스에서 시작하여 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 배열을 컬렉션에 복사합니다.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">컬렉션에 복사할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체의 배열입니다.</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">복사된 특성이 시작되는 인덱스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">컬렉션에서 지정한 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 처음 나타나는 인덱스(0부터 시작)를 반환하고, 컬렉션에 특성이 없으면 -1을 반환합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">컬렉션에서 찾을 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">컬렉션에서 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />의 첫 번째 인덱스이고, 컬렉션에 특성이 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">지정된 인덱스의 컬렉션에 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />를 삽입합니다.</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">특성이 삽입되는 인덱스입니다.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">삽입할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">지정된 인덱스에 있는 항목을 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">가져오거나 설정할 컬렉션 멤버의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 컬렉션에 있는 경우 컬렉션에서 이를 제거합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">제거할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">알 수 없는 XML 특성을 나타내는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">알 수 없는 XML 특성을 나타내는 <see cref="T:System.Xml.XmlAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">XML 문서 인스턴스에 있어야 하는 XML 특성 이름의 쉼표로 구분된 목록을 가져옵니다.</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">XML 특성 이름의 쉼표로 구분된 목록입니다. 각 이름은 <paramref name="namespace" />:<paramref name="name" /> 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">알 수 없는 XML 특성의 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">알 수 없는 XML 특성의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">해당 줄에서 알 수 없는 XML 특성의 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">알 수 없는 XML 특성의 위치 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">deserializ되고 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object being deserialized.">deserialize되는 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 개체를 serialize하거나 deserialize하면 속성, 필드 및 클래스 특성을 재정의할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체 컬렉션에 추가합니다. <paramref name="type" /> 매개 변수는 재정의할 개체를 지정합니다. <paramref name="member" /> 매개 변수는 재정의되는 멤버의 이름을 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">재정의할 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="member" vsli:raw="The name of the member to override.">재정의할 멤버의 이름입니다.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체 컬렉션에 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체로 재정의할 개체를 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">재정의되는 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">지정한 기본 클래스 형식과 관련된 개체를 가져옵니다.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">검색할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다. 해당 멤버 매개 변수는 재정의되는 기본 클래스 멤버를 지정합니다.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">원하는 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">반환할 <see cref="T:System.Xml.Serialization.XmlAttributes" />를 지정하는 재정의된 멤버의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 serialize 및 deserialize하는 방식을 제어하는 특성 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 serialize 및 deserialize하는 방법을 사용자 지정합니다.</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">XML serialization을 제어하는 특성의 대체 구현을 제공할 수 있는 클래스입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">재정의할 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">재정의할 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">재정의할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 개체의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 배열을 반환하는 공용 필드 또는 읽기/쓰기 속성을 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />가 배열을 반환하는 공용 필드 또는 읽기/쓰기 속성을 serialize하는 방식을 지정하는 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 읽기/쓰기 속성에 의해 반환된 배열 내에 삽입된 항목을 serialize하는 방식을 지정하는 개체 컬렉션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 개체의 컬렉션을 포함하는 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 공용 읽기/쓰기 속성을 XML 특성으로 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">공용 필드 또는 읽기/쓰기 속성을 XML 특성으로 serialize하는 것을 제어하는 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">일련의 선택을 명확하게 구별하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">
        <see langword="xsi:choice" /> 요소로 serialize되는 클래스 멤버에 적용할 수 있는 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">XML 요소 또는 특성의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">XML 요소 또는 특성의 기본값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 읽기/쓰기 속성을 XML 요소로 serialize하는 방식을 지정하는 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 개체의 컬렉션을 포함하는 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />가 열거형 멤버를 serialize하는 방식을 지정하는 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 읽기/쓰기 속성을 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 필드 또는 속성을 serialize하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 개체를 반환하는 멤버가 들어 있는 개체가 재정의될 때 모든 네임스페이스 선언을 유지할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">네임스페이스 선언을 유지해야 한다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스를 XML 루트 요소로 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">XML 루트 요소로 지정된 클래스를 재정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 공용 읽기/쓰기 속성을 XML 텍스트로 serialize하도록 하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">공용 속성 또는 필드의 기본 serialization을 재정의하는 <see cref="T:System.Xml.Serialization.XmlTextAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 적용된 클래스를 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />가 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">클래스 선언에 적용된 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />를 재정의하는 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">열거형을 사용하여 멤버를 추가로 검색할 수 있음을 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">선택을 검색하는 데 사용하는 열거형을 반환하는 멤버 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">형식을 검색하는 경우 사용할 열거형을 반환하는 필드의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">열거형을 반환하는 필드의 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />의 스레드로부터 안전한 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 메서드에 이벤트 대리자를 전달하는 데 사용할 수 있는 필드를 포함합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 클래스를 serialize하는 기본 방식을 재정의하는 데 사용하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />를 컬렉션에 추가합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">추가할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
      <returns vsli:raw="The zero-based index of the newly added item.">새로 추가한 항목의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">컬렉션에 지정된 개체가 들어 있는지 여부를 확인합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">찾아볼 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 또는 그 일부를 1차원 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">복사된 요소를 보유하는 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">지정된 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 인덱스를 가져옵니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">인덱스가 검색되는 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 인덱스이며 0에서 시작합니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />를 컬렉션에 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">멤버가 삽입된 0부터 시작하는 인덱스입니다.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">삽입할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The element at the specified index.">지정한 인덱스의 요소입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" />가 <see cref="T:System.Xml.Serialization.XmlElementAttributes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">속성이 설정되어 있으며 <see cref="T:System.Xml.Serialization.XmlElementAttributes" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">컬렉션에서 지정된 개체를 제거합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">컬렉션에서 제거할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">알 수 없는 XML 요소를 나타내는 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">알 수 없는 XML 요소를 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">XML 문서 인스턴스에 있어야 하는 XML 요소 이름의 쉼표로 구분된 목록을 가져옵니다.</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">XML 요소 이름의 쉼표로 구분된 목록입니다. 각 이름은 <paramref name="namespace" />:<paramref name="name" /> 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호입니다. 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호입니다. 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialize하고 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialize하고 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 serialize하거나 deserialize할 때 형식을 인식할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">포함할 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">포함할 개체의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">포함할 개체의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">.NET Framework 형식과 XML 스키마 데이터 형식 사이의 매핑을 지원합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">매핑된 요소의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the mapped element.">매핑된 요소의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">매핑된 요소의 네임스페이스를 가져옵니다.</summary>
      <returns vsli:raw="The namespace of the mapped element.">매핑된 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">매핑을 조회하는 데 사용되는 키를 설정합니다.</summary>
      <param name="key" vsli:raw="The lookup key.">조회 키입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">매핑의 XSD 요소 이름을 가져옵니다.</summary>
      <returns vsli:raw="The XSD element name.">XSD 요소 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">매핑이 읽기, 쓰기 또는 둘 다인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">read 및 write 메서드가 모두 생성됩니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">read 메서드가 생성됩니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">write 메서드가 생성됩니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">.NET Framework 웹 서비스 메서드의 코드 엔터티를 WSDL(Web Services Description Language) 메시지의 요소에 매핑합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">.NET Framework 형식이 임의 형식의 XML 요소 또는 특성에 매핑되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">형식이 XML 요소 또는 특성에 매핑되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">.NET Framework 형식의 해당 필드에 지정된 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">해당 필드에 지정된 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">이 매핑에 적용되는 XML 요소 선언의 비정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">이 매핑에 적용되는 XML 요소 선언의 비정규화된 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">이 매핑이 나타내는 웹 서비스 메서드 멤버의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">이 매핑이 나타내는 웹 서비스 메서드 멤버의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">이 매핑에 적용되는 XML 네임스페이스를 가져옵니다.</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">이 매핑에 적용되는 XML 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">이 매핑에 대한 .NET Framework 형식의 정규화된 형식 이름을 가져옵니다.</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">이 매핑에 대한 .NET Framework 형식의 정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">이 매핑에 대한 .NET Framework 형식의 형식 이름을 가져옵니다.</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">이 매핑에 대한 .NET Framework 형식의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">이 매핑에 대한 .NET Framework 형식의 네임스페이스를 가져옵니다.</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">이 매핑에 대한 .NET Framework 형식의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">서비스 설명 문서에 표시되는 XML 요소 이름을 가져옵니다.</summary>
      <returns vsli:raw="The XML element name.">XML 요소 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">.NET Framework 웹 서비스 메서드와 SOAP 웹 서비스에 대해 정의된 WSDL(Web Services Description Language) 메시지 간의 매핑을 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">SOAP 메시지가 매핑되는 웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of mappings in the collection.">컬렉션에 있는 매핑의 수입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">SOAP 메시지에 매핑되는 웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 내부 형식 매핑 정보가 포함된 항목을 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">반환할 매핑의 인덱스입니다.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">요청된 <see cref="T:System.Xml.Serialization.XmlMemberMapping" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">SOAP 메시지를 나타내는 XML 스키마 요소의 데이터 형식에 매핑되는 .NET Framework 형식의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the .NET type.">.NET Framework 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">SOAP 메시지를 나타내는 XML 스키마 요소의 데이터 형식에 매핑되는 .NET Framework 형식의 네임스페이스를 가져옵니다.</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">매핑의 .NET Framework 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">알 수 없는 XML 노드의 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number of the unknown XML node.">알 수 없는 XML 노드의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">해당 줄에서 알 수 없는 XML 노드의 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position number of the unknown XML node.">알 수 없는 XML 노드의 위치 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">deserialization 중인 XML 노드의 XML 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">deserialization 중인 노드의 XML 로컬 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">deserialization 중인 XML 노드의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the node being deserialized.">deserialization 중인 노드의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">deserialize중인 XML 노드와 관련된 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">deserialization 중인 XML 노드와 관련된 네임스페이스 URI입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">deserialization 중인 XML 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">deserialization 중인 XML 노드를 나타내는 <see cref="T:System.Xml.XmlNodeType" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">deserializ되고 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">deserialize되는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">deserialization 중인 XML 노드의 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">deserialization 중인 XML 노드의 텍스트입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">WSDL(Web Services Description Language) 문서의 리터럴 XSD(XML 스키마 정의) 메시지 부분을 포함하는 XML 스키마 요소 선언과 .NET Framework 형식 또는 웹 서비스 메서드 정보의 매핑을 생성합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">지정된 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">지정된 XML serialization 재정의를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑 형식을 serialize하는 방법을 재정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">지정된 XML serialization 재정의와 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑 형식을 serialize하는 방법을 재정의하는 개체입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">웹 서비스 메서드에서 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">WSDL 메시지 정의의 요소 부분에 대한 매핑이 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">웹 서비스 메서드의 정보를 사용하여 내부 형식 매핑을 반환하고 XML 요소 이름, XML 네임스페이스 및 기타 옵션을 지정할 수 있도록 합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">웹 서비스 메서드의 정보를 사용하여 내부 형식 매핑을 반환하고 XML 요소 이름, XML 네임스페이스 및 기타 옵션을 지정할 수 있도록 합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">생성된 스키마 형식이 <see langword="true" /> 요소로 표시되도록 지정하려면 <see langword="&lt;xs:anyAttribute&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">웹 서비스 메서드에서 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">생성된 스키마 형식이 <see langword="true" /> 요소로 표시되도록 지정하려면 <see langword="&lt;xs:anyAttribute&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 값 중 하나입니다. 기본값은 <see langword="None" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">지정한 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">지정한 형식 및 네임스페이스를 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">사용할 기본 XML 네임스페이스입니다.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">지정한 형식 및 특성을 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">.NET Framework 형식과 XML 스키마 요소의 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">지정한 형식, 특성 및 네임스페이스를 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">사용할 기본 XML 네임스페이스입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑을 포함하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">나중에 가져오기 메서드를 호출할 때 사용할 형식에 대한 매핑을 포함합니다.</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">형식 매핑 정보를 저장할 .NET Framework 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">나중에 가져오기 메서드를 호출할 때 사용할 파생 형식에 대한 매핑을 포함합니다.</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 특성에서 파생된 사용자 지정 특성을 포함하는 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">.NET Framework 웹 서비스 메서드의 코드 엔터티와 SOAP 웹 서비스에 대해 정의된 WSDL(Web Services Description Language) 메시지 내용 간의 매핑을 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" />가 출력 매개 변수가 아닌 웹 서비스 메서드 반환 값을 표시하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">멤버가 웹 서비스 반환 값을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">이 매핑에 대한 웹 서비스 메서드 멤버의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the Web service method.">웹 서비스 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">이 매핑이 나타내는 웹 서비스 메서드 멤버 코드 엔터티의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">이 매핑이 나타내는 웹 서비스 메서드 멤버 코드 엔터티의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">해당 XML 요소 정의의 <c>isNullable</c> 특성 값이 <see langword="false" />임을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> 속성을 재정의하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">멤버 코드 엔터티에 적용된 SOAP 관련 특성의 컬렉션을 가진 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">멤버에 적용된 SOAP 특성을 나타내는 개체가 포함된 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">멤버 코드 엔터티에 적용된 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 관련 특성의 컬렉션을 가진 <see cref="T:System.Xml.Serialization.XmlSerializer" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">멤버 코드에 적용된 XML 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체의 컬렉션에 대해 반복을 가능하게 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">반복할 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">컬렉션의 현재 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">열거자를 컬렉션의 다음 항목으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이동이 성공적으로 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체 컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체 컬렉션의 현재 요소입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체 컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 형식 매핑 개체에 있는 XML 스키마 요소 선언으로  채웁니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">형식 매핑에서 얻은 요소 선언이 추가될 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">&lt;any&gt; 요소를 지정된 네임스페이스로 식별되는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 내보냅니다.</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">&lt;any&gt; 요소를 추가할 XML 스키마 문서의 네임스페이스입니다.</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">&lt;any&gt; 요소 선언에 할당된 임의 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">개체 또는 형식에 대한 요소 선언을 SOAP 메시지나 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 추가합니다.</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">내보낼 매핑이 포함된 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">추가된 정수가 있는 문자열 "any"입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">리터럴 SOAP 메시지 정의의 각 요소 부분에 대해 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" />에 추가합니다.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">WSDL(Web Services Description Language) 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">리터럴 SOAP 메시지 정의의 각 요소 부분에 대해 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" />에 추가하고 포함 요소가 들어 있는지 여부를 지정합니다.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">.NET Framework 형식과 XML 스키마 요소 간의 내부 매핑입니다.</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스키마를 포함하는 스키마 요소가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">리터럴 SOAP 메시지 정의의 단일 요소 부분에 대해 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 추가합니다.</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">WSDL(Web Services Description Language) 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">내보낸 요소 선언의 정규화된 XML 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">.NET Framework 형식에 대한 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 추가합니다.</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">.NET Framework 형식과 XML 스키마 요소 간의 내부 매핑입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">WSDL 문서의 리터럴 XSD 메시지 부분을 포함하여 XML 스키마 요소 선언에 대한 .NET Framework 형식의 내부 매핑을 생성합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">WSDL 문서에서 정의한 SOAP 리터럴 메시지에서 사용되는 XML 스키마를 나타내는 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 개체의 컬렉션을 가져와서 <see cref="T:System.Xml.Schema.XmlSchema" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">SOAP 리터럴 메시지에서 사용하는 XML 스키마를 나타내는 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 개체와 WSDL(Web Services Description Language) 문서에서 정의된 바인딩에 대해 생성되는 클래스의 컬렉션을 가져와서 <see cref="T:System.Xml.Schema.XmlSchema" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 개체</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">WSDL 문서에서 정의한 바인딩에 대해 생성되는 클래스의 컬렉션을 지정하는 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">WSDL 문서에서 정의한 단일 SOAP 리터럴 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">.NET Framework 형식이 생성되는 요소 형식의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">WSDL 문서에 있는 part 요소의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">WSDL 메시지 정의의 단일 요소 부분에 대한 .NET Framework 형식 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">XML 스키마 문서에서 정의된 요소의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">XSD 요소의 형식에 해당하도록 생성된 .NET Framework 형식의 기본 형식입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">XML 스키마 요소에 대한 .NET Framework 형식 매핑 정보를 나타내는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">XML 스키마 문서에서 정의된 요소나 WSDL 문서의 부분으로 정의된 요소에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">XML 스키마 문서에서 정의된 요소의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">XSD 요소의 형식에 해당하도록 생성된 .NET Framework 형식의 기본 형식입니다.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XSD 요소에 해당하는 형식이 기본 형식에서 간접적으로 상속될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML 스키마 요소에 대한 .NET Framework 형식 매핑 정보입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">매핑을 생성할 요소의 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">매핑을 생성할 요소의 네임스페이스입니다.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">매핑을 생성할 요소의 멤버를 지정하는 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 인스턴스의 배열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">형식 매핑 정보를 포함하는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 단일 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">메시지 부분 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">단일 요소 부분을 포함하는 WSDL 메시지 정의에 대한 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">메시지 부분의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" /> 형식의 배열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">WSDL 메시지 정의의 요소 부분에 대한 .NET Framework 형식 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">메시지 부분의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" /> 형식의 배열입니다.</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">메시지 부분에 해당하도록 생성되는 .NET Framework 형식의 기본 형식입니다.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지 부분에 해당하는 형식이 기본 형식에서 간접적으로 상속할 수 있음을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">WSDL 메시지 정의의 요소 부분에 대한 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">XML 요소를 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">형식 매핑을 설명하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">XML 요소를 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">기본 형식을 지정하는 <see cref="T:System.Type" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">형식 매핑을 설명하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">XML 요소를 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">기본 형식을 지정하는 <see cref="T:System.Type" /> 개체입니다.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">생성된 형식이 <paramref name="baseType" />을 간접적으로 상속할 수 있는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">형식 매핑을 설명하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">XML 스키마 문서에서 정의된 요소의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML 스키마 요소에 대한 .NET Framework 형식 매핑 정보입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">XML 스키마의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">개체를 컬렉션의 끝에 추가합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">개체의 컬렉션에 추가할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">
        <see cref="T:System.Xml.Schema.XmlSchema" />가 추가되는 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">어셈블리 참조를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">추가할 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">스키마 개체의 <see cref="T:System.Uri" />입니다.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">
        <see cref="T:System.Xml.Schema.XmlSchema" />가 추가되는 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 클래스의 인스턴스를 컬렉션의 끝에 추가합니다.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">컬렉션의 끝에 추가할 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">어셈블리 참조를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">추가할 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">XML 스키마의 요소 및 특성 이름을 처리하고 선택적으로 XML 스키마의 유효성을 검사합니다.</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">strict 매개 변수가 <see langword="true" />로 설정되었을 때 XML 스키마 유효성 검사에서 오류 및 경고를 처리할 콜백 메서드를 지정하는 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다.</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> 클래스의 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 메서드를 사용하여 컬렉션에 있는 XML 스키마의 유효성을 검사하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">지정한 네임스페이스에 속하는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">확인할 항목의 네임스페이스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" />에 특정 스키마가 있는지 여부를 확인합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">찾을 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 지정한 항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">전체 <see cref="T:System.Xml.Serialization.XmlSchemas" />를 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다. 대상 배열의 지정된 인덱스에서 복사를 시작합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 스키마의 대상인 일차원 <see cref="T:System.Xml.Serialization.XmlSchemas" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">복사가 시작되는 배열의 인덱스를 나타내는 32비트 정수입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">지정된 이름과 형식의 <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 XML 스키마 중 하나에서 찾습니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">컬렉션에서 <see cref="T:System.Xml.XmlQualifiedName" /> 개체를 찾는 데 사용되는 네임스페이스가 포함된 정규화된 이름을 지정하는 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">찾으려는 개체의 <see cref="T:System.Type" />입니다. 가능한 형식은 <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaNotation" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaElement" />와 같은 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">동일한 네임스페이스에 속해 있는 스키마의 컬렉션을 가져옵니다.</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">검색할 스키마의 네임스페이스입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">스키마가 포함되어 있는 <see cref="T:System.Collections.IList" /> 구현입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">지정한 스키마를 검색하고, 전체 <see cref="T:System.Xml.Serialization.XmlSchemas" />에서 이 스키마가 처음 나타나는 인덱스(0부터 시작)를 반환합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">찾을 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">지정한 값이 있으면 전체 <see cref="T:System.Xml.Serialization.XmlSchemas" />에서 이 값이 처음 나타나는 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">지정한 인덱스의 <see cref="T:System.Xml.Serialization.XmlSchemas" />에 스키마를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">
        <paramref name="schema" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">삽입할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">스키마가 컴파일되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스키마가 컴파일되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">지정한 XML 스키마에 <see langword="IsDataSet" /> 또는 상응하는 값으로 설정된 사용자 지정 <see langword="true" /> 특성이 포함되어 있는지 여부를 확인하는 정적 메서드입니다.</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">
        <see langword="IsDataSet" /> 값으로 설정된 <see langword="true" /> 특성이 포함되어 있는지 확인할 XML 스키마입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 스키마가 있으면 <see langword="true" />이고 , 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">지정된 인덱스에서 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">검색할 항목의 인덱스입니다.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">지정한 네임스페이스에 연결된 XML 스키마를 나타내는 지정한 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 가져옵니다.</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">지정된 개체의 네임스페이스입니다.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">지정된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스의 콘텐츠를 지운 후에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스에 새 요소를 삽입하기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" />에 있는 요소의 새 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스에서 요소를 제거할 때 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">
        <paramref name="value" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" />에서 제거할 요소의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스에 값을 설정하기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">
        <paramref name="oldValue" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">
        <paramref name="newValue" />로 바꿀 값입니다.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" />에 있는 요소의 새 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" />에서 처음 나타나는 특정 스키마를 제거합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">제거할 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">XML 스키마의 컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">컬렉션 또는 열거형에 매핑되는 SOAP 인코딩된 XML 데이터 형식을 deserialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">컬렉션 항목 배열이 복사되는 컬렉션입니다.</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">
        <c>개체 컬렉션</c>으로 복사되는 항목의 배열입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">SOAP 인코딩된 XML 데이터를 deserialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">채울 항목에 대한 문자열 식별자의 배열과 고정할 개체가 포함된 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 및 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />를 위한 기본 클래스일 뿐 아니라 이 두 가지 형식 모두에 공통으로 사용되는 메서드를 포함하는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">SOAP로 인코딩된 루트가 아닌 XML 데이터에서 형식을 deserialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <returns vsli:raw="The object returned by the callback.">콜백에서 반환된 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스로 deserialization을 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">필요한 경우 호출될 콜백 메서드가 있는 개체를 저장하여 SOAP 인코딩된 배열이나 SOAP 인코딩된 다중 참조 요소에 매핑되는 .NET Framework 컬렉션이나 열거형을 채웁니다.</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자 및 콜백 메서드의 입력 데이터입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">필요한 경우 호출될 콜백 메서드 인스턴스가 있는 개체를 저장하여 SOAP 인코딩된 배열의 개체를 채웁니다.</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자 및 콜백 메서드의 입력 데이터입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">나중에 호출하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 대리자의 구현과 해당 입력 데이터를 저장합니다.</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">deserialize되는 .NET Framework 형식의 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">deserialize되는 .NET Framework 형식의 네임스페이스입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">deserialize될 <see cref="T:System.Type" />입니다.</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">나중에 <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> 메서드를 통해 액세스하기 위해 SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize되는 개체를 저장합니다.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">요소를 식별하는 <see langword="id" /> 요소의 <see langword="multiRef" /> 특성 값입니다.</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">XML 요소에서 deserialize되는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">deserializer가 증가했는지 여부를 확인합니다.</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">while 루프의 현재 <see langword="count" />입니다.</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">현재 <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />가 증가하지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">모든 공백 문자를 지정한 문자열의 처음과 끝에서 제거합니다.</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">공백이 트리밍될 문자열입니다.</param>
      <returns vsli:raw="The trimmed string.">트리밍된 문자열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자 인스턴스와 메서드의 입력을 포함하며 메서드의 매개 변수도 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">콜백 메서드의 매개 변수를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">콜백 메서드에서 컬렉션 항목 배열을 복사하는 컬렉션입니다.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자를 인스턴스화하는 메서드입니다.</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">콜백 메서드에서 컬렉션을 복사하는 배열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자를 인스턴스화하는 콜백 메서드를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">콜백 메서드를 가리키는 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">콜백 메서드에 대한 <paramref name="object collection" />을 가져옵니다.</summary>
      <returns vsli:raw="The collection that is used for the fixup.">픽스업에 사용되는 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">콜백 메서드에서 컬렉션을 복사하는 배열을 가져옵니다.</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">콜백 메서드에서 컬렉션을 복사하는 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">deserialize되는 개체가 추상 개체여야 함을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name" vsli:raw="The name of the abstract type.">추상 형식의 이름입니다.</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">추상 형식의 .NET Framework 네임스페이스입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">내부 요소를 읽는 옵션을 사용하여 <see cref="T:System.Xml.XmlReader" />의 현재 위치에서 해당 XML 표현의 개체를 채웁니다.</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">파생된 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">파생된 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">기본 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">기본 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">파생된 .NET Framework 형식의 네임스페이스입니다.</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">기본 .NET Framework 형식의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">생성자에서 보안 예외를 throw하기 때문에 deserialize되는 개체가 인스턴스화될 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="typeName" vsli:raw="The name of the type.">형식의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">사용할 수 있는 생성자가 없기 때문에 deserialize되는 개체가 인스턴스화될 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="typeName" vsli:raw="The name of the type.">형식의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">명시적 참조 변환이 실패했음을 나타내는 <see cref="T:System.InvalidCastException" />을 만듭니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">개체가 캐스팅될 수 없는 <see cref="T:System.Type" />입니다. 이 형식은 예외 메시지에 포함됩니다.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">캐스팅될 수 없는 개체입니다. 이 개체는 예외 메시지에 포함됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">
        <see cref="T:System.InvalidCastException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">명시적 참조 변환이 실패했음을 나타내는 <see cref="T:System.InvalidCastException" />을 만듭니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">개체가 캐스팅될 수 없는 <see cref="T:System.Type" />입니다. 이 형식은 예외 메시지에 포함됩니다.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">캐스팅될 수 없는 개체입니다. 이 개체는 예외 메시지에 포함됩니다.</param>
      <param name="id" vsli:raw="A string identifier.">문자열 식별자입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">
        <see cref="T:System.InvalidCastException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">XML 스키마 데이터 형식에 매핑된 파생 형식을 찾을 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">사용할 수 없는 파생 형식에 매핑된 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">사용할 수 없는 파생 형식에 매핑된 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">파생 형식을 찾을 수 없는 .NET Framework 기본 형식의 전체 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">SOAP 인코딩된 컬렉션 형식을 수정할 수 없고 그 값을 채울 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">매핑이 있는 .NET Framework 형식의 정규화된 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">열거형 값이 올바르지 않음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">올바르지 않은 열거형 값입니다.</param>
      <param name="enumType" vsli:raw="The enumeration type.">열거형 형식입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">
        <see cref="T:System.InvalidOperationException" />의 현재 위치가 알 수 없는 XML 노드를 나타냄을 의미하는 <see cref="T:System.Xml.XmlReader" />을 만듭니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">형식을 알 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">알 수 없는 형식의 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">XML 문자열이 유효한 .NET Framework 형식 이름으로 변환되는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 문자열이 유효한 .NET Framework 형식 이름으로 디코딩되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">XML 문서가 deserialize되는 XML 문서 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">deserialize된 <see cref="T:System.Xml.XmlDocument" /> 데이터를 나타내는 <see cref="T:System.Xml.XmlDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">지정된 배열 또는 복사본이 지정한 인덱스를 포함할 수 있을 정도로 큰지 확인합니다.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">확인하고 있는 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The required index.">필수 인덱스입니다.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">배열 요소의 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">기존 배열이 충분히 크면 기존 <see cref="T:System.Array" />이고, 그렇지 않으면 원래 배열 요소를 포함하는 더 큰 새 배열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자 인스턴스와 메서드의 입력을 포함하며 메서드의 매개 변수 역할을 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">콜백 구현에서 값을 채우는 다른 개체를 포함하는 개체입니다.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자를 인스턴스화하는 메서드입니다.</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 속성을 통해 가져온 문자열 배열의 크기입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">콜백 구현에서 값을 채우는 다른 개체를 포함하는 개체입니다.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자를 인스턴스화하는 메서드입니다.</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 속성을 통해 가져온 문자열 배열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자의 인스턴스를 만드는 콜백 메서드를 가져옵니다.</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자의 인스턴스를 만드는 콜백 메서드입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">콜백 구현에서 값을 채우는 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> 속성에 속하는 개체에 대한 키 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The array of keys.">키 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">콜백 구현에서 값을 채우는 다른 개체를 포함하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The source containing objects with values to fill.">채울 값이 있는 개체가 포함된 소스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">데이터 형식이 .NET Framework 참조 형식에 매핑되는 SOAP 인코딩된 배열의 값을 채웁니다.</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">값이 채워진 배열을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">
        <see cref="T:System.Xml.XmlReader" />가 현재 위치한 SOAP 인코딩된 배열의 길이를 가져옵니다.</summary>
      <param name="name" vsli:raw="The local name that the array should have.">배열에 지정해야 하는 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">배열에 지정해야 하는 네임스페이스입니다.</param>
      <returns vsli:raw="The length of the SOAP array.">SOAP 배열의 길이입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />가 현재 위치한 XML 요소의 null 특성이 <see langword="true" /> 값으로 설정되어 있는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />가 현재 값이 <see langword="true" />인 null 특성에 위치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize되고 있는 개체와 <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />에서 이전에 저장한 개체를 가져옵니다.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">요소를 식별하는 <see langword="id" /> 요소의 <see langword="multiRef" /> 특성 값입니다.</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize될 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 현재 위치에서 XML 요소의 <see langword="xsi:type" /> 특성 값을 가져옵니다.</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">XML 요소의 데이터 형식을 나타내는 XML의 정규화된 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">SOAP 인코딩된 XML 데이터에 매핑되는 개체를 채우는 콜백 메서드를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">
        <see cref="T:System.Xml.NameTable" /> 개체에 요소와 특성 이름을 저장합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">SOAP 1.1 반환 값에 대해 <see langword="true" />여야 하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">값이 반환 값이면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">XML 특성 이름이 XML 네임스페이스를 나타내는지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">XML 특성의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 특성 이름이 XML 네임스페이스를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">XML 특성이 WSDL(Web Services Description Language) 네임스페이스의 <see langword="arrayType" />인 경우 이 특성의 값을 설정합니다.</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">형식이 <see langword="wsdl:array" />일 수 있는 <see cref="T:System.Xml.XmlAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">
        <see cref="T:System.Xml.XmlReader" />가 자신이 현재 위치한 요소의 정규화된 이름을 읽도록 합니다.</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">현재 XML 요소의 정규화된 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">
        <see cref="T:System.Xml.XmlReader" />가 XML 끝 태그를 읽도록 합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />가 사용하는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />가 사용하는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 현재 횟수를 가져옵니다.</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 현재 횟수입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">현재 XML 요소의 null 특성 값이 true인 경우 <see cref="T:System.Xml.XmlReader" />에서 이 요소를 읽도록 합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요소에 null="true" 특성 값이 있고 요소를 읽었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">
        <see cref="T:System.Xml.XmlReader" />에서 자신이 현재 위치한 요소의 정규화된 이름을 읽도록 합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">현재 XML 요소의 정규화된 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다. 그렇지 않고 null="true" 특성 값이 있으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />가 <see langword="null" />일 수 있는 단순한 텍스트 전용 XML 요소를 읽도록 합니다.</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">문자열 값입니다. 그렇지 않으면, <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">SOAP 인코딩에서 XML 요소를 참조하는 데 사용되는 <see langword="href" /> 특성(SOAP 1.2의 경우 <see langword="ref" /> 특성)의 값을 읽습니다.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">
        <see langword="href" /> 특성 값을 읽어 올 출력 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">값을 읽었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">SOAP 인코딩된 <see langword="multiRef" /> XML 요소에서 개체를 deserialize합니다.</summary>
      <returns vsli:raw="The value of the referenced element in the document.">문서에서 참조된 요소의 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">SOAP 인코딩된 <see langword="multiRef" /> XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">요소의 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">요소의 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <returns vsli:raw="The value of the referenced element in the document.">문서에서 참조된 요소의 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">SOAP 메시지의 SOAP 인코딩된 <see langword="multiRef" /> 요소에서 개체를 deserialize합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">
        <see langword="multiRef" /> 요소에 대한 참조가 포함된 SOAP 메시지의 XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">요소의 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">요소의 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요소 이름이 또한 XML 스키마 데이터 형식 이름이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">
        <see langword="href" /> 특성의 값을 읽어 올 출력 문자열입니다.</param>
      <returns vsli:raw="The deserialized object.">deserialize된 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">
        <see langword="multiRef" /> 요소에 대한 참조가 포함된 SOAP 메시지의 XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">요소의 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">요소의 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">
        <see langword="href" /> 특성 값을 읽어 올 출력 문자열입니다.</param>
      <returns vsli:raw="The deserialized object.">deserialize된 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">
        <see langword="multiRef" /> 요소에 대한 참조가 포함된 SOAP 메시지의 XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">
        <see langword="href" /> 특성 값을 읽어 올 출력 문자열입니다.</param>
      <returns vsli:raw="The deserialized object.">deserialize된 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 현재 위치에서 해당 XML 표현의 개체를 채웁니다.</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" />의 현재 위치에 해당하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">멤버가 <see cref="T:System.Xml.Serialization.IXmlSerializable" />의 위치에서 채워진 <see cref="T:System.Xml.XmlReader" /> 인터페이스를 구현하는 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 메서드는 .NET Framework 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">XMLReader의 현재 위치에 해당하는 IXmlSerializable 개체입니다.</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">serialize 가능한 개체를 래핑할지 여부를 지정합니다.</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">XmlReader의 위치에서 채워진 멤버와 함께 IXmlSerializable 인터페이스를 구현하는 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">입력 값에 추가된 <see cref="M:System.Xml.XmlReader.ReadString" /> 메서드의 호출 결과를 생성합니다.</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">
        <see cref="M:System.Xml.XmlReader.ReadString" /> 메서드의 호출 결과 앞에 붙는 문자열입니다.</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">입력 값에 추가된 <see cref="M:System.Xml.XmlReader.ReadString" /> 메서드의 호출 결과입니다</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">
        <see cref="M:System.Xml.XmlReader.ReadString" /> 클래스의 <see cref="T:System.Xml.XmlReader" /> 메서드에 대한 호출 결과를 반환합니다. 필요한 경우 공백을 트리밍하고 입력 값에 추가합니다.</summary>
      <param name="value" vsli:raw="A string that will be appended to.">추가될 문자열입니다.</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">읽기 작업 결과를 트리밍해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">입력 값에 추가되는 읽기 작업의 결과입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">null 값(<see langword="xsi:nil = 'true'" />)을 허용하는 XML 요소를 읽고 제네릭 <see cref="T:System.Nullable`1" /> 값을 반환합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />의 현재 위치에 대한 단순 데이터 형식을 나타내는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">null XML 값을 나타내는 제네릭 <see cref="T:System.Nullable`1" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">
        <see cref="T:System.Xml.XmlReader" />가 현재 위치한 XML 노드의 값을 가져옵니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />의 현재 위치에 대한 단순 데이터 형식을 나타내는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">값이 단순한 XML 스키마 데이터 형식인 경우 .NET Framework 값 형식인 노드 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 XML 문서 루트 요소를 읽도록 합니다.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드에서 요소의 시작 요소를 읽은 후 내용만 읽어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">읽은 루트 요소를 포함하는 <see cref="T:System.Xml.XmlDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 XML 노드를 읽도록 합니다.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요소의 시작 요소를 읽은 후 내용만 읽어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">읽은 XML 노드를 나타내는 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize될 개체를 저장합니다.</summary>
      <param name="o" vsli:raw="The object to be deserialized.">deserialize될 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">동적으로 생성된 어셈블리를 이름별로 가져옵니다.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">어셈블리의 전체 이름입니다.</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">동적으로 생성된 <see cref="T:System.Reflection.Assembly" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">해당 배열 또는 복사본이 지정된 길이보다 길지 않은지 확인합니다.</summary>
      <param name="a" vsli:raw="The array that is being checked.">확인하고 있는 배열입니다.</param>
      <param name="length" vsli:raw="The maximum length of the array.">배열의 최대 길이입니다.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">배열 요소의 <see cref="T:System.Type" />입니다.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">배열에 대해 <see langword="true" />이고 입력 배열에 대해 있으며 반환될 수 있으면 <see langword="null" />이고, 그렇지 않으면 더 작은 새 배열입니다.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">기존 배열이 이미 충분히 작으면 기존 <see cref="T:System.Array" />이고, 그렇지 않으면 최대 크기가 <paramref name="length" />인 원래 배열의 요소를 포함하는 더 작은 새 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 문자열 값을 읽고 Base 64 바이트 배열로 반환하도록 합니다.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" />을 반환하면 <see langword="null" />이고, base-64바이트 배열을 반환하면 <see langword="false" />입니다.</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Base 64 바이트 배열입니다. 그렇지 않고 <paramref name="isNull" /> 매개 변수 값이 <see langword="null" />이면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">입력 문자열에서 Base 64 바이트 배열을 생성합니다.</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Base-64바이트 배열로 변환할 문자열입니다.</param>
      <returns vsli:raw="A base-64 byte array.">Base 64 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 문자열 값을 읽고 16진 바이트 배열로 반환하도록 합니다.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" />을 반환하면 <see langword="null" />이고, 16진 바이트 배열을 반환하면 <see langword="false" />입니다.</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">16진수 바이트 배열입니다. 그렇지 않고 <paramref name="isNull" /> 매개 변수의 값이 <see langword="true" />이면 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">입력 문자열에서 16진수 바이트 배열을 생성합니다.</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">16진수 바이트 배열로 변환하는 문자열입니다.</param>
      <returns vsli:raw="A hexadecimal byte array.">16진수 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">입력 문자열에서 <see cref="T:System.Char" /> 개체를 생성합니다.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">
        <see cref="T:System.Char" /> 개체로 변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">
        <see cref="T:System.Char" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">입력 문자열에서 <see cref="T:System.DateTime" /> 개체를 생성합니다.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">
        <see cref="T:System.DateTime" /> 클래스 개체로 변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">입력 문자열에서 <see cref="T:System.DateTime" /> 개체를 생성합니다.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 개체로 변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">열거자 목록의 상수를 나타내는 구분 식별자로 구성된 문자열에서 숫자 열거형 값을 생성합니다.</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">각 식별자가 설정된 열거자 목록의 상수를 나타내는 구분 식별자로 구성된 문자열입니다.</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">키인 식별자와 정수인 상수로 구성된 <see cref="T:System.Collections.Hashtable" />입니다.</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">열거형 형식의 이름입니다.</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">일련의 비트 <see langword="OR" /> 연산인 열거형 값으로 구성된 long 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">시간을 나타내는 문자열에서 <see cref="T:System.DateTime" />을 생성합니다.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 개체로 변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 이름을 디코딩합니다.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">디코딩할 XML 이름입니다.</param>
      <returns vsli:raw="A decoded string.">디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 이름을 디코딩합니다.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">디코딩할 XML 이름입니다.</param>
      <returns vsli:raw="A decoded string.">디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 이름을 디코딩합니다.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">디코딩할 XML 이름입니다.</param>
      <returns vsli:raw="A decoded string.">디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">XML 이름을 디코딩합니다.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">디코딩할 XML 이름입니다.</param>
      <returns vsli:raw="A decoded string.">디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">접두사를 포함할 수 있는 이름에서 <see cref="T:System.Xml.XmlQualifiedName" />을 가져옵니다.</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">접두사를 포함할 수 있는 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">네임스페이스로 한정된 XML 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">요청한 특성을 나타내는 <see cref="T:System.Xml.XmlAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">요청한 특성을 나타내는 <see cref="T:System.Xml.XmlAttribute" />입니다.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML의 정규화된 이름을 쉼표로 구분한 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">deserialize되고 있는 <see cref="T:System.Object" />입니다.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">이벤트가 발생하는 <see cref="T:System.Xml.XmlElement" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">이벤트가 발생하는 <see cref="T:System.Xml.XmlElement" />입니다.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML의 정규화된 이름을 쉼표로 구분한 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">deserialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o" vsli:raw="The object being deserialized.">deserialize되는 개체입니다.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML의 정규화된 이름을 쉼표로 구분한 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">참조되지 않은 개체를 식별하는 데 사용되는 고유한 문자열입니다. 이후에 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> 속성을 통해 액세스할 수 있습니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">SOAP로 인코딩된 루트가 아닌 XML 데이터에서 형식을 serialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <param name="o" vsli:raw="The object being serialized.">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 serialization을 제어하는 데 사용되는 추상 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">나중에 호출할 수 있도록 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 대리자의 구현과 이 구현에서 적용하는 형식을 저장합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">serialize된 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">serialize된 개체 형식의 이름입니다.</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">serialize된 개체 형식의 네임스페이스입니다.</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 대리자의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">XML 스키마 <see langword="choice" /> 요소 선언을 따르는 요소에 대한 예기치 못한 이름을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value" vsli:raw="The name that is not valid.">유효하지 않은 이름입니다.</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">이 이름이 속한 <see langword="choice" /> 요소 선언입니다.</param>
      <param name="name" vsli:raw="The expected local name of an element.">요소의 예상되는 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">요소의 예상 네임스페이스입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">
        <see cref="T:System.InvalidOperationException" />가 멤버에 잘못 적용되었음을 나타내는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />을 만듭니다. <see cref="T:System.Xml.XmlNode" /> 형식이거나 <see cref="T:System.Xml.XmlNode" />에서 파생된 멤버만 유효합니다.</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">잘못된 멤버를 나타내는 개체입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">
        <see cref="T:System.InvalidOperationException" />가 멤버에 잘못 적용되었음을 나타내는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />을 만듭니다. <see cref="T:System.Xml.XmlNode" /> 형식이거나 <see cref="T:System.Xml.XmlNode" />에서 파생된 멤버만 유효합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">잘못된 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">XML 스키마 <see langword="choice" /> 요소 선언이 적용되는 배열을 쓰는 동안 오류가 발생했음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="type" vsli:raw="The type being serialized.">serialize되는 형식입니다.</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">
        <see langword="choice" /> 요소 선언의 이름입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">잘못된 열거형 값에 대해 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">잘못된 열거형을 나타내는 개체입니다.</param>
      <param name="typeName" vsli:raw="The XML type name.">XML 형식 이름입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">XML 요소의 값이 열거형 형식과 일치하지 않음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value" vsli:raw="The value that is not valid.">유효하지 않은 값입니다.</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">잘못된 값을 가진 XML 요소의 이름입니다.</param>
      <param name="enumValue" vsli:raw="The valid value.">유효한 값입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">XML 스키마 <see langword="any" /> 요소 선언을 따르는 XML 요소를 처리할 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">처리할 수 없는 XML 요소입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">serialize되는 형식이 올바른 방식으로 사용되지 않거나 예기치 않게 사용되었음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">serialize될 수 없는 형식의 개체입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">serialize되는 형식이 올바른 방식으로 사용되지 않거나 예기치 않게 사용되었음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">serialize될 수 없는 형식입니다.</param>
      <returns vsli:raw="The newly created exception.">새로 만들어진 예외입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">유효한 XML을 쓰는 데 <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> 메서드가 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> 메서드가 인코딩된 이름을 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Base 64 바이트 배열을 처리합니다.</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Base 64 <see cref="T:System.Byte" /> 배열입니다.</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">인수로 전달된 같은 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">입력 16진 바이트 배열에서 문자열을 생성합니다.</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">문자열로 변환할 16진 바이트 배열입니다.</param>
      <returns vsli:raw="The byte array value converted to a string.">문자열로 변환된 바이트 배열 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">입력 <see cref="T:System.Char" />에서 문자열을 생성합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">문자열로 변환할 <see cref="T:System.Char" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">문자열로 변환된 <see cref="T:System.Char" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 개체에서 문자열을 생성합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">문자열로 변환할 <see cref="T:System.DateTime" />입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">날짜만 표시하고 시간은 표시하지 않는 <see cref="T:System.DateTime" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">입력 <see cref="T:System.DateTime" />에서 문자열을 생성합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">문자열로 변환할 <see cref="T:System.DateTime" />입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">날짜와 시간을 표시하는 <see cref="T:System.DateTime" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">설정된 열거형 멤버를 나타내는 구분 식별자로 구성된 문자열을 생성합니다.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">일련의 비트 <see langword="OR" /> 연산인 열거형 값입니다.</param>
      <param name="values" vsli:raw="The enumeration's name values.">열거형의 이름 값입니다.</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">열거형의 상수 값입니다.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">각 식별자가 설정된 열거자 목록의 멤버를 나타내는 구분 식별자로 구성된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">열거형의 열거자 목록에서 숫자 열거형 값과 이름 및 상수를 가져오고 설정된 열거형 멤버를 나타내는 구분 식별자로 구성된 문자열을 반환합니다.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">일련의 비트 <see langword="OR" /> 연산인 열거형 값입니다.</param>
      <param name="values" vsli:raw="The values of the enumeration.">열거형의 값입니다.</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">열거형의 상수입니다.</param>
      <param name="typeName" vsli:raw="The name of the type.">형식의 이름입니다.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">구분 식별자로 구성된 문자열입니다. 각 항목은 비트 연산에서 설정한 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 개체에서 문자열을 생성합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">문자열로 변환되는 <see cref="T:System.DateTime" />입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">시간만 표시하고 날짜는 표시하지 않는 <see cref="T:System.DateTime" /> 개체의 문자열 표현입니다</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">유효하지 않은 문자를 이스케이프 시퀀스로 바꿔 유효한 XML 이름을 인코딩합니다.</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">XML 이름으로 사용될 문자열입니다.</param>
      <returns vsli:raw="An encoded string.">인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">유효하지 않은 문자를 이스케이프 시퀀스로 바꿔 유효한 XML 로컬 이름을 인코딩합니다.</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">로컬(비정규화된) XML 이름으로 사용될 문자열입니다.</param>
      <returns vsli:raw="An encoded string.">인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">XML 이름을 인코딩합니다.</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">인코딩할 XML 이름입니다.</param>
      <returns vsli:raw="An encoded string.">인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">공백으로 구분된 XML 이름의 시퀀스를 단일 XML 이름으로 인코딩합니다.</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">인코딩할 XML 이름의 시퀀스를 공백으로 구분한 목록입니다.</param>
      <returns vsli:raw="An encoded string.">인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">잘못된 문자를 이스케이프 시퀀스로 바꾼 정규화된 XML 이름을 반환합니다.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">쓸 XML 데이터를 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">잘못된 문자를 이스케이프 시퀀스로 바꾼 정규화된 XML 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">잘못된 문자를 이스케이프 시퀀스로 바꿔 정규화된 XML 이름으로 쓸 수 있는 문자열을 생성합니다.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">쓸 XML 데이터를 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">문자열에서 빈 공백을 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">잘못된 문자를 이스케이프 시퀀스로 바꾼 정규화된 XML 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 대리자의 인스턴스를 초기화하여 SOAP 인코딩된 XML 데이터를 serialize합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">XML 문서에서 정규화된 이름을 생성할 때 사용되는 네임스페이스와 접두사가 포함된 정규화된 XML 이름 개체의 목록을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">네임스페이스 및 접두사 쌍이 포함된 <see cref="T:System.Collections.ArrayList" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">동적으로 생성된 어셈블리를 이름별로 가져옵니다.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">어셈블리의 전체 이름입니다.</param>
      <returns vsli:raw="A dynamically generated assembly.">동적으로 생성된 어셈블리입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">SOAP 인코딩된 SOAP 메시지를 serialize하는 동안에만 개체 참조를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">
        <see cref="T:System.Xml.XmlWriter" /> 개체가 이름에 대해 네임스페이스가 지정되지 않은 XML 특성을 쓰도록 합니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 특성의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">바이트 배열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">
        <see cref="T:System.Xml.XmlWriter" />가 이름에 대해 네임스페이스가 지정되지 않은 XML 특성을 쓰도록 합니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 특성의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">문자열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">
        <see cref="T:System.Xml.XmlWriter" /> 개체가 XML 특성을 쓰도록 합니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 특성의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">바이트 배열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">XML 특성을 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 특성의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">문자열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">네임스페이스 접두사를 수동으로 지정하는 XML 특성을 씁니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">쓸 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">접두사가 나타내는 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">문자열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">명명된 XML 요소 본문 내에 XML 노드 개체를 씁니다.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">쓸 XML 노드입니다. 자식 XML 요소일 수 있습니다.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">쓸 부모 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">쓸 부모 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 요소의 경우 노드가 XML 스키마 <see langword="true" /> 요소 선언을 따르면 <see langword="any" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">
        <see cref="T:System.Xml.XmlWriter" /> 개체가 명명된 XML 요소의 본문 내에 <see cref="T:System.Xml.XmlNode" /> 개체를 쓰도록 합니다.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">쓸 XML 노드입니다. 자식 XML 요소일 수 있습니다.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">쓸 부모 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">쓸 부모 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 요소의 경우 노드가 XML 스키마 <see langword="true" /> 요소 선언을 따르면 <see langword="any" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">네임스페이스 한정자 없이 쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">본문이 비어 있는 XML 요소를 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">본문이 비어 있는 XML 요소를 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">
        <see langword="&lt;closing&gt;" /> 요소 태그를 씁니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">
        <see langword="&lt;closing&gt;" /> 요소 태그를 씁니다.</summary>
      <param name="o" vsli:raw="The object being serialized.">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">SOAP 인코딩된 <see langword="id" /> 요소에 표시되는 <see langword="multiRef" /> 특성을 씁니다.</summary>
      <param name="o" vsli:raw="The object being serialized.">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">네임스페이스 선언 특성을 씁니다.</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">선언할 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">본문에 유효한 정규화된 XML 이름이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">XML 요소의 본문에 쓸 정규화된 XML 이름입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">본문에 유효한 정규화된 XML 이름이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">XML 요소의 본문에 쓸 정규화된 XML 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">본문에 문자열이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 요소의 본문에 쓸 문자열입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">바이트 배열을 XML 요소의 본문으로 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">XML 요소의 본문에 쓸 바이트 배열입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">본문에 문자열이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 요소의 본문에 쓸 문자열입니다.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">본문에 문자열이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 요소의 본문에 쓸 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">바이트 배열을 XML 요소의 본문으로 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">XML 요소의 본문에 쓸 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">본문에 문자열이 포함되어 있는 XML 요소를 씁니다. 문자열의 값이 <see langword="xsi:nil='true'" />인 경우 <see cref="T:System.Xml.XmlWriter" />는 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">XML 요소의 본문에 쓸 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">지정된 개체의 <see langword="&lt;multiRef&gt;" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">지정된 개체의 <see langword="&lt;multiRef&gt;" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">개체의 형식 매핑에 저장된 형식입니다(<see langword="typeof" /> 작업을 통해 직접 찾은 개체 형식과 다름).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">지정된 개체의 <see langword="&lt;multiRef&gt;" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">개체의 형식 매핑에 저장된 형식입니다(<see langword="typeof" /> 작업을 통해 직접 찾은 개체 형식과 다름).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요소가 데이터가 포함된 다른 요소를 참조하도록 하는 대신 개체를 XML 요소로 직접 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">지정된 개체의 <see langword="multiRef" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">개체의 형식 매핑에 저장된 형식입니다(<see langword="typeof" /> 작업을 통해 직접 찾은 개체 형식과 다름).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요소가 데이터가 포함된 다른 요소를 참조하도록 하는 대신 개체를 XML 요소로 직접 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />에 사용되고 있는 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">클래스 인스턴스에서 사용하는 <see cref="T:System.Xml.XmlWriter" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">SOAP 메시지에서 SOAP 인코딩된 <see langword="multiRef" /> XML 요소로 개체를 serialize합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">지정된 개체의 <see langword="multiRef" /> 요소에 대한 참조를 포함하는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">쓰고 있는 참조 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">쓰고 있는 참조 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized.">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">지정된 개체의 <see langword="multiRef" /> 요소에 대한 참조를 포함하는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">쓰고 있는 참조 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">쓰고 있는 참조 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized.">serialize되고 있는 개체입니다.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">SOAP 1.2 RPC 결과 요소를 지정된 정규화된 이름으로 본문에 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the result body.">결과 본문의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the result body.">결과 본문의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">사용자 지정 XML 서식을 XML 요소로 사용하는 개체를 씁니다.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">사용자 지정 XML 서식을 사용하는 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 인터페이스를 구현하는 개체입니다.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 클래스 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">
        <see cref="T:System.Xml.XmlNode" />가 사용자 지정 XML 서식을 XML 요소로 사용하는 개체를 쓰도록 합니다.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">사용자 지정 XML 서식을 사용하는 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 인터페이스를 구현하는 개체입니다.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">여는 요소 태그 쓰기를 무시하려면 <see langword="true" />이고, 여는 요소 태그를 쓰려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">작성기가 XML 문서의 시작 부분에 위치할 경우 XML 선언을 씁니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 네임스페이스에 사용할 수 있는 요소 이름이 없는 경우 접두사와 함께 요소 이름을 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">XML 요소로 serialize되는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">XML 요소로 serialize되는 개체입니다.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 네임스페이스에 사용할 수 있는 요소 이름이 없는 경우 접두사와 함께 요소 이름을 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">XML 요소로 serialize되는 개체입니다.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 네임스페이스에 사용할 수 있는 요소 이름이 없는 경우 접두사와 함께 요소 이름을 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">생성된 XML에 사용할 접두사와 네임스페이스 쌍을 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">텍스트 본문이 간단한 XML 스키마 데이터 형식의 값인 XML 요소를 씁니다.</summary>
      <param name="name" vsli:raw="The local name of the element to write.">쓸 요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">쓸 요소의 네임스페이스입니다.</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">요소 본문에서 serialize될 개체입니다.</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 요소가 <see langword="true" /> 특성을 사용하여 텍스트 값 형식을 명시적으로 지정하면 <see langword="xsi:type" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Base 64 바이트 배열을 씁니다.</summary>
      <param name="value" vsli:raw="The byte array to write.">쓸 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">지정된 문자열 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value of the string to write.">쓸 문자열의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">지정된 <see cref="T:System.Xml.XmlNode" />를 XML 특성으로 씁니다.</summary>
      <param name="node" vsli:raw="The XML node to write.">작성할 XML 노드입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">지정된 <see cref="T:System.Xml.XmlNode" /> 개체를 XML 특성으로 씁니다.</summary>
      <param name="node" vsli:raw="The XML node to write.">작성할 XML 노드입니다.</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">WSDL(웹 서비스 기술 언어) 네임스페이스(“http://schemas.xmlsoap.org/wsdl/”)에서 <see langword="arrayType" /> 특성에 대해 정규화된 이름 값을 생성하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 개체(또는 <see langword="null" />)입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">문서로 serialize되는 XML 요소에 대해 <see langword="xsi:type" /> 특성을 씁니다.</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">XML 스키마 데이터 형식의 네임스페이스입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">XML 문서로 개체를 serialize하고 XML 문서에서 개체를 deserialize합니다. <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하면 개체가 XML로 인코딩되는 방식을 제어할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. 모든 XML 요소의 기본 네임스페이스를 지정합니다.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">모든 XML 요소에 사용할 기본 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. 필드 또는 속성이 배열을 반환하는 경우 <paramref name="extraTypes" /> 매개 변수는 배열에 삽입될 수 있는 개체를 지정합니다.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다.</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">serialize할 개체의 형식입니다.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 형식의 개체를 XML 문서 인스턴스로 serialize하고 XML 문서 인스턴스를 <see cref="T:System.Object" /> 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Object" /> 클래스의 새 인스턴스를 초기화합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드에서 그 클래스를 다른 클래스로 재정의합니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <paramref name="type" /> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 형식의 개체를 XML 문서 인스턴스로 serialize하고 XML 문서 인스턴스를 <see cref="T:System.Object" /> 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Object" /> 클래스의 새 인스턴스를 초기화합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드에서 그 클래스를 다른 클래스로 재정의합니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <paramref name="type" /> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
      <param name="location" vsli:raw="The location of the types.">형식의 위치입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. 또한 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">특정 형식을 다른 형식에 매핑하는 개체를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 지정된 XML 문서를 deserialize할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">deserialize할 문서를 가리키는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 가리키는 개체를 이 <see cref="T:System.Xml.XmlReader" />가 deserialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">serialize할 XML 문서를 읽는 데 사용되는 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">파생 클래스에서 재정의되는 경우 개체를 serialize하는 데 사용되는 작성기를 반환합니다.</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 클래스를 구현하는 인스턴스입니다.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <see cref="T:System.IO.Stream" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">deserialize할 XML 문서를 포함하는 <see cref="T:System.IO.Stream" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">deserialize되는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.IO.TextReader" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">deserialize할 XML 문서를 포함하는 <see cref="T:System.IO.TextReader" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">deserialize되는 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">deserialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</param>
      <returns vsli:raw="The deserialized object.">deserialize된 개체입니다.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">deserialize되는 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">deserialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서와 인코딩 스타일을 deserialize합니다.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">serialize된 XML의 인코딩 스타일입니다.</param>
      <returns vsli:raw="The deserialized object.">deserialize된 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">deserialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 데이터를 사용하여 개체를 deserialize합니다.</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" /> 클래스의 인스턴스입니다.</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">사용되는 인코딩입니다.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 클래스의 인스턴스입니다.</param>
      <returns vsli:raw="The object being deserialized.">deserialize되는 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서를 deserialize하고 deserialization을 수행하는 동안 발생하는 이벤트를 재정의할 수 있도록 합니다.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">deserialize할 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 클래스의 인스턴스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">deserialize되는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열에서 만들어진 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체의 배열을 반환합니다.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />의 배열입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">지정된 매핑에 따라 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> 개체의 배열입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">deserialize된 개체의 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">형식 배열에서 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열을 반환합니다.</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">
        <see cref="T:System.Type" /> 개체의 배열입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">지정된 형식을 serialize 또는 deserialize하기 위해 특별히 생성된 하나 또는 여러 버전의 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 포함된 어셈블리의 이름을 반환합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">deserialize하고 있는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">형식에 대한 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 포함된 어셈블리의 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">지정된 네임스페이스의 지정된 형식에 대한 serializer가 포함된 어셈블리의 이름을 반환합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">원하는 <see cref="T:System.Type" />입니다.</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">형식의 네임스페이스입니다.</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">특별히 빌드된 serializer가 포함된 어셈블리의 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 네임스페이스를 참조하는 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.TextWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스를 참조합니다.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">생성된 XML 문서의 네임스페이스를 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스를 참조합니다.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">지정된 개체를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스 및 인코딩 스타일을 참조합니다.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">serialize된 XML의 인코딩 스타일입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />, XML 네임스페이스 및 인코딩을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">사용할 네임스페이스 및 접두사가 포함된 <see langword="XmlSerializerNamespaces" />의 인스턴스입니다.</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">문서에서 사용되는 인코딩입니다.</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">SOAP로 인코딩된 메시지의 경우 id 특성을 생성하는 데 사용되는 기본 문자열입니다.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 특성이 나타날 때 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 요소를 발견하면 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 노드가 나타날 때 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">SOAP로 인코딩된 XML 스트림의 deserialization을 수행하는 동안 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 사용되지 않았거나 참조되지 않은 인식할 수 있는 형식을 발견하면 발생합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">웹 서비스 클라이언트 프록시에 적용되며 사용자 지정 serializer를 포함하는 어셈블리를 지정할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">지정된 어셈블리 이름을 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">어셈블리의 암호화되지 않은 단순한 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">지정된 어셈블리 이름과 어셈블리 위치를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">어셈블리의 암호화되지 않은 단순한 이름입니다.</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">어셈블리의 URL 위치인 문자열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">특정 형식 집합을 위한 serializer가 포함된 어셈블리의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">어셈블리의 암호화되지 않은 단순한 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">serializer가 포함된 어셈블리의 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">경로 또는 URI와 같이 어셈블리를 가리키는 위치입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">보다 효율적인 serialization을 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" />의 형식화된 버전을 만듭니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">지정한 형식을 serialize하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">지정한 형식을 serialize하기 위해 특별히 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">지정한 형식 및 네임스페이스를 serialize하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">모든 XML 요소에 사용할 기본 네임스페이스입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">지정한 형식을 serialize하기 위해 특별히 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">지정한 형식을 serialize하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. 필드 또는 속성이 배열을 반환하는 경우 <paramref name="extraTypes" /> 매개 변수는 배열에 삽입될 수 있는 개체를 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">지정한 형식의 개체를 XML 문서로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">기본 serialization 동작을 재정의하는 필드를 포함하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">지정한 형식의 개체를 XML 문서 인스턴스로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">기본 serialization 동작을 재정의하는 필드를 포함하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">지정한 형식의 개체를 XML 문서 인스턴스로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">이 <see cref="T:System.Type" />가 serialize할 수 있는 개체의 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">형식 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">형식의 위치를 지정하는 경로입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">지정한 형식의 개체를 XML 문서로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. XML 루트 요소를 나타내는 개체를 지정합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">특정 형식을 다른 형식에 매핑하는 개체를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">매핑된 형식을 serialize하기 위해 특별히 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">미리 생성한 형식화된 serializer의 판독기, 작성기 및 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">형식을 serialize할 수 있는지 여부를 결정하는 값을 가져옵니다.</summary>
      <param name="type" vsli:raw="The type to be serialized.">serialize될 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">형식을 serialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">지정된 형식에 대한 serializer를 반환합니다.</summary>
      <param name="type" vsli:raw="The type to be serialized.">serialize될 형식입니다.</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 파생되는 형식의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">serializer에서 사용되는 XML 판독기 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">XML 문서 또는 데이터 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">데이터 스트림을 읽는 데 사용되는 메서드의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">메서드가 포함된 <see cref="T:System.Collections.Hashtable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">어셈블리에 있는 형식화된 serializer의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">형식화된 serializer가 들어 있는 <see cref="T:System.Collections.Hashtable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">데이터 스트림에 쓰는 데 사용되는 메서드의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">메서드가 포함된 <see cref="T:System.Collections.Hashtable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">serializer의 XML 작성기 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">XML 데이터 스트림이나 문서에 쓰는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">이 특성이 어셈블리에 적용되는 경우 코드가 serialization 인프라에서 생성되었고 성능 향상을 위해 다시 사용될 수 있음을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">지정된 형식에 대한 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type that is being serialized.">serialize될 형식입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">어셈블리의 CLR(공통 언어 런타임) 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">어셈블리의 CLR(공통 언어 런타임) 네임스페이스를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">부모 어셈블리의 ID를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The version of the parent assembly.">부모 어셈블리의 버전입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">serializer가 작동하는 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">serialize될 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">어셈블리의 버전 번호를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The version of the assembly.">어셈블리의 버전입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 특성 대상을 serialize할 때 생성되는 XML 스키마를 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 형식의 이름을 지정합니다.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">결과 스키마 형식이 XSD 익명 형식인지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 스키마 형식이 XSD 익명 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">XML 스키마 문서에 형식을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XML 스키마 문서에 형식을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">XML 형식의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the XML type.">XML 형식의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">XML 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the XML type.">XML 형식의 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">한 형식과 다른 형식의 매핑을 포함합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">네임스페이스와 형식이 포함된 정규화된 형식 이름입니다.</summary>
      <returns vsli:raw="The fully qualified type name.">정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">매핑된 개체의 형식 이름을 가져옵니다.</summary>
      <returns vsli:raw="The type name of the mapped object.">매핑된 개체의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">매핑된 개체의 XML 요소 이름을 가져옵니다.</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">매핑된 개체의 XML 요소 이름입니다. 기본값은 개체의 클래스 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">매핑된 개체의 XML 네임스페이스를 가져옵니다.</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">매핑된 개체의 XML 네임스페이스입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
  </members>
</doc>