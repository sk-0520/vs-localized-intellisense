<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary vsli:raw="Provides HTTP content based on a byte array.">바이트 배열에 따라 HTTP 콘텐츠를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" />를 초기화하는 데 사용되는 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" />를 초기화하는 데 사용되는 콘텐츠입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the &lt;paramref name=&quot;content&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" />를 초기화하는 데 사용되는 <paramref name="content" /> 매개 변수의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes in the &lt;paramref name=&quot;content&quot; /&gt; starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" />를 초기화하기 위해 사용되는 <paramref name="content" /> 매개 변수에서 시작하는 <paramref name="offset" />의 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter - minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> 매개 변수가 0보다 작습니다.  
또는 
<paramref name="offset" /> 매개 변수의 값이 <paramref name="content" /> 매개 변수가 지정한 콘텐츠 길이보다 큽니다.  
또는 
<paramref name="count" /> 매개 변수가 0보다 작습니다.  
또는 
<paramref name="count" /> 매개 변수가 <paramref name="content" /> 매개 변수에서 지정한 콘텐츠 길이에서 <paramref name="offset" /> 매개 변수를 뺀 값보다 큽니다.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" />의 메모리에 해당하는 백업 저장소를 읽기 위해 비동기 작업으로 HTTP 콘텐츠 스트림을 만듭니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">생성자에 제공된 바이트 배열을 serialize하고 비동기 작업으로 HTTP 콘텐츠 스트림에 씁니다.</summary>
      <param name="stream" vsli:raw="The target stream.">대상 스트림입니다.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">전송에 대한 정보(예: 채널 바인딩 토큰)입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether a byte array has a valid length in bytes.">바이트 배열의 바이트 길이가 올바른지 여부를 결정합니다.</summary>
      <param name="length" vsli:raw="The length in bytes of the byte array.">바이트 배열의 바이트 길이입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="length" />의 길이가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary vsli:raw="Specifies how client certificates are provided.">클라이언트 인증서 제공 방식을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; will attempt to provide  all available client certificates  automatically.">사용 가능한 모든 클라이언트 인증서를 자동으로 제공하려는 <see cref="T:System.Net.Http.HttpClientHandler" />입니다.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary vsli:raw="The application manually provides the client certificates to the &lt;see cref=&quot;T:System.Net.Http.WebRequestHandler&quot; /&gt;. This value is the default.">애플리케이션은 클라이언트 인증서를 <see cref="T:System.Net.Http.WebRequestHandler" />에 수동으로 제공합니다. 이 값이 기본값입니다.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary vsli:raw="A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.">HTTP 응답 메시지의 처리를 내부 처리기라는 다른 처리기로 위임하는 HTTP 처리기의 형식입니다.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.DelegatingHandler" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class with a specific inner handler.">특정 내부 처리기를 사용하여 <see cref="T:System.Net.Http.DelegatingHandler" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">HTTP 응답 메시지 처리를 담당하는 내부 처리기입니다.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt;, and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.DelegatingHandler" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary vsli:raw="Gets or sets the inner handler which processes the HTTP response messages.">HTTP 응답 메시지를 처리하는 내부 처리기를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The inner handler for HTTP response messages.">HTTP 응답 메시지에 대한 내부 처리기입니다.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">비동기 작업으로 서버에 전송할 내부 처리기에 대한 HTTP 요청을 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">서버에 보낼 HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">작업을 취소할 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary vsli:raw="A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.">application/x-www-form-urlencoded MIME 형식을 사용하여 인코딩된 이름/값 튜플의 컨테이너입니다.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.FormUrlEncodedContent&quot; /&gt; class with a specific collection of name/value pairs.">이름/값 쌍의 특정 컬렉션을 사용하여 <see cref="T:System.Net.Http.FormUrlEncodedContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nameValueCollection" vsli:raw="A collection of name/value pairs.">이름/값 쌍으로 된 컬렉션입니다.</param>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary vsli:raw="Represents authentication information in Authorization, ProxyAuthorization, WWW-Authenticate, and Proxy-Authenticate header values.">권한 부여, ProxyAuthorization, WWW-Authneticate 및 Proxy-Authenticate 헤더 값의 인증 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">권한 부여에 사용할 체계입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">권한 부여에 사용할 체계입니다.</param>
      <param name="parameter" vsli:raw="The credentials containing the authentication information of the user agent for the resource being requested.">요청되는 리소스에 대한 사용자 에이전트의 인증 정보를 포함하는 자격 증명입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary vsli:raw="Gets the credentials containing the authentication information of the user agent for the resource being requested.">요청된 리소스에 대한 사용자 에이전트의 인증 정보를 포함하는 자격 증명을 가져옵니다.</summary>
      <returns vsli:raw="The credentials containing the authentication information.">인증 정보를 포함하는 자격 증명입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">인증 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" />이 올바른 인증 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary vsli:raw="Gets the scheme to use for authorization.">권한 부여에 사용할 체계를 가져옵니다.</summary>
      <returns vsli:raw="The scheme to use for authorization.">권한 부여에 사용할 체계입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary vsli:raw="Represents the value of the Cache-Control header.">Cache-Control 헤더의 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary vsli:raw="Cache-extension tokens, each with an optional assigned value.">각각이 선택적 할당 값을 갖는 캐시 확장 토큰입니다.</summary>
      <returns vsli:raw="A collection of cache-extension tokens each with an optional assigned value.">각각이 선택적 할당 값을 갖는 캐시 확장 토큰 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a  &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary vsli:raw="The maximum age, specified in seconds, that the HTTP client is willing to accept a response.">HTTP 클라이언트가 응답을 수신하도록 허용되는 최대 기간(초)입니다.</summary>
      <returns vsli:raw="The time in seconds.">시간(초)입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary vsli:raw="Whether an HTTP client is willing to accept a response that has exceeded its expiration time.">HTTP 클라이언트가 만료 시간을 초과하는 응답을 수신하려고 하는지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">HTTP 클라이언트가 만료 시간을 초과하는 응답을 수신하려고 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary vsli:raw="The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.">HTTP 클라이언트가 만료 시간을 초과하는 응답을 수신하려고 하는 최대 시간(초)입니다.</summary>
      <returns vsli:raw="The time in seconds.">시간(초)입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary vsli:raw="The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.">HTTP 클라이언트가 응답을 수신하도록 허용되는 새로 고침 수명 기간(초)입니다.</summary>
      <returns vsli:raw="The time in seconds.">시간(초)입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.">캐시 항목이 더 이상 사용 가능하지 않을 때 원본 서버가 후속 사용에서 캐시 항목의 유효성 재검사를 요구하는지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항목이 더 이상 사용 가능하지 않을 때 원본 서버가 후속 사용에서 캐시 항목의 유효성 재검사를 요구하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary vsli:raw="Whether an HTTP client is willing to accept a cached response.">HTTP 클라이언트가 캐시된 응답을 수락하는지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is not willing to accept a cached response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />HTTP 클라이언트가 캐시 된 응답을 허용 하지 않으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary vsli:raw="A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response.">HTTP 응답의 cache-control 헤더 필드에 있는 "no-cache" 지시문의 fieldname 컬렉션입니다.</summary>
      <returns vsli:raw="A collection of fieldnames.">Fieldname의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary vsli:raw="Whether a cache must not store any part of either the HTTP request message or any response.">캐시가 HTTP 요청 메시지 또는 응답의 일부를 저장하지 않아야 하는지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache must not store any part of either the HTTP request message or any response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">캐시가 HTTP 요청 메시지 또는 응답의 일부를 저장하지 않아야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary vsli:raw="Whether a cache or proxy must not change any aspect of the entity-body.">캐시 또는 프록시가 엔터티 본문의 어떤 측면도 변경하지 않아야 하는지 여부입닏.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache or proxy must not change any aspect of the entity-body; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">캐시 또는 프록시가 엔터티 본문의 어떤 측면도 변경하지 않아야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary vsli:raw="Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.">캐시가 HTTP 요청의 다른 제약 조건과 일치하는 캐시된 항목을 사용하여 응답할지 또는 504(게이트웨이 시간 초과) 상태로 응답할지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">캐시가 HTTP 요청의 다른 제약 조건과 일치하는 캐시된 항목을 사용하여 응답할지 또는 504(게이트웨이 시간 초과) 상태로 응답하면 <see langword="true" />이고 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents cache-control header value information.">캐시 제어 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid cache-control header value information.">
        <paramref name="input" />이 올바른 cache-control 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary vsli:raw="Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.">HTTP 응답 메시지의 전체 또는 일부가 한 명의 사용자를 위한 것인지와 공유 캐시에서 캐시되지 않아야 하는지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">HTTP 응답 메시지의 전체 또는 일부가 한 명의 사용자를 위한 것이며 공유 캐시에서 캐시되지 않아야 하는 경우 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary vsli:raw="A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response.">HTTP 응답의 cache-control 헤더 필드에 있는 "private" 지시문의 컬렉션 fieldname입니다.</summary>
      <returns vsli:raw="A collection of fieldnames.">Fieldname의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.">캐시 항목이 공유 사용자 에이전트 캐시에 더 이상 사용 가능하지 않을 때 원본 서버가 후속 사용에서 캐시 항목의 유효성 재검사를 요구하는지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항목이 공유 사용자 에이전트 캐시에 더 이상 사용 가능하지 않을 때 원본 서버가 후속 사용에서 캐시 항목의 유효성 재검사를 요구하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary vsli:raw="Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.">일반적으로는 캐시할 수 없고 비공유 캐시 내에서만 캐시할 수 있지만 HTTP 응답을 캐시할 수 있는지 여부입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">일반적으로는 캐시할 수 없고 비공유 캐시 내에서만 캐시할 수 있지만 HTTP 응답을 캐시할 수 있으면 <see langword="true" />이고 캐시할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary vsli:raw="The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache.">공유 캐시에 대한 cache-control 또는 Expires 헤더에서 "max-age" 지시문을 재정의하는 HTTP 응답의 공유 최대 사용 기간(초)입니다.</summary>
      <returns vsli:raw="The time in seconds.">시간(초)입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Disposition header.">Content-Disposition 헤더의 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      </param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dispositionType" vsli:raw="A string that contains a &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />를 포함하는 문자열입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary vsli:raw="The date at which   the file was created.">파일을 만든 날짜입니다.</summary>
      <returns vsli:raw="The file creation date.">파일 작성 날짜입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary vsli:raw="The disposition type for a content body part.">콘텐츠 본문 부분에 대한 처리 형식입니다.</summary>
      <returns vsli:raw="The disposition type.">처리 형식입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary vsli:raw="A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.">엔터티를 분리하여 별도 파일에 저장하는 경우 사용할 메시지 페이로드를 저장할 파일 이름을 생성하기 위해 권장되는 방법입니다.</summary>
      <returns vsli:raw="A suggested filename.">제안된 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary vsli:raw="A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.">엔터티를 분리하여 별도 파일에 저장하는 경우 사용할 메시지 페이로드를 저장할 파일 이름을 생성하기 위해 권장되는 방법입니다.</summary>
      <returns vsli:raw="A suggested filename of the form filename*.">filename* 형식의 권장되는 파일 이름입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary vsli:raw="The date at   which the file was last modified.">마지막으로 파일을 수정한 날짜입니다.</summary>
      <returns vsli:raw="The file modification date.">파일 수정 날짜입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary vsli:raw="The name for a content body part.">콘텐츠 본문 부분의 이름입니다.</summary>
      <returns vsli:raw="The name for the content body part.">콘텐츠 본문 부분의 이름입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary vsli:raw="A set of parameters included the Content-Disposition header.">매개 변수 집합에 Content-disposition 헤더가 포함됩니다.</summary>
      <returns vsli:raw="A collection of parameters.">매개 변수 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents content disposition header value information.">콘텐츠 처리 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content disposition header value information.">
        <paramref name="input" />이 올바른 콘텐츠 처리 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary vsli:raw="The date the file was last read.">파일을 마지막으로 읽은 날짜입니다.</summary>
      <returns vsli:raw="The last read date.">마지막으로 읽은 날짜입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary vsli:raw="The approximate size, in bytes, of the file.">파일의 대략적인 크기(바이트)입니다.</summary>
      <returns vsli:raw="The approximate size, in bytes.">대략적인 크기(바이트)입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Range header.">Content-Range 헤더의 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">범위의 시작점이나 끝점(바이트 단위)입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">데이터를 보내기 시작하는 위치(바이트)입니다.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">데이터 보내기를 중지하는 위치(바이트 단위)입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">데이터를 보내기 시작하는 위치(바이트)입니다.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">데이터 보내기를 중지하는 위치(바이트 단위)입니다.</param>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">범위의 시작점이나 끝점(바이트 단위)입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">지정한 개체와 현재 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 개체가 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">데이터를 보내기 시작하는 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position, in bytes, at which to start sending data.">데이터를 보내기 시작하는 위치(바이트)입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary vsli:raw="Gets whether the Content-Range header has a length specified.">Content-Range 헤더에 길이가 지정되어 있는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a length specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Content-Range에 길이가 지정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary vsli:raw="Gets whether the Content-Range has a range specified.">Content-Range에 범위가 지정되어 있는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a range specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Content-Range에 범위가 지정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary vsli:raw="Gets the length of the full entity-body.">전체 엔터티 본문의 길이를 가져옵니다.</summary>
      <returns vsli:raw="The length of the full entity-body.">전체 엔터티 본문의 길이입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents content range header value information.">콘텐츠 범위 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content range header value information.">
        <paramref name="input" />이 올바른 콘텐츠 범위 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">데이터 보내기를 중지하는 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary vsli:raw="The range units used.">사용되는 범위 단위입니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains range units.">범위 단위를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary vsli:raw="Represents an entity-tag header value.">엔터티 태그 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="tag" vsli:raw="A string that contains an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="tag" vsli:raw="A string that contains an  &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />를 포함하는 문자열입니다.</param>
      <param name="isWeak" vsli:raw="A value that indicates if this entity-tag header is a weak validator. If the entity-tag header is weak validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;true&quot; /&gt;. If the entity-tag header is a strong validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;false&quot; /&gt;.">이 엔터티 태그 헤더가 약한 유효성 검사기인지 여부를 나타내는 값입니다. 엔터티 태그 헤더가 약한 유효성 검사기이면 <paramref name="isWeak" />를 <see langword="true" />로 설정해야 합니다. 엔터티 태그 헤더가 강한 유효성 검사기이면 <paramref name="isWeak" />를 <see langword="false" />로 설정해야 합니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary vsli:raw="Gets the entity-tag header value.">엔터티 태그 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary vsli:raw="Gets whether the entity-tag is prefaced by a weakness indicator.">엔터티 태그 앞에 약점 표시기가 있는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity-tag is prefaced by a weakness indicator; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">엔터티 태그 앞에 약점 표시기가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents entity tag header value information.">엔터티 태그 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid entity tag header value information.">
        <paramref name="input" />이 올바른 엔터티 태그 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary vsli:raw="Gets the opaque quoted string.">따옴표 붙은 불투명 문자열을 가져옵니다.</summary>
      <returns vsli:raw="An opaque quoted string.">따옴표 붙은 불투명 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary vsli:raw="Represents the collection of Content Headers as defined in RFC 2616.">RFC 2616에 정의된 콘텐츠 헤더의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Allow&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Allow" /> 콘텐츠 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Allow&quot; /&gt; header on an HTTP response.">HTTP 응답에 대한 <see langword="Allow" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Disposition" /> 콘텐츠 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Disposition" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Encoding" /> 콘텐츠 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Encoding" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Language" /> 콘텐츠 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Language" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Length" /> 콘텐츠 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Length" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Location" /> 콘텐츠 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Location" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-MD5" /> 콘텐츠 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-MD5" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Range" /> 콘텐츠 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Range" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Type" /> 콘텐츠 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Content-Type" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Expires" /> 콘텐츠 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Expires" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Last-Modified" /> 콘텐츠 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">HTTP 응답에 대한 <see langword="Last-Modified" /> 콘텐츠 헤더 값입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary vsli:raw="A collection of headers and their values as defined in RFC 2616.">RFC 2616에 정의된 헤더 및 해당 값의 컬렉션입니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Adds the specified header and its values into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">지정된 헤더 및 헤더 값을 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">컬렉션에 추가할 헤더입니다.</param>
      <param name="values" vsli:raw="A list of header values to add to the collection.">컬렉션에 추가할 헤드 값의 목록입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">이름이 null이거나 비워 둘 수 없습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The values cannot be null or empty.">값이 null이거나 비워 둘 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">잘못 사용된 헤더 이름입니다. HttpRequestMessage와 함께 요청 헤더를 사용하고, HttpResponseMessage와 함께 응답 헤더를 사용하고, HttpContent 개체와 함께 콘텐츠 헤더를 사용해야 합니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">헤더 이름 형식이 올바르지 않습니다.
또는
헤더 값의 줄 바꿈 문자는 뒤에 공백 문자가 있어야 합니다.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary vsli:raw="Adds the specified header and its value into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">지정된 헤더 및 헤더 값을 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">컬렉션에 추가할 헤더입니다.</param>
      <param name="value" vsli:raw="The content of the header.">헤더의 내용입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">이름이 null이거나 비워 둘 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">잘못 사용된 헤더 이름입니다. HttpRequestMessage와 함께 요청 헤더를 사용하고, HttpResponseMessage와 함께 응답 헤더를 사용하고, HttpContent 개체와 함께 콘텐츠 헤더를 사용해야 합니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">헤더 이름 형식이 올바르지 않습니다.
또는
헤더 값의 줄 바꿈 문자는 뒤에 공백 문자가 있어야 합니다.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary vsli:raw="Removes all headers from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에서 헤더를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary vsli:raw="Returns if  a specific header exists in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">특정 헤더가 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에 있는지 여부를 반환합니다.</summary>
      <param name="name" vsli:raw="The specific header.">특정 헤더입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header exists in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 헤더가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 인스턴스에서 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" />에 대한 열거자입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary vsli:raw="Returns all header values for a specified header stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에 저장된 지정된 헤더의 모든 헤더 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The specified header to return values for.">값을 반환할 지정된 헤더입니다.</param>
      <returns vsli:raw="An array of header strings.">헤더 문자열의 배열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The header cannot be found.">헤더를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary vsli:raw="Removes the specified header from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에서 지정된 헤더를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the header to remove from the collection.">컬렉션에서 제거할 헤더의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection or if &lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" />를 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An instance of an implementation of an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" />를 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" />의 구현 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its values were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">제공된 정보의 유효성을 검사하지 않고 지정된 헤더 및 해당 값이 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에 추가되었는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">컬렉션에 추가할 헤더입니다.</param>
      <param name="values" vsli:raw="The values of the header.">헤더의 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;values&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="name" /> 및 <paramref name="values" />를 컬렉션에 추가할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its value were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">제공된 정보의 유효성을 검사하지 않고 지정된 헤더 및 해당 값이 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에 추가되었는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">컬렉션에 추가할 헤더입니다.</param>
      <param name="value" vsli:raw="The content of the header.">헤더의 내용입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="name" /> 및 <paramref name="value" />를 컬렉션에 추가할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary vsli:raw="Return if a specified header and specified values are stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">지정된 헤더 및 지정된 값이 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 컬렉션에 저장되는지 여부를 반환합니다.</summary>
      <param name="name" vsli:raw="The specified header.">지정된 헤더입니다.</param>
      <param name="values" vsli:raw="The specified header values.">지정된 헤더 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;see langword=&quot;values&quot; /&gt; are stored in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="name" /> 및 <see langword="values" />를 컬렉션에 추가할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary vsli:raw="Represents a collection of header values.">헤더 값의 컬렉션을 나타냅니다.</summary>
      <typeparam name="T" vsli:raw="The header collection type.">헤더 컬렉션 형식입니다.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary vsli:raw="Adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />에 엔트리를 추가합니다.</summary>
      <param name="item" vsli:raw="The item to add to the header collection.">헤더 컬렉션에 추가할 항목입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary vsli:raw="Removes all entries from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />에서 모든 엔트리를 제거합니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary vsli:raw="Determines if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; contains an item.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />에 항목이 포함되어 있는지를 확인합니다.</summary>
      <param name="item" vsli:raw="The item to find to the header collection.">헤더 컬렉션을 찾을 항목입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entry is contained in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항목이 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 인스턴스에 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary vsli:raw="Gets the number of headers in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />에 포함된 헤더의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of headers in a collection.">컬렉션의 헤더 수입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />를 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 인스턴스에 대한 열거자입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 인스턴스가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 인스턴스가 읽기 전용이면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary vsli:raw="Parses and adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">엔트리를 구문 분석하고 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />에 추가합니다.</summary>
      <param name="input" vsli:raw="The entry to add.">추가할 엔트리입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary vsli:raw="Removes the specified item from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">지정된 항목을 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />에서 제거합니다.</summary>
      <param name="item" vsli:raw="The item to remove.">제거할 항목입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; was removed from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="item" />이 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 인스턴스에서 제거되었으면 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />를 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 인스턴스에 대한 열거자입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; object. object.">현재 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 개체를 나타내는 문자열을 반환합니다. 이름입니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary vsli:raw="Determines whether the input could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">입력이 구문 분석된 후 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />에 추가될 수 있는지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The entry to validate.">유효성을 검사할 항목입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;input&quot; /&gt; could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 구문 분석된 후 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 인스턴스에 추가될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary vsli:raw="Represents the collection of Request Headers as defined in RFC 2616.">RFC 2616에 정의된 요청 헤더의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Accept" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Accept" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Accept-Charset" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Accept-Charset" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Accept-Encoding" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Accept-Encoding" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Accept-Language" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Accept-Language" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Authorization" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Authorization" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Cache-Control" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Cache-Control" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Connection" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Connection" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request contains Close.">HTTP 요청의 <see langword="Connection" /> 헤더에 Close가 포함되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Connection" /> 헤더에 Close가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Date" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Date" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Expect" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Expect" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request contains Continue.">HTTP 요청의 <see langword="Expect" /> 헤더에 Continue가 포함되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Expect&quot; /&gt; header contains Continue, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Expect" /> 헤더에 Continue가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="From" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="From" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Host" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Host" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="If-Match" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />을 반환합니다.  
HTTP 요청에 대한 <see langword="If-Match" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="If-Modified-Since" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="If-Modified-Since" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="If-None-Match" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="If-None-Match" /> 헤더 값을 가져옵니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="If-Range" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="If-Range" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="If-Unmodified-Since" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="If-Unmodified-Since" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Max-Forwards" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Max-Forwards" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Pragma" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Pragma" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Proxy-Authorization" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Proxy-Authorization" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Range" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Range" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Referer" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Referer" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="TE" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="TE" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Trailer" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Trailer" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Transfer-Encoding" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Transfer-Encoding" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request contains chunked.">HTTP 요청의 <see langword="Transfer-Encoding" /> 헤더에 chunked가 포함되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Transfer-Encoding" /> 헤더에 chunked가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Upgrade" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Upgrade" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="User-Agent" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="User-Agent" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Via" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Via" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">HTTP 요청의 <see langword="Warning" /> 헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">HTTP 요청에 대한 <see langword="Warning" /> 헤더의 값입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary vsli:raw="Represents the collection of Response Headers as defined in RFC 2616.">RFC 2616에 정의된 응답 헤더의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Accept-Ranges" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Accept-Ranges" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Age" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Age" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Cache-Control" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Cache-Control" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Connection" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Connection" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response contains Close.">HTTP 응답의 <see langword="Connection" /> 헤더에 Close가 포함되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 헤더에 Close가 포함되어 있으면 <see langword="Connection" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Date" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Date" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="ETag" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="ETag" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Location" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Location" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Pragma" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />을 반환합니다.  
HTTP 응답에 대한 <see langword="Pragma" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Proxy-Authenticate" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Proxy-Authenticate" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Retry-After" /> 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Retry-After" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Server" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Server" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Trailer" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Trailer" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Transfer-Encoding" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Transfer-Encoding" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response contains chunked.">HTTP 응답의 <see langword="Transfer-Encoding" /> 헤더에 chunked가 포함되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Transfer-Encoding" /> 헤더에 chunked가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Upgrade" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Upgrade" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Vary" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Vary" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Via" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Via" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Warning" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="Warning" /> 헤더의 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="WWW-Authenticate" /> 헤더의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 응답에 대한 <see langword="WWW-Authenticate" /> 헤더의 값입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary vsli:raw="Represents a media type used in a Content-Type header as defined in the RFC 2616.">RFC 2616에 정의된 대로 Content-Type 헤더에 사용된 미디어 형식을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="mediaType" vsli:raw="The source represented as a string to initialize the new instance.">새 인스턴스를 초기화하는 문자열로 나타낸 소스입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary vsli:raw="Gets or sets the character set.">문자 집합을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The character set.">문자 집합입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary vsli:raw="Gets or sets the media-type header value.">media-type 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The media-type header value.">media-type 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary vsli:raw="Gets or sets the media-type header value parameters.">media-type 헤더 값 매개 변수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The media-type header value parameters.">media-type 헤더 값 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents media type header value information.">미디어 형식 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type header value information.">
        <paramref name="input" />이 올바른 미디어 형식 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary vsli:raw="Represents a media type with an additional quality factor used in a Content-Type header.">Content-Type 헤더에 사용된 추가 품질 요소를 가진 미디어 형식을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">새 인스턴스를 초기화하는 문자열로 나타내는 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">새 인스턴스를 초기화하는 문자열로 나타내는 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />입니다.</param>
      <param name="quality" vsli:raw="The quality associated with this header value.">이 헤더 값과 연결된 품질입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents media type with quality header value information.">품질 헤더 값 정보를 포함하는 미디어 형식을 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type with quality header value information.">
        <paramref name="input" />가 품질 헤더 값 정보를 갖는 올바른 미디어 형식이 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets or sets the quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />에 대한 품질 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 개체에 대한 품질 값입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary vsli:raw="Represents a name/value pair used in various headers as defined in RFC 2616.">RFC 2616에 정의된 대로 다양한 헤더에 사용된 이름/값 쌍을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The header name.">헤더 이름입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The header name.">헤더 이름입니다.</param>
      <param name="value" vsli:raw="The header value.">헤더 값입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary vsli:raw="Gets the header name.">헤더 이름을 가져옵니다.</summary>
      <returns vsli:raw="The header name.">헤더 이름입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents name value header value information.">이름 값 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value header value information.">
        <paramref name="input" />이 올바른 이름 값 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary vsli:raw="Gets the header value.">헤더 값을 가져옵니다.</summary>
      <returns vsli:raw="The header value.">헤더 값입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary vsli:raw="Represents a name/value pair with parameters used in various headers as defined in RFC 2616.">RFC 2616에 정의된 대로 다양한 헤더에 사용된 매개 변수를 가진 이름/값 쌍을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The header name.">헤더 이름입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The header name.">헤더 이름입니다.</param>
      <param name="value" vsli:raw="The header value.">헤더 값입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary vsli:raw="Gets the parameters from the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 개체에서 매개 변수를 가져옵니다.</summary>
      <returns vsli:raw="A collection containing the parameters.">매개 변수를 포함하는 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents name value with parameter header value information.">매개 변수 헤더 값 정보로 이름 값을 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value with parameter header value information.">
        <paramref name="input" />이 매개 변수 헤더 값 정보를 갖는 유효한 이름 값이 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary vsli:raw="Represents a product token value in a User-Agent header.">User-Agent 헤더의 제품 토큰 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The product name.">제품 이름입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The product name value.">제품 이름 값입니다.</param>
      <param name="version" vsli:raw="The product version value.">제품 버전 값입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary vsli:raw="Gets the name of the product token.">제품 토큰의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the product token.">제품 토큰의 이름입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents product header value information.">제품 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary vsli:raw="Gets the version of the product token.">제품 토큰의 버전을 가져옵니다.</summary>
      <returns vsli:raw="The version of the product token.">제품 토큰의 버전입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary vsli:raw="Represents a value which can either be a product or a comment in a User-Agent header.">User-Agent 헤더에서 제품 또는 메모일 수 있는 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="product" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="comment" vsli:raw="A comment value.">주석 값입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="productName" vsli:raw="The product name value.">제품 이름 값입니다.</param>
      <param name="productVersion" vsli:raw="The product version value.">제품 버전 값입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary vsli:raw="Gets the comment from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 개체에서 주석을 가져옵니다.</summary>
      <returns vsli:raw="The comment value this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">이 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />의 주석 값입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents product info header value information.">제품 정보 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid product info header value information.">
        <paramref name="input" />이 유효한 제품 정보 헤더 값 정보인 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary vsli:raw="Gets the product from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 개체에서 제품를 가져옵니다.</summary>
      <returns vsli:raw="The product value from this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">이 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />의 제품 값입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary vsli:raw="Represents an If-Range header value which can either be a date/time or an entity-tag value.">날짜/시간 또는 엔터티 태그 값일 수 있는 If-Range 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="date" vsli:raw="A date value used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 날짜 값입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="entityTag" vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="entityTag" vsli:raw="An entity tag represented as a string used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용하는 문자열로 나타내는 엔터티 태그입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 개체에서 날짜를 가져옵니다.</summary>
      <returns vsli:raw="The date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 개체의 날짜입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary vsli:raw="Gets the entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 개체의 엔터티 태그를 가져옵니다.</summary>
      <returns vsli:raw="The entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 개체의 엔터티 태그입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents range condition header value information.">범위 조건 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range Condition header value information.">
        <paramref name="input" />이 올바른 범위 조건 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary vsli:raw="Represents a Range header value.">범위 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class with a byte range.">바이트 범위를 사용하여 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우  
또는 
 <paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents range header value information.">범위 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range header value information.">
        <paramref name="input" />이 올바른 범위 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary vsli:raw="Gets the ranges specified from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 개체에서 지정된 범위를 가져옵니다.</summary>
      <returns vsli:raw="The ranges from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 개체의 범위입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="he string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary vsli:raw="Gets the unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 개체에서 단위를 가져옵니다.</summary>
      <returns vsli:raw="The unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 개체의 단위입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary vsli:raw="Represents a byte range in a Range header value.">범위 헤더 값에서 바이트 범위를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우  
또는 
 <paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">데이터를 보내기 시작하는 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position at which to start sending data.">데이터를 보내기 시작하는 위치입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">데이터 보내기를 중지하는 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary vsli:raw="Represents a Retry-After header value which can either be a date/time or a timespan value.">날짜/시간 또는 timespan 값일 수 있는 Retry-After 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="date" vsli:raw="The date and time offset used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 날짜와 시간 오프셋입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="delta" vsli:raw="The delta, in seconds, used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용하는 델타(초)입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 개체에서 날짜 및 시간 오프셋을 가져옵니다.</summary>
      <returns vsli:raw="The date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 개체의 날짜 및 시간 오프셋입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary vsli:raw="Gets the delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 개체에서 델타(초)를 가져옵니다.</summary>
      <returns vsli:raw="The delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 개체의 델타(초)입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents retry condition header value information.">다시 시도 조건 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid retry condition header value information.">
        <paramref name="input" />이 올바른 다시 시도 조건 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary vsli:raw="Represents a string header value with an optional quality.">선택적 품질의 문자열 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The string used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 문자열입니다.</param>
      <param name="quality" vsli:raw="A quality factor used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 품질 요소입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">지정한 개체와 현재 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 개체가 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents quality header value information.">품질 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid string with quality header value information.">
        <paramref name="input" />이 품질 헤더 값 정보를 포함하는 올바른 문자열이 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 개체에서 품질 요소를 가져옵니다.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 개체의 품질 요소입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary vsli:raw="Gets the string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 개체에서 문자열 값을 가져옵니다.</summary>
      <returns vsli:raw="The string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 개체의 문자열 값입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary vsli:raw="Represents an accept-encoding header value.">accept-encoding 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">지정한 개체와 현재 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 개체가 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary vsli:raw="Gets the transfer-coding parameters.">전송 코딩 매개 변수를 가져옵니다.</summary>
      <returns vsli:raw="The transfer-coding parameters.">전송 코딩 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding header value information.">transfer-coding 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding header value information.">
        <paramref name="input" />이 올바른 transfer-coding 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary vsli:raw="Gets the transfer-coding value.">전송 코딩 값을 가져옵니다.</summary>
      <returns vsli:raw="The transfer-coding value.">전송 코딩 값입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary vsli:raw="Represents an Accept-Encoding header value with optional quality factor.">선택적 품질 요소의 Accept-Encoding 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">새 인스턴스를 초기화하는 데 사용되는 문자열입니다.</param>
      <param name="quality" vsli:raw="A value for the quality factor.">품질 요소의 값입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding value information.">전송 코딩 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding with quality header value information.">
        <paramref name="input" />이 품질 헤더 값 정보를 갖는 올바른 transfer-coding이 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />에서 품질 요소를 가져옵니다.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />의 품질 요소입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary vsli:raw="Represents the value of a Via header.">Via 헤더 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">받은 프로토콜의 프로토콜 버전입니다.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">요청 또는 응답이 수신된 호스트 및 포트입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">받은 프로토콜의 프로토콜 버전입니다.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">요청 또는 응답이 수신된 호스트 및 포트입니다.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">받은 프로토콜의 프로토콜 이름입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">받은 프로토콜의 프로토콜 버전입니다.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">요청 또는 응답이 수신된 호스트 및 포트입니다.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">받은 프로토콜의 프로토콜 이름입니다.</param>
      <param name="comment" vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">받는 사람 프록시 또는 게이트웨이의 소프트웨어를 식별하는 데 사용되는 설명 필드입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary vsli:raw="Gets the comment field used to identify the software of the recipient proxy or gateway.">받는 사람 프록시 또는 게이트웨이의 소프트웨어를 식별하는 데 사용되는 설명 필드를 가져옵니다.</summary>
      <returns vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">받는 사람 프록시 또는 게이트웨이의 소프트웨어를 식별하는 데 사용되는 설명 필드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents via header value information.">via 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid via header value information.">
        <paramref name="input" />이 올바른 via 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary vsli:raw="Gets the protocol name of the received protocol.">받는 프로토콜의 프로토콜 이름을 가져옵니다.</summary>
      <returns vsli:raw="The protocol name.">프로토콜 이름입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary vsli:raw="Gets the protocol version of the received protocol.">받는 프로토콜의 프로토콜 버전을 가져옵니다.</summary>
      <returns vsli:raw="The protocol version.">프로토콜 버전입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary vsli:raw="Gets the host and port that the request or response was received by.">요청 또는 응답이 수신된 호스트 및 포트를 가져옵니다.</summary>
      <returns vsli:raw="The host and port that the request or response was received by.">요청 또는 응답이 수신된 호스트 및 포트입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current instance.">현재 인스턴스의 복사본입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary vsli:raw="Represents a warning value used by the Warning header.">경고 헤더에서 사용하는 경고 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="code" vsli:raw="The specific warning code.">특정 경고 코드입니다.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">경고를 연결한 호스트입니다.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">경고 텍스트를 포함하는 따옴표 붙은 문자열입니다.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="code" vsli:raw="The specific warning code.">특정 경고 코드입니다.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">경고를 연결한 호스트입니다.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">경고 텍스트를 포함하는 따옴표 붙은 문자열입니다.</param>
      <param name="date" vsli:raw="The date/time stamp of the warning.">경고의 날짜/시간 스탬프입니다.</param>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary vsli:raw="Gets the host that attached the warning.">경고를 연결한 호스트를 가져옵니다.</summary>
      <returns vsli:raw="The host that attached the warning.">경고를 연결한 호스트입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary vsli:raw="Gets the specific warning code.">특정 경고 코드를 가져옵니다.</summary>
      <returns vsli:raw="The specific warning code.">특정 경고 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary vsli:raw="Gets the date/time stamp of the warning.">경고의 날짜/시간 스탬프를 가져옵니다.</summary>
      <returns vsli:raw="The date/time stamp of the warning.">경고의 날짜/시간 스탬프입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 개체의 해시 함수 역할을 수행합니다.</summary>
      <returns vsli:raw="A hash code for the current object.">현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">문자열을 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 인스턴스로 변환합니다.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">인증 헤더 값 정보를 나타내는 문자열입니다.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 인스턴스를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" />이 <see langword="null" /> 참조인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" />이 올바른 인증 헤더 값 정보가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">현재 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="Returns a copy of the current instance.">현재 인스턴스의 복사본을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary vsli:raw="Gets a quoted-string containing the warning text.">경고 텍스트를 포함하는 따옴표 붙은 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A quoted-string containing the warning text.">경고 텍스트를 포함하는 따옴표 붙은 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">현재 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information.">문자열이 유효한 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 정보인지 여부를 결정합니다.</summary>
      <param name="input" vsli:raw="The string to validate.">유효성을 검사할 문자열입니다.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" />이 유효한 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 정보이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary vsli:raw="Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.">URI로 식별되는 리소스에서 HTTP 요청을 보내고 HTTP 응답을 받기 위한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class using a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; that is disposed when this instance is disposed.">이 인스턴스가 삭제될 때 폐기되는 <see cref="T:System.Net.Http.HttpClientHandler" />를 사용하여 <see cref="T:System.Net.Http.HttpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the specified handler. The handler is disposed when this instance is disposed.">지정된 처리기를 사용하여 <see cref="T:System.Net.Http.HttpClient" /> 클래스의 새 인스턴스를 초기화합니다. 이 인스턴스가 삭제될 때 처리기가 삭제됩니다.</summary>
      <param name="handler" vsli:raw="The HTTP handler stack to use for sending requests.">요청을 보내는 데 사용할 HTTP 처리기 스택입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the provided handler, and specifies whether that handler should be disposed when this instance is disposed.">제공된 처리기를 사용하여 <see cref="T:System.Net.Http.HttpClient" /> 클래스의 새 인스턴스를 초기화하고 이 인스턴스를 삭제할 때 해당 처리기를 삭제할지 여부를 지정합니다.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" />는 HTTP 응답 메시지 처리를 담당합니다.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by HttpClient.Dispose; &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">HttpClient.Dispose에 의해 내부 처리기를 삭제해야 하는 경우 <see langword="true" />이고, 내부 처리기를 다시 사용하려고 하는 경우 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary vsli:raw="Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">요청을 보낼 때 사용된 인터넷 리소스의 URI(Uniform Resource Identifier)의 기준 주소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">요청을 보낼 때 사용된 인터넷 리소스의 URI(Uniform Resource Identifier)의 기준 주소입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary vsli:raw="Cancel all pending requests on this instance.">이 인스턴스에서 보류 중인 모든 요청을 취소합니다.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">글로벌 HTTP 프록시를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A proxy used by every HTTP request.">을 <see cref="T:System.Net.HttpWebRequest" />인스턴스화하는 모든 호출에 사용 되는 프록시입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value passed cannot be &lt;see langword=&quot;null&quot; /&gt;.">전달된 값은 <see langword="null" />일 수 없습니다.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary vsli:raw="Gets the headers which should be sent with each request.">각 요청과 함께 보내야 하는 헤더를 가져옵니다.</summary>
      <returns vsli:raw="The headers which should be sent with each request.">각 요청과 함께 보내야 하는 헤더입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary vsli:raw="Gets or sets the default HTTP version used on subsequent requests made by this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">이 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 수행한 후속 요청에서 사용하는 기본 HTTP 버전을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The default version to use for any requests made with this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">이 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스를 사용 하 여 만든 모든 요청에 사용할 기본 버전입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="In a set operation, &lt;see langword=&quot;DefaultRequestVersion&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">집합 작업에서 <see langword="DefaultRequestVersion" />은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already started one or more requests.">
        <see cref="T:System.Net.Http.HttpClient" /> 인스턴스가 이미 하나 이상의 요청을 시작했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already been disposed.">
        <see cref="T:System.Net.Http.HttpClient" /> 인스턴스가 이미 삭제되었습니다.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">DELETE 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 지정한 URI에 DELETE 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">DELETE 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 지정한 URI에 DELETE 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">GET 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">HTTP 완료 옵션이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">HTTP 완료 옵션 및 취소 토큰을 사용하여 지정한 URL에 비동기 작업으로 GET 요청을 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">GET 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">HTTP 완료 옵션이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">HTTP 완료 옵션 및 취소 토큰을 사용하여 지정한 URL에 비동기 작업으로 GET 요청을 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">GET 요청을 지정된 URI에 보내고 비동기 작업에서 바이트 배열로 응답 본문을 반환합니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">GET 요청을 지정된 URI에 보내고 비동기 작업에서 바이트 배열로 응답 본문을 반환합니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">GET 요청을 지정된 URI에 보내고 비동기 작업에서 스트림으로 응답 본문을 반환합니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">GET 요청을 지정된 URI에 보내고 비동기 작업에서 스트림으로 응답 본문을 반환합니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">GET 요청을 지정된 URI에 보내고 비동기 작업에서 문자열로 응답 본문을 반환합니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">GET 요청을 지정된 URI에 보내고 비동기 작업에서 문자열로 응답 본문을 반환합니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum number of bytes to buffer when reading the response content.">응답 콘텐츠를 읽을 경우 버퍼링할 최대 바이트 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.">응답 콘텐츠를 읽을 경우 버퍼링할 최대 바이트 수입니다. 이 속성의 기본값은 2GB입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The size specified is less than or equal to zero.">지정된 크기가 0보다 작거나 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">작업이 이미 현재 인스턴스에서 시작된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request to a Uri designated as a string as an asynchronous operation.">PATCH 요청을 비동기 작업으로 지정된 Uri에 문자열로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token to a Uri represented as a string as an asynchronous operation.">취소 토큰이 포함된 PATCH 요청을 비동기 작업으로 문자열로 표현되는 Uri로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request as an asynchronous operation.">PATCH 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 PATCH 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">POST 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 POST 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">POST 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 POST 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">PUT 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 PUT 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">PUT 요청을 지정된 URI에 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">취소 토큰이 포함된 PUT 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">요청이 전송되는 URI입니다.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">서버로 전송된 HTTP 요청 콘텐츠입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">HTTP 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">보낼 HTTP 요청 메시지입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">HTTP 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">보낼 HTTP 요청 메시지입니다.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">작업을 완료해야 할 경우(응답을 사용할 수 있게 된 즉시 또는 전체 응답 내용을 읽은 후).</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">HTTP 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">보낼 HTTP 요청 메시지입니다.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">작업을 완료해야 할 경우(응답을 사용할 수 있게 된 즉시 또는 전체 응답 내용을 읽은 후).</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">작업을 취소할 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">HTTP 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">보낼 HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">작업을 취소할 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">요청 메시지를 <see cref="T:System.Net.Http.HttpClient" /> 인스턴스에서 이미 전송한 경우</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the request times out.">요청 시간 제한 범위 내에서 대기할 기간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The timespan to wait before the request times out.">요청 시간 제한 범위 내에서 대기할 기간입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The timeout specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">지정한 제한 시간이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />이 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">작업이 이미 현재 인스턴스에서 시작된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary vsli:raw="The default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Framework and .NET Core 2.0 and earlier.">.NET Framework 및.NET Core 2.0 이전 버전의 <see cref="T:System.Net.Http.HttpClient" />에서 사용되는 기본 메시지 처리기입니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">처리기가 리디렉션 응답을 따르는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 처리기가 리디렉션 응답; 따르는지 하는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">HTTP 콘텐츠 응답의 자동 압축 풀기를 위해 처리기가 사용하는 압축 풀기 메서드 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The automatic decompression method used by the handler.">처리기에서 사용되는 자동 압축 풀기 해제 메서드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary vsli:raw="Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.">인증 기관의 해지 목록을 기준으로 인증서를 검사하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">인증서 해지 목록을 검사하면 <see langword="true" />이고, 검사하지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">.NET Framework 4.7.1만 해당: 이 속성이 구현되지 않습니다.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary vsli:raw="Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.">인증서가 인증서 저장소에서 자동으로 선택되는지 또는 호출자가 특정 클라이언트 인증서에 전달하도록 허용되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The collection of security certificates associated with this handler.">이 처리기와 연결된 보안 인증서의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary vsli:raw="Gets the collection of security certificates that are associated with requests to the server.">서버에 대한 요청과 연결된 보안 인증서의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The X509CertificateCollection that is presented to the server when performing certificate based client authentication.">X509CertificateCollection 인증서를 수행할 때 서버에 표시 되는 클라이언트 인증을 기반으로 합니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the cookie container used to store server cookies by the handler.">처리기에서 서버 쿠키를 저장하는 데 사용되는 쿠키 컨테이너를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The cookie container used to store server cookies by the handler.">처리기에서 서버 쿠키를 저장하는 데 사용되는 쿠키 컨테이너입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">이 처리기에서 사용하는 인증 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default is &lt;see langword=&quot;null&quot; /&gt;.">처리기와 연결된 인증 자격 증명입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary vsli:raw="Gets a cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환하는 캐시된 대리자를 가져옵니다.</summary>
      <returns vsli:raw="A cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환하는 캐시된 대리자입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication. The default proxy is used only when &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.UseProxy&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">기본(시스템) 프록시를 사용하는 경우 인증을 위해 기본 프록시 서버에 제출하기 위해 자격 증명을 가져오거나 설정합니다. 기본 프록시는 <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" />가 <see langword="true" />로 설정되고 <see cref="P:System.Net.Http.HttpClientHandler.Proxy" />가 <see langword="null" />로 설정된 경우에만 사용됩니다.</summary>
      <returns vsli:raw="The credentials needed to authenticate a request to the default proxy server.">기본 프록시 서버에 요청을 인증 하는 데 필요한 자격 증명입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpClientHandler" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the handler follows.">처리기가 따르는 최대 리디렉션 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum number of redirection responses that the handler follows. The default value is 50.">처리기가 따르는 최대 리디렉션 응답 수입니다. 기본값은 50입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object. Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.">
        <see cref="T:System.Net.Http.HttpClient" /> 개체를 사용하여 요청을 수행하는 경우 허용되는 동시 연결의 최대 수(서버 엔드포인트당)를 가져오거나 설정합니다. 서버 엔드포인트를 기준으로 제한되므로 예를 들어, 256이라는 값은 http://www.adatum.com/에 256개의 동시 연결을 허용하고 http://www.adventure-works.com/에 추가로 256개의 동시 연결을 허용합니다.</summary>
      <returns vsli:raw="The maximum number of concurrent connections (per server endpoint) allowed by an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object.">최대 동시 연결 (서버 끝점당)에서 허용 되는 <see cref="T:System.Net.Http.HttpClient" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum request content buffer size used by the handler.">처리기에서 사용되는 최대 요청 콘텐츠 버퍼 크기를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum request content buffer size in bytes. The default value is 2 gigabytes.">최대 요청 콘텐츠 버퍼 크기(바이트)입니다. 기본값은 2GB입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers. For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.">응답 헤더의 킬로바이트(1024바이트) 단위로 최대 길이를 가져오거나 설정합니다. 예를 들어 값이 64인 경우 최대 응답 헤더의 길이로 65536바이트가 허용됩니다.</summary>
      <returns vsli:raw="The maximum length, in kilobytes (1024 bytes), of the response headers.">최대 길이, 응답 헤더의 킬로바이트 (1024 바이트)입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">처리기가 요청과 함께 인증 헤더를 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">처리기가 인증을 수행한 이후 요청과 함께 HTTP 권한 부여 헤더를 함께 보내도록 하려면 <see langword="true" />이고, 그렇게 하지 않으려면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary vsli:raw="Gets a writable dictionary (that is, a map) of custom properties for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; requests. The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.">
        <see cref="T:System.Net.Http.HttpClient" /> 요청에 대해 사용자 지정 속성의 쓰기 가능한 사전(즉, 맵)을 가져옵니다. 사전이 비어 있도록 초기화되었습니다. 사용자 지정 처리기 및 특수한 처리에 대한 키-값 쌍을 삽입하고 쿼리할 수 있습니다.</summary>
      <returns vsli:raw="a writable dictionary of custom properties.">사용자 지정 속성의 쓰기 가능한 사전입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary vsli:raw="Gets or sets proxy information used by the handler.">처리기에서 사용되는 프록시 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The proxy information used by the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">처리기에서 사용되는 프록시 정보입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; as an operation that will not block.">
        <see cref="T:System.Net.Http.HttpRequestMessage" />에 제공된 정보를 기반으로 <see cref="T:System.Net.Http.HttpResponseMessage" />의 인스턴스를 차단되지 않을 작업으로 만듭니다.</summary>
      <param name="request" vsli:raw="The HTTP request message.">HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">작업을 취소할 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary vsli:raw="Gets or sets a callback method to validate the server certificate.">서버 인증서의 유효성을 검사할 콜백 메서드를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A callback method to validate the server certificate.">서버 인증서의 유효성을 검사할 콜백 메서드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary vsli:raw="Gets or sets the TLS/SSL protocol used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; objects managed by the HttpClientHandler object.">HttpClientHandler 개체에 의해 관리되는 <see cref="T:System.Net.Http.HttpClient" /> 개체에서 사용하는 TLS/SSL 프로토콜을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the values defined in the &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; enumeration.">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 열거형에 정의된 값 중 하나입니다.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">.NET Framework 4.7.1만 해당: 이 속성이 구현되지 않습니다.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary vsli:raw="Gets a value that indicates whether the handler supports automatic response content decompression.">처리기가 자동 응답 콘텐츠 압축 풀기를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports automatic response content decompression; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">처리기가 자동 응답 콘텐츠 압축 풀기를 지원하면 <see langword="true" />이고, 지원하지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary vsli:raw="Gets a value that indicates whether the handler supports proxy settings.">처리기가 프록시 설정을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports proxy settings; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">처리기가 프록시 설정을 지원하면 <see langword="true" />이고, 지원하지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary vsli:raw="Gets a value that indicates whether the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties.">처리기에서 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 및 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 속성에 대한 구성 설정을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">처리기에서 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 및 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 속성에 대한 구성 설정을 지원하면 <see langword="true" />이고, 지원하지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests.">처리기에서 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 속성을 사용하여 서버 쿠키를 저장하고 요청을 보낼 때 이러한 쿠키를 사용할지 여부를 나타내는 값을 가져오거나 저장합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">처리기에서 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 속성을 사용하여 서버 쿠키를 저장하고 요청을 보낼 때 이러한 쿠키를 사용하는 경우 <see langword="true" />, 사용하지 않는 경우 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a value that controls whether default credentials are sent with requests by the handler.">처리기에서 기본 자격 증명을 요청과 함께 전송하는지 여부를 제어하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses a proxy for requests.">처리기가 요청에 대해 프록시를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should use a proxy for requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">처리기가 요청에 대해 프록시를 사용해야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary vsli:raw="Indicates if &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.">
        <see cref="T:System.Net.Http.HttpClient" /> 작업이 응답이 가능하면 즉시 완료된 것으로 간주되어야 하는지, 아니면 콘텐츠가 담긴 전체 응답 메시지를 읽은 후 완료된 것으로 간주되어야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary vsli:raw="The operation should complete after reading the entire response including the content.">콘텐츠를 포함하여 전체 응답을 읽은 후 작업을 완료 해야 합니다.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary vsli:raw="The operation should complete as soon as a response is available and headers are read. The content is not read yet.">응답이 가능하고 헤더를 읽는 즉시 작업을 완료해야 합니다. 콘텐츠를 아직 읽지 않았습니다.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary vsli:raw="A base class representing an HTTP entity body and content headers.">HTTP 엔터티 본문과 콘텐츠 헤더를 나타내는 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">HTTP 콘텐츠를 바이트 스트림으로 serialize한 후 <paramref name="stream" /> 매개 변수로 제공되는 스트림 개체로 복사합니다.</summary>
      <param name="stream" vsli:raw="The target stream.">대상 스트림입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">HTTP 콘텐츠를 바이트 스트림으로 serialize한 후 <paramref name="stream" /> 매개 변수로 제공되는 스트림 개체로 복사합니다.</summary>
      <param name="stream" vsli:raw="The target stream.">대상 스트림입니다.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">전송에 대한 정보(예: 채널 바인딩 토큰)입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory stream as an asynchronous operation.">HTTP 콘텐츠를 비동기 작업으로 메모리 스트림으로 serialize합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt;.">관리되지 않는 리소스를 해제하고, <see cref="T:System.Net.Http.HttpContent" />에서 사용하는 관리되는 리소스를 삭제합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpContent" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary vsli:raw="Gets the HTTP content headers as defined in RFC 2616.">RFC 2616에 정의된 대로 HTTP 콘텐츠 헤더를 가져옵니다.</summary>
      <returns vsli:raw="The content headers as defined in RFC 2616.">RFC 2616에 정의된 HTTP 콘텐츠 헤더입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">HTTP 콘텐츠를 비동기 작업으로 메모리 버퍼로 serialize합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">HTTP 콘텐츠를 비동기 작업으로 메모리 버퍼로 serialize합니다.</summary>
      <param name="maxBufferSize" vsli:raw="The maximum size, in bytes, of the buffer to use.">사용할 버퍼의 최대 크기(바이트)입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">HTTP 콘텐츠를 비동기 작업으로 바이트 배열로 serialize합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">HTTP 콘텐츠를 serialize하고 콘텐츠를 나타내는 스트림을 비동기 작업으로 반환합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">HTTP 콘텐츠를 비동기 작업으로 문자열로 serialize합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">HTTP 콘텐츠를 비동기 작업으로 스트림으로 serialize합니다.</summary>
      <param name="stream" vsli:raw="The target stream.">대상 스트림입니다.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">전송에 대한 정보(예: 채널 바인딩 토큰)입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP content has a valid length in bytes.">HTTP 콘텐츠 길이(바이트)가 올바른지 여부를 결정합니다.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP 콘텐츠의 길이(바이트)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="length" />의 길이가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary vsli:raw="A base type for HTTP message handlers.">HTTP 메시지 처리기의 기본 형식입니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">관리되지 않는 리소스를 해제하고, <see cref="T:System.Net.Http.HttpMessageHandler" />에서 사용하는 관리되는 리소스를 삭제합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpMessageHandler" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">HTTP 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">보낼 HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">작업을 취소할 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary vsli:raw="A specialty class that allows applications to call the &lt;see cref=&quot;M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method on an HTTP handler chain.">애플리케이션이 HTTP 처리기 체인에서 <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 메서드를 호출할 수 있는 특수 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">특정 <see cref="T:System.Net.Http.HttpMessageInvoker" />를 사용하여 <see cref="T:System.Net.Http.HttpMessageHandler" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" />는 HTTP 응답 메시지 처리를 담당합니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">특정 <see cref="T:System.Net.Http.HttpMessageInvoker" />를 사용하여 <see cref="T:System.Net.Http.HttpMessageHandler" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" />는 HTTP 응답 메시지 처리를 담당합니다.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by Dispose(), &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">Dispose()가 내부 처리기를 삭제해야 하는 경우 <see langword="true" />이고, 내부 처리기를 다시 사용하려고 하는 경우 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt;.">관리되지 않는 리소스를 해제하고, <see cref="T:System.Net.Http.HttpMessageInvoker" />에서 사용하는 관리되는 리소스를 삭제합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpMessageInvoker" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">HTTP 요청을 비동기 작업으로 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">보낼 HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">작업을 취소할 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary vsli:raw="A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.">표준 HTTP 메서드를 검색 및 비교하고 새 HTTP 메서드를 만들기 위한 도우미 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; class with a specific HTTP method.">특정 HTTP 메서드를 사용하여 <see cref="T:System.Net.Http.HttpMethod" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 메서드입니다.</param>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary vsli:raw="Represents an HTTP DELETE protocol method.">HTTP DELETE 프로토콜 메서드를 나타냅니다.</summary>
      <returns vsli:raw="The HTTP DELETE method.">
        <see cref="T:System.Net.Http.HttpMethod" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">지정한 <see cref="T:System.Net.Http.HttpMethod" />가 현재 <see cref="T:System.Object" />와 같은지 여부를 확인합니다.</summary>
      <param name="other" vsli:raw="The HTTP method to compare with the current object.">현재 개체와 비교할 HTTP 메서드입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 개체가 현재 개체와 같으면 <see langword="true" />이고, 다르면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">지정한 <see cref="T:System.Object" />가 현재 <see cref="T:System.Object" />와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 개체가 현재 개체와 같으면 <see langword="true" />이고, 다르면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">HTTP GET 프로토콜 메서드를 나타냅니다.</summary>
      <returns vsli:raw="The HTTP GET method.">
        <see cref="T:System.Net.Http.HttpMethod" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary vsli:raw="Serves as a hash function for this type.">이 형식에 대한 해시 함수로 작용합니다.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 <see cref="T:System.Object" />의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">HTTP HEAD 프로토콜 메서드를 나타냅니다. HEAD 메서드는 서버에서 응답의 메시지 본문 없이 메시지 헤더만 반환한다는 점을 제외하고는 GET 메서드와 동일합니다.</summary>
      <returns vsli:raw="The HTTP HEAD method.">
        <see cref="T:System.Net.Http.HttpMethod" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary vsli:raw="An HTTP method.">HTTP 메서드입니다.</summary>
      <returns vsli:raw="An HTTP method represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" />로 표시된 HTTP 메서드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">두 <see cref="T:System.Net.Http.HttpMethod" /> 개체를 비교하기 위한 같음 연산자입니다.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">같음 연산자의 왼쪽 <see cref="T:System.Net.Http.HttpMethod" />입니다.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">같음 연산자의 오른쪽 <see cref="T:System.Net.Http.HttpMethod" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="left" />와 <paramref name="right" /> 매개 변수가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">두 <see cref="T:System.Net.Http.HttpMethod" /> 개체를 비교하기 위한 같지 않음 연산자입니다.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">같지 않음 연산자의 왼쪽 <see cref="T:System.Net.Http.HttpMethod" />입니다.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">같지 않음 연산자의 오른쪽 <see cref="T:System.Net.Http.HttpMethod" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="left" />와 <paramref name="right" /> 매개 변수가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary vsli:raw="Represents an HTTP OPTIONS protocol method.">HTTP OPTIONS 프로토콜 메서드를 나타냅니다.</summary>
      <returns vsli:raw="The HTTP OPTIONS method.">
        <see cref="T:System.Net.Http.HttpMethod" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch" />
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">새 엔터티를 URI에 추가할 항목으로 게시하는 데 사용되는 HTTP POST 프로토콜 메서드를 나타냅니다.</summary>
      <returns vsli:raw="The HTTP POST method.">
        <see cref="T:System.Net.Http.HttpMethod" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">URI로 식별된 엔터티를 바꾸는 데 사용되는 HTTP PUT 프로토콜 메서드를 나타냅니다.</summary>
      <returns vsli:raw="The HTTP PUT method.">
        <see cref="T:System.Net.Http.HttpMethod" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">현재 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string representing the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary vsli:raw="Represents an HTTP TRACE protocol method.">HTTP TRACE 프로토콜 메서드를 나타냅니다.</summary>
      <returns vsli:raw="The HTTP TRACE method.">
        <see cref="T:System.Net.Http.HttpMethod" />을 반환합니다.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary vsli:raw="A base class for exceptions thrown by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; classes.">
        <see cref="T:System.Net.Http.HttpClient" /> 및 <see cref="T:System.Net.Http.HttpMessageHandler" /> 클래스가 throw하는 예외의 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpRequestException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception.">현재 예외를 설명하는 특정 메시지를 사용하여 <see cref="T:System.Net.Http.HttpRequestException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">현재 예외를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception and an inner exception.">현재 예외 및 내부 예외를 설명하는 특정 메시지를 사용하여 <see cref="T:System.Net.Http.HttpRequestException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">현재 예외를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The inner exception.">내부 예외입니다.</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary vsli:raw="Represents a HTTP request message.">HTTP 요청 메시지를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">HTTP 메서드 및 요청 <see cref="T:System.Net.Http.HttpRequestMessage" />를 사용하여 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 메서드입니다.</param>
      <param name="requestUri" vsli:raw="A string that represents the request  &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">요청 <see cref="T:System.Uri" />를 나타내는 문자열입니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">HTTP 메서드 및 요청 <see cref="T:System.Net.Http.HttpRequestMessage" />를 사용하여 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 메서드입니다.</param>
      <param name="requestUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; to request.">요청할 <see cref="T:System.Uri" />입니다.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary vsli:raw="Gets or sets the contents of the HTTP message.">HTTP 메시지의 내용을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The content of a message.">메시지의 콘텐츠</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">관리되지 않는 리소스를 해제하고, <see cref="T:System.Net.Http.HttpRequestMessage" />에서 사용하는 관리되는 리소스를 삭제합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpRequestMessage" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP request headers.">HTTP 요청 헤더의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of HTTP request headers.">HTTP 요청 헤더의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary vsli:raw="Gets or sets the HTTP method used by the HTTP request message.">HTTP 요청 메시지에 사용된 HTTP 메서드를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The HTTP method used by the request message. The default is the GET method.">요청 메시지에 사용된 HTTP 메서드입니다. 기본값은 GET 메서드입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary vsli:raw="Gets a set of properties for the HTTP request.">HTTP 요청의 속성 집합을 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IDictionary`2" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">HTTP 요청에 사용되는 <see cref="T:System.Uri" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">HTTP 요청에 사용되는 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">현재 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string representation of the current object.">현재 개체에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">HTTP 메시지 버전을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The HTTP message version. The default value is &lt;c&gt;1.1&lt;/c&gt;, unless you're targeting .NET Core 2.1 or 2.2. In that case, the default value is &lt;c&gt;2.0&lt;/c&gt;.">HTTP 메시지 버전입니다. .NET Framework 및 이전 버전의 .NET Core에서 기본값은 1.1입니다. .NET Core 2.1 이상에서 2.0입니다.</returns>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary vsli:raw="Represents a HTTP response message including the status code and data.">상태 코드와 데이터가 포함된 HTTP 응답 메시지를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpResponseMessage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class with a specific &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt;.">특정 <see cref="T:System.Net.Http.HttpResponseMessage" />를 사용하여 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="statusCode" vsli:raw="The status code of the HTTP response.">HTTP 응답의 상태 코드입니다.</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary vsli:raw="Gets or sets the content of a HTTP response message.">HTTP 응답 메시지의 내용을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The content of the HTTP response message.">HTTP 응답 메시지의 내용입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt;.">관리되지 않는 리소스를 해제하고, <see cref="T:System.Net.Http.HttpResponseMessage" />에서 사용하는 관리되지 않는 리소스를 삭제합니다.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpResponseMessage" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary vsli:raw="Throws an exception if the &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode&quot; /&gt; property for the HTTP response is &lt;see langword=&quot;false&quot; /&gt;.">HTTP 응답에 대한 <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> 속성이 <see langword="false" />이면 예외를 throw합니다.</summary>
      <returns vsli:raw="The HTTP response message if the call is successful.">호출이 성공하면 HTTP 응답 메시지입니다.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The HTTP response is unsuccessful.">HTTP 응답이 실패했습니다.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP response headers.">HTTP 응답 헤더의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of HTTP response headers.">HTTP 응답 헤더의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary vsli:raw="Gets a value that indicates if the HTTP response was successful.">HTTP 응답이 성공했는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt; was in the range 200-299; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 200-299 범위에 있으면이 고, <see langword="false" />그렇지 않으면입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary vsli:raw="Gets or sets the reason phrase which typically is sent by servers together with the status code.">일반적으로 상태 코드와 함께 서버에 의해 전송되는 이유 구문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The reason phrase sent by the server.">서버에서 보낸 이유 구문입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary vsli:raw="Gets or sets the request message which led to this response message.">이 응답 메시지를 발생한 요청 메시지를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The request message which led to this response message.">이 응답 메시지를 발생한 요청 메시지입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary vsli:raw="Gets or sets the status code of the HTTP response.">HTTP 응답의 상태 코드를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The status code of the HTTP response.">HTTP 응답의 상태 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">현재 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string representation of the current object.">현재 개체에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary vsli:raw="Gets the collection of trailing headers included in an HTTP response.">HTTP 응답에 포함된 후행 헤더의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of trailing headers in the HTTP response.">HTTP 응답의 후행 헤더 컬렉션입니다.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="PROTOCOL_ERROR: The HTTP/2 response contains pseudo-headers in the Trailing Headers Frame.">PROTOCOL_ERROR: HTTP/2 응답의 후행 헤더 프레임에는 의사 (pseudo) 헤더가 포함되어 있습니다.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">HTTP 메시지 버전을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The HTTP message version. The default is 1.1.">HTTP 메시지 버전입니다. 기본값은 1.1입니다.</returns>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary vsli:raw="A base type for handlers which only do some small processing of request and/or response messages.">요청 및/또는 응답 메시지의 적은 처리만 수행하는 처리기의 기본 형식입니다.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MessageProcessingHandler" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class with a specific inner handler.">특정 내부 처리기를 사용하여 <see cref="T:System.Net.Http.MessageProcessingHandler" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">HTTP 응답 메시지 처리를 담당하는 내부 처리기입니다.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Performs processing on each request sent to the server.">서버에 전송된 각 요청에 대해 처리를 수행합니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to process.">처리할 HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The HTTP request message that was processed.">처리된 HTTP 요청 메시지입니다.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Perform processing on each response from the server.">서버의 각 응답 처리를 수행합니다.</summary>
      <param name="response" vsli:raw="The HTTP response message to process.">처리할 HTTP 응답 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The HTTP response message that was processed.">처리된 HTTP 응답 메시지입니다.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">비동기 작업으로 서버에 전송할 내부 처리기에 대한 HTTP 요청을 보냅니다.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">서버에 보낼 HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">multipart/* 콘텐츠 형식 지정을 사용하여 serialize된 <see cref="T:System.Net.Http.HttpContent" /> 개체의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">여러 부분으로 구성된 콘텐츠의 하위 형식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="subtype" />가 <see langword="null" />이거나 공백 문자만 있는 경우</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">여러 부분으로 구성된 콘텐츠의 하위 형식입니다.</param>
      <param name="boundary" vsli:raw="The boundary string for the multipart content.">여러 부분으로 구성된 콘텐츠에 대한 경계 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="subtype" />이 <see langword="null" />이거나 빈 문자열인 경우  
<paramref name="boundary" />가 <see langword="null" />이거나 공백 문자만 있는 경우  
또는 
<paramref name="boundary" />가 공백 문자로 끝나는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" />의 길이가 70보다 큽니다.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add multipart HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">multipart/* 콘텐츠 형식 지정을 사용하여 serialize된 <see cref="T:System.Net.Http.HttpContent" /> 개체의 컬렉션에 multipart HTTP 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">컬렉션에 추가할 HTTP 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">다중 파트/* 인코딩을 비동기 작업으로 사용하여 HTTP 콘텐츠를 스트림으로 직렬화합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.MultipartContent" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">multipart/* 콘텐츠 형식 사양을 사용하여 serialize되는 <see cref="T:System.Net.Http.HttpContent" /> 개체의 컬렉션을 반복하는 열거형을 반환합니다.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">다중 파트 HTTP 콘텐츠를 비동기 작업으로 스트림으로 serialize합니다.</summary>
      <param name="stream" vsli:raw="The target stream.">대상 스트림입니다.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">전송에 대한 정보(예: 채널 바인딩 토큰)입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The explicit implementation of the &lt;see cref=&quot;M:System.Net.Http.MultipartContent.GetEnumerator&quot; /&gt; method.">
        <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> 메서드의 명시적 구현입니다.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP multipart content has a valid length in bytes.">HTTP 다중 파트 콘텐츠 길이(바이트)가 올바른지 여부를 결정합니다.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP 콘텐츠의 길이(바이트)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="length" />의 길이가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary vsli:raw="Provides a container for content encoded using multipart/form-data MIME type.">multipart/form-data MIME 형식을 사용하여 인코딩된 콘텐츠에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartFormDataContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartFormDataContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="boundary" vsli:raw="The boundary string for the multipart form data content.">데이터 콘텐츠에서 여러 부분으로 구성된 경계 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="boundary" />가 <see langword="null" />이거나 공백 문자만 있는 경우  
또는 
<paramref name="boundary" />가 공백 문자로 끝나는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" />의 길이가 70보다 큽니다.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">multipart/form-data MIME 형식으로 serialize되는 <see cref="T:System.Net.Http.HttpContent" /> 개체의 컬렉션에 HTTP 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">컬렉션에 추가할 HTTP 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">multipart/form-data MIME 형식으로 serialize되는 <see cref="T:System.Net.Http.HttpContent" /> 개체의 컬렉션에 HTTP 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">컬렉션에 추가할 HTTP 콘텐츠입니다.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">추가할 HTTP 콘텐츠의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" />가 <see langword="null" />이거나 공백 문자만 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">multipart/form-data MIME 형식으로 serialize되는 <see cref="T:System.Net.Http.HttpContent" /> 개체의 컬렉션에 HTTP 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">컬렉션에 추가할 HTTP 콘텐츠입니다.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">추가할 HTTP 콘텐츠의 이름입니다.</param>
      <param name="fileName" vsli:raw="The file name for the HTTP content to add to the collection.">컬렉션에 추가할 HTTP 콘텐츠의 파일 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;fileName&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" />가 <see langword="null" />이거나 공백 문자만 있는 경우  
또는 
<paramref name="fileName" />가 <see langword="null" />이거나 공백 문자만 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" />가 <see langword="null" />이었습니다.</exception>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent" />
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt;." />
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary vsli:raw="Provides the default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Core 2.1 and later.">.NET Core 2.1 이상 버전의 <see cref="T:System.Net.Http.HttpClient" />에서 사용되는 기본 메시지 처리기를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">HTTP 콘텐츠 응답의 자동 압축 풀기를 위해 처리기가 사용하는 압축 풀기 메서드 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of decompression method used by the handler for automatic decompression of the HTTP content response.">HTTP 콘텐츠 응답의 자동 압축 풀기를 위해 처리기에서 사용 하는 압축 풀기 방법의 형식입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the managed cookie container object.">관리되는 쿠키 컨테이너 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The managed cookie container object.">관리 되는 쿠키 컨테이너 개체입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials" />
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.">기본(시스템) 프록시를 사용하는 경우 인증을 위해 기본 프록시 서버에 제출하는 데 사용되는 자격 증명을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The credentials used to authenticate the user to an authenticating proxy.">인증 프록시에 대 한 사용자를 인증 하는 데 사용 되는 자격 증명입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of allowed HTTP redirects.">허용되는 HTTP 리디렉션의 최대 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum number of allowed HTTP redirects.">최대 허용 된 HTTP로 리디렉션합니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.">단일 서버에서 허용하는 최대 동시 TCP 연결 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum number of simultaneous TCP connections allowed to a single server.">단일 서버에 허용 되는 최대 동시 TCP 연결 수입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary vsli:raw="Gets or sets the maximum amount of data that can be drained from responses in bytes.">응답에서 배출할 수 있는 최대 데이터 양을 바이트 단위로 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum amount of data that can be drained from responses in bytes.">최대 양 (바이트)는 응답에서 배출할 수 있는 데이터입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.">응답 헤더의 킬로바이트(1024바이트) 단위로 최대 길이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum size of the header portion from the server response, in kilobytes.">서버 응답에서 헤더 부분의 최대 크기 (kb)입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary vsli:raw="Gets or sets how long a connection can be idle in the pool to be considered reusable.">연결이 풀에서 유휴 상태일 수 있는 기간을 재사용 가능하도록 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum idle time for a connection in the pool. The default value for this property is 1 minute in .NET 6 and later versions; the default value is 2 minutes in .NET Core and .NET 5">풀의 연결에 대 한 최대 유휴 시간입니다. 이 속성의 기본값은 2 분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; (except &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;).">지정한 값이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />과 같습니다.</exception>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">처리기가 요청과 함께 인증 헤더를 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler sends an Authorization header with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />처리기가 요청과 함께 인증 헤더를 보내면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary vsli:raw="Gets or sets the custom proxy when the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.UseProxy&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> 속성이 <see langword="true" />일 때 사용자 지정 프록시를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The custom proxy.">사용자 지정 프록시입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary vsli:raw="Gets or sets the set of options used for client TLS authentication.">클라이언트 TLS 인증에 사용되는 옵션 집합을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The set of options used for client TLS authentication.">클라이언트 TLS 인증에 사용 되는 옵션 집합입니다.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
    <member name="T:System.Net.Http.StreamContent">
      <summary vsli:raw="Provides HTTP content based on a stream.">스트림에 따라 HTTP 콘텐츠를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StreamContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" />를 초기화하는 데 사용하는 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StreamContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" />를 초기화하는 데 사용되는 콘텐츠입니다.</param>
      <param name="bufferSize" vsli:raw="The size, in bytes, of the buffer for the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" />에 대한 버퍼의 크기(바이트)입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" />가 <see langword="null" />이었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;bufferSize&quot; /&gt; was less than or equal to zero.">
        <paramref name="bufferSize" />가 0보다 작거나 같은 경우</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream as an asynchronous operation.">HTTP 스트림 콘텐츠를 비동기 작업으로 메모리 스트림으로 씁니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.StreamContent" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">HTTP 콘텐츠를 비동기 작업으로 스트림으로 serialize합니다.</summary>
      <param name="stream" vsli:raw="The target stream.">대상 스트림입니다.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">전송에 대한 정보(예: 채널 바인딩 토큰)입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the stream content has a valid length in bytes.">스트림 콘텐츠 길이(바이트)가 올바른지 여부를 결정합니다.</summary>
      <param name="length" vsli:raw="The length in bytes of the stream content.">스트림 콘텐츠의 길이(바이트)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="length" />의 길이가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary vsli:raw="Provides HTTP content based on a string.">문자열에 따라 HTTP 콘텐츠를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StringContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StringContent" />를 초기화하는 데 사용하는 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StringContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StringContent" />를 초기화하는 데 사용되는 콘텐츠입니다.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">콘텐츠에 사용할 인코딩입니다.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StringContent" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StringContent" />를 초기화하는 데 사용되는 콘텐츠입니다.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">콘텐츠에 사용할 인코딩입니다.</param>
      <param name="mediaType" vsli:raw="The media type to use for the content.">콘텐츠에 사용할 미디어 형식입니다.</param>
    </member>
  </members>
</doc>