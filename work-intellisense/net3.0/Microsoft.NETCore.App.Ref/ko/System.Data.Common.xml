<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="M:System.Data.DataSet.AcceptChanges" />가 적용된 <see cref="M:System.Data.DataTable.RejectChanges" />에 대해 <see cref="T:System.Data.DataTable" /> 또는 <see cref="T:System.Data.ForeignKeyConstraint" /> 메서드를 호출할 때 수행되는 작업을 결정합니다.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">변경 내용이 관계 전체에 적용됩니다.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">작업이 수행되지 않습니다(기본값).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">쿼리의 결과와 데이터베이스에 미치는 영향을 설명합니다.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">명령을 실행하면 관련 <see langword="Connection" /> 개체는 관련 <see langword="DataReader" /> 개체가 닫힐 때 함께 닫힙니다.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">쿼리는 여러 결과 집합을 반환할 수 있습니다. 쿼리를 실행하면 데이터베이스 상태에 영향을 미칠 수 있습니다. <see langword="Default" />는 <see cref="T:System.Data.CommandBehavior" /> 플래그를 설정하지 않으므로 <see langword="ExecuteReader(CommandBehavior.Default)" /> 호출과  <see langword="ExecuteReader()" /> 호출은 기능적으로 동일합니다.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">쿼리는 열과 기본 키 정보를 반환하며 공급자는 기존의 기본 키 및 타임스탬프 열의 결과 세트에 추가 열을 추가합니다.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">쿼리에서 열 정보만 반환합니다. <see cref="F:System.Data.CommandBehavior.SchemaOnly" />를 사용할 때 .NET Framework Data Provider for SQL Server에서는 실행되는 문 앞에 SET FMTONLY ON을 배치합니다.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">
        <see langword="DataReader" />에서 대형 이진 값을 갖는 열이 포함된 행을 처리하는 방법을 제공합니다. 전체 행을 로드하지 않고 <see langword="SequentialAccess" />를 사용하여 <see langword="DataReader" />에서 데이터를 스트림으로 로드할 수 있습니다. 그런 다음 <see langword="GetBytes" /> 또는 <see langword="GetChars" /> 메서드를 사용하여 읽기 작업을 시작할 바이트 위치와 반환될 데이터의 제한된 버퍼 크기를 지정할 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">쿼리는 단일 결과 집합을 반환합니다.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">쿼리가 첫 번째 결과 집합의 단일 행을 반환해야 합니다. 쿼리를 실행하면 데이터베이스 상태에 영향을 미칠 수 있습니다. 일부 .NET Framework 데이터 공급자에서는 이 정보를 사용하여 명령의 성능을 최적화할 수도 있습니다. <see cref="F:System.Data.CommandBehavior.SingleRow" /> 개체의 <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> 메서드를 사용하여 <see cref="T:System.Data.OleDb.OleDbCommand" />를 지정할 때 .NET Framework Data Provider for OLE DB에서는 OLE DB <see langword="IRow" /> 인터페이스가 사용 가능하면 이 인터페이스를 사용하여 바인딩을 수행하고, 그렇지 않으면 <see langword="IRowset" /> 인터페이스를 사용합니다. SQL 문이 단일 행만 반환해야 하는 경우 <see cref="F:System.Data.CommandBehavior.SingleRow" />를 지정하여 애플리케이션의 성능을 향상시킬 수도 있습니다. 여러 결과 집합을 반환해야 하는 쿼리를 실행할 경우 <see langword="SingleRow" />를 지정할 수 있습니다.  이 경우 여러 결과 집합 SQL 쿼리와 단일 행이 둘 다 지정되어 있으면 반환된 결과에 첫 번째 결과 집합의 첫 번째 행만 포함됩니다. 쿼리의 나머지 결과 집합은 반환되지 않습니다.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">명령 문자열을 해석하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">저장 프로시저의 이름입니다.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">테이블의 이름입니다.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">SQL 텍스트 명령입니다. 이 속성의 기본값입니다.</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">텍스트 명령에 있는 정규화된 테이블 이름에서 카탈로그 이름의 위치를 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">카탈로그 이름의 위치가 텍스트 명령에서 정규화된 테이블 이름의 스키마 부분 이후임을 나타냅니다. <c>End</c>와 <c>Start</c>는 함께 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">카탈로그 이름의 위치가 텍스트 명령에서 정규화된 테이블 이름의 스키마 부분 이전임을 나타냅니다. <c>Start</c>와 <c>End</c>는 함께 사용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">
        <see cref="T:System.Data.DataSet" />을 채우고 데이터 소스를 업데이트하는 데 사용되는 SQL 명령 집합 및 데이터베이스 연결을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">같은 형식의 기존 개체에서 <see cref="T:System.Data.Common.DataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">새 <see cref="T:System.Data.Common.DataAdapter" />를 만드는 데 사용되는 <see cref="T:System.Data.Common.DataAdapter" /> 개체입니다.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">채우기 작업을 수행하는 동안 <see cref="T:System.Data.DataTable" />에 추가된 <see cref="T:System.Data.DataRow" />에 대해 <see cref="M:System.Data.DataRow.AcceptChanges" />가 호출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.AcceptChanges" />에서 <see cref="T:System.Data.DataRow" />가 호출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.AcceptChanges" />를 수행하는 동안 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />가 호출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.AcceptChanges" />를 수행하는 동안 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />가 호출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataAdapter" />의 인스턴스 복사본을 만듭니다.</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">복제된 <see cref="T:System.Data.Common.DataAdapter" />의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">행을 업데이트하는 동안 오류가 발생할 때 예외를 생성할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">예외를 생성하지 않고 업데이트를 계속하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">새 <see cref="T:System.Data.Common.DataTableMappingCollection" />를 만듭니다.</summary>
      <returns vsli:raw="A new table mapping collection.">새 테이블 매핑 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DataAdapter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataSet" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" />과 <see cref="T:System.Data.DataSet" /> 이름을 사용하여 지정된 범위에서 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">레코드로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">소스 테이블의 이름을 나타내는 문자열입니다.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" />의 인스턴스입니다.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">레코드 시작의 인덱스(0부터 시작)입니다.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">최대 레코드 수를 나타내는 정수입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 이름 및 지정된 <see cref="T:System.Data.DataTable" />를 사용하여 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.IDataReader" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">레코드로 채울 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" />의 인스턴스입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">
        <see cref="T:System.Data.DataTable" /> 개체 컬렉션의 지정된 범위에서 데이터 소스의 행과 일치하도록 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">레코드로 채울 <see cref="T:System.Data.DataTable" /> 개체의 컬렉션입니다.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" />의 인스턴스입니다.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">레코드 시작의 인덱스(0부터 시작)입니다.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">최대 레코드 수를 나타내는 정수입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">채우기 작업 도중에 오류가 발생할 때 반환됩니다.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">어댑터가 <see cref="T:System.Data.LoadOption" />에서 <see cref="T:System.Data.DataTable" />을 채우는 방법을 결정하는 <see cref="T:System.Data.Common.DbDataReader" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">
        <see cref="T:System.Data.LoadOption" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에 <see cref="T:System.Data.DataSet" />을 추가하고 지정된 <see cref="T:System.Data.SchemaType" />을 기반으로 데이터 소스의 스키마와 일치하도록 스키마를 구성합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">데이터 소스에서 스키마로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">데이터 소스에서 반환된 스키마 정보가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에 <see cref="T:System.Data.DataSet" />을 추가합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에서 채울 <see cref="T:System.Data.IDataReader" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">테이블 매핑에 사용할 소스 테이블의 이름입니다.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" />을 채울 때 데이터 소스로 사용할 <see cref="T:System.Data.DataTable" />입니다.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 추가된 <see cref="T:System.Data.DataSet" /> 개체의 컬렉션에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에 <see cref="T:System.Data.DataSet" />을 추가합니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에서 채울 <see cref="T:System.Data.IDataReader" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" />을 채울 때 데이터 소스로 사용할 <see cref="T:System.Data.DataTable" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">데이터 소스에서 반환된 스키마 정보가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">SQL SELECT 문을 실행할 때 사용자가 설정한 매개 변수를 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">사용자가 설정한 매개 변수를 포함하는 <see cref="T:System.Data.IDataParameter" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">
        <see cref="T:System.Data.Common.DataTableMappingCollection" />이 만들어졌는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMappingCollection" />이 만들어졌으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">들어오는 데이터와 일치하는 테이블이나 열이 없는 경우 수행할 동작을 결정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">
        <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나입니다. 기본값은 <see langword="Passthrough" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">설정된 값이 <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">기존 <see cref="T:System.Data.DataSet" /> 스키마가 들어오는 데이터와 일치하지 않는 경우 수행할 동작을 결정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다. 기본값은 <see langword="Add" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">설정된 값이 <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">
        <see langword="Fill" />을 수행하는 동안 오류가 발생하면 호출됩니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">
        <see cref="T:System.Data.FillErrorEventArgs" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">
        <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />을 기본 상태로 다시 설정하여 <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" />이 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />을 따르도록 합니다.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">공급자별 값이나 공용 CLS 규격 값 중에서 <see langword="Fill" /> 메서드가 반환해야 하는 것을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">
        <see langword="true" /> 메서드가 공급자별 값을 반환해야 하면 <see langword="Fill" />이고, 공용 CLS 규격 값을 반환해야 하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 속성을 유지해야 하는지 여부를 결정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 속성이 유지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 속성을 유지해야 하는지 여부를 결정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 속성이 유지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">하나 이상의 <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 존재하며 유지되어야 하는지 여부를 결정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 하나 이상 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">원본 테이블이 데이터 세트 테이블에 매핑되는 방식을 나타냅니다.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">반환된 레코드와 <see cref="T:System.Data.DataSet" /> 간의 마스터 매핑을 제공하는 컬렉션입니다. 기본값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">소스 테이블과 <see cref="T:System.Data.DataTable" /> 사이에 마스터 매핑을 제공하는 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">반환된 레코드와 <see cref="T:System.Data.DataSet" /> 간의 마스터 매핑을 제공하는 컬렉션입니다. 기본값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">"Table"이라는 <see cref="T:System.Data.DataSet" />의 지정된 <see cref="T:System.Data.DataTable" />에서 삽입, 업데이트 또는 삭제된 각 행에 대해 각각 INSERT, UPDATE 또는 DELETE 문을 호출합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">데이터 소스를 업데이트하는 데 사용된 <see cref="T:System.Data.DataSet" />입니다.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 성공적으로 업데이트된 행의 수를 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">
        <see cref="T:System.Data.Common.DataAdapter" />에서 상속되는 개체의 일반 열 매핑을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">지정된 소스 열 이름과 매핑할 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름으로 <see cref="T:System.Data.DataSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">데이터 소스의 대/소문자 구분 열입니다.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">매핑할 <see cref="T:System.Data.DataSet" />의 대/소문자를 구분하지 않는 열 이름입니다.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" />에서 매핑할 열의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">
        <see cref="T:System.Data.DataSet" />에서 매핑할 열의 이름입니다. 이름은 대/소문자를 구분하지 않습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">
        <see cref="T:System.Data.DataColumn" />와 <see cref="T:System.Data.DataTable" /> 속성을 이용하여 주어진 <see cref="T:System.Data.MissingSchemaAction" />에서 <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />을 가져옵니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">열을 가져올 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">데이터 열의 <see cref="T:System.Type" />입니다.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A data column.">데이터 열입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> 개체를 인스턴스화하지 않고 호출할 수 있는 <see cref="T:System.Data.Common.DataColumnMapping" />의 정적 버전입니다.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">데이터 소스의 대/소문자 구분 열입니다.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">매핑할 <see cref="T:System.Data.DataSet" />의 대/소문자를 구분하지 않는 열 이름입니다.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 인스턴스입니다.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">매핑되는 열의 데이터 형식입니다.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">기존 <see cref="T:System.Data.DataSet" /> 스키마가 들어오는 데이터와 일치하지 않는 경우 수행할 동작을 결정합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">데이터 소스에서 매핑할 열의 이름을 가져오거나 설정합니다. 이름은 대/소문자를 구분합니다.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">데이터 소스의 열 이름(대/소문자 구분)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">현재 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A copy of the current object.">현재 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">현재 <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 이름을 문자열로 변환합니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">문자열인 현재 <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 이름입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">빈 <see cref="T:System.Data.Common.DataColumnMappingCollection" />를 만듭니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체를 추가합니다.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">컬렉션에 추가할 <see langword="DataColumnMapping" /> 개체입니다.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">컬렉션에 추가된 <see langword="DataColumnMapping" /> 개체의 인덱스입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">전달된 개체가 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">소스 열 이름과 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름이 주어지면 <see cref="T:System.Data.DataSet" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">매핑되는 소스 열의 대/소문자 구분 이름입니다.</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">대/소문자를 구분하지 않는 매핑되는 <see cref="T:System.Data.DataSet" /> 열의 이름입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">컬렉션에 추가된 <see langword="DataColumnMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">지정된 <see cref="T:System.Array" />의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see cref="T:System.Array" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">컬렉션에서 모든 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체를 제거합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">주어진 <see cref="T:System.Data.Common.DataColumnMapping" />가 있는 <see cref="T:System.Object" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">
        <see cref="T:System.Object" />인 <see cref="T:System.Data.Common.DataColumnMapping" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">전달된 개체가 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">주어진 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 대/소문자 구분 소스 열 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Array" /> 요소를 복사할 대상 <see cref="T:System.Data.Common.DataColumnMappingCollection" />입니다.</param>
      <param name="index" vsli:raw="The starting index of the array.">배열의 시작 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />의 요소를 지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 요소를 복사할 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">컬렉션에 있는 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of items in the collection.">컬렉션의 항목 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체를 가져옵니다.</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">대/소문자를 구분하지 않는 찾을 <see cref="T:System.Data.DataSet" /> 열의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">지정된 <see cref="T:System.Data.Common.DataColumnMapping" />의 <see cref="T:System.Data.Common.DataColumnMappingCollection" />, 소스 열 이름 및 <see cref="T:System.Data.MissingMappingAction" />를 가져옵니다.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />
      </param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">찾을 대/소문자 구분 소스 열 이름입니다.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 매개 변수가 <see langword="Error" />로 설정되고, 매핑이 지정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 개체를 인스턴스화하지 않고 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 개체를 반환하는 정적 메서드입니다.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />
      </param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">데이터 소스의 대/소문자 구분 열입니다.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">매핑되는 열의 데이터 형식입니다.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 인스턴스입니다.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나입니다.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">기존 <see cref="T:System.Data.DataSet" /> 스키마가 들어오는 데이터와 일치하지 않는 경우 수행할 동작을 결정합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">컬렉션을 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">컬렉션 내의 <see cref="T:System.Object" />인 지정된 <see cref="T:System.Data.Common.DataColumnMapping" />의 위치를 가져옵니다.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">찾을 <see cref="T:System.Object" />인 <see cref="T:System.Data.Common.DataColumnMapping" />입니다.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">컬렉션 내의 <see cref="T:System.Object" />인 지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 의 위치(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" />의 위치입니다.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">소스 열의 이름(대/소문자 구분)입니다.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">지정된 대/소문자 구분 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" />의 위치(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">주어진 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름을 가진 <see cref="T:System.Data.DataSet" />의 지정된 위치를 가져옵니다.</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">대/소문자를 구분하지 않는 찾을 데이터 집합 열의 이름입니다.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">주어진 <see langword="DataSet" /> 열 이름을 가진 지정된 <see cref="T:System.Data.Common.DataColumnMapping" />의 위치(0부터 시작)이거나, <see langword="DataColumnMapping" /> 개체가 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataColumnMapping" />의 지정된 인덱스에 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 개체를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">삽입할 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 개체</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataColumnMapping" />의 지정된 인덱스에 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 개체를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">삽입할 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 개체</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">지정된 인덱스에서 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">찾을 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">소스 열의 이름(대/소문자 구분)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">지정된 <see cref="T:System.Data.Common.DataColumnMapping" />를 컬렉션에서 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">제거할 <see cref="T:System.Data.Common.DataColumnMapping" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">
        <see cref="T:System.Object" />인 <see cref="T:System.Data.Common.DataColumnMapping" />를 컬렉션에서 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">제거할 <see cref="T:System.Object" />인 <see cref="T:System.Data.Common.DataColumnMapping" />입니다.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">지정된 개체가 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">컬렉션에 지정된 개체가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">컬렉션에서 지정된 인덱스를 가진 <see cref="T:System.Data.Common.DataColumnMapping" />개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">지정된 인덱스에 <see cref="T:System.Data.Common.DataColumnMapping" />가 개체가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">컬렉션에서 지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" />개체를 제거합니다.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">대/소문자 구분 소스 열 이름입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 없는 경우</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ICollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.IList" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 읽기 전용이면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The element at the specified index.">지정한 인덱스의 요소입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">소스 열 및 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름을 사용하여 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 개체를 <see cref="T:System.Data.DataSet" />에 추가합니다.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">소스 열의 이름(대/소문자 구분)입니다.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 열의 이름입니다.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">컬렉션에 추가된 ColumnMapping 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체를 가져옵니다.</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">대/소문자를 구분하지 않는 찾을 <see cref="T:System.Data.DataSet" /> 열의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">지정된 <see cref="T:System.Data.Common.DataColumnMapping" /> 열 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">지정된 <see langword="SourceColumn" /> 이름을 가진 <see cref="T:System.Data.IColumnMapping" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="Index of the element.">요소의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">지정된 <see langword="IColumnMapping" /> 이름을 가진 <see langword="SourceColumn" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">소스 테이블과 <see cref="T:System.Data.DataTable" /> 간의 매핑된 관계에 대한 설명을 포함합니다. 이 클래스는 <see cref="T:System.Data.Common.DataAdapter" />을 채울 때 <see cref="T:System.Data.DataSet" />에서 사용됩니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">소스 테이블과  <see cref="T:System.Data.Common.DataTableMapping" /> 이름이 주어지면 소스를 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화힙니다.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">데이터 소스의 대/소문자 구분 소스 테이블 이름입니다.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" />에서 매핑되는 테이블 이름입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">소스 테이블, <see cref="T:System.Data.Common.DataTableMapping" /> 이름 및 <see cref="T:System.Data.DataTable" /> 개체의 배열이 주어지면 <see cref="T:System.Data.Common.DataColumnMapping" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">데이터 소스의 대/소문자 구분 소스 테이블 이름입니다.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" />에서 매핑되는 테이블 이름입니다.</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 배열입니다.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />에 대한 <see cref="T:System.Data.DataTable" />를 가져옵니다.</summary>
      <returns vsli:raw="A data column mapping collection.">데이터 열 매핑 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 테이블 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 테이블 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">지정된 <see cref="T:System.Data.DataColumn" /> 값과 <see cref="T:System.Data.DataTable" />의 이름을 사용하여 지정된 <see cref="T:System.Data.MissingMappingAction" />에서 <see cref="T:System.Data.DataColumn" />을 가져옵니다.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />의 이름입니다.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A data column.">데이터 열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 매개 변수가 <see langword="Error" />로 설정되고, 매핑이 지정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">지정된 열 이름에 대한 <see cref="T:System.Data.DataColumn" /> 개체를 반환합니다.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />의 이름입니다.</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">
        <paramref name="sourceColumn" />의 데이터 형식입니다.</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" />에서 매핑되는 테이블 이름입니다.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나입니다.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">지정된 <see cref="T:System.Data.DataTable" /> 값을 사용하여 지정된 <see cref="T:System.Data.DataSet" />의 현재 <see cref="T:System.Data.MissingSchemaAction" />을 가져옵니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />을 가져오는 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A data table.">데이터 테이블입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">데이터 소스에서 대/소문자 구분 소스 테이블을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">데이터 소스의 대/소문자 구분 소스 테이블 이름입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />에 대한 파생 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <returns vsli:raw="A data column mapping collection.">데이터 열 매핑 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">현재 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">현재 인스턴스의 복사본인 새 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">현재 <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 이름을 문자열로 변환합니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">문자열로 된 현재 <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 이름입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 컬렉션입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">
        <see cref="T:System.Data.Common.DataTableMappingCollection" /> 클래스의 새 인스턴스를 초기화합니다. 이 새 인스턴스는 비어 있습니다. 즉, 여기에는 아직 <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 포함되어 있지 않습니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">테이블 매핑인 <see cref="T:System.Object" />를 컬렉션에 추가합니다.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">컬렉션에 추가할 <see langword="DataTableMapping" /> 개체입니다.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">컬렉션에 추가된 <see langword="DataTableMapping" /> 개체의 인덱스입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">전달된 개체가 <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">소스 테이블 이름과 <see cref="T:System.Data.Common.DataTableMapping" /> 테이블 이름이 주어지면 <see cref="T:System.Data.DataSet" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">매핑할 소스 테이블의 대/소문자 구분 이름입니다.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">대/소문자를 구분하지 않는 매핑되는 <see cref="T:System.Data.DataSet" /> 테이블의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">컬렉션에 추가된 <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">지정된 <see cref="T:System.Array" />의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">컬렉션에 추가할 값의 <see cref="T:System.Array" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">컬렉션에서 모든 <see cref="T:System.Data.Common.DataTableMapping" /> 개체를 제거합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">
        <see cref="T:System.Object" />인 <see cref="T:System.Data.Common.DataTableMapping" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 컬렉션에 지정된 <see cref="T:System.Data.Common.DataTableMapping" />이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">지정된 소스 테이블 이름을 가진 <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 포함되어 있는 대/소문자 구분 소스 테이블 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 이 소스 테이블 이름을 가진 <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">
        <see cref="T:System.Data.Common.DataTableMappingCollection" />의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Array" /> 요소를 복사할 <see cref="T:System.Data.Common.DataTableMappingCollection" />입니다.</param>
      <param name="index" vsli:raw="The starting index of the array.">배열의 시작 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">
        <see cref="T:System.Data.Common.DataTableMapping" />의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 요소를 복사할 <see cref="T:System.Data.Common.DataTableMappingCollection" />입니다.</param>
      <param name="index" vsli:raw="The starting index of the array.">배열의 시작 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">컬렉션에 있는 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">컬렉션에 있는 <see langword="DataTableMapping" /> 개체 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 테이블 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체를 가져옵니다.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">대/소문자를 구분하지 않는 찾을 <see cref="T:System.Data.DataSet" /> 테이블의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 테이블 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">컬렉션을 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">주어진 <see cref="T:System.Data.Common.DataColumnMapping" />을 사용하여 지정된 소스 테이블 이름과 <see cref="T:System.Data.DataSet" /> 테이블 이름을 가진 <see cref="T:System.Data.MissingMappingAction" /> 개체를 가져옵니다.</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">검색할 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 컬렉션입니다.</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">매핑된 소스 테이블의 대/소문자 구분 이름입니다.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">대/소문자를 구분하지 않는 매핑된 <see cref="T:System.Data.DataSet" /> 테이블의 이름입니다.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 매개 변수가 <see langword="Error" />로 설정되고, 매핑이 지정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">컬렉션 내의 지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 위치를 가져옵니다.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">찾을 <see cref="T:System.Object" /> 개체인 <see cref="T:System.Data.Common.DataTableMapping" />입니다.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">컬렉션 내의 지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 위치(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">지정된 소스 테이블 이름을 가진 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 위치입니다.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)입니다.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">지정된 소스 테이블 이름을 가진 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 위치(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 테이블 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체의 위치입니다.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">대/소문자를 구분하지 않는 찾을 <see langword="DataSet" /> 테이블의 이름입니다.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">주어진 <see cref="T:System.Data.Common.DataTableMapping" /> 테이블 이름을 가진 <see cref="T:System.Data.DataSet" /> 개체의 위치(0부터 시작)이거나, <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataTableMapping" />의 지정된 인덱스에 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 개체를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">삽입할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">삽입할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataTableMapping" />의 지정된 인덱스에 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 개체를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">삽입할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">삽입할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">지정된 인덱스에서 <see cref="T:System.Data.Common.DataTableMapping" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">반환할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">지정된 소스 테이블 이름을 가진 <see cref="T:System.Data.Common.DataTableMapping" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">지정된 소스 테이블 이름을 가진 <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 개체를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Data.Common.DataTableMapping" /> 개체를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">지정된 개체가 <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">컬렉션에 지정된 개체가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">컬렉션에서 지정된 인덱스에 위치한 <see cref="T:System.Data.Common.DataTableMapping" /> 개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.Common.DataTableMapping" /> 개체의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 지정된 인덱스와 함께 존재하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">컬렉션에서 지정된 소스 테이블 이름을 가진 <see cref="T:System.Data.Common.DataTableMapping" />개체를 제거합니다.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">찾을 대/소문자 구분 소스 테이블 이름입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체가 지정된 소스 테이블 이름과 함께 존재하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ICollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.IList" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.IList" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 읽기 전용이면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">컬렉션에서 지정한 인덱스에 있는 항목을 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">가져오거나 설정할 항목의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The element at the specified index.">지정한 인덱스의 요소입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">컬렉션에 테이블 매핑을 추가합니다.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)입니다.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> 테이블의 이름입니다.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">새로 매핑된 <see cref="T:System.Data.ITableMapping" /> 개체에 대한 참조를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">지정된 <see cref="T:System.Data.DataSet" /> 테이블 이름을 가진 TableMapping 개체를 가져옵니다.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">컬렉션 내의 <see langword="DataSet" /> 테이블 이름입니다.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">지정된 <see langword="DataSet" /> 테이블 이름을 가진 TableMapping 개체를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">지정된 <see cref="T:System.Data.ITableMapping" /> 이름을 가진 <see cref="P:System.Data.ITableMapping.SourceTable" />의 인스턴스를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" />의 <see langword="SourceTable" /> 이름입니다.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">지정된 <see langword="SourceTable" /> 이름을 가진 <see cref="T:System.Data.ITableMapping" />의 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">데이터 원본 내의 열을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">
        <see langword="DBNull" /> 값이 이 열에서 허용되는지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. <see langword="DBNull" /> 값이 이 열에서 허용되는지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />(Visual Basic의 경우 <see langword="Nothing" />)로 설정할 수 있습니다.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <see langword="DBNull" /> 값이 이 열에서 허용되는 경우 <see langword="true" />를 반환하고, 그러지 않은 경우 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">데이터 원본과 연결된 카탈로그 이름을 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 카탈로그 이름으로 설정하거나 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">데이터 원본과 연결된 카탈로그 이름입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">기본 열 이름을 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 열 이름으로 설정하거나 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">기본 열 이름입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">데이터 원본과 연결된 스키마 이름을 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 스키마 이름으로 설정하거나 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">데이터 원본과 연결된 스키마 이름입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">열과 연결된 서버 이름을 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 서버 이름으로 설정하거나 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">열과 연결된 서버 이름입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">스키마의 테이블 이름을 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 테이블 이름으로 설정하거나 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">스키마의 테이블 이름입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우<see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">열 이름을 가져옵니다. 파생 클래스에서 재정의된 경우 열 이름으로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The name of the column.">열 이름입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">데이터 원본 행의 열 위치(서수)를 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 가져옵니다. 열 위치를 지정하기 위해 <see langword="int32" /> 값으로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">열 서수에 대한 <see langword="int32" /> 값입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">열 크기를 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 열 크기를 지정하기 위해 <see langword="int32" /> 값으로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" /> 열 크기에 대 한 값 이거나 null 참조 (<see langword="Nothing" /> Visual basic에서) 값이 설정 된 경우.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">열에 저장된 데이터의 형식을 가져옵니다. 파생 클래스에서 재정의된 경우 열의 데이터 형식을 나타내는 <see cref="T:System.Type" /> 개체로 설정할 수 있습니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">열에 포함된 데이터 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">데이터 형식의 이름을 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 데이터 형식 이름으로 설정하거나 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">데이터 형식 이름입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열에 별칭이 지정되어 있는지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열에 별칭이 지정되어 있는지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열에 별칭이 지정되어 있으면 <see langword="true" />를 반환하고, 그러지 않으면 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열의 값이 자동으로 증가하는지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열의 값이 자동으로 증가하는지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />(Visual Basic의 경우 <see langword="Nothing" />)로 설정할 수 있습니다.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열의 값이 자동으로 증가하는 경우 <see langword="true" />를 반환하고, 그러지 않은 경우 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열이 식인지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열이 식인지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열이 식이면 <see langword="true" />를 반환하고, 그러지 않으면 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열이 숨겨져 있는지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열이 숨겨져 있는지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열이 숨겨져 있으면 <see langword="true" />를 반환하고, 그러지 않으면 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열이 ID인지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열이 ID인지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열이 ID이면 <see langword="true" />를 반환하고, 그러지 않으면 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열이 키인지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열이 키인지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열이 키인 경우 <see langword="true" />를 반환하고, 그렇지 않은 경우 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열에 Long 데이터가 포함되는지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열에 Long 데이터가 포함되는지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열에 Long 데이터가 포함되는 경우 <see langword="true" />를 반환하고, 그러지 않는 경우 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열이 읽기 전용인지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열이 읽기 전용인지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">열이 읽기 전용이면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">이 열에 고유한 제약 조건이 적용되는지를 나타내는 null 허용 부울 값을 가져오거나, 값이 설정되어 있지 않은 경우 <see langword="null" />을 반환합니다. 이 열에 고유한 제약 조건이 적용되는지를 나타내는 <see langword="true" /> 또는 <see langword="false" />로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다(Visual Basic의 경우 <see langword="Nothing" />).</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">이 열에 고유한 제약 조건이 적용되는 경우 <see langword="true" />를 반환하고, 그러지 않은 경우 <see langword="false" />를 반환합니다. 값이 설정되지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">열 속성 이름을 기반으로 개체를 가져옵니다.</summary>
      <param name="property" vsli:raw="The column property name.">열 속성 이름입니다.</param>
      <returns vsli:raw="The object based on the column property name.">열 속성 이름을 기반으로 하는 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">열 데이터의 전체 자릿수를 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 열 데이터의 전체 자릿수를 지정하기 위해 <see langword="int32" /> 값으로 설정하거나, 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" /> 데이터가 숫자인 경우 열 데이터의 전체 자릿수를 지정 하는 값, null 참조 (<see langword="Nothing" /> Visual basic에서) 값이 설정 된 경우.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">
        <see langword="null" /> 또는 열 데이터의 소수 자릿수를 반환하는 null 허용 <see langword="int32" /> 값을 가져옵니다. 파생 클래스에서 재정의된 경우 열 데이터의 소수 자릿수에 대해 <see langword="null" /> 또는 <see langword="int32" /> 값으로 설정할 수 있습니다.</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)이고, 그렇지 않고 데이터가 숫자인 경우 열 데이터의 소수 자릿수를 지정하는 <see langword="int32" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">열의 데이터 형식을 나타내는 <see cref="T:System.Type" /> 개체의 정규화된 어셈블리 이름을 가져옵니다. 값이 설정되어 있지 않은 경우 <see langword="null" />입니다. 정규화된 어셈블리 이름으로 설정하거나 파생 클래스에서 재정의된 경우 <see langword="null" />로 설정할 수 있습니다.</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">열의 데이터 형식을 나타내는 <see cref="T:System.Type" /> 개체의 정규화된 어셈블리 이름입니다. 값이 설정되어 있지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">SQL 문이나 데이터 소스에 대해 실행할 저장 프로시저를 나타냅니다. 명령을 나타내는 데이터베이스 관련 클래스의 기본 클래스를 제공합니다. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> 개체의 인스턴스를 생성합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.DbCommand" />의 실행을 취소하려고 합니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">파생 클래스에서 재정의되는 경우 데이터 소스에 대해 실행할 텍스트 명령을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">실행할 텍스트 명령입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">파생 클래스에서 재정의되는 경우 명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">명령이 실행될 때까지 대기하는 시간(초)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">파생 클래스에서 재정의되는 경우 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 속성을 해석하는 방법을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">명령 문자열을 해석 하는 방법을 지정 하는 열거형 값 중 하나입니다. 기본값은 <see langword="Text" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">이 <see cref="T:System.Data.Common.DbConnection" />에서 사용하는 <see cref="T:System.Data.Common.DbCommand" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The connection to the data source.">데이터 원본에 대한 연결입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.DbParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Data.Common.DbCommand" />에 사용되는 <see cref="T:System.Data.Common.DbConnection" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The connection to the data source.">데이터 원본에 대한 연결입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.DbParameter" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 문 또는 저장 프로시저의 매개 변수</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Data.Common.DbCommand" /> 개체가 실행되는 <see cref="P:System.Data.Common.DbCommand.DbTransaction" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET 데이터 공급자의 명령 개체가 실행 되는 트랜잭션입니다. 기본값은 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">파생 클래스에서 재정의되는 경우 명령 개체를 사용자 지정된 인터페이스 제어에서 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">명령 개체를 컨트롤에 표시해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">명령 개체를 비동기적으로 삭제합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">파생 클래스에서 재정의되는 경우 연결에 대해 명령 텍스트를 실행합니다.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">
        <see cref="T:System.Data.CommandBehavior" />의 인스턴스입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">
        <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">공급자는 <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> 오버로드에 기본값이 아닌 구현을 제공하도록 이 메서드를 구현해야 합니다.  
기본 구현은 동기 <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> 메서드를 호출하고, 호출 스레드를 차단하면서 완료된 작업을 반환합니다. 기본 구현은 이미 취소된 취소 토큰을 전달하는 경우 취소된 작업을 반환합니다. ExecuteReader에서 throw되는 예외는 반환된 Task Exception 속성을 통해 전달됩니다.  
이 메서드는 조기에 취소할 작업을 요청하는 데 사용할 수 있는 취소 토큰을 허용합니다. 구현은 이 요청을 무시할 수 있습니다.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">문 실행 및 데이터 검색을 위한 옵션입니다.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">취소 요청을 모니터링할 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">
        <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">파생 클래스에서 재정의되는 경우 연결 개체에 대해 SQL 문을 실행합니다.</summary>
      <returns vsli:raw="The number of rows affected.">영향을 받은 행 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">연결 개체에 대해 SQL 문을 실행하는 비동기 버전의 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />입니다.  
CancellationToken.None을 사용하여 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />를 호출합니다.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">
        <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />의 비동기 버전입니다. 공급자는 적절한 구현을 재정의해야 합니다. 취소 토큰은 선택적으로 무시될 수 있습니다.  
기본 구현은 동기 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> 메서드를 호출하고, 호출 스레드를 차단하면서 완료된 작업을 반환합니다. 기본 구현은 이미 취소된 취소 토큰을 전달하는 경우 취소된 작업을 반환합니다.  <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />에서 throw되는 예외는 반환된 Task Exception 속성을 통해 전달됩니다.  
반환된 작업이 완료될 때까지 <see langword="DbCommand" /> 개체의 다른 메서드 및 속성을 호출하지 마십시오.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">취소 요청을 모니터링할 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">
        <see cref="P:System.Data.Common.DbCommand.CommandText" />에 대해 <see cref="P:System.Data.Common.DbCommand.Connection" />를 실행하고 <see cref="T:System.Data.Common.DbDataReader" />를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">
        <see cref="P:System.Data.Common.DbCommand.CommandText" />에 대해 <see cref="P:System.Data.Common.DbCommand.Connection" />를 실행하고 <see cref="T:System.Data.Common.DbDataReader" /> 값 중 하나를 사용하여 <see cref="T:System.Data.CommandBehavior" />를 반환합니다.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">명령 동작을 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 개체</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />에 대해 <see cref="P:System.Data.Common.DbCommand.CommandText" />를 실행하고 <see cref="P:System.Data.Common.DbCommand.Connection" />를 반환하는 <see cref="T:System.Data.Common.DbDataReader" />의 비동기 버전입니다.  
CancellationToken.None을 사용하여 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 호출합니다.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">
        <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />에 대해 <see cref="P:System.Data.Common.DbCommand.CommandText" />를 실행하고 <see cref="P:System.Data.Common.DbCommand.Connection" />를 반환하는 <see cref="T:System.Data.Common.DbDataReader" />의 비동기 버전입니다.  
<see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 호출합니다.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">명령 동작을 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">
        <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 호출합니다.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">명령 동작을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">취소 요청을 모니터링할 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">
        <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />에 대해 <see cref="P:System.Data.Common.DbCommand.CommandText" />를 실행하고 <see cref="P:System.Data.Common.DbCommand.Connection" />를 반환하는 <see cref="T:System.Data.Common.DbDataReader" />의 비동기 버전입니다. 이 메서드는 작업을 취소하지 않아야 한다는 알림을 전파합니다.  
<see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 호출합니다.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">취소 요청을 모니터링할 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">
        <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">파생 클래스에서 재정의되는 경우 쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 반환합니다. 다른 모든 열과 행은 무시됩니다.</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">결과 집합의 첫 번째 행의 첫 번째 열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 반환하는 <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />의 비동기 버전입니다. 다른 모든 열과 행은 무시됩니다.  
CancellationToken.None을 사용하여 <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />를 호출합니다.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">
        <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />의 비동기 버전입니다. 공급자는 적절한 구현을 재정의해야 합니다. 취소 토큰은 선택적으로 무시될 수 있습니다.  
기본 구현은 동기 <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> 메서드를 호출하고, 호출 스레드를 차단하면서 완료된 작업을 반환합니다. 기본 구현은 이미 취소된 취소 토큰을 전달하는 경우 취소된 작업을 반환합니다. ExecuteScalar에서 throw되는 예외는 반환된 Task Exception 속성을 통해 전달됩니다.  
반환된 작업이 완료될 때까지 <see langword="DbCommand" /> 개체의 다른 메서드 및 속성을 호출하지 마십시오.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">취소 요청을 모니터링할 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">
        <see cref="T:System.Data.Common.DbParameter" /> 개체의 컬렉션을 가져옵니다. 매개 변수에 대한 자세한 내용은 매개 변수 및 매개 변수 데이터 형식 구성을 참조하세요.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 문 또는 저장 프로시저의 매개 변수</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">파생 클래스에서 재정의되는 경우 데이터 소스에 대해 명령의 준비된(또는 컴파일된) 버전을 만듭니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">데이터 소스에 대해 명령의 준비된(또는 컴파일된) 버전을 비동기적으로 만듭니다.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;." />
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.IDbConnection" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The connection to the data source.">데이터 원본에 대한 연결입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">
        <see cref="T:System.Data.IDbDataParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">
        <see langword="IDbDataParameter" /> 개체</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="P:System.Data.IDbCommand.Connection" />에 대해 <see cref="P:System.Data.IDbCommand.CommandText" />를 실행하고 <see cref="T:System.Data.IDataReader" />를 빌드합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 개체</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="P:System.Data.IDbCommand.Connection" />에 대해 <see cref="P:System.Data.IDbCommand.CommandText" />를 실행하고 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.IDataReader" />를 빌드합니다.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">명령 동작을 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">
        <see cref="T:System.Data.IDataParameterCollection" />를 가져옵니다.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 문 또는 저장 프로시저의 매개 변수</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">이 <see cref="T:System.Data.Common.DbCommand" /> 개체를 실행할 <see cref="P:System.Data.Common.DbCommand.DbTransaction" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET Framework 데이터 공급자의 <see langword="Command" /> 개체가 실행되는 트랜잭션입니다. 기본값은 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">이 <see cref="T:System.Data.Common.DbCommand" /> 개체를 실행할 <see cref="T:System.Data.Common.DbTransaction" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET Framework 데이터 공급자의 <see langword="Command" /> 개체가 실행되는 트랜잭션입니다. 기본값은 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.DbDataAdapter" />의 Update 메서드에서 사용될 때 명령 결과가 <see cref="T:System.Data.DataRow" />에 적용되는 방법을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">명령 결과가 적용 되는 방법을 나타내는 열거형 값 중 하나입니다. 명령이 자동으로 생성되지 않으면 기본값은 <see langword="Both" />입니다. 그러면 기본값은 <see langword="None" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">관련 데이터베이스를 사용하여 <see cref="T:System.Data.DataSet" />에 변경한 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성합니다. 이 클래스는 상속될 수만 있는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스에서 상속하는 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 공급자 구현에서 추가 매개 변수 속성을 처리할 수 있도록 합니다.</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">추가 수정 사항이 적용될 <see cref="T:System.Data.Common.DbParameter" />입니다.</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />에서 제공하는 스키마 테이블의 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />입니다.</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">생성되는 명령의 형식인 INSERT, UPDATE 또는 DELETE입니다.</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">매개 변수가 WHERE 절을 업데이트하거나 삭제하는 데 사용되면 <see langword="true" />이고, 값을 삽입하거나 업데이트하는 데 사용되면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.CatalogLocation" /> 클래스의 인스턴스에 대한 <see cref="T:System.Data.Common.DbCommandBuilder" />을 설정하거나 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">
        <see cref="T:System.Data.Common.CatalogLocation" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 인스턴스에 대한 카탈로그 구분 기호로 사용되는 문자열을 설정하거나 가져옵니다.</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 인스턴스에서 사용할 카탈로그 구분 기호를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.ConflictOption" />가 사용할 <see cref="T:System.Data.Common.DbCommandBuilder" />을 지정합니다.</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">이 <see cref="T:System.Data.ConflictOption" />의 동작을 설명하는 <see cref="T:System.Data.Common.DbCommandBuilder" /> 값 중 하나를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">Transact-SQL 문을 자동으로 생성할 <see cref="T:System.Data.Common.DbDataAdapter" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbCommandBuilder" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">선택적으로 매개 변수 이름에 열을 사용하여 데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">
        <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 <c>@p1</c>, <c>@p2</c> 등을 생성합니다.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">선택적으로 매개 변수 이름에 열을 사용하여 데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">
        <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 <c>@p1</c>, <c>@p2</c> 등을 생성합니다.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">
        <c>@p#</c> 형식으로 지정된 매개 변수의 이름을 반환합니다. 사용자 지정 명령 작성기를 만들 때 사용합니다.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">매개 변수 이름의 일부로 포함될 수입니다.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">매개 변수 이름의 일부로 지정된 수가 추가된 매개 변수 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">부분 매개 변수 이름이 제공된 경우 전체 매개 변수 이름을 반환합니다.</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">매개 변수의 부분 이름입니다.</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">요청된 부분 매개 변수 이름에 해당하는 전체 매개 변수 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">연결된 SQL 문에서 매개 변수의 자리 표시자를 반환합니다.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">매개 변수 이름의 일부로 포함될 수입니다.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">지정된 수가 추가된 매개 변수 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" />의 스키마 테이블을 반환합니다.</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">해당 스키마 테이블을 검색할 <see cref="T:System.Data.Common.DbCommand" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">특정 <see cref="T:System.Data.DataTable" />의 스키마를 나타내는 <see cref="T:System.Data.Common.DbCommand" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">선택적으로 매개 변수 이름에 열을 사용하여 데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">
        <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 <c>@p1</c>, <c>@p2</c> 등을 생성합니다.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />에 대한 <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, <see cref="T:System.Data.UpdateRowSource" /> 및 <see cref="T:System.Data.Common.DbCommand" /> 속성을 다시 설정합니다.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">명령 작성기가 해당하는 삽입, 업데이트 또는 삭제 명령에 사용할 <see cref="T:System.Data.Common.DbCommand" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">각각의 삽입, 업데이트 또는 삭제 작업에 사용할 <see cref="T:System.Data.Common.DbCommand" /> 인스턴스입니다. null 값을 전달하면 <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> 메서드에서 <see cref="T:System.Data.Common.DbCommand" />와 연결된 Select 명령에 따라 <see cref="T:System.Data.Common.DbCommandBuilder" /> 개체를 만들 수 있습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">올바른 카탈로그 대/소문자로 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">따옴표 붙지 않은 원래 식별자입니다.</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">따옴표를 사용한 식별자입니다. 식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">이름에 공백 또는 예약된 토큰과 같은 문자가 포함된 데이터베이스 개체(예: 테이블 또는 열)를 지정할 때 사용할 시작 문자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">사용할 시작 문자입니다. 기본값은 빈 문자열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">삽입, 업데이트 또는 삭제 명령이 생성된 후에 이 속성을 변경할 수 없는 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">이름에 공백 또는 예약된 토큰과 같은 문자가 포함된 데이터베이스 개체(예: 테이블 또는 열)를 지정할 때 사용할 끝 문자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">사용할 끝 문자입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">이 <see cref="T:System.Data.Common.DbCommandBuilder" />와 연결된 명령을 지웁니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">
        <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 이벤트에 대한 이벤트 처리기를 추가합니다.</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">이벤트에 대한 정보를 포함하는 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 인스턴스입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">스키마 식별자와 다른 식별자 간의 구분 기호로 사용할 문자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The character to be used as the schema separator.">스키마 구분 기호로 사용할 문자입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">UPDATE 문에 모든 열 값이 포함되어 있는지 아니면 변경된 열 값만 포함되어 있는지를 지정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">
        <see cref="T:System.Data.Common.DbCommandBuilder" />가 생성한 UPDATE 문에 모든 열이 포함되면 <see langword="true" />이고, 변경된 열만 포함되면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" />에 대한 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 이벤트를 처리하기 위해 <see cref="T:System.Data.Common.DbDataAdapter" />를 등록합니다.</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">업데이트에 사용할 <see cref="T:System.Data.Common.DbDataAdapter" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">따옴표 붙은 식별자가 제공되는 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">포함된 따옴표를 제거할 식별자입니다.</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">데이터베이스 연결의 핵심 동작을 정의하고 데이터베이스 관련 연결에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">파생 클래스에서 재정의되는 경우 데이터베이스 트랜잭션을 시작합니다.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">사용할 트랜잭션의 격리 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="An object representing the new transaction.">새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">데이터베이스 트랜잭션을 비동기적으로 시작합니다.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">사용할 트랜잭션의 격리 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 새 트랜잭션을 나타내는 개체인 작업입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns vsli:raw="An object representing the new transaction.">새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">사용할 트랜잭션의 격리 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="An object representing the new transaction.">새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">비동기적으로 데이터베이스 트랜잭션을 시작합니다.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">사용할 트랜잭션의 격리 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 새 트랜잭션을 나타내는 개체인 작업입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">비동기적으로 데이터베이스 트랜잭션을 시작합니다.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 새 트랜잭션을 나타내는 개체인 작업입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">파생 클래스에서 재정의되는 경우 열려 있는 연결의 현재 데이터베이스를 변경합니다.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">사용할 연결의 데이터베이스 이름입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">열려 있는 연결의 현재 데이터베이스를 비동기적으로 변경합니다.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">사용할 연결의 데이터베이스 이름입니다.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">파생 클래스에서 재정의되는 경우 데이터베이스에 대한 연결을 닫습니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">데이터베이스에 대한 연결을 비동기적으로 닫습니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">파생 클래스에서 재정의되는 경우 연결을 여는 데 사용되는 문자열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">초기 연결을 설정하는 데 사용되는 연결 문자열입니다. 연결 문자열의 정확한 내용은 이 연결의 특정 데이터 소스에 따라 달라집니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">시도를 종료하고 오류를 생성하기 전까지 연결하기 위해 대기할 시간을 가져옵니다.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">연결이 열리기 전까지 대기할 시간(초)입니다. 기본값은 사용하고 있는 특정 형식의 연결에 따라 결정됩니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">현재 연결과 관련된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 만들고 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">파생 클래스에서 재정의되는 경우 현재 연결과 관련된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 만들고 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">파생 클래스에서 재정의되는 경우 연결이 열린 후에 현재 데이터베이스의 이름을 가져오거나 연결이 열리기 전에 연결 문자열에 지정된 데이터베이스 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">파생 클래스에서 재정의되는 경우 연결할 데이터베이스 서버의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">연결할 데이터베이스 서버의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">이 <see cref="T:System.Data.Common.DbProviderFactory" />의 <see cref="T:System.Data.Common.DbConnection" />를 가져옵니다.</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">데이터 소스 클래스의 공급자 구현에 대한 인스턴스를 만드는 데 사용되는 메서드의 집합입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">연결 개체를 비동기적으로 삭제합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">지정된 트랜잭션에 참여합니다.</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">등록할 기존 <see cref="T:System.Transactions.Transaction" />에 대한 참조입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">이 <see cref="T:System.Data.Common.DbConnection" />의 데이터 소스에 대한 구성표 정보를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">스키마 정보를 포함하는 A <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">스키마 이름에 대해 지정된 문자열을 사용하여 이 <see cref="T:System.Data.Common.DbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">반환할 스키마의 이름을 지정합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">스키마 정보를 포함하는 A <see cref="T:System.Data.DataTable" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" />이 null로 지정되어 있습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">스키마 이름에 대해 지정된 문자열과 제한 값에 대해 지정된 문자열 배열을 사용하여 이 <see cref="T:System.Data.Common.DbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">반환할 스키마의 이름을 지정합니다.</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">요청된 스키마에 대한 제한 값의 집합을 지정합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">스키마 정보를 포함하는 A <see cref="T:System.Data.DataTable" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" />이 null로 지정되어 있습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">
        <see cref="E:System.Data.Common.DbConnection.StateChange" /> 이벤트를 발생시킵니다.</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.StateChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="P:System.Data.Common.DbConnection.ConnectionString" />으로 지정된 설정을 사용하여 데이터베이스 연결을 엽니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="M:System.Data.Common.DbConnection.Open" />으로 지정된 설정을 사용하여 데이터베이스 연결을 여는 <see cref="P:System.Data.Common.DbConnection.ConnectionString" />의 비동기 버전입니다. 이 메서드는 CancellationToken.None을 사용하여 가상 메서드 <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" />를 호출합니다.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">
        <see cref="M:System.Data.Common.DbConnection.Open" />의 비동기 버전입니다. 공급자는 적절한 구현을 재정의해야 합니다. 취소 토큰은 선택적으로 적용될 수 있습니다.  
기본 구현은 동기 <see cref="M:System.Data.Common.DbConnection.Open" /> 호출을 호출하고 완료된 작업을 반환합니다. 기본 구현은 이미 취소된 cancellationToken을 전달하는 경우 취소된 작업을 반환합니다. Open에서 throw되는 예외는 반환된 Task Exception 속성을 통해 전달됩니다.  
반환된 작업이 완료될 때까지 <see langword="DbConnection" /> 개체의 다른 메서드 및 속성을 호출하지 마십시오.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">취소 명령입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">파생 클래스에서 재정의되는 경우 개체가 연결된 서버의 버전을 나타내는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">데이터베이스의 버전입니다. 반환되는 문자열 형식은 사용하고 있는 특정 형식의 연결에 따라 달라집니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">
        <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /> 호출 후에 반환된 작업이 완료되지 않았고 연결이 열려 있지 않은 상태에서 <see cref="P:System.Data.Common.DbConnection.ServerVersion" />이 호출되었습니다.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">연결의 상태를 설명하는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">연결의 상태입니다. 반환되는 문자열 형식은 사용하고 있는 특정 형식의 연결에 따라 달라집니다.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">이벤트 상태가 변경되면 발생합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns vsli:raw="An object that represents the new transaction.">새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">사용할 트랜잭션의 격리 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="An object that represents the new transaction.">새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">현재 연결과 관련된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 만들고 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">연결과 관련된 <see cref="T:System.Data.Common.DbCommand" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">강력한 형식의 연결 문자열 작성기에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다. 선택적으로 ODBC 규칙을 사용하여 값을 인용합니다.</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">{}를 사용하여 필드를 구분하려면 <see langword="true" />이고, 큰따옴표를 사용하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">지정한 키와 값을 가지는 엔트리를 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에 추가합니다.</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에 추가할 키입니다.</param>
      <param name="value" vsli:raw="The value for the specified key.">지정된 키의 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />이 읽기 전용인 경우  
또는 
<see cref="T:System.Data.Common.DbConnectionStringBuilder" />가 고정 크기입니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">기존 <see cref="T:System.Text.StringBuilder" /> 개체에 키 및 값을 효율적이고 안전한 방법으로 추가할 수 있도록 합니다.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">키/값 쌍을 추가할 <see cref="T:System.Text.StringBuilder" />입니다.</param>
      <param name="keyword" vsli:raw="The key to be added.">추가할 키입니다.</param>
      <param name="value" vsli:raw="The value for the supplied key.">제공된 키의 값입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">기존 <see cref="T:System.Text.StringBuilder" /> 개체에 키 및 값을 효율적이고 안전한 방법으로 추가할 수 있도록 합니다.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">키/값 쌍을 추가할 <see cref="T:System.Text.StringBuilder" />입니다.</param>
      <param name="keyword" vsli:raw="The key to be added.">추가할 키입니다.</param>
      <param name="value" vsli:raw="The value for the supplied key.">제공된 키의 값입니다.</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">{}를 사용하여 필드를 구분하려면 <see langword="true" />이고, 큰따옴표를 사용하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">
        <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 속성이 Visual Studio 디자이너에서 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">연결 문자열이 디자이너 내에 표시되는 경우 <see langword="true" />이고, 그러지 않은 경우 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 인스턴스의 콘텐츠를 지웁니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">연결된 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에서 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 컬렉션을 지웁니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />와 연결된 연결 문자열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 내에 포함된 키/값 쌍에서 만든 현재 연결 문자열입니다. 기본값은 빈 문자열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">잘못된 연결 문자열 인수가 제공되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에 특정 키가 들어 있는지 여부를 확인합니다.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에서 찾을 수 있는 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 키가 있는 항목이 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에 포함되어 있으면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">
        <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 속성 내에 포함된 키의 현재 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 인스턴스에 의해 유지 관리되는 연결 문자열 내에 포함된 키의 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">이 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 개체에 있는 연결 정보를 제공된 개체에 있는 연결 정보와 비교합니다.</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">이 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 개체와 비교할 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 개체의 연결 정보가 동일한 연결 문자열을 만들면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">이 <see cref="T:System.Collections.Hashtable" />의 모든 속성에 대한 정보를 사용하여 제공된 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />을 채웁니다.</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">이 <see cref="T:System.Collections.Hashtable" />에 대한 정보를 사용하여 채울 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />의 크기가 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">지정된 키에 연결된 값을 가져오거나 설정합니다.</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">가져오거나 설정할 항목의 키입니다.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">지정한 키와 연결된 값입니다. 지정한 키가 없는 경우 해당 키를 가져오려고 시도하면 null 참조(Visual Basic에서는 <see langword="Nothing" />)이 반환되고, 해당 키를 설정하려고 시도하면 지정한 키를 사용하여 새 요소가 만들어집니다.  
null(Visual Basic에서는 <see langword="Nothing" />) 키를 전달하면 <see cref="T:System.ArgumentNullException" />이 throw됩니다. null 값을 할당하면 키/값 쌍이 제거됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">속성이 설정되어 있으며 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />가 읽기 전용인 경우  
또는 
속성이 설정되어 있고 <paramref name="keyword" />가 컬렉션에 없으며 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />의 크기가 고정된 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />의 키를 포함하는 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />의 키를 포함하는 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">지정된 키를 가진 항목을 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 인스턴스에서 제거합니다.</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">이 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />의 연결 문자열에서 제거할 키/값 쌍의 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">연결 문자열에 키가 존재하여 이를 제거했으면 <see langword="true" />이고, 키가 존재하지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" />가 null(Visual Basic에서는 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />가 읽기 전용이거나 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 크기가 고정된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 인스턴스에 지정된 키가 있는지 여부를 나타냅니다.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에서 찾을 수 있는 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 키가 있는 항목이 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에 포함되어 있으면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">특정 <see cref="T:System.Collections.ICollection" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ICollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ICollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">제공된 키와 값이 있는 요소를 <see cref="T:System.Collections.IDictionary" /> 개체에 추가합니다.</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">추가할 요소의 키로 사용하는 <see cref="T:System.Object" />입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">추가할 요소의 값으로 사용하는 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">
        <see cref="T:System.Collections.IDictionary" /> 개체에 지정한 키를 가진 요소가 포함되어 있는지 여부를 결정합니다.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionary" /> 개체에서 찾을 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 해당 키가 있는 요소가 포함되어 있으면 <see cref="T:System.Collections.IDictionary" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체의 <see cref="T:System.Collections.IDictionary" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체의 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">지정한 키를 가진 요소를 가져오거나 설정합니다.</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">가져오거나 설정할 요소의 키입니다.</param>
      <returns vsli:raw="The element with the specified key.">지정한 키가 있는 요소입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionary" /> 개체에서 지정된 키를 가진 요소를 제거합니다.</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">제거할 요소의 키입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">해당 구성 요소 인스턴스에 대한 사용자 지정 특성의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">해당 개체의 특성이 포함된 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">해당 구성 요소 인스턴스의 클래스 이름을 반환합니다.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">개체의 클래스 이름이거나, 클래스에 이름이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">해당 구성 요소 인스턴스의 이름을 반환합니다.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">개체의 이름이거나, 개체에 이름이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">해당 구성 요소 인스턴스에 대한 형식 변환기를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">해당 개체의 변환기인 <see cref="T:System.ComponentModel.TypeConverter" />이거나, 개체의 <see cref="T:System.ComponentModel.TypeConverter" />가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">해당 구성 요소 인스턴스의 기본 이벤트를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">해당 개체의 기본 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 개체에 이벤트가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">해당 구성 요소 인스턴스의 기본 속성을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">해당 개체의 기본 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 개체에 속성이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">해당 구성 요소 인스턴스에 대한 지정된 형식의 편집기를 반환합니다.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">해당 개체의 편집기를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">해당 개체의 편집기인 지정된 형식의 <see cref="T:System.Object" />이거나, 편집기를 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">해당 구성 요소 인스턴스의 이벤트를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">해당 구성 요소 인스턴스의 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">지정된 특성 배열을 필터로 사용하여 해당 구성 요소 인스턴스의 이벤트를 반환합니다.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">필터로 사용되는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">해당 구성 요소 인스턴스의 필터링된 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">해당 구성 요소 인스턴스의 속성을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">해당 구성 요소 인스턴스의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">특성 배열을 필터로 사용하여 해당 구성 요소 인스턴스의 속성을 반환합니다.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">필터로 사용되는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">해당 구성 요소 인스턴스의 필터링된 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">지정된 속성 설명자가 설명하는 속성이 포함된 개체를 반환합니다.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">소유자가 있는 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">지정된 속성의 소유자를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">이 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />와 관련된 연결 문자열을 반환합니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">현재 <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 속성입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">이 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />에서 제공된 키에 해당하는 값을 검색합니다.</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">검색할 항목의 키입니다.</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">
        <paramref name="keyword" />에 해당하는 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">연결 문자열에 <paramref name="keyword" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" />에 null 값(Visual Basic에서는 <see langword="Nothing" />)이 포함된 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />의 값을 포함하는 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />의 값을 포함하는 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">
        <see cref="T:System.Data.IDbDataAdapter" /> 인터페이스의 구현을 지원합니다. <see cref="T:System.Data.Common.DbDataAdapter" />의 상속자는 강력한 형식을 제공하기 위한 함수 집합을 구현하지만 DataAdapter를 완전히 구현하는 데 필요한 대부분의 기능을 상속합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">DataAdapter 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">같은 형식의 기존 개체에서 <see langword="DataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">새 <see langword="DataAdapter" />를 만드는 데 사용되는 <see langword="DataAdapter" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">현재 일괄 작업에 <see cref="T:System.Data.IDbCommand" />를 추가합니다.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">일괄 작업에 추가할 <see cref="T:System.Data.IDbCommand" />입니다.</param>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" />를 추가하기 전에 일괄 작업에 포함되어 있는 명령 수입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">어댑터에서 일괄 처리를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">일괄 작업에서 <see cref="T:System.Data.IDbCommand" /> 개체를 모두 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">어댑터에서 일괄 처리를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">데이터 소스를 업데이트하는 데 사용된 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 도중에 실행되는 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">명령이 UPDATE, INSERT, DELETE 또는 SELECT 문인지 여부입니다.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">데이터 소스를 업데이트하는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 도중 실행할 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">명령이 UPDATE, INSERT, DELETE 또는 SELECT 문인지 여부입니다.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 개체입니다.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">
        <see cref="T:System.Data.Common.DataAdapter" /> 개체에서 테이블 매핑에 사용하는 기본 이름입니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">데이터 집합에서 레코드를 삭제하기 위한 명령을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbDataAdapter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">현재 일괄 작업을 실행합니다.</summary>
      <returns vsli:raw="The return value from the last command in the batch.">일괄 작업에 있는 마지막 명령의 반환 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" />과 <see cref="T:System.Data.DataSet" /> 이름을 사용하여 지정된 범위에서 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">0부터 시작되는 시작 레코드 번호입니다.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">검색할 수 있는 최대 레코드 수입니다.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">테이블 매핑에 사용할 소스 테이블의 이름입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" />가 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">소스 테이블이 잘못된 경우  
 또는  
 연결이 잘못된 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">연결을 찾을 수 없는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 매개 변수가 0보다 작은 경우  
또는 
<paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">
        <see cref="T:System.Data.DataSet" />과 소스 테이블 이름, 명령 문자열과 명령 동작을 사용하여 지정된 범위에서 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataSet" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">0부터 시작되는 시작 레코드 번호입니다.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">검색할 수 있는 최대 레코드 수입니다.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">테이블 매핑에 사용할 소스 테이블의 이름입니다.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">데이터 소스에서 행을 검색하는 데 사용할 SQL SELECT 문입니다.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 매개 변수가 0보다 작은 경우  
또는 
<paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" />과 <see cref="T:System.Data.DataSet" /> 이름을 사용하여 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">테이블 매핑에 사용할 소스 테이블의 이름입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">
        <see cref="T:System.Data.DataSet" /> 이름을 사용하여 지정된 범위에서 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">테이블 매핑에 사용할 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.DataTable" /> 및 <see cref="T:System.Data.IDbCommand" />를 사용하여 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.CommandBehavior" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">데이터 소스에서 행을 검색하는 데 사용할 SQL SELECT 문입니다.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" />과 <see cref="T:System.Data.DataSet" /> 이름을 사용하여 지정된 범위에서 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">데이터 소스에서 채울 <see cref="T:System.Data.DataTable" /> 개체입니다.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">0부터 시작되는 시작 레코드 번호입니다.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">검색할 수 있는 최대 레코드 수입니다.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">
        <see cref="T:System.Data.IDbCommand" /> 개체를 채우기 위해 실행되는 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">데이터 테이블에서 추가되거나 새로 고쳐진 행의 수입니다.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" />가 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">소스 테이블이 잘못된 경우  
 또는  
 연결이 잘못된 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">연결을 찾을 수 없는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 매개 변수가 0보다 작은 경우  
또는 
<paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">지정된 레코드에서 시작하여 지정된 최대 레코드 수까지 검색하면서 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">0부터 시작되는 시작 레코드 번호입니다.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">검색할 수 있는 최대 레코드 수입니다.</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">데이터 소스에서 채울 <see cref="T:System.Data.DataTable" /> 개체입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 행을 반환하지 않는 문의 영향을 받는 행은 이 값에 포함되지 않습니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">데이터 어댑터를 채우는 데 사용되는 명령의 동작을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">데이터 어댑터를 채우는 데 사용되는 명령의 <see cref="T:System.Data.CommandBehavior" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에 "Table"이라는 <see cref="T:System.Data.DataSet" />을 추가하고 지정된 <see cref="T:System.Data.SchemaType" />을 기반으로 데이터 소스의 스키마와 일치하도록 스키마를 구성합니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">스키마를 삽입할 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">스키마 삽입 방법을 지정하는 <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 추가된 <see cref="T:System.Data.DataSet" /> 개체의 컬렉션에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에 <see cref="T:System.Data.DataSet" />을 추가하고 지정된 <see cref="T:System.Data.SchemaType" />을 기반으로 데이터 소스의 스키마와 일치하도록 스키마를 구성합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">데이터 소스에서 스키마로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">데이터 소스에서 행을 검색하는 데 사용할 SQL SELECT 문입니다.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">테이블 매핑에 사용할 소스 테이블의 이름입니다.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">데이터 소스에서 반환된 스키마 정보가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에 <see cref="T:System.Data.DataSet" />을 추가하고 지정된 <see cref="T:System.Data.SchemaType" />과 <see cref="T:System.Data.DataTable" />을 기반으로 데이터 소스의 스키마와 일치하도록 스키마를 구성합니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">스키마를 삽입할 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">스키마 삽입 방법을 지정하는 <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">테이블 매핑에 사용할 소스 테이블의 이름입니다.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 추가된 <see cref="T:System.Data.DataSet" /> 개체의 컬렉션에 대한 참조입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">가져올 스키마가 들어 있는 소스 테이블을 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />을 기반으로 지정된 <see cref="T:System.Data.SchemaType" />의 스키마를 구성합니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">데이터 소스에서 스키마로 채울 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">데이터 소스에서 반환된 스키마 정보가 들어 있는 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">지정된 <see cref="T:System.Data.DataTable" />, 명령 문자열 및 <see cref="T:System.Data.SchemaType" /> 값을 기반으로 지정된 <see cref="T:System.Data.CommandBehavior" />의 스키마를 구성합니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">데이터 소스에서 스키마로 채울 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">데이터 소스에서 행을 검색하는 데 사용할 SQL SELECT 문입니다.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">데이터 소스에서 반환된 스키마 정보가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">현재 일괄 작업의 명령 중 하나에서 <see cref="T:System.Data.IDataParameter" />를 반환합니다.</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">매개 변수를 검색할 명령의 인덱스입니다.</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">명령에 있는 매개 변수의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">지정된 <see cref="T:System.Data.IDataParameter" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">어댑터에서 일괄 처리를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">보다 큰 일괄 처리 업데이트 내에서 개별 업데이트 시도에 대한 정보를 반환합니다.</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">일괄 작업 내에서 개별 명령의 열 서수(0부터 시작)입니다.</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">일괄 작업 내에서 지정된 명령의 영향을 받는 데이터 저장소의 행 수입니다.</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">지정된 명령을 실행하는 도중 throw된 <see cref="T:System.Exception" />입니다. 예외가 throw되지 않은 경우 <see langword="null" />(Visual Basic의 경우 <see langword="Nothing" />)을 반환합니다.</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">보다 큰 일괄 처리 업데이트 내에서 개별 업데이트 시도에 대한 정보입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">SQL SELECT 문을 실행할 때 사용자가 설정한 매개 변수를 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">사용자가 설정한 매개 변수를 포함하는 <see cref="T:System.Data.IDataParameter" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" />의 일괄 처리를 초기화합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">어댑터에서 일괄 처리를 지원하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">데이터 소스에 새 레코드를 삽입하는 데 사용되는 명령을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />를 수행하는 동안 데이터 집합의 새 행에 대한 레코드를 데이터 소스에 삽입하는 데 사용되는 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">.NET Framework 데이터 공급자의 <see langword="RowUpdated" /> 이벤트를 발생시킵니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.Common.RowUpdatedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">.NET Framework 데이터 공급자의 <see langword="RowUpdating" /> 이벤트를 발생시킵니다.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">데이터 소스에서 레코드를 선택하는 데 사용되는 명령을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" />를 수행하는 동안 데이터 집합에 배치할 레코드를 데이터 소스에서 선택하는 데 사용되는 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">데이터 집합에서 레코드를 삭제하기 위한 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 새 행에 대한 데이터 소스에 레코드를 삽입하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">데이터 소스에서 레코드를 선택하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">데이터 소스에서 레코드를 업데이트하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 수정된 행에 대한 데이터 소스에서 레코드를 업데이트하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">현재 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">이 인스턴스의 복사본인 새 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" />의 일괄 처리를 종료합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">어댑터에서 일괄 처리를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 지정된 배열에서 삽입, 업데이트 또는 삭제된 각 행마다 INSERT, UPDATE 또는 DELETE 문을 각각 실행하여 데이터베이스의 값을 업데이트합니다.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">데이터 소스를 업데이트하는 데 사용되는 <see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 성공적으로 업데이트된 행의 수를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" />가 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">업데이트할 <see cref="T:System.Data.DataRow" />이 없는 경우  
또는 
업데이트할 <see cref="T:System.Data.DataTable" />이 없는 경우  
또는 
소스로 사용할 <see cref="T:System.Data.DataSet" />이 없는 경우</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">지정된 <see cref="T:System.Data.DataSet" /> 개체 배열에서 삽입, 업데이트 또는 삭제된 각 행마다 INSERT, UPDATE 또는 DELETE 문을 각각 실행하여 데이터베이스에 있는 값을 업데이트합니다.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">데이터 소스를 업데이트하는 데 사용되는 <see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">사용할 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 컬렉션입니다.</param>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataSet" />에서 성공적으로 업데이트된 행의 수를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" />가 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">업데이트할 <see cref="T:System.Data.DataRow" />이 없는 경우  
또는 
업데이트할 <see cref="T:System.Data.DataTable" />이 없는 경우  
또는 
소스로 사용할 <see cref="T:System.Data.DataSet" />이 없는 경우</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />에서 삽입, 업데이트 또는 삭제된 각 행마다 INSERT, UPDATE 또는 DELETE 문을 각각 실행하여 데이터베이스에 있는 값을 업데이트합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">데이터 소스를 업데이트하는 데 사용된 <see cref="T:System.Data.DataSet" />입니다.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 성공적으로 업데이트된 행의 수를 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">
        <see cref="T:System.Data.DataTable" /> 이름이 지정된 <see cref="T:System.Data.DataSet" />에서 삽입, 업데이트 또는 삭제된 각 행마다 INSERT, UPDATE 또는 DELETE 문을 각각 실행하여 데이터베이스에 있는 값을 업데이트합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">데이터 소스를 업데이트하는 데 사용할 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">테이블 매핑에 사용할 소스 테이블의 이름입니다.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 성공적으로 업데이트된 행의 수를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" />가 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에서 삽입, 업데이트 또는 삭제된 각 행마다 INSERT, UPDATE 또는 DELETE 문을 각각 실행하여 데이터베이스에 있는 값을 업데이트합니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">데이터 소스를 업데이트하는 데 사용된 <see cref="T:System.Data.DataTable" />입니다.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에서 성공적으로 업데이트된 행의 수를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" />가 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">소스 테이블이 잘못된 경우</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">업데이트할 <see cref="T:System.Data.DataRow" />이 없는 경우  
또는 
업데이트할 <see cref="T:System.Data.DataTable" />이 없는 경우  
또는 
소스로 사용할 <see cref="T:System.Data.DataSet" />이 없는 경우</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">일괄 작업 처리 지원을 활성화하거나 비활성화하는 값을 가져오거나 설정하고 일괄 작업에서 실행할 수 있는 명령의 수를 지정합니다.</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">일괄 작업당 처리할 행의 수입니다.  
  값 
  효과 
  0 
  일괄 작업 크기에는 제한이 없습니다.  

  1 
  일괄 작업 업데이트를 비활성화합니다.  

  &gt; 1 
  <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />개의 작업을 일괄적으로 사용하여 변경 내용이 한 번에 전송됩니다.  

   

 이 1이 아닌 값으로 설정 하는 경우 모든 명령이 연결 된 합니다 <see cref="T:System.Data.Common.DbDataAdapter" /> 있어야 해당 <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> 속성이로 설정 None 또는 OutputParameters합니다. 그렇지 않으면 예외가 throw됩니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">데이터 소스에서 레코드를 업데이트하는 데 사용되는 명령을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />를 수행하는 동안 데이터 집합의 수정된 행에 대한 레코드를 데이터 소스에서 업데이트하는 데 사용되는 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">데이터 소스에서 앞으로만 이동 가능한 행 스트림을 읽습니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 개체를 닫습니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 개체를 비동기적으로 닫습니다.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="The depth of nesting for the current row.">현재 행의 중첩 수준입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataReader" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbDataReader" />에서 사용하는 관리되는 리소스를 해제하고 관리되지 않는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 해제하려면 <see langword="true" />이고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataReader" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 비동기식으로 해제합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">파생 클래스에서 재정의되는 경우 현재 행의 열 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of columns in the current row.">현재 행의 열 수입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">SQL Server의 인스턴스에 대한 현재 연결이 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 부울로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 바이트로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">파생 클래스에서 재정의되는 경우 지정된 인덱스에서 시작하는 지정된 열에서 지정된 바이트 수를 읽은 다음 버퍼의 지정된 위치에서 시작하는 버퍼에 씁니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">읽기 작업을 시작하는 행 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">데이터가 복사될 버퍼의 인덱스입니다.</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">읽을 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of bytes read.">읽은 실제 바이트 수입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 단일 문자로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">파생 클래스에서 재정의되는 경우 지정된 인덱스에서 시작하는 지정된 열에서 지정된 수의 문자를 읽은 다음 지정된 위치에서 시작하는 버퍼에 씁니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">읽기 작업을 시작하는 행 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">데이터가 복사될 버퍼의 인덱스입니다.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">읽을 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of characters read.">읽은 실제 문자 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">요청된 열의 중첩된 데이터 판독기를 반환합니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="A data reader.">데이터 판독기입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">파생 클래스에서 재정의되는 경우 지정된 열의 데이터 형식 이름을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The name of the data type.">데이터 형식의 이름입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 <see cref="T:System.DateTime" /> 개체로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">요청된 열 서수에 대한 <see cref="T:System.Data.Common.DbDataReader" /> 개체를 반환합니다. 이 개체는 공급자별 구현으로 재정의할 수 있습니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 <see cref="T:System.Decimal" />로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">파생 클래스에서 재정의되는 경우 데이터 판독기에서 행을 반복하는 데 사용할 수 있는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">데이터 판독기에서 행을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">파생 클래스에서 재정의되는 경우 지정된 열의 데이터 형식을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The data type of the specified column.">지정된 열의 데이터 형식입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">지정된 열의 값을 요청된 형식으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">반환될 값의 형식입니다.</typeparam>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는 
데이터를 검색하는 동안 데이터 판독기가 닫혔습니다.  
또는
읽을 준비가 된 데이터가 없습니다(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 <see langword="false" />를 반환함).  
또는
판독기가 순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">데이터베이스에서 반환되는 값이 일치하지 않거나 이 값을 <typeparamref name="T" />에 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">지정된 열의 값을 요청된 형식으로 비동기적으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">반환될 값의 형식입니다.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" />에 지정된 열의 값을 포함하는 작업입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫혔습니다.  
또는
읽을 준비가 된 데이터가 없습니다(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 <see langword="false" />를 반환함).
또는
순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get_*_ 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">데이터베이스에서 반환되는 값이 일치하지 않거나 이 값을 <typeparamref name="T" />에 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">지정된 열의 값을 요청된 형식으로 비동기적으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">반환될 값의 형식입니다.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" />에 지정된 열의 값을 포함하는 작업입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫혔습니다.  
또는
읽을 준비가 된 데이터가 없습니다(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 <see langword="false" />를 반환함).
또는
순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get_*_ 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">데이터베이스에서 반환되는 값이 일치하지 않거나 이 값을 <typeparamref name="T" />에 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 단정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">파생 클래스에서 재정의되는 경우 지정된 열의 값을 GUID(Globally Unique Identifier)로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 32비트 부호 있는 정수로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 64비트 부호 있는 정수로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">파생 클래스에서 재정의될 때 0부터 시작하는 열 서수가 지정된 경우 열 이름을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The name of the specified column.">지정된 열의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">파생 클래스에서 재정의될 때 열 이름이 지정된 경우 열 서수를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">지정된 열의 공급자별 형식을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="A provider-specific .NET type.">공급자별 .NET 형식입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">지정된 열의 값을 공급자별 형식의 인스턴스로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">현재 행의 컬렉션에서 공급자별 특성 열을 모두 가져옵니다.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">특성 열을 복사해 올 <see cref="T:System.Object" />의 배열입니다.</param>
      <returns vsli:raw="The number of instances of elements in the array.">배열에 있는 요소의 인스턴스 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.Common.DbDataReader" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" />가 닫혔습니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">지정된 열에서 데이터를 검색하는 스트림을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="A stream.">스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫힙니다.  
또는
읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)  
또는
데이터 판독기가 순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 열은 <see cref="T:System.IO.Stream" />을 사용한 읽기를 지원하는 이진 유형이 아닙니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 <see cref="T:System.String" />의 인스턴스로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">열에서 데이터를 검색하는 텍스트 판독기를 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="A text reader.">텍스트 판독기입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫힙니다.  
또는
읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)  
또는
데이터 판독기가 순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 열은 <see cref="T:System.IO.TextReader" />를 사용한 읽기를 지원하는 텍스트 유형이 아닙니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 <see cref="T:System.Object" />의 인스턴스로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">파생 클래스에서 재정의되는 경우 개체의 배열을 현재 행의 열 값으로 채웁니다.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">특성 열을 복사해 올 <see cref="T:System.Object" />의 배열입니다.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">배열에 포함된 <see cref="T:System.Object" /> 인스턴스의 수입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Data.Common.DbDataReader" />가 둘 이상의 행을 포함하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" />에 행이 하나 이상 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.DbDataReader" />가 닫혔는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" />가 닫혔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">파생 클래스에서 재정의되는 경우 열이 존재하지 않거나 누락된 값을 포함하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 열이 <see cref="T:System.DBNull" />에 해당하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 비동기적으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">검색할 열입니다(0부터 시작).</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 지정된 열 값이 <see langword="DBNull" />와 같으면 <see langword="true" />, 아니면 <see langword="false" />인 <see cref="T:System.Threading.Tasks.Task`1" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫힙니다.  
또는
읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)  
또는
순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 비동기적으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">검색할 열입니다(0부터 시작).</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 지정된 열 값이 <see langword="DBNull" />와 같으면 <see langword="true" />, 아니면 <see langword="false" />인 <see cref="T:System.Threading.Tasks.Task`1" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫힙니다.  
또는
읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)  
또는
순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는 
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 <see cref="T:System.Object" />의 인스턴스로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">열 인덱스가 범위를 벗어났습니다.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">파생 클래스에서 재정의되는 경우 지정된 열의 값을 <see cref="T:System.Object" />의 인스턴스로 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">지정된 이름의 열을 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">파생 클래스에서 재정의되는 경우 일괄 문의 결과를 읽을 때 판독기를 다음 결과로 비동기로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 집합이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">일괄 문의 결과를 읽을 때 판독기를 다음 결과로 비동기로 이동합니다.</summary>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">더 많은 결과 집합이 있으면 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 <see langword="true" />인 작업이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">일괄 문의 결과를 읽을 때 판독기를 다음 결과로 비동기로 이동합니다.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">취소 명령입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">더 많은 결과 집합이 있으면 <see cref="T:System.Threading.Tasks.Task`1" />의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">파생 클래스에서 재정의하는 경우 판독기를 결과 집합의 다음 레코드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">판독기를 결과 집합의 다음 레코드로 비동기로 이동합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">더 많은 행이 있으면 <see cref="T:System.Threading.Tasks.Task`1" />의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">판독기를 결과 집합의 다음 레코드로 비동기로 이동합니다.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">취소 명령입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">더 많은 행이 있으면 <see cref="T:System.Threading.Tasks.Task`1" />의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">명령 텍스트를 실행하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">파생 클래스에서 재정의되는 경우 SQL 문 실행으로 변경, 삽입 또는 삭제된 행 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">변경, 삽입 또는 삭제된 행의 수입니다. SELECT 문에 대해서는 -1을 반환하고, 영향을 받은 행이 없거나 문이 실패하면 0을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />를 참조하세요.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">필드가 더 많은 원격의 구조화된 데이터를 가리킬 때 사용할 <see cref="T:System.Data.IDataReader" />의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">표시되는 <see cref="T:System.Data.Common.DbDataReader" />의 필드 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of fields that are not hidden.">숨김 상태가 아닌 필드 수입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">이 클래스에는 <see cref="T:System.Data.Common.DbDataReader" />에 대한 열 스키마 확장 메서드가 포함됩니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">
        <see cref="T:System.Data.Common.DbDataReader" />에서 열 스키마를 가져올 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">열 스키마 지원에 대해 확인할 <see cref="T:System.Data.Common.DbDataReader" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" />에서 열 스키마를 가져올 수 있는 경우 <see langword="true" />이고, 그러지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" />에 대한 열 스키마(<see cref="T:System.Data.Common.DbColumn" /> 컬렉션)를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">열 스키마를 반환하는 <see cref="T:System.Data.Common.DbDataReader" />입니다.</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" />에 대한 열 스키마(<see cref="T:System.Data.Common.DbColumn" /> 컬렉션)입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">
        <see cref="T:System.Data.IDataRecord" /> 및 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />를 구현하고 <see cref="T:System.Data.Common.DbEnumerator" />에 대한 데이터 바인딩 지원을 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataRecord" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">현재 레코드 내의 필드 수를 나타냅니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The number of fields within the current record.">현재 레코드 내의 필드 수입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">읽을 데이터 소스에 연결되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">지정된 열의 값에 해당하는 Boolean 값을 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">해당 부울이 <see langword="true" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">지정된 열의 값에 해당하는 바이트 값을 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">지정된 열의 값에 해당하는 바이트 배열을 반환합니다.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">읽기 작업을 시작할 필드 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">바이트 스트림을 읽을 버퍼입니다.</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">읽기 작업을 시작할 <paramref name="buffer" />에 대한 인덱스입니다.</param>
      <param name="length" vsli:raw="The number of bytes to read.">읽을 바이트 수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">지정된 열의 값을 문자로 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">지정된 열의 값에 해당하는 문자 배열을 반환합니다.</summary>
      <param name="i" vsli:raw="Column ordinal.">열 서수입니다.</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">버퍼에 복사할 최대 길이입니다.</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">버퍼 내에서 시작할 지점입니다.</param>
      <param name="length" vsli:raw="Point to start from within the source data.">소스 데이터 내에서 시작할 지점입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">현재 지원되지 않습니다.</summary>
      <param name="i" vsli:raw="Not currently supported.">현재 지원되지 않습니다.</param>
      <returns vsli:raw="Not currently supported.">현재 지원되지 않습니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">백 엔드 데이터 형식의 이름을 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The name of the back-end data type.">백 엔드 데이터 형식의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">지정된 열의 값을 <see cref="T:System.DateTime" /> 개체로 가져옵니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">요청된 열 서수에 대한 <see cref="T:System.Data.Common.DbDataReader" /> 개체를 반환합니다. 이 개체는 공급자별 구현으로 재정의할 수 있습니다.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">지정된 열의 값을 <see cref="T:System.Decimal" /> 개체로 가져옵니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">지정된 열의 값에 해당하는 배정밀도 부동 소수점 숫자를 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">개체의 데이터 형식인 <see cref="T:System.Type" />을 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">지정된 열의 값에 해당하는 단정밀도 부동 소수점 숫자를 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">지정된 필드의 GUID 값을 반환합니다.</summary>
      <param name="i" vsli:raw="The index of the field to return.">반환할 필드의 인덱스입니다.</param>
      <returns vsli:raw="The GUID value of the specified field.">지정된 필드의 GUID 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">지정된 열의 값에 해당하는 16비트 부호 있는 정수를 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">지정된 열의 값에 해당하는 32비트 부호 있는 정수를 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">지정된 열의 값에 해당하는 64비트 부호 있는 정수를 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">지정된 열의 이름을 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The name of the specified column.">지정된 열의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">열 이름을 사용하여 열 서수(0부터 시작)를 반환합니다.</summary>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The column ordinal.">열 서수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">지정된 열의 값을 문자열로 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">지정된 열의 값을 네이티브 형식으로 반환합니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value to return.">반환할 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">현재 레코드의 열 값으로 개체의 배열을 채웁니다.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">특성 필드를 복사할 <see cref="T:System.Object" />의 배열입니다.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">배열에 포함된 <see cref="T:System.Object" /> 인스턴스의 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">존재하지 않는 값을 나타내는 데 사용됩니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 열이 <see cref="T:System.DBNull" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">지정된 열의 값을 지정된 열 서수에 따라 네이티브 형식으로 나타냅니다. 이 속성은 읽기 전용입니다.</summary>
      <param name="i" vsli:raw="The column ordinal.">열 서수입니다.</param>
      <returns vsli:raw="The value at the specified column in its native format.">네이티브 형식으로 나타낸 지정된 열의 값입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">지정된 열의 값을 지정된 열 이름에 따라 네이티브 형식으로 나타냅니다. 이 속성은 읽기 전용입니다.</summary>
      <param name="name" vsli:raw="The column name.">열 이름입니다.</param>
      <returns vsli:raw="The value at the specified column in its native format.">네이티브 형식으로 나타낸 지정된 열의 값입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">해당 구성 요소 인스턴스에 대한 사용자 지정 특성의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">해당 개체의 특성이 들어 있는 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">해당 구성 요소 인스턴스의 클래스 이름을 반환합니다.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">개체의 클래스 이름이거나, 클래스에 이름이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">해당 구성 요소 인스턴스의 이름을 반환합니다.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">개체의 이름이거나, 개체에 이름이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">해당 구성 요소 인스턴스에 대한 형식 변환기를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">해당 개체의 변환기인 <see cref="T:System.ComponentModel.TypeConverter" />이거나, 개체의 <see cref="T:System.ComponentModel.TypeConverter" />가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">해당 구성 요소 인스턴스의 기본 이벤트를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">해당 개체의 기본 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 개체에 이벤트가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">해당 구성 요소 인스턴스의 기본 속성을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">해당 개체의 기본 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 개체에 속성이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">해당 구성 요소 인스턴스에 대한 지정된 형식의 편집기를 반환합니다.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">해당 개체의 편집기를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">해당 개체의 편집기인 지정된 형식의 <see cref="T:System.Object" />이거나, 편집기를 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">해당 구성 요소 인스턴스의 이벤트를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">해당 구성 요소 인스턴스의 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">지정된 특성 배열을 필터로 사용하여 해당 구성 요소 인스턴스의 이벤트를 반환합니다.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">필터로 사용되는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">해당 구성 요소 인스턴스의 필터링된 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">해당 구성 요소 인스턴스의 속성을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">해당 구성 요소 인스턴스의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">특성 배열을 필터로 사용하여 해당 구성 요소 인스턴스의 속성을 반환합니다.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">필터로 사용되는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">해당 구성 요소 인스턴스의 필터링된 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">지정된 속성 설명자가 설명하는 속성이 포함된 개체를 반환합니다.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">소유자가 있는 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">지정된 속성의 소유자를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">로컬 네트워크에서 사용할 수 있는 모든 데이터베이스 서버의 인스턴스를 열거하는 메커니즘을 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">이 클래스에 대한 강력한 형식의 인스턴스가 나타내는 서버의 표시되는 모든 인스턴스에 대한 정보를 포함하는 <see cref="T:System.Data.DataTable" />을 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">연결된 데이터 원본의 표시되는 인스턴스에 대한 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">.NET Framework 데이터 공급자별로 컬렉션에 대한 단순 반복을 지원하는 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 메서드를 표시합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">지정된 데이터 판독기를 사용하여 <see cref="T:System.Data.Common.DbEnumerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">반복할 DataReader입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">지정된 판독기를 사용하여 <see cref="T:System.Data.Common.DbEnumerator" /> 클래스의 새 인스턴스를 초기화하고 데이터를 반복한 후에 판독기를 자동으로 닫을지 여부를 나타냅니다.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">반복할 DataReader입니다.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">자동으로 해당 데이터를 반복한 후 DataReader를 닫으려면 <see langword="true" />이고, 닫지 않으려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">지정된 <see cref="T:System.Data.Common.DbEnumerator" />를 사용하여 <see langword="DataReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">반복할 <see langword="DataReader" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">지정된 <see langword="DataReader" />를 사용하여 <see cref="T:System.Data.Common.DbEnumerator" /> 클래스의 새 인스턴스를 초기화하고 데이터를 반복한 후에 <see langword="DataReader" />를 자동으로 닫을지 여부를 나타냅니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">반복할 <see langword="DataReader" />입니다.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">자동으로 해당 데이터를 반복한 후 <see langword="DataReader" />를 닫으려면 <see langword="true" />이고, 닫지 않으려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns vsli:raw="The current element in the collection.">컬렉션의 현재 요소입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">열거자가 컬렉션의 첫 번째 요소 앞 또는 마지막 요소 뒤에 배치되어 있습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">열거자를 컬렉션의 다음 요소로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">데이터 소스를 위해 throw되는 모든 예외에 대한 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">지정된 serializatoin 정보와 컨텍스트를 사용하여 <see cref="T:System.Data.Common.DbException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Data.Common.DbException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message to display for this exception.">이 예외에 표시할 메시지입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.Common.DbException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message string.">오류 메시지 문자열입니다.</param>
      <param name="innerException" vsli:raw="The inner exception reference.">내부 예외 참조입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">지정된 오류 메시지와 오류 코드를 사용하여 <see cref="T:System.Data.Common.DbException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">예외에 대한 오류 코드입니다.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">잘 알려진 MetaDataCollections에 대한 상수 목록을 제공합니다. DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords 및 제한 사항.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">DataSourceInformation 컬렉션을 나타내는 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 메서드와 함께 사용할 상수입니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">DataTypes 컬렉션을 나타내는 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 메서드와 함께 사용할 상수입니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">MetaDataCollections 컬렉션을 나타내는 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 메서드와 함께 사용할 상수입니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">ReservedWords 컬렉션을 나타내는 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 메서드와 함께 사용할 상수입니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">Restrictions 컬렉션을 나타내는 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 메서드와 함께 사용할 상수입니다.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">
        <see cref="T:System.Data.DataTable" />에 포함된 MetaDataCollection 개체의 열 이름에 사용되는 정적 값을 제공합니다. <see cref="T:System.Data.DataTable" />은 GetSchema 메서드에서 만들어집니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 CollectionName 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 ColumnSize 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 CompositeIdentifierSeparatorPattern 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 CreateFormat 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 CreateParameters 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 DataSourceProductName 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 DataSourceProductVersion 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 DataSourceProductVersionNormalized 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 DataType 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 GroupByBehavior 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 IdentifierCase 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 IdentifierPattern 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsAutoIncrementable 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsBestMatch 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsCaseSensitive 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsConcurrencyType 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsFixedLength 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsFixedPrecisionScale 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsLiteralSupported 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsLong 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsNullable 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsSearchable 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsSearchableWithLike 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 IsUnsigned 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 LiteralPrefix 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 LiteralSuffix 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 MaximumScale 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 MinimumScale 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">GetSchema 메서드에서 MetaDataCollections 컬렉션에 NumberOfIdentifierParts 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">GetSchema 메서드에서 MetaDataCollections 컬렉션에 NumberOfRestrictions 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 OrderByColumnsInSelect 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 ParameterMarkerFormat 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 ParameterMarkerPattern 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 ParameterNameMaxLength 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 ParameterNamePattern 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 ProviderDbType 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 QuotedIdentifierCase 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 QuotedIdentifierPattern 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">GetSchema 메서드에서 ReservedWords 컬렉션에 ReservedWord 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 StatementSeparatorPattern 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 StringLiteralPattern 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">GetSchema 메서드에서 DataSourceInformation 컬렉션에 SupportedJoinOperators 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">GetSchema 메서드에서 DataTypes 컬렉션에 TypeName 열을 만드는 데 사용됩니다.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">
        <see cref="T:System.Data.Common.DbCommand" />에 대한 매개 변수 및 <see cref="T:System.Data.DataSet" /> 열에 대한 해당 매핑(선택적)을 나타냅니다. 매개 변수에 대한 자세한 내용은 매개 변수 및 매개 변수 데이터 형식 구성을 참조하세요.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">매개 변수의 <see cref="T:System.Data.DbType" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">
        <see cref="T:System.Data.DbType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Data.DbType.String" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">속성이 유효한 <see cref="T:System.Data.DbType" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">
        <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본값은 <see langword="Input" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">속성이 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중의 하나로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">null 값이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">
        <see cref="T:System.Data.Common.DbParameter" />의 이름입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">DbType 속성을 원래 설정으로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">
        <see cref="P:System.Data.Common.DbParameter.Value" />가 확인되는 소수점 이하 자릿수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">
        <see cref="P:System.Data.Common.DbParameter.Value" />가 확인되는 소수점 이하 자릿수입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">열에 있는 데이터의 최대 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">열에 있는 데이터의 최대 크기(바이트)입니다. 기본값은 매개 변수 값에서 유추됩니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 매핑되어 <see cref="P:System.Data.Common.DbParameter.Value" />를 로드하거나 반환하기 위해 사용된 소스 열의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.DataSet" />으로 매핑된 소스 열의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">소스 열에 null이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다. 이를 통해 <see cref="T:System.Data.Common.DbCommandBuilder" /> 에서 null 허용 열에 대한 Update 문을 올바르게 생성할 수 있습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">원본 열에 null이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" />를 로드할 때 사용할 <see cref="P:System.Data.Common.DbParameter.Value" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 <see langword="Current" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">이 속성이 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">숫자 매개 변수의 정밀도를 나타냅니다.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">데이터 공급자 <see langword="Parameter" /> 개체의 <see langword="Value" /> 속성을 나타내는 데 사용되는 최대 자릿수입니다. 기본값은 0이며 이는 데이터 공급자가 <see langword="Value" />의 정밀도를 설정함을 나타냅니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Data.IDbDataParameter.Scale" />를 참조하세요.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> 가 확인되는 소수점 이하 자릿수입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">매개 변수의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommand" />와 관련된 매개 변수의 컬렉션에 대한 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbParameterCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">지정된 <see cref="T:System.Data.Common.DbParameter" /> 개체를 <see cref="T:System.Data.Common.DbParameterCollection" />에 추가합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.Common.DbParameter" />의 <see cref="P:System.Data.Common.DbParameter.Value" />입니다.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Data.Common.DbParameter" /> 개체의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">지정된 값을 가진 항목의 배열을 <see cref="T:System.Data.Common.DbParameterCollection" />에 추가합니다.</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.Common.DbParameter" /> 형식의 값으로 구성된 배열입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameterCollection" />에서 모든 <see cref="T:System.Data.Common.DbParameter" /> 값을 제거합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">지정된 <see cref="T:System.Data.Common.DbParameter" />를 가진 <see cref="P:System.Data.Common.DbParameter.Value" />가 컬렉션에 포함되는지 여부를 나타냅니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">컬렉션에서 찾을 <see cref="P:System.Data.Common.DbParameter.Value" />의 <see cref="T:System.Data.Common.DbParameter" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" />가 컬렉션에 있으면 <see langword="true" />이고, 있지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">지정된 이름을 갖는 <see cref="T:System.Data.Common.DbParameter" />가 컬렉션에 있는지 여부를 나타냅니다.</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">컬렉션에서 검색할 <see cref="T:System.Data.Common.DbParameter" />의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" />가 컬렉션에 있으면 <see langword="true" />이고, 있지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">지정된 인덱스에서 시작하는 컬렉션에 항목 배열을 복사합니다.</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">컬렉션에 복사할 항목의 배열입니다.</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">항목을 복사할 컬렉션의 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">컬렉션의 항목 수를 지정합니다.</summary>
      <returns vsli:raw="The number of items in the collection.">컬렉션의 항목 수입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">.NET Framework 데이터 공급자별로 컬렉션에 대한 단순 반복을 지원하는 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 메서드를 표시합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Data.Common.DbParameter" /> 개체를 반환합니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">컬렉션에 있는 <see cref="T:System.Data.Common.DbParameter" />의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Data.Common.DbParameter" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">지정된 이름의 <see cref="T:System.Data.Common.DbParameter" /> 개체를 반환합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">컬렉션에 있는 <see cref="T:System.Data.Common.DbParameter" />의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">지정된 이름의 <see cref="T:System.Data.Common.DbParameter" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">지정된 <see cref="T:System.Data.Common.DbParameter" /> 개체의 인덱스를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">컬렉션의 <see cref="T:System.Data.Common.DbParameter" /> 개체입니다.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">지정된 <see cref="T:System.Data.Common.DbParameter" /> 개체의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">지정된 이름의 <see cref="T:System.Data.Common.DbParameter" /> 개체에 대한 인덱스를 반환합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Data.Common.DbParameter" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">지정된 이름의 <see cref="T:System.Data.Common.DbParameter" /> 개체에 대한 인덱스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">지정된 이름의 <see cref="T:System.Data.Common.DbParameter" /> 개체에 대한 지정된 인덱스를 컬렉션의 지정된 인덱스에 삽입합니다.</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 개체를 삽입할 인덱스입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">컬렉션에 삽입할 <see cref="T:System.Data.Common.DbParameter" /> 개체입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">컬렉션의 크기가 고정되어 있는지 여부를 지정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">컬렉션의 크기가 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">컬렉션이 읽기 전용인지 여부를 지정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">컬렉션이 읽기 전용이면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">컬렉션이 동기화되는지 여부를 지정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">컬렉션이 동기화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Data.Common.DbParameter" />를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">매개 변수의 인덱스이며 0에서 시작합니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Data.Common.DbParameter" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">지정된 인덱스가 없는 경우</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">지정된 이름을 가진 <see cref="T:System.Data.Common.DbParameter" />를 가져오거나 설정합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">매개 변수의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">지정된 이름을 가진 <see cref="T:System.Data.Common.DbParameter" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">지정된 인덱스가 없는 경우</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Data.Common.DbParameter" /> 개체를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.Common.DbParameter" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">컬렉션에서 지정된 인덱스에 있는 <see cref="T:System.Data.Common.DbParameter" /> 개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> 개체가 있는 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">컬렉션에서 지정된 이름의 <see cref="T:System.Data.Common.DbParameter" /> 개체를 제거합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.Common.DbParameter" /> 개체의 이름입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">지정된 인덱스에 있는 <see cref="T:System.Data.Common.DbParameter" /> 개체를 새 값으로 설정합니다.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> 개체가 있는 인덱스입니다.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">새 <see cref="T:System.Data.Common.DbParameter" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">지정된 이름의 <see cref="T:System.Data.Common.DbParameter" /> 개체를 새 값으로 설정합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Data.Common.DbParameter" /> 개체의 이름입니다.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">새 <see cref="T:System.Data.Common.DbParameter" /> 값입니다.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Object" />를 지정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">
        <see cref="T:System.Object" />에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Data.Common.DbParameterCollection" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The element at the specified index.">지정한 인덱스의 요소입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">지정한 인덱스에 있는 매개 변수를 가져오거나 설정합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">검색할 매개 변수의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> 클래스의 인스턴스를 하나 이상 만드는 데 사용되는 정적 메서드의 집합을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" />의 인스턴스를 반환합니다.</summary>
      <param name="connection" vsli:raw="The connection used.">사용하는 연결입니다.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">지정된 연결에 대한 <see cref="T:System.Data.Common.DbProviderFactory" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" />의 인스턴스를 반환합니다.</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">공급자의 구성 정보를 포함하는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">지정된 <see cref="T:System.Data.Common.DbProviderFactory" />에 대한 <see cref="T:System.Data.DataRow" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" />의 인스턴스를 반환합니다.</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">공급자의 고정 이름입니다.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">지정된 공급자 이름에 대한 <see cref="T:System.Data.Common.DbProviderFactory" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />를 구현하는 설치된 모든 공급자에 대한 정보를 포함하는 <see cref="T:System.Data.Common.DbProviderFactory" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 데이터가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체를 포함하는 <see cref="T:System.Data.DataRow" />입니다. 
  열 서수 
  열 이름 
  설명 
  0 
  Name  
  사용자가 읽을 수 있는 데이터 공급자의 이름입니다.  
  1 
  설명  
  사용자가 읽을 수 있는 데이터 공급자에 대한 설명입니다.  
  2 
  InvariantName  
  데이터 공급자를 참조하기 위해 프로그래밍 방식으로 사용할 수 있는 이름입니다.  
  3 
  AssemblyQualifiedName  
  개체를 인스턴스화하기에 충분한 정보를 포함하는 팩터리 클래스의 정규화된 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames" />
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="factory" vsli:raw="The instance of the provider factory to be registered." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up." />
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove." />
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">데이터 소스 클래스의 공급자 구현에 대한 인스턴스를 만드는 데 사용되는 메서드의 집합을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">이 <see cref="T:System.Data.Common.DbProviderFactory" /> 인스턴스가 <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스를 지원하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 인스턴스가 클래스를 <see cref="T:System.Data.Common.DbCommandBuilder" /> 지원 하면이 고, <see langword="false" />그렇지 않으면입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">이 <see cref="T:System.Data.Common.DbProviderFactory" /> 인스턴스가 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스를 지원하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />인스턴스가 클래스를 <see cref="T:System.Data.Common.DbDataAdapter" /> 지원 하면이 고, <see langword="false" />그렇지 않으면입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">이 <see cref="T:System.Data.Common.DbProviderFactory" /> 인스턴스가 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 클래스를 지원하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />인스턴스가 클래스를 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 지원 하면이 고, <see langword="false" />그렇지 않으면입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommand" /> 클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommand" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnection" /> 클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnection" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbParameter" /> 클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">공급자별 형식을 설정할 때 사용할 강력한 형식의 매개 변수 클래스에 있는 공급자별 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">이 속성이 공급자별 속성인지 여부를 지정합니다.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">특성 사용 속성이 공급자별 형식인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 특성이 적용되는 속성이 공급자별 형식 속성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">데이터베이스 트랜잭션의 핵심 동작을 정의하고 데이터베이스 관련 트랜잭션에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">새 <see cref="T:System.Data.Common.DbTransaction" /> 개체를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">파생 클래스에서 재정의되는 경우 데이터베이스 트랜잭션을 커밋합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">데이터베이스 트랜잭션을 비동기적으로 커밋합니다.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">트랜잭션과 관련된 <see cref="T:System.Data.Common.DbConnection" /> 개체를 지정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">트랜잭션과 연결된 <see cref="T:System.Data.Common.DbConnection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">파생 클래스에서 재정의되는 경우 트랜잭션과 연결된 <see cref="T:System.Data.Common.DbConnection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">트랜잭션과 연결된 <see cref="T:System.Data.Common.DbConnection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbTransaction" />에서 사용하는 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbTransaction" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">
        <see langword="true" />인 경우 이 메서드는 이 <see cref="T:System.Data.Common.DbTransaction" />에서 참조하는 관리되는 개체가 보유하고 있는 리소스를 모두 해제합니다.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">트랜잭션 개체를 비동기적으로 삭제합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">파생 클래스에서 재정의되는 경우 이 트랜잭션의 격리 수준을 가져옵니다.</summary>
      <returns vsli:raw="The isolation level for this transaction.">이 트랜잭션의 격리 수준입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">파생 클래스에서 재정의되는 경우 보류 중 상태에서 트랜잭션을 롤백합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">보류 중 상태에서 트랜잭션을 비동기적으로 롤백합니다.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">비동기 작업을 취소하기 위한 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">트랜잭션과 연결된 <see cref="T:System.Data.Common.DbConnection" /> 개체를 가져오거나, 트랜잭션이 더 이상 유효하지 않을 경우 null 참조를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">트랜잭션과 연결된 <see cref="T:System.Data.Common.DbConnection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">GROUP BY 절의 열과 SELECT 문의 SELECT 목록에 있는 집계되지 않은 열 간의 관계를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">GROUP BY 절에 SELECT 목록의 집계되지 않은 열이 모두 포함되어야 하고 SELECT 목록에 없는 다른 열은 포함되지 않아야 합니다.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">GROUP BY 절에 SELECT 목록의 집계되지 않은 열이 모두 포함되어야 하고 SELECT 목록에 없는 다른 열도 포함될 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">GROUP BY 절이 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">GROUP BY 절에 대한 지원을 알 수 없습니다.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">GROUP BY 절의 열과 SELECT 목록의 집계되지 않은 열이 관련되어 있지 않습니다. 어떠한 열로도 그룹화할 수 있습니다.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">열 스키마를 생성합니다.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">열 스키마(<see cref="T:System.Data.Common.DbColumn" /> 컬렉션)를 가져옵니다.</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">열 스키마(<see cref="T:System.Data.Common.DbColumn" /> 컬렉션)입니다.</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">시스템 카탈로그를 검색할 때 데이터 소스에서 식별자를 처리하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">데이터 소스에서 시스템 카탈로그를 검색할 때 식별자의 대/소문자를 무시합니다. 식별자 "ab"와 "AB"는 일치합니다.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">데이터 소스에서 시스템 카탈로그를 검색할 때 식별자의 대/소문자를 구별합니다. 식별자 "ab"와 "AB"는 일치하지 않습니다.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">데이터 소스에서 식별자 대/소문자와 관련하여 모호한 규칙을 갖고 있으므로 이 정보를 구별할 수 없습니다.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">.NET Framework 데이터 공급자의 <see langword="RowUpdated" /> 이벤트에 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />로 보내는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" />가 호출될 때 실행되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">실행되는 SQL 문 형식입니다.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" />로 보내는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" />가 호출될 때 실행되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" />가 호출될 때 실행되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">수정한 행에 대한 참조를 제공된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">복사해 넣을 <see cref="T:System.Data.DataRow" />의 배열입니다.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">수정한 행에 대한 참조를 제공된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">복사해 넣을 <see cref="T:System.Data.DataRow" />의 배열입니다.</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">복사를 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />가 실행될 때 .NET Framework 데이터 공급자가 생성하는 오류를 가져옵니다.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />가 실행될 때 .NET Framework 데이터 공급자가 생성하는 오류입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">SQL 문을 실행하여 변경, 삽입 또는 삭제된 행 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">변경, 삽입 또는 삭제된 행 수입니다. 영향을 받은 행이 없거나 문이 실패하면 0이고, SELECT 문의 경우는 -1입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />로 보내는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />로 보내는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">업데이트된 레코드의 일괄 처리에서 처리된 행의 수를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">처리된 행의 수를 지정하는 <see langword="int" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">실행되는 SQL 문 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of SQL statement executed.">실행되는 SQL 문 형식입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">
        <see cref="T:System.Data.UpdateStatus" /> 속성의 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">
        <see cref="T:System.Data.UpdateStatus" /> 값 중 하나입니다. 기본값은 <see langword="Continue" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" />로 보내는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" />로 보내는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">.NET Framework 데이터 공급자의 RowUpdating 이벤트에 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />할 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" />가 호출될 때 실행할 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">실행할 SQL 문 형식입니다.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" />로 보낼 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">이 클래스의 인스턴스에 대한 <see cref="T:System.Data.IDbCommand" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 도중 실행할 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">
        <see cref="T:System.Data.IDbCommand" /> 작업 도중 실행할 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 도중 실행할 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />가 실행할 때 .NET Framework 데이터 공급자가 생성하는 오류를 가져옵니다.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />가 실행할 때 .NET Framework 데이터 공급자가 생성하는 오류입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">INSERT, UPDATE 또는 DELETE 작업의 일부로 서버에 전송될 <see cref="T:System.Data.DataRow" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />로 보낼 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">실행할 SQL 문 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of SQL statement to execute.">실행할 SQL 문 형식입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">
        <see cref="T:System.Data.UpdateStatus" /> 속성의 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">
        <see cref="T:System.Data.UpdateStatus" /> 값 중 하나입니다. 기본값은 <see langword="Continue" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" />로 보낼 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" />로 보낼 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">데이터베이스 테이블에 대한 스키마의 열 메타데이터를 설명합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">
        <see langword="DBNull" /> 값이 허용되는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">스키마 테이블의 열 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">스키마 테이블의 스키마 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">스키마 테이블의 테이블 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">스키마 테이블의 열 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">열의 서수를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">열의 크기를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">열의 데이터 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">이 열에 별칭이 지정되어 있는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">이 열이 식인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">이 열이 테이블의 키인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">이 열에 긴 데이터가 포함되어 있는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">고유 제약 조건이 이 열에 적용되는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">버전이 없는 공급자별 열 데이터 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">데이터가 숫자인 경우 열 데이터의 전체 자릿수를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">데이터가 숫자인 경우 열 데이터의 소수 자릿수를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">열의 공급자별 데이터 형식을 지정합니다.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">데이터베이스 테이블에 대한 스키마의 선택적 열 메타데이터를 설명합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">새 ID 열의 시리즈에 할당되는 값을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">ID열의 값 간의 증분을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">최신 쿼리의 결과와 연결된 카탈로그의 이름입니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">열의 네임스페이스입니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">열의 서버 이름입니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">열이 포함된 테이블의 네임스페이스입니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">열의 매핑을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">열의 기본값입니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">열을 컴퓨팅하는 데 사용되는 식입니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">열의 값이 자동으로 증가하는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">이 열이 숨겨져 있는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">이 열이 읽기 전용인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">이 열에 행 버전 정보가 포함되어 있는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">열의 공급자별 데이터 형식을 지정합니다.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">데이터 소스에서 지원하는 Transact-SQL 조인 문의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">데이터 소스에서 완전 외부 조인을 지원합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">데이터 소스에서 내부 조인을 지원합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">데이터 소스에서 왼쪽 우선 외부 조인을 지원합니다.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">데이터 소스에서 조인 쿼리를 지원하지 않습니다.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">데이터 소스에서 오른쪽 우선 외부 조인을 지원합니다.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">데이터 소스의 변경 사항에 대한 충돌을 감지하고 이를 해결하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">Update 및 Delete 문의 WHERE 절에는 테이블에서 검색할 수 있는 열이 모두 포함됩니다. 이는 <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />를 지정하는 것과 같습니다.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">테이블에 타임스탬프 열이 있으면 생성된 모든 Update 문의 WHERE 절에 이러한 열이 사용됩니다. 이는 <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />를 지정하는 것과 같습니다.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">모든 Update 및 Delete 문의 WHERE 절에는 <see cref="P:System.Data.DataTable.PrimaryKey" /> 열만 포함됩니다. <see cref="P:System.Data.DataTable.PrimaryKey" />를 정의하지 않으면 검색할 수 있는 열이 모두 WHERE 절에 포함됩니다. <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />와 동일합니다.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">데이터 소스에 대한 현재 연결 상태를 설명합니다.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">데이터 소스 연결이 끊어집니다. 이 상황은 연결이 열린 이후에만 발생할 수 있습니다. 이 경우 연결이 닫힌 다음 다시 열릴 수 있습니다. 이 값은 이후에 릴리스되는 제품 버전에 사용하기 위해 예약되었습니다.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">연결이 닫힌 경우</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">연결 개체가 데이터 소스에 연결됩니다.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">연결 개체가 명령을 실행하고 있습니다. 이 값은 이후에 릴리스되는 제품 버전에 사용하기 위해 예약되었습니다.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">연결 개체가 데이터를 검색하고 있습니다. 이 값은 이후에 릴리스되는 제품 버전에 사용하기 위해 예약되었습니다.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">연결이 열립니다.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">하나 이상의 <see cref="T:System.Data.DataColumn" /> 개체에 적용할 수 있는 제약 조건을 나타냅니다.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">이 제약 조건이 속한 <see cref="T:System.Data.DataSet" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">제약 조건이 속한 <see cref="T:System.Data.DataSet" />입니다.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">이 제약 조건이 속한 <see cref="T:System.Data.DataSet" />를 가져옵니다.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">
        <see cref="T:System.Data.ConstraintCollection" />의 제약 조건 이름입니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" />의 이름입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">
        <see cref="T:System.Data.Constraint" /> 이름이 null 값이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">
        <see cref="T:System.Data.ConstraintCollection" />에 이름이 같은 <see cref="T:System.Data.Constraint" />가 이미 있는 경우(대/소문자 구분 안 함)</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">사용자 정의 제약 조건 속성 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">사용자 지정 정보의 <see cref="T:System.Data.PropertyCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">제약 조건의 <see cref="T:System.Data.DataSet" />을 설정합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">이 제약 조건이 속할 <see cref="T:System.Data.DataSet" />입니다.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">제약 조건이 적용될 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">제약 조건이 적용되는 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">
        <see cref="P:System.Data.Constraint.ConstraintName" />이 있는 경우 문자열로 가져옵니다.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">
        <see cref="P:System.Data.Constraint.ConstraintName" />의 문자열 값을 반환합니다.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 대한 제약 조건 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">지정된 <see cref="T:System.Data.Constraint" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">추가할 <see langword="Constraint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">
        <paramref name="constraint" /> 인수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">제약 조건이 이미 이 컬렉션에 속해 있거나 다른 컬렉션에 속해 있는 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">컬렉션에 이미 같은 이름의 제약 조건이 있는 경우 (대/소문자를 구분하지 않고 비교합니다.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">지정된 이름, <see cref="T:System.Data.UniqueConstraint" /> 및 해당 열이 기본 키인지 여부를 나타내는 값이 있는 새 <see cref="T:System.Data.DataColumn" />를 생성하여 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">
        <see langword="UniqueConstraint" />의 이름입니다.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">제약 조건이 적용되는 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">열이 기본 키인지 여부를 지정합니다. <see langword="true" />이면 기본 키 열이 됩니다.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">새 <see langword="UniqueConstraint" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">제약 조건이 이미 이 컬렉션에 속해 있는 경우  
 -또는-  
 제약 조건이 다른 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">지정된 이름, 부모 열 및 자식 열을 사용하여 새 <see cref="T:System.Data.ForeignKeyConstraint" />를 만들어 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" />의 이름입니다.</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">기본 키 또는 부모 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">외래 키 또는 자식 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">새 <see langword="ForeignKeyConstraint" />입니다.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">지정된 이름, <see cref="T:System.Data.UniqueConstraint" /> 개체의 배열 및 열이 기본 키인지 여부를 나타내는 값이 있는 새 <see cref="T:System.Data.DataColumn" />를 생성하여 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">
        <see cref="T:System.Data.UniqueConstraint" />의 이름입니다.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">제약 조건이 적용되는 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">열이 기본 키인지 여부를 지정합니다. <see langword="true" />이면 기본 키 열이 됩니다.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">새 <see langword="UniqueConstraint" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">제약 조건이 이미 이 컬렉션에 속해 있는 경우  
 -또는-  
 제약 조건이 다른 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">부모 열과 자식 열의 지정된 배열을 사용하여 새 <see cref="T:System.Data.ForeignKeyConstraint" />를 만들어 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" />의 이름입니다.</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">기본 키 열 또는 부모 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">외래 키 열 또는 자식 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">새 <see langword="ForeignKeyConstraint" />입니다.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">지정된 <see cref="T:System.Data.ConstraintCollection" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.ConstraintCollection" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">
        <see cref="T:System.Data.Constraint" />를 제거할 수 있는지 나타냅니다.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">컬렉션에서 제거할 수 있는지 테스트할 <see cref="T:System.Data.Constraint" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" />를 컬렉션에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">
        <see cref="T:System.Data.Constraint" /> 개체의 컬렉션을 지웁니다.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">
        <see cref="T:System.Data.ConstraintCollection" /> 개체가 추가되거나 제거되어 <see cref="T:System.Data.Constraint" />이 변경될 때마다 발생합니다.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">이름으로 지정된 <see cref="T:System.Data.Constraint" />개체가 컬렉션에 있는지 여부를 나타냅니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">제약 조건의 <see cref="P:System.Data.Constraint.ConstraintName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 지정한 제약 조건이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">지정한 인덱스에서 시작하는 1차원 <see cref="T:System.Array" /> 인스턴스에 컬렉션 개체를 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">컬렉션에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">삽입을 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">검색할 <see cref="T:System.Data.Constraint" />입니다.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">항목이 컬렉션에 있으면 <see cref="T:System.Data.Constraint" />의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">이름으로 지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" />의 이름입니다.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">인덱스가 컬렉션에 있으면 <see cref="T:System.Data.Constraint" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.Constraint" />을 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">반환할 제약 조건의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Data.Constraint" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">인덱스 값이 컬렉션의 항목 수보다 큰 경우</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">컬렉션에서 지정된 이름을 가진 <see cref="T:System.Data.Constraint" />을 가져옵니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">반환할 제약 조건의 <see cref="P:System.Data.Constraint.ConstraintName" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">지정된 이름을 가진 <see cref="T:System.Data.Constraint" />이고, <see cref="T:System.Data.Constraint" />가 없는 경우 null 값입니다.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">지정된 <see cref="T:System.Data.Constraint" />를 컬렉션에서 제거합니다.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">제거할 <see cref="T:System.Data.Constraint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="constraint" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">제약 조건이 컬렉션에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">컬렉션에서 이름으로 지정된 <see cref="T:System.Data.Constraint" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">제거할 <see cref="T:System.Data.Constraint" />의 이름입니다.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.Constraint" /> 개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">제거할 <see cref="T:System.Data.Constraint" />의 인덱스입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">컬렉션에 이 인덱스의 제약 조건이 없는 경우</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">제약 조건을 위반하는 작업을 시도할 때 throw 되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">
        <see cref="T:System.Data.ConstraintException" /> 클래스의 새 인스턴스를 초기화합니다. 이는 매개 변수가 없는 생성자입니다.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">지정된 serialization과 스트림 컨텍스트를 사용하여 <see cref="T:System.Data.ConstraintException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.ConstraintException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">지정된 문자열과 내부 예외를 사용하여 <see cref="T:System.Data.ConstraintException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">현재 예외를 발생시킨 <see langword="Exception" /> 인스턴스를 가져옵니다.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 있는 열의 스키마를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">
        <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 형식 문자열로 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">지정된 열 이름을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 형식 문자열로 초기화합니다.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">만들 열의 이름을 나타내는 문자열입니다. 이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">지정된 열 이름과 데이터 형식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">만들 열의 이름을 나타내는 문자열입니다. 이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" />이 지정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">지정된 이름, 데이터 형식 및 식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">만들 열의 이름을 나타내는 문자열입니다. 이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">이 열을 만드는 데 사용되는 식입니다. 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하세요.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" />이 지정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">열이 특성 열인지 여부를 결정하는 값, 지정된 이름, 데이터 형식 및 식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">만들 열의 이름을 나타내는 문자열입니다. 이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">이 열을 만드는 데 사용되는 식입니다. 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하세요.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">
        <see cref="T:System.Data.MappingType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" />이 지정되지 않은 경우</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">테이블에 속해 있는 행의 이 열에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />null 값이 허용 되 면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">테이블에 추가되는 새 행의 열 값이 자동으로 증가되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">열 값이 자동으로 증가되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">열이 계산 열인 경우</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> 속성이 <see langword="true" />로 설정된 열의 시작 값을 가져오거나 설정합니다. 기본값은 0입니다.</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" />의 시작 값입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> 속성이 <see langword="true" />로 설정된 열에 사용되는 증분을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">열 값이 자동으로 증가되는 정도를 나타내는 숫자입니다. 기본값은 1입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">설정된 값이 0인 경우</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">열의 캡션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">열의 캡션입니다. 설정하지 않은 경우 <see cref="P:System.Data.DataColumn.ColumnName" /> 값이 반환됩니다.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">열의 <see cref="T:System.Data.MappingType" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">
        <see cref="T:System.Data.MappingType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataColumnCollection" />의 열 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the column.">열 이름입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">속성이 <see langword="null" /> 또는 빈 문자열로 설정되어 있고 열이 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">이름이 같은 열이 컬렉션에 이미 있는 경우. 대/소문자를 구분하지 않고 이름을 비교합니다.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">열에 저장된 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">열 데이터 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">열에 저장된 데이터가 이미 있는 경우</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">열의 <see langword="DateTimeMode" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">지정된 열의 <see cref="T:System.Data.DataSetDateTime" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">새 행을 만들 때 열의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">열의 <see cref="P:System.Data.DataColumn.DataType" />에 적합한 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">행을 추가할 때 기본값이 열 데이터 형식의 인스턴스가 아닌 경우</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">행을 필터링하거나 열의 값을 계산하거나 집계 열을 만드는 데 사용되는 식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">열의 값을 계산하거나 집계 열을 만드는 식입니다. 식의 반환 형식은 열의 <see cref="P:System.Data.DataColumn.DataType" />에 의해 결정됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> 또는 <see cref="P:System.Data.DataColumn.Unique" /> 속성이 <see langword="true" />로 설정되어 있는 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">CONVERT 함수를 사용하는 동안 식은 문자열로 계산되지만 문자열에 형식 매개 변수로 변환될 수 있는 표현이 포함되지 않은 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">CONVERT 함수를 사용하는 동안 요청된 캐스팅을 수행할 수 없는 경우. 가능한 캐스팅에 대한 자세한 내용은 다음 섹션에서 변환 함수를 참조하십시오.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">SUBSTRING 함수를 사용하는 동안 시작 인수가 범위를 벗어난 경우  
-또는- 
SUBSTRING 함수를 사용하는 동안 길이 인수가 범위를 벗어난 경우</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">LEN 또는 TRIM 함수를 사용하는 동안 식이 문자열로 계산되지 않는 경우. 여기에는 <see cref="T:System.Char" />로 계산되는 식이 포함됩니다.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />과 관련된 사용자 지정 사용자 정보 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">사용자 지정 정보의 <see cref="T:System.Data.PropertyCollection" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">텍스트 열의 최대 길이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">열의 최대 길이(문자 수)입니다. 열에 최대 길이가 없으면 값은-1 (기본값)입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />의 네임스페이스입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">네임스페이스에 데이터가 이미 있는 경우</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">매개 변수 참조입니다.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">
        <see cref="T:System.Data.DataColumnCollection" /> 컬렉션에서 0부터 시작하는 열의 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">열 위치입니다. 열이 컬렉션의 멤버가 아니면 -1을 가져옵니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 네임스페이스의 별칭인 XML 접두사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataTable" /> 네임스페이스의 XML 접두사입니다.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="name" vsli:raw="Parameter reference.">매개 변수 참조입니다.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">테이블에 행을 추가한 후 열을 변경할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">열이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">속성이 계산 열에서 <see langword="false" />로 설정된 경우</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">
        <see cref="T:System.Data.DataColumn" />의 서수나 위치를 지정된 서수나 위치로 변경합니다.</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">지정된 서수입니다.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">열이 속한 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">
        <see cref="T:System.Data.DataTable" />이 속한 <see cref="T:System.Data.DataColumn" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">열의 <see cref="P:System.Data.DataColumn.Expression" />이 있으면 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">속성이 설정되어 있으면 <see cref="P:System.Data.DataColumn.Expression" /> 값을 반환하고, 그렇지 않으면 <see cref="P:System.Data.DataColumn.ColumnName" /> 속성을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">열의 각 행에 있는 값이 고유해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">값이 고유해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">열이 계산 열인 경우</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanging" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">변경 값이 있는 열의 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">변경 값이 있는 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="value" vsli:raw="The new value.">새 값입니다.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">변경 값이 있는 <see cref="T:System.Data.DataColumn" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">변경 값이 있는 <see cref="T:System.Data.DataColumn" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">열에 대해 제안된 새 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">형식이 <see cref="T:System.Object" />인 제안된 값입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">변경 값이 있는 열의 <see cref="T:System.Data.DataRow" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">변경 값이 있는 열의 <see cref="T:System.Data.DataRow" />입니다.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanging" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataColumnChangeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />에 대한 <see cref="T:System.Data.DataTable" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 개체를 만든 다음 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">지정된 <see cref="T:System.Data.DataColumn" /> 개체를 만든 다음 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">추가할 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">열이 이 컬렉션이나 다른 컬렉션에 이미 속해 있는 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">지정된 이름의 열이 컬렉션에 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">식이 잘못되었습니다. 식을 만드는 방법에 대한 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하십시오.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">지정된 이름의 <see cref="T:System.Data.DataColumn" /> 개체를 만들어 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</summary>
      <param name="columnName" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">지정된 이름의 열이 컬렉션에 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">지정된 이름과 형식의 <see cref="T:System.Data.DataColumn" /> 개체를 만들어 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">열을 만들 때 사용할 <see cref="P:System.Data.DataColumn.ColumnName" />입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">새 열의 <see cref="P:System.Data.DataColumn.DataType" />입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">지정된 이름의 열이 컬렉션에 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">식이 잘못되었습니다. 식을 만드는 방법에 대한 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하십시오.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">지정된 이름, 형식 및 식의 <see cref="T:System.Data.DataColumn" /> 개체를 만들어 <see cref="T:System.Data.DataColumnCollection" />에 추가합니다.</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">열을 만들 때 사용할 이름입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">새 열의 <see cref="P:System.Data.DataColumn.DataType" />입니다.</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">
        <see cref="P:System.Data.DataColumn.Expression" /> 속성에 할당할 식입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">새로 만든 <see cref="T:System.Data.DataColumn" />입니다.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">지정된 이름의 열이 컬렉션에 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">식이 잘못되었습니다. 식을 만드는 방법에 대한 자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하십시오.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">지정된 <see cref="T:System.Data.DataColumn" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">특정 열을 컬렉션에서 제거할 수 있는지 여부를 확인합니다.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">컬렉션의 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">열을 제거할 수 있으면 <see langword="true" />입니다. <see langword="false" /> 만일, 

<paramref name="column" /> 매개 변수가 <see langword="null" />인 경우  

열이 이 컬렉션에 속하지 않는 경우  

열이 관계의 일부인 경우  

다른 열의 식이 이 열에 종속되는 경우</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">
        <paramref name="column" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">열이 이 컬렉션에 속하지 않는 경우
또는
열이 관계의 일부인 경우
또는
다른 열의 식이 이 열에 종속되는 경우</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">모든 열의 컬렉션을 지웁니다.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">열을 추가하거나 제거하여 열 컬렉션이 변경되는 경우 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">컬렉션에 이름이 지정된 열이 있는지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">찾으려는 열의 <see cref="P:System.Data.DataColumn.ColumnName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이름이 지정된 열이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">전체 컬렉션을 기존 배열 내의 지정된 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">컬렉션을 복사할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
      <param name="index" vsli:raw="The index to start from.">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">이름이 지정된 열의 인덱스를 가져옵니다.</summary>
      <param name="column" vsli:raw="The name of the column to return.">반환할 열의 이름입니다.</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">
        <paramref name="column" />로 지정된 열이 있으면 해당 열의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">특정 이름을 가진 열의 인덱스를 가져옵니다. 이 이름은 대/소문자를 구분하지 않습니다.</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">찾을 열의 이름입니다.</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">지정된 이름을 가지는 열이 컬렉션에 있으면 반환 값이 해당 열의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.DataColumn" />을 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">반환할 열의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Data.DataColumn" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">인덱스 값이 컬렉션의 항목 수보다 큰 경우</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">컬렉션에서 지정된 이름을 가진 <see cref="T:System.Data.DataColumn" />을 가져옵니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">반환할 열의 <see cref="P:System.Data.DataColumn.ColumnName" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">컬렉션에 지정된 <see cref="T:System.Data.DataColumn" />이 있으면 <see cref="P:System.Data.DataColumn.ColumnName" />이 반환되고, <see cref="T:System.Data.DataColumn" />이 없으면 null이 반환됩니다.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Data.DataColumn" /> 개체를 제거합니다.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">제거할 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">열이 이 컬렉션에 속하지 않는 경우  
 -또는-  
 열이 관계의 일부인 경우  
 -또는-  
 다른 열의 식이 이 열에 종속되는 경우</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">컬렉션에서 지정된 이름의 <see cref="T:System.Data.DataColumn" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the column to remove.">제거할 열의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">지정된 이름의 열이 컬렉션에 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">컬렉션에서 지정된 인덱스의 열을 제거합니다.</summary>
      <param name="index" vsli:raw="The index of the column to remove.">제거할 열의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">컬렉션에 지정된 인덱스의 열이 없는 경우</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">ADO.NET 구성 요소를 사용하여 오류가 생성될 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">
        <see cref="T:System.Data.DataException" /> 클래스의 새 인스턴스를 초기화합니다. 이는 매개 변수가 없는 생성자입니다.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">지정된 serializatoin 정보와 컨텍스트를 사용하여 <see cref="T:System.Data.DataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.DataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">지정된 문자열과 내부 예외를 사용하여 <see cref="T:System.Data.DataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">내부 예외에 대한 참조입니다.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" />에 대한 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">지정된 열의 값에 해당하는 Boolean 값을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">지정된 열의 값에 해당하는 바이트 값을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">지정된 인덱스에서 시작하는 지정된 열에서 지정된 바이트 수를 읽은 다음 버퍼의 지정된 위치에서 시작하는 버퍼에 씁니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">읽기 작업을 시작하는 행 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">데이터가 복사될 버퍼의 인덱스입니다.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">읽을 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of bytes read.">읽은 실제 바이트 수입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">단일 문자로 지정된 열의 값을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">지정된 인덱스에서 시작하는 지정된 열에서 지정된 수의 문자를 읽은 다음 지정된 위치에서 시작하는 버퍼에 씁니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">읽기 작업을 시작하는 행 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">데이터가 복사될 버퍼의 인덱스입니다.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">읽을 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of characters read.">읽은 실제 문자 수입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">요청된 열의 중첩된 데이터 판독기를 반환합니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="A data reader.">데이터 판독기입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">지정된 열의 데이터 형식 이름을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">열 형식 이름을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The name of the data type.">데이터 형식의 이름입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">지정된 열의 값에 해당하는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" />으로 지정된 열 값을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">지정된 열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">지정된 열의 데이터 형식을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">필드 형식을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The data type of the specified column.">지정된 열의 데이터 형식입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">지정된 열의 값을 요청된 형식으로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">반환될 값의 형식입니다.</typeparam>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는 
데이터를 검색하는 동안 데이터 판독기가 닫혔습니다.  
또는
읽을 준비가 된 데이터가 없습니다(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 <see langword="false" />를 반환함).  
또는
판독기가 순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">데이터베이스에서 반환되는 값이 일치하지 않거나 이 값을 <typeparamref name="T" />에 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">지정된 열의 값을 요청된 형식으로 비동기적으로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">비동기 작업을 취소하기 위한 선택적 토큰입니다.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">반환될 값의 형식입니다.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" />에 지정된 열의 값을 포함하는 작업입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫혔습니다.  
또는
읽을 준비가 된 데이터가 없습니다(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 <see langword="false" />를 반환함).
또는
순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get_*_ 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">데이터베이스에서 반환되는 값이 일치하지 않거나 이 값을 <typeparamref name="T" />에 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">지정된 열의 값에 해당하는 단정밀도 부동 소수점 숫자를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">지정된 열의 값을 GUID(Globally Unique Identifier)로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">지정된 열의 값에 해당하는 32비트 부호 있는 정수를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">지정된 열의 값에 해당하는 64비트 부호 있는 정수를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">지정된 열의 공급자별 형식을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="A provider-specific .NET type.">공급자별 .NET 형식입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">지정된 열의 값을 공급자별 형식의 인스턴스로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">지정된 열에서 데이터를 검색하는 스트림을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="A stream.">스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫힙니다.  
또는
읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)  
또는
데이터 판독기가 순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 열은 <see cref="T:System.IO.Stream" />을 사용한 읽기를 지원하는 이진 유형이 아닙니다.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 열의 값을 <see cref="T:System.String" />의 인스턴스로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">지정된 캐스트가 잘못된 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">열에서 데이터를 검색하는 텍스트 판독기를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="A text reader.">텍스트 판독기입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫힙니다.  
또는
읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)  
또는
데이터 판독기가 순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 열은 <see cref="T:System.IO.TextReader" />를 사용한 읽기를 지원하는 텍스트 유형이 아닙니다.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">지정된 열의 값을 <see cref="T:System.Object" />의 인스턴스로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">열이 존재하지 않거나 없는 값을 포함하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 열이 <see cref="T:System.DBNull" />에 해당하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 비동기적으로 가져옵니다.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">열 값을 가져올 데이터 판독기입니다.</param>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">비동기 작업을 취소하기 위한 선택적 토큰입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성이 지정된 열 값이 <see langword="DBNull" />와 같으면 <see langword="true" />, 아니면 <see langword="false" />인 <see cref="T:System.Threading.Tasks.Task`1" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">데이터를 검색하는 동안 연결이 끊어졌거나 닫혔습니다.  
또는
데이터를 검색하는 동안 데이터 판독기가 닫힙니다.  
또는
읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.Common.DbDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)  
또는
순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.  
또는 
진행 중인 비동기 작업이 없습니다. 이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">두 <see cref="T:System.Data.DataTable" /> 개체 사이의 부모/자식 관계를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">지정된 <see cref="T:System.Data.DataRelation" /> 이름과 부모 및 자식 <see cref="T:System.Data.DataRelation" /> 개체를 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />의 이름입니다. <see langword="null" /> 또는 빈 문자열("")의 경우 만든 개체가 <see cref="T:System.Data.DataRelationCollection" />에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">관계의 부모 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">관계의 자식 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">두 개의 <see cref="T:System.Data.DataColumn" /> 개체 중 하나 이상에 <see langword="null" />이 포함된 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우 
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">지정된 이름, 부모 및 자식 <see cref="T:System.Data.DataRelation" /> 개체, 제약 조건을 만들지 여부를 나타내는 값 등을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">관계의 이름입니다. <see langword="null" /> 또는 빈 문자열("")의 경우 만든 개체가 <see cref="T:System.Data.DataRelationCollection" />에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">관계의 부모 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">관계의 자식 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 만들어지는지 여부를 나타내는 값입니다. 제약 조건이 만들어지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">두 개의 <see cref="T:System.Data.DataColumn" /> 개체 중 하나 이상에 <see langword="null" />이 포함된 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우 
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">부모 및 자식 <see cref="T:System.Data.DataRelation" /> 개체의 일치되는 배열과 지정된 <see cref="T:System.Data.DataRelation" /> 이름을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">관계의 이름입니다. <see langword="null" /> 또는 빈 문자열("")의 경우 만든 개체가 <see cref="T:System.Data.DataRelationCollection" />에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">부모 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">자식 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">두 개의 <see cref="T:System.Data.DataColumn" /> 개체 중 하나 이상에 <see langword="null" />이 포함된 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 개체의 데이터 형식이 다른 경우 
-또는- 
두 개의 배열 중 하나 이상이 동일한 테이블의 고유 열들로 구성되지 않은 경우  
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">지정된 이름, 부모 및 자식 <see cref="T:System.Data.DataRelation" /> 개체의 일치되는 배열, 제약 조건을 만들지 여부를 나타내는 값 등을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">관계의 이름입니다. <see langword="null" /> 또는 빈 문자열("")의 경우 만든 개체가 <see cref="T:System.Data.DataRelationCollection" />에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">부모 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">자식 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건을 만들지 여부를 나타내는 값입니다. 제약 조건이 만들어지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">두 <see cref="T:System.Data.DataColumn" /> 개체 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우 
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공됩니다.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />의 이름입니다. <see langword="null" /> 또는 빈 문자열("")의 경우 만든 개체가 <see cref="T:System.Data.DataRelationCollection" />에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">관계의 부모 테이블인 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">부모 테이블 네임스페이스의 이름입니다.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">관계의 자식 테이블인 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">자식 테이블 네임스페이스의 이름입니다.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">관계의 부모 <see cref="T:System.Data.DataColumn" />에 있는 <see cref="T:System.Data.DataTable" /> 개체 이름으로 이루어진 배열입니다.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">관계의 자식 <see cref="T:System.Data.DataColumn" />에 있는 <see cref="T:System.Data.DataTable" /> 개체 이름으로 이루어진 배열입니다.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">관계가 중첩되는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공됩니다.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">관계의 이름입니다. <see langword="null" /> 또는 빈 문자열("")의 경우 만든 개체가 <see cref="T:System.Data.DataRelationCollection" />에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">관계의 부모 테이블인 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">관계의 자식 테이블인 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">관계의 부모 <see cref="T:System.Data.DataColumn" />에 있는 <see cref="T:System.Data.DataTable" /> 개체 이름으로 이루어진 배열입니다.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">관계의 자식 <see cref="T:System.Data.DataColumn" />에 있는 <see cref="T:System.Data.DataTable" /> 개체 이름으로 이루어진 배열입니다.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">관계가 중첩되는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">이 메서드는 .NET Framework 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">부모 테이블과 자식 테이블이 서로 다른 <see cref="T:System.Data.DataSet" /> 개체에 속한 경우  
-또는- 
하나 이상의 부모/자식 <see cref="T:System.Data.DataColumn" /> 개체 쌍이 일치하는 데이터 형식을 가지는 경우  
-또는- 
부모 및 자식 <see cref="T:System.Data.DataColumn" /> 개체가 동일한 경우</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">이 관계의 자식 <see cref="T:System.Data.DataColumn" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">관계의 <see cref="T:System.Data.ForeignKeyConstraint" />를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">
        <see langword="ForeignKeyConstraint" />
      </returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">이 관계의 자식 테이블을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">관계의 자식 테이블인 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" />이 속하는 <see cref="T:System.Data.DataRelation" />을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" />이 속하는 <see cref="T:System.Data.DataRelation" />을 가져옵니다.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">사용자 지정 속성을 저장하는 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">사용자 지정 속성이 포함된 <see cref="T:System.Data.PropertyCollection" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">
        <see cref="T:System.Data.DataRelation" /> 개체가 중첩되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 개체가 중첩되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">매개 변수 참조입니다.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">이 <see cref="T:System.Data.DataColumn" />의 부모 열인 <see cref="T:System.Data.DataRelation" /> 개체로 이루어진 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">이 <see cref="T:System.Data.DataColumn" />의 부모 열인 <see cref="T:System.Data.DataRelation" /> 개체로 이루어진 배열입니다.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">
        <see cref="T:System.Data.UniqueConstraint" />의 부모 열에 있는 값을 고유하게 하는 <see cref="T:System.Data.DataRelation" />를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">부모 열의 값을 고유하게 하는 <see cref="T:System.Data.UniqueConstraint" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">이 <see cref="T:System.Data.DataTable" />의 부모 <see cref="T:System.Data.DataRelation" />를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">이 관계의 부모 테이블인 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="name" vsli:raw="Parameter reference.">매개 변수 참조입니다.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />에서 <see cref="T:System.Data.DataRelationCollection" />을 검색하는 데 사용되는 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />의 이름입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see langword="null" /> 또는 빈 문자열("")이 <see cref="T:System.Data.DataColumn" />인 <see cref="T:System.Data.DataRelation" />에 전달된 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">같은 이름을 가진 <see cref="T:System.Data.DataRelation" />이 이미 들어 있는 컬렉션에 <see cref="T:System.Data.DataRelation" />이 속한 경우</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">
        <see cref="P:System.Data.DataRelation.RelationName" />이 있는 경우 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">
        <see cref="P:System.Data.DataRelation.RelationName" /> 속성 값</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">이 <see cref="T:System.Data.DataRelation" />에 대한 <see cref="T:System.Data.DataSet" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">
        <see cref="T:System.Data.DataRelationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">지정된 부모 및 자식 열을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">이 관계의 부모 열입니다.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">해당 관계의 자식 열입니다.</param>
      <returns vsli:raw="The created relation.">만든 관계를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">지정된 부모 및 자식 열을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">이 관계의 부모 열입니다.</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">해당 관계의 자식 열입니다.</param>
      <returns vsli:raw="The created relation.">만든 관계를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">
        <paramref name="relation" /> 인수가 null 값인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">컬렉션에 이름이 같은 관계가 이미 있는 경우. 대/소문자를 구분하지 않고 비교합니다.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />에 <see cref="T:System.Data.DataRelationCollection" />를 추가합니다.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see langword="DataRelation" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">
        <paramref name="relation" /> 매개 변수가 null 값인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">지정된 이름의 관계가 컬렉션에 이미 있는 경우. 대/소문자를 구분하지 않고 비교합니다.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">지정된 이름, 부모 및 자식 열을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the relation.">관계의 이름입니다.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">이 관계의 부모 열입니다.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">해당 관계의 자식 열입니다.</param>
      <returns vsli:raw="The created relation.">만든 관계를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">지정된 이름, 부모 및 자식 열, <paramref name="createConstraints" /> 매개 변수의 값에 따른 추가 제약 조건을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the relation.">관계의 이름입니다.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">이 관계의 부모 열입니다.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">해당 관계의 자식 열입니다.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">제약 조건을 만들려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 여기에서 기본값은 <see langword="true" />입니다.</param>
      <returns vsli:raw="The created relation.">만든 관계를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">지정된 이름과 부모 및 자식 열로 이루어진 배열을 가지는 <see cref="T:System.Data.DataRelation" />을 만들어 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">만들 <see langword="DataRelation" />의 이름입니다.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">부모 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">자식 <see langword="DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">만든 <see langword="DataRelation" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">관계 이름이 null 값인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">컬렉션에 이름이 같은 관계가 이미 있는 경우. 대/소문자를 구분하지 않고 비교합니다.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">지정된 이름, 부모 및 자식 열로 이루어진 배열, 제약 조건을 만들지 여부를 지정하는 값을 가지는 <see cref="T:System.Data.DataRelation" />을 만들어 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">만들 <see langword="DataRelation" />의 이름입니다.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">부모 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">자식 <see langword="DataColumn" /> 개체로 이루어진 배열입니다.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">제약 조건을 만들려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The created relation.">만든 관계를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">관계 이름이 null 값인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">컬렉션에 이름이 같은 관계가 이미 있는 경우. 대/소문자를 구분하지 않고 비교합니다.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">테이블의 유효성을 확인합니다.</summary>
      <param name="relation" vsli:raw="The relation to check.">확인할 관계입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">관계가 null인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">컬렉션에 이름이 같은 관계가 이미 있는 경우. 대/소문자를 구분하지 않고 비교합니다.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">지정된 <see cref="T:System.Data.DataRelation" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.DataRelation" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">지정된 <see cref="T:System.Data.DataRelation" />를 컬렉션에서 제거할 수 있는지 여부를 확인합니다.</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">확인할 관계입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />을 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">모든 관계의 컬렉션을 지웁니다.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">컬렉션이 변경될 때 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">특정 이름(대/소문자 구분)의 <see cref="T:System.Data.DataRelation" />이 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">찾을 관계의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 이름의 관계가 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">
        <see cref="T:System.Data.DataRelation" /> 개체의 컬렉션을 지정된 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">컬렉션을 복사할 대상인 <see cref="T:System.Data.DataRelation" /> 개체의 배열입니다.</param>
      <param name="index" vsli:raw="The index to start from.">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">이 메서드는 .NET Framework 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="The referenced DataSet.">참조된 DataSet입니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">지정된 <see cref="T:System.Data.DataRelation" /> 개체의 인덱스를 가져옵니다.</summary>
      <param name="relation" vsli:raw="The relation to search for.">검색할 관계입니다.</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">관계의 인덱스(0부터 시작)이거나, 컬렉션에 관계가 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">이름으로 지정된 <see cref="T:System.Data.DataRelation" />의 인덱스를 가져옵니다.</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">찾을 관계의 이름입니다.</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">지정된 이름을 가진 관계의 인덱스(0부터 시작)이거나, 관계가 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Data.DataRelation" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index to find.">찾을 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">지정된 <see cref="T:System.Data.DataRelation" />이 있으면 <see cref="T:System.Data.DataRelation" />이고, 그렇지 않으면 null 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">인덱스 값이 컬렉션의 항목 수보다 큰 경우</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">이름으로 지정된 <see cref="T:System.Data.DataRelation" /> 개체를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">찾을 관계의 이름입니다.</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">지정된 <see cref="T:System.Data.DataRelation" />이 있으면 명명된 <see cref="T:System.Data.DataRelation" />이고, 그렇지 않으면 null 값입니다.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">컬렉션에서 지정된 관계를 제거합니다.</summary>
      <param name="relation" vsli:raw="The relation to remove.">제거할 관계입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">관계가 null 값인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">관계가 컬렉션에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">컬렉션에서 지정된 이름의 관계를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">제거할 관계의 이름입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">컬렉션에 지정된 이름의 관계가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">컬렉션에서 지정된 인덱스의 관계를 제거합니다.</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">제거할 관계의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">지정된 인덱스의 관계가 컬렉션에 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">지정된 <see cref="T:System.Data.DataRelation" /> 개체에 대한 유효성을 확인합니다.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">확인할 <see langword="DataRelation" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">지정된 인덱스의 관계가 컬렉션에 없는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">지정된 관계가 이 컬렉션에 속하지 않거나 다른 컬렉션에 속한 경우</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 데이터 행을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">DataRow의 새 인스턴스를 초기화합니다. 작성기에서 행을 생성합니다. 내부 전용입니다.</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">작성기입니다</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">
        <see cref="M:System.Data.DataRow.AcceptChanges" />가 마지막으로 호출된 이후 이 행에서 변경된 내용을 모두 커밋합니다.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">
        <see cref="T:System.Data.DataRow" /> 개체에 대한 편집 작업을 시작합니다.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">삭제된 행에서 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">행의 현재 편집을 취소합니다.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">행의 오류를 지웁니다. 여기에는 <see cref="P:System.Data.DataRow.RowError" /> 및 <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />와 함께 설정된 오류가 포함됩니다.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />를 삭제합니다.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">
        <see cref="T:System.Data.DataRow" />가 이미 삭제된 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">행에서 수행 중인 편집을 끝냅니다.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">제약 조건을 위반하여 편집한 경우</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">행이 테이블에 속해 있으며 편집 중에 읽기 전용 열의 값을 변경하려고 한 경우</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">편집 중에 <see cref="P:System.Data.DataColumn.AllowDBNull" />이 false인 열에 null 값을 지정하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />을 사용하여 이 <see cref="T:System.Data.DataRelation" />의 자식 행을 가져옵니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">관계가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">행에 이 버전의 데이터가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 자식 행을 가져옵니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 자식 행을 가져옵니다.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 자식 행을 가져옵니다.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">지정된 <see cref="T:System.Data.DataColumn" />의 오류 설명을 가져옵니다.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <returns vsli:raw="The text of the error description.">오류 설명 텍스트를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">지정된 인덱스를 가진 열의 오류 설명을 가져옵니다.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">열의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The text of the error description.">오류 설명 텍스트를 반환합니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">지정된 이름을 가진 열의 오류 설명을 가져옵니다.</summary>
      <param name="columnName" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The text of the error description.">오류 설명 텍스트를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">오류가 있는 열로 이루어진 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">오류가 있는 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" />이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우  
또는
행이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">자식 행에 여러 부모가 있습니다.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">이 행이 <see cref="T:System.Data.DataRelation" /> 개체의 자식 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">행이 <see langword="null" />인 경우  
또는
<paramref name="relation" />이 이 테이블의 부모 관계에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">자식 행에 여러 부모가 있습니다.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">행이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">행에 이 버전의 데이터가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">자식 행에 여러 부모가 있습니다.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">자식 행에 여러 부모가 있습니다.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />이 이 행의 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">행이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">행이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />이 이 행의 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">행이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">행이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">행에 오류가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 오류가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">지정된 버전이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">버전이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">지정된 <see cref="T:System.Data.DataColumn" />에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">지정된 <see cref="T:System.Data.DataColumn" />과 <see cref="T:System.Data.DataRowVersion" />에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">행에 요청한 <paramref name="version" />이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">지정된 인덱스의 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">열의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">
        <paramref name="columnIndex" />에 지정된 인덱스에 해당하는 열이 없습니다.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">명명된 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="columnName" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">지정된 <see cref="T:System.Data.DataColumn" />에 저장된 데이터를 가져오거나 설정합니다.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">데이터가 들어 있는 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">데이터가 포함된 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">열이 이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" />가 null인 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">삭제된 행에 값을 설정하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">값과 열의 데이터 형식이 일치하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">지정된 <see cref="T:System.Data.DataColumn" />에 저장된 특정 버전의 데이터를 가져옵니다.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">열에 대한 정보가 들어 있는 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">데이터가 포함된 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">열이 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">
        <paramref name="column" /> 인수에 null이 포함된 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">행에 이 버전의 데이터가 없는 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">지정된 인덱스를 가진 열에 저장된 데이터를 가져오거나 설정합니다.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">열의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">데이터가 포함된 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">삭제된 행에 값을 설정하려고 하는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">값과 새 값의 <see cref="T:System.Type" /> 설정이 <see cref="P:System.Data.DataColumn.DataType" />과 일치하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">검색할 데이터의 지정된 버전 및 인덱스를 가진 열에 저장된 데이터를 가져옵니다.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">열의 인덱스(0부터 시작)입니다.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">데이터가 포함된 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">값과 열의 데이터 형식이 일치하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">행에 이 버전의 데이터가 없는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">삭제된 행에 값을 설정하려고 한 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">지정된 이름을 가진 열에 저장된 데이터를 가져오거나 설정합니다.</summary>
      <param name="columnName" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">데이터가 포함된 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">삭제된 행에 값을 설정하려고 하는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">설정한 값에 대해 해당 <see cref="T:System.Type" />이 <see cref="P:System.Data.DataColumn.DataType" />과 일치하지 않는 경우</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" />이 <see langword="false" />로 설정된 열에 null 값을 삽입하려고 할 때 발생합니다.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">명명된 열에 저장된 특정 버전의 데이터를 가져옵니다.</summary>
      <param name="columnName" vsli:raw="The name of the column.">열 이름입니다.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">데이터가 포함된 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">값과 열의 데이터 형식이 일치하지 않는 경우</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">행에 이 버전의 데이터가 없는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">행이 삭제된 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">배열을 통해 이 행의 모든 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">배열이 테이블의 열 수보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">배열의 값이 해당 <see cref="P:System.Data.DataColumn.DataType" />의 <see cref="T:System.Data.DataColumn" />과 일치하지 않는 경우</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">제약 조건을 위반하여 편집한 경우</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">편집 중에 읽기 전용 열의 값을 변경하려고 한 경우</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">편집 중에 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 개체의 <see cref="T:System.Data.DataColumn" />이 <see langword="false" />인 열에 null 값을 지정하려고 한 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">행이 삭제된 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">
        <see cref="M:System.Data.DataRow.AcceptChanges" />를 마지막으로 호출한 이후에 수행된 행의 모든 변경 내용을 취소합니다.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">행이 테이블에 속하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">행에 대한 사용자 지정 오류 설명을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The text describing an error.">오류를 설명하는 텍스트입니다.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRowCollection" />과의 관계와 관련하여 행의 현재 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">
        <see cref="P:System.Data.DataRow.RowState" />의 <see cref="T:System.Data.DataRow" />를 <see langword="Added" />로 변경합니다.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />으로 지정된 열에 대한 오류 설명을 설정합니다.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">오류 설명을 설정할 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="error" vsli:raw="The error description.">오류 설명입니다.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">지정된 인덱스를 가진 열에 대한 오류 설명을 설정합니다.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">열의 인덱스(0부터 시작)입니다.</param>
      <param name="error" vsli:raw="The error description.">오류 설명입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">
        <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">지정된 이름을 가진 열에 대한 오류 설명을 설정합니다.</summary>
      <param name="columnName" vsli:raw="The name of the column.">열 이름입니다.</param>
      <param name="error" vsli:raw="The error description.">오류 설명입니다.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">
        <see cref="P:System.Data.DataRow.RowState" />의 <see cref="T:System.Data.DataRow" />를 <see langword="Modified" />로 변경합니다.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">지정된 <see cref="T:System.Data.DataColumn" />의 값을 null 값으로 설정합니다.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">지정된 새 부모 <see cref="T:System.Data.DataRow" />를 가지는 <see cref="T:System.Data.DataRow" />의 부모 행을 설정합니다.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">새 부모 <see cref="T:System.Data.DataRow" />입니다.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">지정된 새 부모 <see cref="T:System.Data.DataRow" />와 <see cref="T:System.Data.DataRow" />을 가지는 <see cref="T:System.Data.DataRelation" />의 부모 행을 설정합니다.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">새 부모 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">사용할 관계 <see cref="T:System.Data.DataRelation" />입니다.</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">행 중의 하나가 테이블에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">행 중 하나가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">관계가 <see cref="T:System.Data.DataRelationCollection" /> 개체의 <see cref="T:System.Data.DataSet" />에 속하지 않은 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">관계의 자식 <see cref="T:System.Data.DataTable" />이 이 행이 속한 테이블이 아닌 경우</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">이 행에 스키마가 있는 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">이 행이 속한 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />에서 수행된 작업을 설명합니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">행이 테이블에 추가되었습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">행이 변경되었습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">행의 원래 버전과 현재 버전이 변경되었습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">행의 원래 버전이 변경되었습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">행의 변경 내용이 커밋되었습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">테이블에서 행을 삭제했습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">행이 변경되지 않았습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">행에 대한 가장 최근의 변경이 롤백되었습니다.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">
        <see langword="DataRowBuilder" /> 형식은 .NET Framework 인프라를 지원하며 사용자의 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">
        <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> 및 <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">작업을 수행할 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />에서 수행한 작업을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowAction" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">작업을 수행한 행을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">작업을 수행한 <see cref="T:System.Data.DataRow" />입니다.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="E:System.Data.DataTable.RowChanging" />의 <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" />, <see cref="E:System.Data.DataTable.RowDeleted" /> 및 <see cref="T:System.Data.DataTable" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 대한 행 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">지정된 <see cref="T:System.Data.DataRow" />를 <see cref="T:System.Data.DataRowCollection" /> 개체에 추가합니다.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">추가할 <see cref="T:System.Data.DataRow" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">행이 null인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">이 행이 다른 테이블에 속하거나 이 테이블에 이미 속해 있는 경우</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">추가로 인해 제약 조건이 무효화되는경우</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">추가하는 동안 <see cref="T:System.Data.DataColumn" />이 false인 <see cref="P:System.Data.DataColumn.AllowDBNull" />에 null을 삽입하려고 하는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">지정한 값을 사용하여 행을 만들고 그 행을 <see cref="T:System.Data.DataRowCollection" />에 추가합니다.</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">새 행을 만드는데 사용하는 값 배열입니다.</param>
      <returns vsli:raw="The new row.">없음</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">배열이 테이블의 열 수보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">값이 해당 열 형식과 일치하지 않는 경우</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">행을 추가하여 제약 조건을 무효화한 경우</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" />이 false인 열에 null을 설정하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">모든 행의 컬렉션을 지웁니다.</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" />에 <see cref="T:System.Data.DataRowCollection" />가 적용되는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">컬렉션에 있는 모든 행의 기본 키에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">테스트할 기본 키 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 기본 키 값이 있는 <see cref="T:System.Data.DataRow" />가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">이 테이블에 기본 키가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">컬렉션에 있는 모든 행의 기본 키 열에 개체 배열에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">테스트할 기본 키 값 배열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 키 값이 있는 <see cref="T:System.Data.DataRowCollection" />가 <see cref="T:System.Data.DataRow" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">이 테이블에 기본 키가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">컬렉션의 모든 <see cref="T:System.Data.DataRow" /> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">
        <see langword="DataRowCollection" />에서 복사한 요소의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">컬렉션의 모든 <see cref="T:System.Data.DataRow" /> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">
        <see langword="DataRowCollection" />에서 복사한 요소의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">이 컬렉션에 있는 <see cref="T:System.Data.DataRow" /> 개체의 총 수를 가져옵니다.</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">이 컬렉션에 있는 <see cref="T:System.Data.DataRow" /> 개체의 총 수입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">기본 키 값으로 지정한 행을 가져옵니다.</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">찾을 <see cref="T:System.Data.DataRow" />의 기본 키 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">지정한 기본 키 값이 있는 <see cref="T:System.Data.DataRow" />이거나, 기본 키가 <see cref="T:System.Data.DataRowCollection" />에 없으면 null 값입니다.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">이 테이블에 기본 키가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">지정한 기본 키 값이 있는 행을 가져옵니다.</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">찾을 기본 키 값 배열입니다. 이 배열의 형식은 <see langword="Object" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">지정한 기본 키 값이 있는 <see cref="T:System.Data.DataRow" /> 개체이거나, 기본 키 값이 <see cref="T:System.Data.DataRowCollection" />에 없으면 null 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">그 인덱스 값에 일치하는 행이 없는 경우</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">이 테이블에 기본 키가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">이 컬렉션의 <see cref="T:System.Collections.IEnumerator" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">이 컬렉션의 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">지정된 <see cref="T:System.Data.DataRow" /> 개체의 인덱스를 가져옵니다.</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">검색할 <see langword="DataRow" />입니다.</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">행의 인덱스(0부터 시작)이거나, 행이 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">컬렉션의 지정한 위치에 새 행을 삽입합니다.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">추가할 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">
        <see langword="DataRow" />를 추가하려는 컬렉션에 있는 0에서 시작하는 위치입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">
        <paramref name="pos" />가 0보다 작은 경우</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">지정된 인덱스의 행을 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">반환할 행의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">인덱스 값이 컬렉션의 항목 수보다 큰 경우</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">지정된 <see cref="T:System.Data.DataRow" />를 컬렉션에서 제거합니다.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">제거할 <see cref="T:System.Data.DataRow" />입니다.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">컬렉션에서 지정된 인덱스의 행을 제거합니다.</summary>
      <param name="index" vsli:raw="The index of the row to remove.">제거할 행의 인덱스입니다.</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">
        <see cref="T:System.Data.DataRowComparer`1" /> 클래스의 singleton 인스턴스를 반환합니다.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">
        <see cref="T:System.Data.DataRowComparer`1" />의 singleton 인스턴스를 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" />의 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">값 기반 비교를 사용하여 두 <see cref="T:System.Data.DataRow" /> 개체가 같은지 비교합니다.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">비교할 개체의 형식으로 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">
        <see cref="T:System.Data.DataRowComparer`1" />의 singleton 인스턴스를 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">열 단위 값 기반 비교를 사용하여 두 <see cref="T:System.Data.DataRow" /> 개체를 비교합니다.</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">비교할 첫 번째 <see cref="T:System.Data.DataRow" /> 개체입니다.</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">비교할 두 번째 <see cref="T:System.Data.DataRow" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Data.DataRow" /> 개체에 동일한 열 값으로 구성된 순서 있는 집합이 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">소스 <see cref="T:System.Data.DataRow" /> 개체 중 하나 또는 모두가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">지정된 <see cref="T:System.Data.DataRow" /> 개체의 해시 코드를 반환합니다.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">해시 코드를 컴퓨팅할 <see cref="T:System.Data.DataRow" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">행의 해시 코드를 나타내는 <see cref="T:System.Int32" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">소스 <see cref="T:System.Data.DataRow" /> 개체가 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">소스 <see cref="T:System.Data.DataRow" /> 개체가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">
        <see cref="T:System.Data.DataRow" /> 클래스에 대한 확장 메서드를 정의합니다. 이 클래스는 static 클래스입니다.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">값을 반환할 열을 지정하는 입력 <see cref="T:System.Data.DataColumn" /> 개체입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">
        <paramref name="T" />으로 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="column" /> 형식 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">nullable이 아닌 형식에 null 값이 할당됩니다.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">값을 반환할 열을 지정하는 입력 <see cref="T:System.Data.DataColumn" /> 개체입니다.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">반환할 열 값의 버전을 지정하는 <see langword="Current" /> 또는 <see langword="Original" /> 버전 등의 <see cref="T:System.Data.DataRowVersion" /> 열거형입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> 및 <paramref name="column" />에 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="version" /> 형식 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">nullable이 아닌 형식에 null 값이 할당됩니다.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="columnIndex" vsli:raw="The column index.">열 인덱스입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">
        <paramref name="T" />으로 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="columnIndex" /> 형식 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">nullable이 아닌 형식에 null 값이 할당됩니다.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">값을 반환할 열의 서수(0부터 시작)입니다.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">반환할 열 값의 버전을 지정하는 <see langword="Current" /> 또는 <see langword="Original" /> 버전 등의 <see cref="T:System.Data.DataRowVersion" /> 열거형입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> 및 <paramref name="ordinal" />에 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="version" /> 형식 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">nullable이 아닌 형식에 null 값이 할당됩니다.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">값을 반환할 열의 이름입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">
        <paramref name="T" />으로 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="columnName" /> 형식 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">nullable이 아닌 형식에 <see langword="null" /> 값이 할당된 경우</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">값을 반환할 열의 이름입니다.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">반환할 열 값의 버전을 지정하는 <see langword="Current" /> 또는 <see langword="Original" /> 버전 등의 <see cref="T:System.Data.DataRowVersion" /> 열거형입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> 및 <paramref name="columnName" />에 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="version" /> 형식 값입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">nullable이 아닌 형식에 null 값이 할당됩니다.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">
        <see cref="T:System.Data.DataRow" />에서 지정된 열의 새 값을 설정합니다. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">입력 <see cref="T:System.Data.DataColumn" />은 검색할 행 값을 지정합니다.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">지정된 열의 새 행 값(<paramref name="T" /> 형식)입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">
        <paramref name="column" />에서 지정한 열을 찾을 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" />이 null입니다.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">삭제된 행에 값을 설정하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">메서드가 호출된 <see cref="T:System.Data.DataRow" />에서 지정된 열의 새 값을 설정합니다. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">값을 설정할 열의 서수(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">지정된 열의 새 행 값(<paramref name="T" /> 형식)입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">삭제된 행에 값을 설정하려고 한 경우</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">
        <paramref name="ordinal" /> 인수가 범위를 벗어난 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">
        <see cref="T:System.Data.DataRow" />에서 지정된 열의 새 값을 설정합니다. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> 메서드는 nullable 형식도 지원합니다.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">값을 설정할 열의 이름입니다.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">지정된 열의 새 행 값(<paramref name="T" /> 형식)입니다.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">삭제된 행에 값을 설정하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">
        <see cref="T:System.Data.DataRow" /> 개체의 상태를 가져옵니다.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">행이 <see cref="T:System.Data.DataRowCollection" />에 추가되었으며 <see cref="M:System.Data.DataRow.AcceptChanges" />는 호출되지 않았습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.Delete" />의 <see cref="T:System.Data.DataRow" /> 메서드를 사용하여 행을 삭제했습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">행이 만들어졌지만 <see cref="T:System.Data.DataRowCollection" />의 일부는 아닙니다. <see cref="T:System.Data.DataRow" />는 만들어진 직후 및 컬렉션에 추가되기 전 또는 컬렉션에서 제거된 경우 이 상태가 됩니다.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">행이 수정되었으며 <see cref="M:System.Data.DataRow.AcceptChanges" />는 호출되지 않았습니다.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">
        <see cref="M:System.Data.DataRow.AcceptChanges" />가 마지막으로 호출된 이후에 행이 변경되지 않았습니다.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 버전을 설명합니다.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">행에 현재 값이 포함됩니다.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowState" />의 기본 버전입니다. <see langword="DataRowState" /> 값이 <see langword="Added" />, <see langword="Modified" /> 또는 <see langword="Deleted" />인 경우 기본 버전은 <see langword="Current" />입니다. <see cref="T:System.Data.DataRowState" /> 값이 <see langword="Detached" />인 경우 버전은 <see langword="Proposed" />입니다.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">행에 원래 값이 포함됩니다.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">행에 제안된 값이 포함됩니다.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 사용자 지정 뷰를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">편집 프로시저를 시작합니다.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">편집 프로시저를 취소합니다.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">지정된 자식 <see cref="T:System.Data.DataView" />이 있는 자식 <see cref="T:System.Data.DataTable" />에 대한 <see cref="T:System.Data.DataRelation" />를 반환합니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> 개체</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">자식 <see cref="T:System.Data.DataView" />에 대한 <see cref="T:System.Data.DataTable" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">지정된 <see cref="T:System.Data.DataView" /> 및 부모가 있는 자식 <see cref="T:System.Data.DataTable" />에 대한 <see cref="T:System.Data.DataRelation" />를 반환합니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> 개체</param>
      <param name="followParent" vsli:raw="The parent object.">부모 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">자식 <see cref="T:System.Data.DataView" />에 대한 <see cref="T:System.Data.DataTable" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">지정된 자식 <see cref="T:System.Data.DataView" /> 이름이 있는 자식 <see cref="T:System.Data.DataTable" />에 대한 <see cref="T:System.Data.DataRelation" />를 반환합니다.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">
        <see cref="T:System.Data.DataRelation" /> 이름을 포함하는 문자열입니다.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">자식 <see cref="T:System.Data.DataView" />에 대한 <see cref="T:System.Data.DataTable" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">지정된 <see cref="T:System.Data.DataView" /> 이름 및 부모가 있는 자식 <see cref="T:System.Data.DataTable" />에 대한 <see cref="T:System.Data.DataRelation" />를 반환합니다.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">
        <see cref="T:System.Data.DataRelation" /> 이름을 포함하는 문자열입니다.</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">만든 자식 뷰를 부모와 동기화된 상태로 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">자식 <see cref="T:System.Data.DataView" />에 대한 <see cref="T:System.Data.DataTable" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">이 행이 속한 <see cref="T:System.Data.DataView" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">이 행이 속한 <see langword="DataView" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">행을 삭제합니다.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">기본 <see cref="T:System.Data.DataRow" />에 대한 변경 내용을 커밋하고 <see cref="M:System.Data.DataRowView.BeginEdit" />로 시작된 편집 세션을 끝냅니다.  <see cref="M:System.Data.DataRowView.CancelEdit" />를 사용하여 <see cref="T:System.Data.DataRow" />에 대한 변경 내용을 취소합니다.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">현재 <see cref="T:System.Data.DataRowView" />가 지정된 개체와 같은지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="object" />가 <see cref="T:System.Data.DataRowView" />이고 현재 <see cref="T:System.Data.DataRowView" />와 같은 행을 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">
        <see cref="T:System.Data.DataRow" /> 개체의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">이 인스턴스의 값이 0이 아니면 부울 <see langword="true" />를 나타내는 부호 있는 32비트 정수 해시 코드 1을 반환하고, 그렇지 않으면 부울 <see langword="false" />를 나타내는 정수 0을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">행이 편집 모드인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">행이 편집 모드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">
        <see cref="T:System.Data.DataRowView" />가 새 행인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">새 행이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">지정된 열에 있는 값을 가져오거나 설정합니다.</summary>
      <param name="ndx" vsli:raw="The column index.">열 인덱스입니다.</param>
      <returns vsli:raw="The value of the column.">열의 값입니다.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">
        <see cref="P:System.Data.DataRowView.DataView" />에서는 편집을 허용하지 않으며 <see cref="T:System.Data.DataRowView" />가 신규가 아닙니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">해당 인덱스 값에 일치하는 열이 없습니다.</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">지정된 열에 있는 값을 가져오거나 설정합니다.</summary>
      <param name="property" vsli:raw="String that contains the specified column.">지정된 열이 있는 문자열입니다.</param>
      <returns vsli:raw="The value of the column.">열의 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">지정된 이름 또는 관계의 열을 찾을 수 없습니다.
또는
<see cref="P:System.Data.DataRowView.DataView" />에서는 편집을 허용하지 않으며 <see cref="T:System.Data.DataRowView" />가 신규가 아닙니다.</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">
        <see cref="T:System.Data.DataRowView" /> 속성이 변경되면 발생하는 이벤트입니다.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">표시되는 <see cref="T:System.Data.DataRow" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />로 표시되는 <see cref="T:System.Data.DataRowView" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />에 대한 현재 버전 설명을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. <see cref="P:System.Data.DataRowView.RowVersion" /> 속성의 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">해당 구성 요소 인스턴스에 대한 사용자 지정 특성의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">이 개체에 대한 특성을 포함하는 AttributeCollection입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">해당 구성 요소 인스턴스의 클래스 이름을 반환합니다.</summary>
      <returns vsli:raw="The class name of this instance of a component.">구성 요소의 이 인스턴스의 클래스 이름입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">해당 구성 요소 인스턴스의 이름을 반환합니다.</summary>
      <returns vsli:raw="The name of this instance of a component.">해당 구성 요소 인스턴스의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">해당 구성 요소 인스턴스에 대한 형식 변환기를 반환합니다.</summary>
      <returns vsli:raw="The type converter for this instance of a component.">이 구성 요소 인스턴스에 대한 형식 변환기입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">해당 구성 요소 인스턴스의 기본 이벤트를 반환합니다.</summary>
      <returns vsli:raw="The default event for this instance of a component.">이 구성 요소 인스턴스의 기본 이벤트입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">해당 구성 요소 인스턴스의 기본 속성을 반환합니다.</summary>
      <returns vsli:raw="The default property for this instance of a component.">이 구성 요소 인스턴스의 기본 속성입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">해당 구성 요소 인스턴스에 대한 지정된 형식의 편집기를 반환합니다.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">해당 개체의 편집기를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">해당 개체의 편집기인 지정된 형식의 <see cref="T:System.Object" />이거나, 편집기를 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">해당 구성 요소 인스턴스의 이벤트를 반환합니다.</summary>
      <returns vsli:raw="The events for this instance of a component.">이 구성 요소 인스턴스의 이벤트입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">지정된 특성이 있는 구성 요소의 이 인스턴스에 대한 이벤트를 반환합니다.</summary>
      <param name="attributes" vsli:raw="The attributes.">특성</param>
      <returns vsli:raw="The events for this instance of a component.">이 구성 요소 인스턴스의 이벤트입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">해당 구성 요소 인스턴스의 속성을 반환합니다.</summary>
      <returns vsli:raw="The properties for this instance of a component.">해당 구성 요소 인스턴스의 속성입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">지정된 특성이 있는 구성 요소의 이 인스턴스에 대한 속성을 반환합니다.</summary>
      <param name="attributes" vsli:raw="The attributes.">특성입니다.</param>
      <returns vsli:raw="The properties for this instance of a component.">해당 구성 요소 인스턴스의 속성입니다.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">지정된 속성 설명자가 설명하는 속성이 포함된 개체를 반환합니다.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">소유자가 있는 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">지정된 속성의 소유자를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">개체에 대한 유효성 검사 오류를 설명하는 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The validation error on the object.">프로젝트에 유효성 검사 오류가 있습니다.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">지정된 이름의 속성에 대한 오류 메시지를 가져옵니다.</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">오류 메시지를 가져올 해당 속성의 이름입니다.</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">해당 속성에 대한 오류 메시지입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">데이터의 인-메모리 캐시를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">
        <see cref="T:System.Data.DataSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">지정한 serialization 정보와 컨텍스트가 있는 <see cref="T:System.Data.DataSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">serialize된 특정 스트림의 소스와 대상입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">
        <see cref="T:System.Data.DataSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체</param>
      <param name="ConstructSchema" vsli:raw="">부울 값입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">지정된 이름을 사용하여 <see cref="T:System.Data.DataSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 이름입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">이 <see cref="T:System.Data.DataSet" />이 로드된 이후 또는 <see cref="M:System.Data.DataSet.AcceptChanges" />가 마지막으로 호출된 이후에 변경된 DataSet의 모든 내용을 커밋합니다.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataSet" />의 초기화를 시작합니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">
        <see cref="T:System.Data.DataTable" /> 개체에서 문자열을 비교할 때 대/소문자를 구분하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />문자열 비교 시 대/소문자를 구분 하면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">모든 테이블에서 행을 모두 제거하여 데이터의 <see cref="T:System.Data.DataSet" />을 지웁니다.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">모든 <see cref="T:System.Data.DataSet" /> 스키마, 관계 및 제약 조건을 포함하여 <see cref="T:System.Data.DataTable" />의 구조를 복사합니다. 데이터는 복사하지 않습니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">현재 <see cref="T:System.Data.DataSet" />과 같은 스키마를 가지지만 데이터가 없는 새 <see cref="T:System.Data.DataSet" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">이 <see cref="T:System.Data.DataSet" />의 구조와 데이터를 모두 복사합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">이 <see cref="T:System.Data.DataSet" />과 같은 구조(테이블 스키마, 관계 및 제약 조건)와 데이터를 가진 새 <see cref="T:System.Data.DataSet" />을 반환합니다.  
   
 이 클래스가 서브클래싱된 경우 서브클래스도 복사됩니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">테이블이 <see cref="T:System.Data.DataTableReader" /> 컬렉션에 나타나는 순서대로 <see cref="T:System.Data.DataTable" />마다 결과 집합이 하나씩 있는 <see cref="P:System.Data.DataSet.Tables" />를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">결과 집합을 하나 이상 포함하는 <see cref="T:System.Data.DataTableReader" />이고, 소스 <see cref="T:System.Data.DataTable" />에 포함된 <see cref="T:System.Data.DataSet" /> 인스턴스에 해당합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />마다 결과 집합이 하나씩 있는 <see cref="T:System.Data.DataTable" />를 반환합니다.</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />에 반환될 결과 집합의 순서를 제공하는 DataTables의 배열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">결과 집합을 하나 이상 포함하는 <see cref="T:System.Data.DataTableReader" />이고, 소스 <see cref="T:System.Data.DataTable" />에 포함된 <see cref="T:System.Data.DataSet" /> 인스턴스에 해당합니다. 반환된 결과 집합은 <paramref name="dataTables" /> 매개 변수에 의해 지정된 순서를 따릅니다.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">현재 <see cref="T:System.Data.DataSet" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 이름입니다.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">사용자 지정 <see cref="T:System.Data.DataSet" />를 사용하여 필터링, 검색 및 탐색 작업을 수행할 수 있도록 <see cref="T:System.Data.DataViewManager" />에 포함된 데이터의 사용자 지정 뷰를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="P:System.Data.DataSet.SchemaSerializationMode" />의 <see cref="T:System.Data.DataSet" />를 확인합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">원격 시나리오에서 deserialization을 수행하는 동안 <see langword="DataSet" />의 protected 생성자 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 호출하는 데 사용되는 <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">원격 시나리오에서 deserialization을 수행하는 동안 <see langword="DataSet" />의 protected 생성자 <see cref="T:System.Runtime.Serialization.StreamingContext" />를 호출하는 데 사용되는 <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">스키마 정보가 페이로드에서 생략되었는지 여부를 나타내는 <see cref="T:System.Data.SchemaSerializationMode" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="P:System.Data.DataSet.SchemaSerializationMode" />의 <see cref="T:System.Data.DataSet" />를 확인합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />을 deserialization을 수행하는 동안 전달되는 <see cref="T:System.Data.DataSet" /> 인스턴스입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">스키마 정보가 페이로드에서 생략되었는지 여부를 나타내는 <see cref="T:System.Data.SchemaSerializationMode" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataSet" />의 초기화를 끝냅니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">업데이트 작업을 수행할 때 제약 조건 규칙을 따르는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />규칙이 적용 되 면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">제약 조건을 적용할 수 없는 경우</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see langword="DataSet" />에 연결된 사용자 지정 사용자 정보의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">모든 사용자 지정 사용자 정보가 있는 <see cref="T:System.Data.PropertyCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">로드되거나 <see cref="T:System.Data.DataSet" />가 마지막으로 호출된 후에 변경된 내용이 모두 들어 있는 <see cref="M:System.Data.DataSet.AcceptChanges" />의 복사본을 가져옵니다.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">작업을 수행한 다음 <see cref="T:System.Data.DataSet" />를 사용하여 다시 병합할 수 있는 경우 이 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />의 변경 사항 복사본을 반환합니다. 변경된 행이 없으면 메서드는 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">마지막으로 로드되거나 <see cref="T:System.Data.DataSet" />가 호출된 후에 변경되어 <see cref="M:System.Data.DataSet.AcceptChanges" />를 기준으로 필터링된 내용이 모두 들어 있는 <see cref="T:System.Data.DataRowState" />의 복사본을 가져옵니다.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">작업을 수행한 다음 <see cref="T:System.Data.DataSet" />를 사용하여 다시 병합할 수 있는 경우 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />의 필터링된 복사본을 반환합니다. 원하는 <see cref="T:System.Data.DataRowState" /> 행이 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">DataSet에 대한 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 복사본을 가져옵니다.</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">지정된 스키마 집합입니다.</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />을 serialize하는 데 필요한 데이터로 serialization 정보 개체를 채웁니다.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />과 연결된 serialize된 개체가 들어 있는 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />과 연결된 serialize된 스트림의 소스와 대상이 들어 있는 <see cref="T:System.Data.DataSet" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">serializable <see cref="T:System.Xml.Schema.XmlSchema" /> 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">이진 또는 XML 스트림에서 테이블 데이터를 deserialize합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스입니다.</param>
      <param name="context" vsli:raw="The streaming context.">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 저장된 데이터의 XML 표현을 반환합니다.</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 저장된 데이터를 나타내는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 저장된 데이터의 XML 표현에 대한 XML 스키마를 반환합니다.</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 저장된 데이터의 XML 표현에 대한 XML 스키마 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">
        <see cref="T:System.Data.DataSet" />에 새 행, 삭제된 행 또는 수정된 행을 포함하여 변경 내용이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 변경 내용이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 새 행, 삭제된 행 또는 수정된 행을 포함하여 <see cref="T:System.Data.DataRowState" />를 기준으로 필터링된 변경 내용이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 값 중 하나입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 변경 내용이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">이 <see cref="T:System.Data.DataTable" /> 내의 <see cref="T:System.Data.DataSet" /> 개체에 오류가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />테이블에 오류가 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.IO.Stream" />에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 적용합니다.</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">스키마를 읽어올 <see langword="Stream" />입니다.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">스키마 유추에서 제외할 네임스페이스 URI(Uniform Resource Identifier) 문자열로 이루어진 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.IO.TextReader" />에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 적용합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">스키마를 읽어올 <see langword="TextReader" />입니다.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">스키마 유추에서 제외할 네임스페이스 URI(Uniform Resource Identifier) 문자열로 이루어진 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 파일에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 적용합니다.</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">스키마를 읽어올 파일의 경로를 포함한 이름입니다.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">스키마 유추에서 제외할 네임스페이스 URI(Uniform Resource Identifier) 문자열로 이루어진 배열입니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" />이 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 적용합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">스키마를 읽어올 <see langword="XMLReader" />입니다.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">스키마 유추에서 제외할 네임스페이스 URI(Uniform Resource Identifier) 문자열로 이루어진 배열입니다.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataSet" />이 초기화된 후 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">이진 또는 XML 스트림에서 DataSet의 모든 테이블 데이터를 deserialize합니다.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see langword="DataSet" />의 serialize된 표현에 대한 형식을 검사합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />가 이진 형식으로 serialize된 <see langword="true" />을 나타내면 <see langword="DataSet" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataSet" />이 초기화되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 요소의 초기화가 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">
        <see cref="T:System.Data.DataSet" /> 인스턴스의 배열을 사용해 스키마 및 네임스페이스 정보를 제공하여, 제공된 <see cref="T:System.Data.IDataReader" />를 사용하는 데이터 소스의 값으로 <see cref="T:System.Data.DataTable" />을 채웁니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">하나 이상의 결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 열거형의 값으로서, 이미 <see cref="T:System.Data.DataTable" />의 <see cref="T:System.Data.DataSet" /> 인스턴스에 있는 행이 동일한 기본 키를 공유하는 들어오는 행과 결합되는 방식을 나타냅니다.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 메서드가 이름 및 네임스페이스 정보를 검색하는 <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> 인스턴스의 배열입니다. 이러한 테이블은 각각 이 <see cref="T:System.Data.DataTableCollection" />에 포함된 <see cref="T:System.Data.DataSet" />의 멤버여야 합니다.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">
        <see cref="T:System.Data.DataSet" /> 인스턴스의 배열을 사용해 스키마 및 네임스페이스 정보를 제공하여, 제공된 <see cref="T:System.Data.IDataReader" />를 사용하는 데이터 소스의 값으로 <see cref="T:System.Data.DataTable" />을 채웁니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">하나 이상의 결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 열거형의 값으로서, 이미 <see cref="T:System.Data.DataTable" />의 <see cref="T:System.Data.DataSet" /> 인스턴스에 있는 행이 동일한 기본 키를 공유하는 들어오는 행과 결합되는 방식을 나타냅니다.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">데이터를 로드하는 동안 오류가 발생하면 호출할 <see cref="T:System.Data.FillErrorEventHandler" /> 대리자입니다.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">
        <see cref="T:System.Data.DataTable" /> 메서드가 이름 및 네임스페이스 정보를 검색하는 <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> 인스턴스의 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">문자열의 배열을 사용해 <see langword="DataSet" /> 내의 테이블에 대한 이름을 제공하여, 제공된 <see cref="T:System.Data.DataSet" />를 사용하는 데이터 소스의 값으로 <see cref="T:System.Data.IDataReader" />를 채웁니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">하나 이상의 결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 열거형의 값으로서, 이미 <see cref="T:System.Data.DataTable" />의 <see langword="DataSet" /> 인스턴스에 있는 행이 동일한 기본 키를 공유하는 들어오는 행과 결합되는 방식을 나타냅니다.</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">
        <see langword="Load" /> 메서드가 테이블 이름 정보를 검색하는 문자열의 배열입니다.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">테이블 내의 문자열을 비교하는 데 사용되는 로캘 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">사용자의 컴퓨터 로캘에 대한 데이터가 들어 있는 <see cref="T:System.Globalization.CultureInfo" />입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 개체의 배열을 현재 <see cref="T:System.Data.DataSet" />에 병합합니다.</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see langword="DataRow" />에 병합되는 <see langword="DataSet" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">
        <see cref="T:System.Data.DataRow" /> 개체의 배열을 현재 <see cref="T:System.Data.DataSet" />에 병합합니다. 이때 지정된 인수에 따라 <see langword="DataSet" />의 변경 내용을 유지하거나 삭제하고 호환되지 않는 스키마를 처리합니다.</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />에 병합되는 <see langword="DataSet" /> 개체의 배열입니다.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="DataSet" />의 변경 내용을 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" /> 및 스키마를 현재 <see langword="DataSet" />에 병합합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">데이터와 스키마를 병합할 <see langword="DataSet" />입니다.</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">제약 조건을 사용할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">지정된 <see cref="T:System.Data.DataSet" /> 및 스키마를 현재 <see langword="DataSet" />에 병합합니다. 이때 지정된 인수에 따라 이 <see langword="DataSet" />의 변경 내용을 유지하거나 삭제합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">데이터와 스키마를 병합할 <see langword="DataSet" />입니다.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 <see langword="DataSet" />의 변경 내용을 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">지정된 <see cref="T:System.Data.DataSet" /> 및 스키마를 현재 <see langword="DataSet" />에 병합합니다. 이때 지정된 인수에 따라 현재 <see langword="DataSet" />의 변경 내용을 유지하거나 삭제하고 호환되지 않는 스키마를 처리합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">데이터와 스키마를 병합할 <see langword="DataSet" />입니다.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 <see langword="DataSet" />의 변경 내용을 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" /> 및 스키마를 현재 <see cref="T:System.Data.DataSet" />에 병합합니다.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">데이터와 스키마를 병합할 <see cref="T:System.Data.DataTable" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="table" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">지정된 <see cref="T:System.Data.DataTable" /> 및 스키마를 현재 <see langword="DataSet" />과 병합합니다. 이때 지정된 인수에 따라 현재 <see langword="DataSet" />의 변경 내용을 유지하거나 삭제하고 호환되지 않는 스키마를 처리합니다.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">데이터와 스키마를 병합할 <see langword="DataTable" />입니다.</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="DataSet" />의 변경 내용을 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">대상과 소스 <see cref="T:System.Data.DataRow" />의 기본 키 값이 같고 <see cref="P:System.Data.DataSet.EnforceConstraints" />를 true로 설정한 경우 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 네임스페이스입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">네임스페이스에 데이터가 이미 있는 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">
        <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> 이벤트를 발생시킵니다.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" />에서 <see cref="T:System.Data.DataTable" /> 개체를 제거할 때 발생합니다.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">제거 중인 <see cref="T:System.Data.DataRelation" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에서 <see cref="T:System.Data.DataSet" />을 제거할 때 발생합니다.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">제거 중인 <see cref="T:System.Data.DataTable" />입니다.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 네임스페이스의 별칭인 XML 접두사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataSet" /> 네임스페이스의 XML 접두사입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">지정된 <see cref="T:System.Data.DataSet" /> 속성이 변경될 것이라는 알림을 보냅니다.</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">변경될 속성의 이름입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.IO.Stream" />으로 읽어옵니다.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />에서 파생되는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" /> 및 <see cref="T:System.IO.Stream" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.Data.XmlReadMode" />으로 읽어옵니다.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">읽어올 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see langword="XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.IO.TextReader" />으로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">스키마와 데이터를 읽어올 <see langword="TextReader" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" /> 및 <see cref="T:System.IO.TextReader" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.Data.XmlReadMode" />으로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">읽어올 <see cref="T:System.IO.TextReader" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see langword="XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">지정된 파일을 사용하여 XML 스키마와 데이터를 <see cref="T:System.Data.DataSet" />으로 읽어옵니다.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">읽어올 파일의 경로를 포함한 이름입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see langword="XmlReadMode" />를 반환합니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" />이 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">지정된 파일과 <see cref="T:System.Data.DataSet" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.Data.XmlReadMode" />으로 읽어옵니다.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">읽어올 파일의 경로를 포함한 이름입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see langword="XmlReadMode" />를 반환합니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" />이 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.Xml.XmlReader" />으로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">읽어올 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see langword="XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" /> 및 <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.Data.XmlReadMode" />으로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">읽어올 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see langword="XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.IO.Stream" />에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 읽어옵니다.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">읽어올 <see cref="T:System.IO.Stream" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.IO.TextReader" />에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">읽어올 <see cref="T:System.IO.TextReader" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 파일에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 읽어옵니다.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">읽을 파일 이름(경로 포함)입니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" />이 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />에서 <see cref="T:System.Data.DataSet" />으로 XML 스키마를 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">읽어올 <see cref="T:System.Xml.XmlReader" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">특성을 무시하고 빈 DataSet을 반환합니다.</summary>
      <param name="reader" vsli:raw="The specified XML reader.">지정된 XML 판독기입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">
        <see cref="T:System.Data.DataSet" />이 만들어진 이후 또는 <see cref="M:System.Data.DataSet.AcceptChanges" />가 마지막으로 호출된 이후에 해당 DataSet에서 변경된 내용을 모두 롤백합니다.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">테이블을 연결하고 부모 테이블에서 자식 테이블까지 탐색할 수 있는 관계 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataRelationCollection" /> 개체 컬렉션을 포함하는 <see cref="T:System.Data.DataRelation" />입니다. <see cref="T:System.Data.DataRelation" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">원격 작업 동안 사용된 <see cref="T:System.Data.SerializationFormat" />의 <see cref="T:System.Data.DataSet" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">
        <see cref="T:System.Data.SerializationFormat" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">모든 테이블을 지우고 <see cref="T:System.Data.DataSet" />에서 모든 관계, 외래 제약 조건 및 테이블을 제거합니다. 서브클래스에서 <see cref="M:System.Data.DataSet.Reset" />을 재정의하여 <see cref="T:System.Data.DataSet" />을 원래 상태로 복원해야 합니다.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" />에 대한 <see cref="T:System.Data.DataSet" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" />에 대한 <see cref="T:System.Data.DataSet" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.DataSet.Relations" /> 속성을 유지해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.DataSet.Tables" /> 속성을 유지해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" />에 대한 <see cref="T:System.Data.DataSet" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" />에 대한 <see cref="T:System.Data.DataSet" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />를 참조하십시오.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IListSource.GetList" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IListSource.GetList" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />를 참조하세요.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />를 참조하세요.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 포함된 테이블 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">이 <see cref="T:System.Data.DataTableCollection" />에 포함된 <see cref="T:System.Data.DataSet" />입니다. <see cref="T:System.Data.DataTable" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />을 사용하여 <see cref="T:System.IO.Stream" />의 현재 데이터를 씁니다.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">파일에 쓸 때 사용되는 <see cref="T:System.IO.Stream" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />와 <see cref="T:System.IO.Stream" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">파일에 쓸 때 사용되는 <see cref="T:System.IO.Stream" /> 개체입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />을 사용하여 <see cref="T:System.IO.TextWriter" />의 현재 데이터를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">쓰기에 사용할 <see cref="T:System.IO.TextWriter" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />와 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">문서를 작성하는 데 사용되는 <see cref="T:System.IO.TextWriter" /> 개체입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">지정된 파일에 <see cref="T:System.Data.DataSet" />의 현재 데이터를 씁니다.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">쓸 대상 파일 이름(경로 포함)입니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" />이 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />를 사용하여 지정된 파일에 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">쓸 대상 파일 이름(경로 포함)입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" />이 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />에 <see cref="T:System.Xml.XmlWriter" />의 현재 데이터를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">쓰기에 사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />와 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">쓰기에 사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.Data.DataSet" /> 구조체를 지정된 <see cref="T:System.IO.Stream" /> 개체에 XML 스키마로 씁니다.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">파일에 쓸 때 사용되는 <see cref="T:System.IO.Stream" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.Data.DataSet" /> 구조체를 지정된 <see cref="T:System.IO.Stream" /> 개체에 XML 스키마로 씁니다.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">쓸 <see cref="T:System.IO.Stream" /> 개체입니다.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" />을 문자열로 변환하는 데 사용되는 대리자입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">
        <see cref="T:System.Data.DataSet" /> 구조체를 지정된 <see cref="T:System.IO.TextWriter" /> 개체에 XML 스키마로 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">쓰기에 사용할 <see cref="T:System.IO.TextWriter" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />에 <see cref="T:System.IO.TextWriter" /> 구조를 XML 스키마로 씁니다.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">쓸 <see cref="T:System.IO.TextWriter" /> 개체입니다.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" />을 문자열로 변환하는 데 사용되는 대리자입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">
        <see cref="T:System.Data.DataSet" /> 구조를 파일에 XML 스키마로 씁니다.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">쓸 대상 파일 이름(경로 포함)입니다.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" />이 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">
        <see cref="T:System.Data.DataSet" /> 구조를 파일에 XML 스키마로 씁니다.</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">쓸 파일의 이름입니다.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" />을 문자열로 변환하는 데 사용되는 대리자입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Data.DataSet" /> 구조를 <see cref="T:System.Xml.XmlWriter" /> 개체에 XML 스키마로 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />에 <see cref="T:System.Xml.XmlWriter" /> 구조를 XML 스키마로 씁니다.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">쓸 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" />을 문자열로 변환하는 데 사용되는 대리자입니다.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.DateTime" />의 <see cref="T:System.Data.DataSet" /> 열에 대한 serialization 형식을 설명합니다.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" />은 항상 Local에 저장됩니다. 이 모드에서 <see cref="F:System.Data.DataSetDateTime.Utc" />나 <see cref="F:System.Data.DataSetDateTime.Unspecified" />가 열에 할당되면 먼저 Local로 변환됩니다. 이 모드에서는 serialization이 항상 Local에서 수행됩니다. serialization 도중 오프셋이 발생합니다.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" />은 항상 Unspecified에 저장됩니다. 이 모드에서 <see cref="F:System.Data.DataSetDateTime.Local" />이나 <see cref="F:System.Data.DataSetDateTime.Utc" />가 열에 할당되면 먼저 <see cref="F:System.Data.DataSetDateTime.Unspecified" />로 변환됩니다. 이 모드의 serialization은 오프셋을 발생시키지 않습니다.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" />은 Unspecified에 저장됩니다. 이 모드에서 <see cref="F:System.Data.DataSetDateTime.Local" />이나 <see cref="F:System.Data.DataSetDateTime.Utc" />가 열에 할당되면 먼저 <see cref="F:System.Data.DataSetDateTime.Unspecified" />로 변환됩니다. 이 모드의 serialization은 오프셋을 발생시킵니다. 이는 기본 동작이며 이전 버전과 호환됩니다. 이 옵션은 스토리지에서 Unspecified가 되지만 serialization을 수행하는 동안 <see cref="F:System.Data.DataSetDateTime.Local" />과 비슷한 오프셋을 적용한다고 간주됩니다.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" />은 UTC(Universal Coordinated Time)에 저장됩니다. 이 모드에서 <see cref="F:System.Data.DataSetDateTime.Local" />이나 <see cref="F:System.Data.DataSetDateTime.Unspecified" />가 열에 할당되면 먼저 <see langword="Utc" /> 형식으로 변환됩니다. 이 모드에서는 serialization이 항상 <see langword="Utc" />에서 수행됩니다. serialization 도중 오프셋이 발생하지 않습니다.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">속성, 이벤트 또는 Extender를 설명과 함께 표시합니다. 비주얼 디자이너에서는 멤버를 참조할 때 이 설명을 표시할 수 있습니다.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">지정된 설명 문자열을 사용하여 <see cref="T:System.Data.DataSysDescriptionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="description" vsli:raw="The description string.">설명 문자열입니다.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">설명 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="The description string.">설명 문자열입니다.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">메모리 내 데이터의 한 테이블을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">인수를 사용하지 않고 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">
        <see cref="T:System.Data.DataTable" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">serialize된 특정 스트림의 소스와 대상입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">지정된 테이블 이름을 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">테이블에 지정할 이름입니다. <paramref name="tableName" />이 <see langword="null" /> 또는 빈 문자열이면 <see cref="T:System.Data.DataTableCollection" />에 테이블이 추가될 때 기본 이름이 지정됩니다.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">지정된 테이블 이름과 네임스페이스를 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">테이블에 지정할 이름입니다. <paramref name="tableName" />이 <see langword="null" /> 또는 빈 문자열이면 <see cref="T:System.Data.DataTableCollection" />에 테이블이 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">
        <see langword="DataTable" />에 저장된 데이터의 XML 표현에 대한 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">
        <see cref="M:System.Data.DataTable.AcceptChanges" />가 마지막으로 호출된 이후 이 테이블에서 변경된 내용을 모두 커밋합니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataTable" />의 초기화를 시작합니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">데이터를 로드하는 동안 알림, 인덱스 유지 관리 및 제약 조건 기능을 해제합니다.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">테이블 내의 문자열을 비교할 때 대/소문자를 구분할지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">비교할 때 대/소문자를 구분하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 부모 <see cref="T:System.Data.DataSet" /> 개체의 <see cref="P:System.Data.DataSet.CaseSensitive" /> 속성으로 설정되거나, <see cref="T:System.Data.DataTable" />과 별도로 만들어진 <see cref="T:System.Data.DataSet" />의 경우 <see langword="false" />로 설정됩니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">이 <see cref="T:System.Data.DataTable" />에 대한 자식 관계 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">테이블의 자식 관계가 포함된 <see cref="T:System.Data.DataRelationCollection" />입니다. <see cref="T:System.Data.DataRelation" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">
        <see cref="T:System.Data.DataTable" />의 모든 데이터를 지웁니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">모든 <see cref="T:System.Data.DataTable" /> 스키마, 관계 및 제약 조건을 포함하여 <see cref="T:System.Data.DataTable" />의 구조를 복제합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">현재 <see cref="T:System.Data.DataTable" />과 동일한 스키마를 갖는 새 <see cref="T:System.Data.DataTable" />을 반환합니다.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />에 있는 지정된 <see cref="T:System.Data.DataRow" />의 값이 변경된 후 발생합니다.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />에 있는 지정된 <see cref="T:System.Data.DataRow" />의 값이 변경될 때 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">이 테이블에 속한 열의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">테이블의 <see cref="T:System.Data.DataColumnCollection" /> 개체 컬렉션이 포함된 <see cref="T:System.Data.DataColumn" />입니다. <see cref="T:System.Data.DataColumn" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">필터 조건을 전달하는 현재 행에서 지정된 식을 계산합니다.</summary>
      <param name="expression" vsli:raw="The expression to compute.">컴퓨팅할 식입니다.</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">식에서 계산하는 행을 제한할 필터입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">계산 결과로 설정된 <see cref="T:System.Object" />를 반환합니다. 식이 null로 평가되는 경우 반환 값은 <see cref="F:System.DBNull.Value" />가 됩니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">이 테이블이 유지하는 제약 조건의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">테이블의 <see cref="T:System.Data.ConstraintCollection" /> 개체 컬렉션이 포함된 <see cref="T:System.Data.Constraint" />입니다. <see cref="T:System.Data.Constraint" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">이 <see cref="T:System.Data.DataTable" />의 구조와 데이터를 모두 복사합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">이 <see cref="T:System.Data.DataTable" />과 같은 구조(테이블 스키마, 관계, 제약 조건)와 데이터를 가진 새 <see cref="T:System.Data.DataTable" />을 반환합니다.  
이 클래스가 파생된 경우 동일한 파생 클래스가 복사됩니다.  
 <see cref="M:System.Data.DataTable.Copy" />는 원래 <see cref="T:System.Data.DataTable" />과 동일한 구조 및 데이터로 새 <see cref="T:System.Data.DataTable" />를 만듭니다. 구조체를 새 <see cref="T:System.Data.DataTable" />로 복사하고 데이터는 복사하지 않으려면 <see cref="M:System.Data.DataTable.Clone" />을 사용하십시오.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">이 <see cref="T:System.Data.DataTableReader" />의 데이터에 해당하는 <see cref="T:System.Data.DataTable" />를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">결과 집합 하나를 포함하고 소스 <see cref="T:System.Data.DataTableReader" /> 인스턴스에 해당하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="The new expression.">새 식입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">이 테이블이 속한 <see cref="T:System.Data.DataSet" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">이 테이블이 속한 <see cref="T:System.Data.DataSet" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">필터링된 뷰를 포함할 수 있는 테이블의 사용자 지정 뷰 또는 커서 위치를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />와 연결된 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">이 테이블을 사용자 인터페이스에 나타내는 데 사용되는 값을 반환하는 식을 가져오거나 설정합니다. <see langword="DisplayExpression" /> 속성을 사용하여 이 테이블의 이름을 사용자 인터페이스에 표시할 수 있습니다.</summary>
      <returns vsli:raw="A display string.">표시 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataTable" />의 초기화를 끝냅니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">데이터를 로드한 후 알림, 인덱스 유지 관리 및 제약 조건 기능을 설정합니다.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">사용자 지정 사용자 정보 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">사용자 지정 사용자 정보가 들어 있는 <see cref="T:System.Data.PropertyCollection" />입니다.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">초기화가 진행 중인지 여부를 확인합니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">로드되거나 <see cref="T:System.Data.DataTable" />가 마지막으로 호출된 후에 변경된 내용이 모두 들어 있는 <see cref="M:System.Data.DataTable.AcceptChanges" />의 복사본을 가져옵니다.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">이 <see cref="T:System.Data.DataTable" />의 변경 내용의 복사본을 반환하거나, 변경 내용이 없으면 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">마지막으로 로드되거나 <see cref="T:System.Data.DataTable" />가 호출된 후에 변경되어 <see cref="M:System.Data.DataTable.AcceptChanges" />를 기준으로 필터링된 내용이 모두 들어 있는 <see cref="T:System.Data.DataRowState" />의 복사본을 가져옵니다.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">작업을 수행한 다음 <see cref="T:System.Data.DataTable" />를 사용하여 다시 <see cref="T:System.Data.DataTable" />에 병합할 수 있는 경우 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />의 필터링된 복사본을 반환합니다. 원하는 <see cref="T:System.Data.DataRowState" /> 행이 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">이 메서드는 웹 서비스의 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 설명하는 WSDL(Web Services Description Language)이 포함된 <see cref="T:System.Data.DataTable" /> 인스턴스를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 인스턴스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">오류가 있는 <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">오류가 있는 <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />을 serialize하는 데 필요한 데이터로 serialization 정보 개체를 채웁니다.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />과 관련된 serialize된 개체가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />과 관련된 serialize된 스트림의 소스와 대상이 들어 있는 <see cref="T:System.Data.DataTable" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" />매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)인 경우</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">행 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 형식입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하십시오.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">해당 테이블이 속하는 <see cref="T:System.Data.DataSet" />의 테이블에 있는 행에 오류가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">오류가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">원래 값 및 현재 값과 모든 속성 설정을 그대로 유지한 상태로 <see cref="T:System.Data.DataRow" />를 <see cref="T:System.Data.DataTable" />에 복사합니다.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">가져올 <see cref="T:System.Data.DataRow" />입니다.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataTable" />이 초기화된 후 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataTable" />이 초기화되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">구성 요소의 초기화가 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">제공된 <see cref="T:System.Data.DataTable" />를 사용해서 <see cref="T:System.Data.IDataReader" />을 데이터 소스의 값으로 채웁니다. <see cref="T:System.Data.DataTable" />에 이미 행이 포함되어 있으면 데이터 소스에서 들어오는 데이터가 기존 행과 병합됩니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">제공된 <see cref="T:System.Data.DataTable" />를 사용해서 <see cref="T:System.Data.IDataReader" />을 데이터 소스의 값으로 채웁니다. <see langword="DataTable" />에 이미 행이 포함되어 있으면 데이터 소스에서 들어오는 데이터는 <paramref name="loadOption" /> 매개 변수의 값에 따라 기존 행과 병합됩니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">하나 이상의 결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 열거형의 값으로서, 이미 <see cref="T:System.Data.DataTable" />에 있는 행이 동일한 기본 키를 공유하는 들어오는 행과 결합되는 방식을 나타냅니다.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">오류 처리 대리자를 사용하는 제공된 <see cref="T:System.Data.DataTable" />를 사용해서 <see cref="T:System.Data.IDataReader" />을 데이터 소스의 값으로 채웁니다.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">결과 집합을 제공하는 <see cref="T:System.Data.IDataReader" />입니다.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 열거형의 값으로서, 이미 <see cref="T:System.Data.DataTable" />에 있는 행이 동일한 기본 키를 공유하는 들어오는 행과 결합되는 방식을 나타냅니다.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">데이터를 로드하는 동안 오류가 발생하면 호출할 <see cref="T:System.Data.FillErrorEventHandler" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">특정 행을 찾아 업데이트합니다. 일치하는 행을 찾지 못하면 지정된 값을 사용하여 새 행을 만듭니다.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">새 행을 만드는 데 사용되는 값 배열입니다.</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">변경 사항을 적용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">새 <see cref="T:System.Data.DataRow" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">배열이 테이블의 열 수보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">값이 해당 열 형식과 일치하지 않는 경우</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">행을 추가하여 제약 조건을 무효화한 경우</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" />이 false인 열에 null을 설정하려는 경우</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">특정 행을 찾아 업데이트합니다. 일치하는 행을 찾지 못하면 지정된 값을 사용하여 새 행을 만듭니다.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">새 행을 만드는 데 사용되는 값 배열입니다.</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">배열 값이 기존 행의 해당 값에 적용되는 방식을 결정하는 데 사용됩니다.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">새 <see cref="T:System.Data.DataRow" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">테이블 내의 문자열을 비교하는 데 사용되는 로캘 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">사용자의 컴퓨터 로캘에 대한 데이터가 들어 있는 <see cref="T:System.Globalization.CultureInfo" />입니다. 기본값은 <see cref="T:System.Data.DataSet" />이 속해 있으며 <see cref="T:System.Globalization.CultureInfo" /> 속성에 의해 반환되는 <see cref="P:System.Data.DataSet.Locale" /> 개체의 <see cref="T:System.Data.DataTable" />이거나, 테이블이 <see cref="T:System.Data.DataSet" />에 속하지 않은 경우 현재 시스템의 <see cref="T:System.Globalization.CultureInfo" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />을 현재 <see cref="T:System.Data.DataTable" />과 병합합니다.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">현재 <see cref="T:System.Data.DataTable" />과 병합할 <see cref="T:System.Data.DataTable" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />을 현재 <see langword="DataTable" />과 병합하여 현재 <see langword="DataTable" />에서 변경 내용을 유지할지 여부를 나타냅니다.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">현재 <see langword="DataTable" />과 병합할 <see langword="DataTable" />입니다.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">현재 <see langword="true" />의 변경 내용을 유지하려면 <see langword="DataTable" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />을 현재 <see langword="DataTable" />과 병합하여, 변경 내용을 유지할지 여부와 현재 <see langword="DataTable" />의 누락된 스키마 처리 방식을 나타냅니다.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">현재 <see cref="T:System.Data.DataTable" />과 병합할 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">현재 <see langword="true" />의 변경 내용을 유지하려면 <see cref="T:System.Data.DataTable" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">이 테이블에 대한 초기 시작 크기를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">이 테이블에 있는 행의 초기 시작 크기입니다. 기본값은 50입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 저장된 데이터의 XML 표현에 대한 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 네임스페이스입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">테이블과 동일한 스키마를 갖는 새 <see cref="T:System.Data.DataRow" />를 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />과 동일한 스키마를 갖는 <see cref="T:System.Data.DataTable" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 배열을 반환합니다.</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">배열의 크기를 설명하는 <see cref="T:System.Int32" /> 값입니다.</param>
      <returns vsli:raw="The new array.">새 배열입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">기존 행에서 새 행을 만듭니다.</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">
        <see cref="T:System.Data.DataRowBuilder" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">
        <see cref="T:System.Data.DataRow" /> 파생 클래스입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataColumnChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanging" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataColumnChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">
        <see cref="T:System.Data.DataTable" />이 제거 중임을 <see cref="T:System.Data.DataColumn" />에 알립니다.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">제거 중인 <see cref="T:System.Data.DataColumn" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowDeleted" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowDeleting" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataRowChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.TableCleared" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableClearEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.TableClearing" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableClearEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.TableNewRow" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableNewRowEventArgs" />입니다.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">이 <see cref="T:System.Data.DataTable" />에 대한 부모 관계 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">테이블의 부모 관계가 포함된 <see cref="T:System.Data.DataRelationCollection" />입니다. <see cref="T:System.Data.DataRelation" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 저장된 데이터의 XML 표현에 대한 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 접두사입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">데이터 테이블에 대한 기본 키로 사용되는 열의 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">해당 키가 외래 키인 경우</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.IO.Stream" />으로 읽어옵니다.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />에서 파생되는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.IO.TextReader" />으로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">데이터를 읽는 데 사용할 <see cref="T:System.IO.TextReader" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">지정된 파일로부터 XML 스키마와 데이터를 <see cref="T:System.Data.DataTable" />로 읽어옵니다.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">데이터를 읽을 파일의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마와 데이터를 <see cref="T:System.Xml.XmlReader" />로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">데이터를 읽는 데 사용할 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">데이터를 읽는 데 사용되는 <see cref="T:System.Data.XmlReadMode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">지정된 스트림을 사용하여 XML 스키마를 <see cref="T:System.Data.DataTable" />로 읽어옵니다.</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">스키마를 읽는 데 사용되는 스트림입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마를 <see cref="T:System.IO.TextReader" />로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">스키마 정보를 읽는 데 사용되는 <see cref="T:System.IO.TextReader" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">지정된 파일로부터 XML 스키마를 <see cref="T:System.Data.DataTable" />로 읽어옵니다.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">스키마 정보를 읽을 파일의 이름입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 XML 스키마를 <see cref="T:System.Xml.XmlReader" />로 읽어옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">스키마 정보를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">XML 스트림에서 읽습니다.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">테이블이 로드된 이후 또는 <see cref="M:System.Data.DataTable.AcceptChanges" />가 마지막으로 호출된 이후에 변경된 내용을 모두 롤백합니다.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">serialization 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">
        <see langword="Binary" /> 또는 <see langword="Xml" /> serialization을 지정하는 <see cref="T:System.Data.SerializationFormat" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">
        <see cref="T:System.Data.DataTable" />을 원래 상태로 다시 설정합니다. 다시 설정은 테이블의 모든 데이터, 인덱스, 관계 및 열을 제거합니다. DataSet에 DataTable이 포함된 경우 테이블을 다시 설정한 후 테이블은 DataSet의 일부가 됩니다.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">
        <see cref="T:System.Data.DataRow" />가 변경된 후에 발생합니다.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">
        <see cref="T:System.Data.DataRow" />가 변경될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">테이블의 행이 삭제된 후 발생합니다.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">테이블의 행이 삭제되기 직전에 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">이 테이블에 속한 행의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRowCollection" /> 개체가 포함된 <see cref="T:System.Data.DataRow" />이거나, <see cref="T:System.Data.DataRow" /> 개체가 없으면 null 값입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">필터 조건에 맞는 모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 가져옵니다.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">행을 필터링하기 위해 사용하는 조건입니다. 예를 들어, 행을 필터링하는 방법은 DataView RowFilter 구문 [C#]을 참조하세요.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">필터 조건에 맞는 모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 지정된 정렬 순서대로 가져옵니다.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">행을 필터링하기 위해 사용하는 조건입니다. 예를 들어, 행을 필터링하는 방법은 DataView RowFilter 구문 [C#]을 참조하세요.</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">열과 정렬 방향을 지정하는 문자열입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">필터 식에 맞는 <see cref="T:System.Data.DataRow" /> 개체의 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">필터와 일치하는 모든 <see cref="T:System.Data.DataRow" /> 개체의 배열을 지정된 상태와 일치하는 정렬 순서대로 가져옵니다.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">행을 필터링하기 위해 사용하는 조건입니다. 예를 들어, 행을 필터링하는 방법은 DataView RowFilter 구문 [C#]을 참조하세요.</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">열과 정렬 방향을 지정하는 문자열입니다.</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataViewRowState" /> 값 중 하나입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" />에 대한 <see cref="T:System.Data.DataTable" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" />에 대한 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />를 참조하십시오.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">해당 컬렉션이 <see cref="T:System.Collections.IList" /> 개체의 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IListSource.GetList" />를 참조하십시오.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">해당 개체에서 데이터 소스에 바인딩될 수 있는 <see cref="T:System.Collections.IList" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하세요.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />를 참조하십시오.</summary>
      <param name="reader" vsli:raw="An XmlReader.">XmlReader입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />를 참조하십시오.</summary>
      <param name="writer" vsli:raw="An XmlWriter.">XmlWriter입니다.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">
        <see cref="T:System.Data.DataTable" />이 지워진 다음 발생합니다.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">
        <see cref="T:System.Data.DataTable" />이 지워질 때 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 이름입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">
        <see langword="null" /> 또는 빈 문자열("")이 전달되고 이 테이블이 컬렉션에 속하는 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">같은 이름을 가진 테이블이 이미 들어 있는 컬렉션에 테이블이 속한 경우. 비교 시 대/소문자가 구분됩니다.</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">새 <see cref="T:System.Data.DataRow" />가 삽입될 때 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">연결된 문자열이 있는 경우 <see cref="P:System.Data.DataTable.TableName" /> 및 <see cref="P:System.Data.DataTable.DisplayExpression" />을 가져옵니다.</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">
        <see cref="P:System.Data.DataTable.TableName" /> 및 <see cref="P:System.Data.DataTable.DisplayExpression" /> 값으로 구성된 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <see cref="T:System.IO.Stream" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">데이터가 기록될 스트림입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.IO.Stream" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다. 테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">데이터가 기록될 스트림입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 지정된 파일에 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">데이터가 기록될 스트림입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 지정된 파일에 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다. 테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">데이터가 기록될 스트림입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">콘텐츠를 쓰는 데 사용할 <see cref="T:System.IO.TextWriter" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다. 테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">콘텐츠를 쓰는 데 사용할 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.IO.TextWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다. 테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">지정된 파일을 사용하여 <see cref="T:System.Data.DataTable" />의 현재 내용을 XML로 씁니다.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">XML 데이터를 기록할 파일입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 파일을 사용하여 <see cref="T:System.Data.DataTable" />의 현재 내용을 XML로 씁니다. 테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">XML 데이터를 기록할 파일입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 파일과 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />에 대해 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">데이터가 기록될 파일의 이름입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 파일과 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />에 대해 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다. 테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">데이터가 기록될 파일의 이름입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">내용을 기록하는 데 사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.DataTable" />의 현재 콘텐츠를 XML로 작성합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">내용을 기록하는 데 사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />와 <see cref="T:System.Xml.XmlWriter" />를 사용하여 <see cref="T:System.Data.XmlWriteMode" />의 현재 데이터를 쓰고 선택적으로 스키마를 씁니다. 스키마를 쓰려면 <paramref name="mode" /> 매개 변수 값을 <see langword="WriteSchema" />로 설정합니다. 테이블과 모든 하위 항목의 데이터를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 값 중 하나입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 내용을 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 데이터만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">
        <see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 스트림에 XMl 스키마로 씁니다.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">XML 스키마가 기록될 스트림입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 스트림에 XMl 스키마로 씁니다. 테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">XML 스키마가 기록될 스트림입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.IO.TextWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.IO.TextWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다. 테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">
        <see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 파일에 XML 스키마로 씁니다.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">사용할 파일의 이름입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 현재 데이터 구조를 지정된 파일에 XML 스키마로 씁니다. 테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">사용할 파일의 이름입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Xml.XmlWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">사용할 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />를 사용하여 <see cref="T:System.Xml.XmlWriter" />의 현재 데이터 구조를 XML 스키마로 씁니다. 테이블과 모든 하위 항목의 스키마를 저장하려면 <paramref name="writeHierarchy" /> 매개 변수를 <see langword="true" />로 설정합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" />이면 현재 테이블과 모든 하위 항목의 스키마를 씁니다. <see langword="false" />(기본값)이면 현재 테이블의 스키마만 씁니다.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.Clear" /> 메서드에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.DataTableClearEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">행이 지워지는 <see cref="T:System.Data.DataTable" />입니다.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">행이 지워지는 테이블을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">행이 지워지는 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">행이 지워지는 테이블 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">테이블 이름을 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">행이 지워지는 테이블의 네임스페이스를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">네임스페이스 이름을 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.Clear" /> 메서드를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableClearEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />의 테이블 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">기본 이름을 사용하여 새 <see cref="T:System.Data.DataTable" /> 개체를 만들고 컬렉션에 추가합니다.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">새로 만든 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">지정된 <see langword="DataTable" />를 컬렉션에 추가합니다.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">추가할 <see langword="DataTable" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">테이블에 대해 지정된 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">테이블이 이 컬렉션이나 다른 컬렉션에 이미 속해 있는 경우</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">컬렉션에 이름이 같은 테이블이 있는 경우. 비교 시 대/소문자가 구분됩니다.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">지정된 이름을 사용하여 <see cref="T:System.Data.DataTable" /> 개체를 만들어 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">만든 <see cref="T:System.Data.DataTable" />에 지정할 이름입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">새로 만든 <see cref="T:System.Data.DataTable" />입니다.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">컬렉션에 이름이 같은 테이블이 있는 경우. 대/소문자를 구분하지 않고 비교합니다.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">지정된 이름을 사용하여 <see cref="T:System.Data.DataTable" /> 개체를 만들어 컬렉션에 추가합니다.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">만든 <see cref="T:System.Data.DataTable" />에 지정할 이름입니다.</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">만든 <see cref="T:System.Data.DataTable" />에 지정할 네임스페이스입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">새로 만든 <see cref="T:System.Data.DataTable" />입니다.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">컬렉션에 이름이 같은 테이블이 있는 경우. 대/소문자를 구분하지 않고 비교합니다.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">지정된 <see cref="T:System.Data.DataTable" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">컬렉션에 추가할 <see cref="T:System.Data.DataTable" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">지정된 <see cref="T:System.Data.DataTable" /> 개체를 컬렉션에서 제거할 수 있는지 여부를 확인합니다.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">확인할 컬렉션의 <see langword="DataTable" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">테이블을 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">모든 <see cref="T:System.Data.DataTable" /> 개체의 컬렉션을 지웁니다.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">
        <see cref="T:System.Data.DataTableCollection" /> 개체가 추가되거나 제거되어 <see cref="T:System.Data.DataTable" />이 변경된 후 발생합니다.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">
        <see cref="T:System.Data.DataTableCollection" /> 개체가 추가되거나 제거되어 <see cref="T:System.Data.DataTable" />이 변경되는 동안 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">지정된 이름의 <see cref="T:System.Data.DataTable" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">찾을 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 테이블이 있으면 <see langword="true" />이고, <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">지정된 이름과 테이블 네임스페이스의 <see cref="T:System.Data.DataTable" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">찾을 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 테이블이 있으면 <see langword="true" />이고, <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">현재 <see cref="T:System.Data.DataTableCollection" />의 모든 요소를 1 차원 <see cref="T:System.Array" />의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">현재 <see cref="T:System.Array" /> 개체의 요소를 복사할 1차원 <see cref="T:System.Data.DataTableCollection" />입니다.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">복사를 시작할 대상 <see cref="T:System.Array" /> 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">지정된 <see cref="T:System.Data.DataTable" /> 개체의 인덱스를 가져옵니다.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">검색할 <see langword="DataTable" />입니다.</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">테이블의 인덱스(0부터 시작)이거나, 테이블이 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">지정된 이름을 가지는 <see cref="T:System.Data.DataTable" /> 개체 컬렉션의 인덱스를 가져옵니다.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">찾을 <see langword="DataTable" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">지정된 이름을 가지는 <see langword="DataTable" />의 인덱스(0부터 시작)이거나, 테이블이 컬렉션에 없으면 -1입니다.  
   
 두 개 이상의 테이블이 이름은 같지만 네임스페이스가 다르면 -1을 반환합니다. 테이블 이름을 정확히 한 개의 테이블과 일치시킬 때 모호성이 있으면 호출은 실패합니다.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">지정된 <see cref="T:System.Data.DataTable" /> 개체 컬렉션의 인덱스를 가져옵니다.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">찾을 <see cref="T:System.Data.DataTable" /> 개체의 이름입니다.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">지정된 이름을 가지는 <see cref="T:System.Data.DataTable" />의 인덱스(0부터 시작)이거나, 테이블이 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Data.DataTable" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">찾을 <see cref="T:System.Data.DataTable" />의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">A <see cref="T:System.Data.DataTable" /> ; 지정된 된 인덱스를 사용 하 여이 고, 그렇지 <see langword="null" /> 경우는 <see cref="T:System.Data.DataTable" /> 존재 하지 않습니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">인덱스 값이 컬렉션의 항목 수보다 큰 경우</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">지정된 이름의 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">찾을 <see langword="DataTable" />의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">지정된 이름의 <see cref="T:System.Data.DataTable" />이거나, <see cref="T:System.Data.DataTable" />이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">지정된 네임스페이스에서 지정된 이름을 가진 <see cref="T:System.Data.DataTable" /> 개체를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">찾을 <see langword="DataTable" />의 이름입니다.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">지정된 이름의 <see cref="T:System.Data.DataTable" />이거나, <see cref="T:System.Data.DataTable" />이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">제거할 <see langword="DataTable" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">테이블에 대해 지정된 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">테이블이 이 컬렉션에 속하지 않는 경우  
 또는  
 테이블이 관계의 일부인 경우</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">컬렉션에서 지정된 이름의 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.DataTable" /> 개체의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">컬렉션에 이름이 지정된 테이블이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">컬렉션에서 지정된 이름의 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">제거할 <see cref="T:System.Data.DataTable" /> 개체의 이름입니다.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">찾을 <see cref="T:System.Data.DataTable" /> 네임스페이스의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">컬렉션에 이름이 지정된 테이블이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.DataTable" /> 개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">제거할 <see langword="DataTable" />의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">컬렉션에 지정된 인덱스의 테이블이 없는 경우</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">
        <see cref="T:System.Data.DataTable" /> 클래스에 대한 확장 메서드를 정의합니다. <see cref="T:System.Data.DataTableExtensions" />는 정적 클래스입니다.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체를 만들어 반환합니다.</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">LINQ 사용 <see cref="T:System.Data.DataTable" />를 만드는 데 사용할 소스 <see cref="T:System.Data.DataView" />입니다.</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">LINQ to DataSet 쿼리를 나타내는 LINQ 사용 <see cref="T:System.Data.DataView" /> 개체를 만들어 반환합니다.</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">LINQ 사용 <see cref="T:System.Data.DataView" />를 만드는 데 사용할 소스 LINQ to DataSet 쿼리입니다.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 반환하며, 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다. 이 개체는 LINQ 식 또는 메서드 쿼리에 사용될 수 있습니다.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">열거 가능하게 만들 소스 <see cref="T:System.Data.DataTable" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체이며, 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">소스 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataTable" />인 지정된 입력 <see cref="T:System.Data.DataRow" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체의 복사본이 들어 있는 <see cref="T:System.Data.DataRow" />을 반환합니다.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataTable" /> 개체 형식의 입력 시퀀스가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이고 새 테이블을 만들 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우  
소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우  
소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataRow" />인 지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 지정된 <see cref="T:System.Data.DataRow" />에 복사합니다.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">대상 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">
        <see cref="T:System.Data.LoadOption" /> 로드 옵션을 지정하는 <see cref="T:System.Data.DataTable" /> 열거형입니다.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">복사된 <see cref="T:System.Data.DataRow" /> 개체가 대상 <see cref="T:System.Data.DataTable" />의 스키마에 맞지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이거나 대상 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우  
소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우  
소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataRow" />인 지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 지정된 <see cref="T:System.Data.DataRow" />에 복사합니다.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">대상 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">
        <see cref="T:System.Data.LoadOption" /> 로드 옵션을 지정하는 <see cref="T:System.Data.DataTable" /> 열거형입니다.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">오류를 처리할 메서드를 나타내는 <see cref="T:System.Data.FillErrorEventHandler" /> 대리자입니다.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">복사된 <see cref="T:System.Data.DataRow" /> 개체가 대상 <see cref="T:System.Data.DataTable" />의 스키마에 맞지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이거나 대상 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우  
또는 
소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우  
또는 
소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.NewRow" /> 메서드에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">
        <see cref="T:System.Data.DataTableNewRowEventArgs" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">추가되는 <see cref="T:System.Data.DataRow" />입니다.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">추가되는 행을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">추가되는 <see cref="T:System.Data.DataRow" />입니다.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.NewRow" /> 메서드를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.DataTableNewRowEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">
        <see cref="T:System.Data.DataTableReader" />는 하나 이상의 <see cref="T:System.Data.DataTable" /> 개체 내용을 하나 이상의 앞으로만 이동 가능한 읽기 전용 결과 집합 형태로 가져옵니다.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">제공된 <see cref="T:System.Data.DataTableReader" />의 데이터를 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">새 <see cref="T:System.Data.DataTable" />가 결과 집합을 가져오는 <see cref="T:System.Data.DataTableReader" />입니다.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">
        <see cref="T:System.Data.DataTableReader" /> 개체의 제공된 배열을 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">새 <see cref="T:System.Data.DataTable" /> 개체의 결과를 제공하는 <see cref="T:System.Data.DataTableReader" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">현재 <see cref="T:System.Data.DataTableReader" />를 닫습니다.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />의 현재 행에 대한 중첩 수준입니다.</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">현재 행의 중첩 수준이며 항상 0입니다.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">현재 행에 있는 열의 수를 반환합니다.</summary>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">유효한 결과 집합에 배치되지 않으면 0이고, 그렇지 않으면 현재 행에 있는 열의 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 필드 수를 검색하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" />으로 지정된 열 값을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">지정된 열에 <see langword="Boolean" />이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">지정된 열의 값에 해당하는 바이트 값을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">지정된 열에 바이트가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">지정된 열 오프셋에서 시작되는 바이트 스트림을 지정된 버퍼 오프셋에서 시작하는 배열로 버퍼에 읽어 들입니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">읽기 작업을 시작할 필드 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">바이트 스트림을 읽을 버퍼입니다.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">데이터 배치를 시작할 버퍼 내에 있는 인덱스입니다.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">버퍼로 복사할 최대 길이입니다.</param>
      <returns vsli:raw="The actual number of bytes read.">읽은 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">지정된 열에 바이트 배열이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">지정된 열의 값을 문자로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the column.">열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">지정된 필드에 문자가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">지정된 열의 값에 해당하는 문자 배열을 반환합니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">읽기 작업을 시작할 필드 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">문자 스트림을 읽어올 버퍼입니다.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">데이터 배치를 시작할 버퍼 내에 있는 인덱스입니다.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">버퍼로 복사할 최대 길이입니다.</param>
      <returns vsli:raw="The actual number of characters read.">읽은 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">지정된 열에 문자 배열이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">지정된 열의 데이터 형식을 나타내는 문자열을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="A string representing the column's data type.">열의 데이터 형식을 나타내는 문자열입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">지정된 열의 값에 해당하는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">지정된 열에 DateTime 값이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" />으로 지정된 열 값을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">지정된 열에 <see langword="Decimal" /> 값이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">열의 0부터 시작하는 서수입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">지정된 열에 배정밀도 부동 소수점 숫자가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">항목 컬렉션 전체에서 반복하는 데 사용할 수 있는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">항목 컬렉션을 나타내는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">개체의 데이터 형식인 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">지정된 열의 값에 해당하는 단정밀도 부동 소수점 숫자를 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the column.">열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">지정된 열에 단정밀도 부동 소수점 숫자가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">지정된 열의 값에 해당하는 GUID(Globally Unique ID)를 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">지정된 열에 GUID가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">지정된 열에 16비트 부호 있는 정수가 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">지정된 열의 값에 해당하는 32비트 부호 있는 정수를 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">지정된 열에 32비트 부호 있는 정수 값이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">지정된 열의 값에 해당하는 64비트 부호 있는 정수를 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">지정된 열에 64비트 부호 있는 정수 값이 없습니다.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" />으로 지정된 열 값을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The name of the specified column.">지정된 열의 이름입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">열 이름이 지정된 경우 열 서수를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">지정된 열의 형식을 공급자별 형식으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">지정된 열의 값을 공급자별 형식으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">값을 검색하는 열의 번호(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column in provider-specific format.">지정된 열의 값이며 공급자별 형식으로 되어 있습니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />의 모든 열에 대한 공급자별 형식 정보를 제공된 배열에 채웁니다.</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />의 열에 대한 형식 정보로 채워질 개체 배열입니다.</param>
      <returns vsli:raw="The number of column values copied into the array.">배열에 복사된 열 값의 개수입니다.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.DataTableReader" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.DataTableReader" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">지정된 열의 값을 문자열로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column.">지정된 열의 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">지정된 열에 문자열이 없는 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">지정된 열의 값입니다. 이 메서드는 null 열에 대해 <see langword="DBNull" />을 반환합니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">현재 행의 열 값으로 개체 배열을 채웁니다.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Object" />로부터 열 값을 복사해 올 <see cref="T:System.Data.DataTableReader" />의 배열입니다.</param>
      <returns vsli:raw="The number of column values copied into the array.">배열에 복사된 열 값의 개수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">
        <see cref="T:System.Data.DataTableReader" />에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />에 행이 하나 이상 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />에 대한 정보를 검색하려고 한 경우</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.DataTableReader" />가 닫혀 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />가 닫혔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 열 값이 <see cref="T:System.DBNull" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the specified column in its native format.">지정된 열의 네이티브 형식 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the column.">열 이름입니다.</param>
      <returns vsli:raw="The value of the specified column in its native format.">지정된 열의 네이티브 형식 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">
        <see cref="T:System.Data.DataTableReader" />를 다음 결과 집합(있을 경우)으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">다른 결과 집합이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">닫힌 <see cref="T:System.Data.DataTableReader" /> 내의 정보를 탐색하려고 한 경우</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">
        <see cref="T:System.Data.DataTableReader" />를 다음 레코드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">읽을 행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">SQL 문을 실행하여 삽입, 변경 또는 삭제된 열의 수를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">
        <see cref="T:System.Data.DataTableReader" />는 이 속성을 지원하지 않으며 항상 0을 반환합니다.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">정렬, 필터링, 검색, 편집 및 탐색을 위해 데이터 바인딩할 수 있는 <see cref="T:System.Data.DataTable" />의 사용자 지정 뷰를 나타냅니다. <see cref="T:System.Data.DataView" />는 데이터를 저장하지 않는 대신, 해당 <see cref="T:System.Data.DataTable" />의 연결된 뷰를 나타냅니다. <see cref="T:System.Data.DataView" />의 데이터 변경 내용은 <see cref="T:System.Data.DataTable" />에 영향을 줍니다. <see cref="T:System.Data.DataTable" />의 데이터 변경 내용은 이와 연결된 모든 <see cref="T:System.Data.DataView" />에 영향을 줍니다.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">
        <see cref="T:System.Data.DataView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">지정된 <see cref="T:System.Data.DataView" />를 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 추가할 <see cref="T:System.Data.DataView" />입니다.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">지정된 <see cref="T:System.Data.DataView" />, <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" /> 및 <see cref="P:System.Data.DataView.Sort" />를 사용하여 <see cref="T:System.Data.DataViewRowState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에 추가할 <see cref="T:System.Data.DataView" />입니다.</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="P:System.Data.DataView.RowFilter" />에 적용할 <see cref="T:System.Data.DataView" />입니다.</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="P:System.Data.DataView.Sort" />에 적용할 <see cref="T:System.Data.DataView" />입니다.</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataViewRowState" />에 적용할 <see cref="T:System.Data.DataView" />입니다.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에 새 행을 추가합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">새 <see cref="T:System.Data.DataRowView" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">삭제가 허용되는지 여부를 나타내는 값을 설정하거나 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">삭제가 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">편집이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">편집이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">
        <see cref="M:System.Data.DataView.AddNew" /> 메서드를 사용하여 새 행을 추가할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">새 행을 추가할 수 있으면 <see langword="true" />이고, 추가할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">기본 정렬을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다. 기본 정렬은 <see cref="P:System.Data.DataTable.PrimaryKey" />에 지정된 대로 모든 기본 키에 의한 오름차순 정렬입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">기본 정렬이 사용되면 <see langword="true" />이고, 사용되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataView" />의 초기화를 시작합니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />를 닫습니다.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">
        <see cref="T:System.Data.DataColumnCollection" />가 변경된 후에 발생합니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.ListChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">배열에 항목을 복사합니다. Web Forms 인터페이스 전용입니다.</summary>
      <param name="array" vsli:raw="array to copy into.">복사할 배열입니다.</param>
      <param name="index" vsli:raw="index to start at.">시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">
        <see cref="P:System.Data.DataView.RowFilter" /> 및 <see cref="P:System.Data.DataView.RowStateFilter" />가 적용된 후에 <see cref="T:System.Data.DataView" />의 레코드 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />의 레코드 수입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">이 뷰와 관련된 <see cref="T:System.Data.DataViewManager" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">이 뷰를 만든 <see langword="DataViewManager" />입니다. 이 뷰가 <see cref="T:System.Data.DataView" />의 기본 <see cref="T:System.Data.DataTable" />이면 <see langword="DataViewManager" /> 속성은 <see langword="DataViewManager" />에 대해 기본 <see langword="DataSet" />를 반환합니다. <see langword="DataView" /> 없이 <see langword="DataViewManager" />가 만들어진 경우 이 속성은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">지정된 인덱스의 행을 삭제합니다.</summary>
      <param name="index" vsli:raw="The index of the row to delete.">삭제할 행의 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">
        <see cref="T:System.Data.DataView" /> 개체에서 사용하는 리소스(메모리 제외)를 삭제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Data.DataView" />의 초기화를 끝냅니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">지정한 <see cref="T:System.Data.DataView" /> 인스턴스가 동일한지를 확인합니다.</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.DataView" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Data.DataView" /> 인스턴스가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">지정된 정렬 키 값에 따라 <see cref="T:System.Data.DataView" />에서 행을 찾습니다.</summary>
      <param name="key" vsli:raw="The object to search for.">검색할 개체입니다.</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">지정된 정렬 키 값이 있으면 해당 값이 포함된 <see cref="T:System.Data.DataView" />의 행 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">지정된 정렬 키 값에 따라 <see cref="T:System.Data.DataView" />에서 행을 찾습니다.</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> 형식의 값 배열입니다.</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">
        <see cref="T:System.Data.DataView" />에서 지정된 정렬 키 값과 일치하는 첫 번째 행 위치의 인덱스이거나, 일치하는 정렬 키 값이 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">열 값이 지정된 정렬 키 값과 일치하는 <see cref="T:System.Data.DataRowView" /> 개체의 배열을 반환합니다.</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">검색할 <see cref="T:System.Object" /> 형식의 열 값입니다.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">열 값이 지정된 정렬 키 값과 일치하는 <see langword="DataRowView" /> 개체의 배열을 반환하고, 지정된 정렬 키 값을 가진 행이 없으면 빈 <see langword="DataRowView" /> 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">열 값이 지정된 정렬 키 값과 일치하는 <see cref="T:System.Data.DataRowView" /> 개체의 배열을 반환합니다.</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">검색할 <see cref="T:System.Object" /> 형식의 열 값 배열입니다.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">열 값이 지정된 정렬 키 값과 일치하는 <see langword="DataRowView" /> 개체의 배열을 반환하고, 지정된 정렬 키 값을 가진 행이 없으면 빈 <see langword="DataRowView" /> 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">이 <see cref="T:System.Data.DataView" />에 대한 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">목록 전체를 탐색하기 위한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">
        <see cref="T:System.Data.DataView" />가 변경된 후에 발생합니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.ListChangedEventArgs" />입니다.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">
        <see cref="T:System.Data.DataView" />의 초기화가 완료되면 발생합니다.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">구성 요소가 초기화되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 요소의 초기화가 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">데이터 소스가 현재 열려 있고 <see cref="T:System.Data.DataTable" />에 데이터 뷰를 표시하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">소스가 열려 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">지정된 테이블에서 데이터 행을 가져옵니다.</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 레코드 인덱스입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">원하는 행의 <see cref="T:System.Data.DataRowView" />입니다.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">
        <see cref="T:System.Data.DataView" />에서 관리하는 목록이 변경될 때 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataView.ListChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.ListChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />를 엽니다.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">내부 전용으로 예약되었습니다.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에 표시할 행을 필터링하는 데 사용하는 식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">행의 필터링 방법을 지정하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에 사용되는 행 상태 필터를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataViewRowState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에 대한 정렬 열과 정렬 순서를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">열 이름 뒤에 "ASC"(오름차순) 또는 "DESC"(내림차순)가 붙은 문자열입니다. 열은 기본적으로 오름차순으로 정렬됩니다. 여러 개의 열은 쉼표로 구분할 수 있습니다.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하십시오.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Add(System.Object)" />를 참조하십시오.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 값입니다.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Add(System.Object)" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Clear" />를 참조하십시오.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Contains(System.Object)" />를 참조하세요.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 값입니다.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Contains(System.Object)" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />를 참조하세요.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 값입니다.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />를 참조하십시오.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 값입니다.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">삽입할 <see cref="T:System.Object" /> 값입니다.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsFixedSize" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsFixedSize" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsReadOnly" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsReadOnly" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.Item(System.Int32)" />를 참조하세요.</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 값입니다.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.Item(System.Int32)" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Remove(System.Object)" />를 참조하십시오.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />를 참조하십시오.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />를 참조하십시오.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.AddNew" />를 참조하십시오.</summary>
      <returns vsli:raw="The item added to the list.">목록에 추가되는 항목입니다.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />를 참조하십시오.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다.</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />를 참조하세요.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다.</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 값입니다.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />를 참조하십시오.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />를 참조하십시오.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />를 참조하십시오.</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> 개체입니다.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.Filter" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.Filter" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />를 참조하십시오.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />를 참조하십시오.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">컬렉션에서 찾을 바인딩 가능한 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다. 이 매개 변수는 <see langword="null" />이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />를 참조하십시오.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">소스 <see cref="T:System.Data.DataTable" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">이 뷰에 대한 데이터를 제공하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">기존 <see cref="T:System.Data.DataTable" />의 행을 기준으로 새 <see cref="T:System.Data.DataView" />을 만들어서 반환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">요청된 행과 열이 포함된 새 <see cref="T:System.Data.DataTable" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">기존 <see cref="T:System.Data.DataTable" />의 행을 기준으로 새 <see cref="T:System.Data.DataView" />을 만들어서 반환합니다.</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이면 반환된 <see cref="T:System.Data.DataTable" />에 모든 열에 대한 개별 값이 있는 행이 포함됩니다. 기본값은 <see langword="false" />입니다.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">반환된 <see cref="T:System.Data.DataTable" />에 포함될 열 이름의 목록을 포함하는 문자열 배열입니다. <see cref="T:System.Data.DataTable" />에는 이 배열에 표시되는 순서대로 지정된 열이 포함됩니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">요청된 행과 열이 포함된 새 <see cref="T:System.Data.DataTable" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">기존 <see cref="T:System.Data.DataTable" />의 행을 기준으로 새 <see cref="T:System.Data.DataView" />을 만들어서 반환합니다.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">반환된 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">요청된 행과 열이 포함된 새 <see cref="T:System.Data.DataTable" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">기존 <see cref="T:System.Data.DataTable" />의 행을 기준으로 새 <see cref="T:System.Data.DataView" />을 만들어서 반환합니다.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">반환된 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이면 반환된 <see cref="T:System.Data.DataTable" /> 에 모든 열에 대한 고유 값을 가진 행이 포함됩니다. 기본값은 <see langword="false" />입니다.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">반환된 <see cref="T:System.Data.DataTable" />에 포함될 열 이름의 목록을 포함하는 문자열 배열입니다. <see langword="DataTable" />에는 이 배열에 표시되는 순서대로 지정된 열이 포함됩니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">요청된 행과 열이 포함된 새 <see cref="T:System.Data.DataTable" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">내부 전용으로 예약되었습니다.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">내부 전용으로 예약되었습니다.</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">내부 전용으로 예약되었습니다.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" />에 있는 각 <see cref="T:System.Data.DataTable" />에 대한 기본 <see cref="T:System.Data.DataSet" />을 포함합니다.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">
        <see cref="T:System.Data.DataViewManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />에 대한 <see cref="T:System.Data.DataViewManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataSet" />의 이름입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">지정된 <see cref="T:System.Data.DataTable" />에 대한 새 <see cref="T:System.Data.DataView" />를 만듭니다.</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />에서 사용할 <see cref="T:System.Data.DataView" />의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">
        <see cref="T:System.Data.DataView" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 사용할 <see cref="T:System.Data.DataViewManager" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">사용할 <see cref="T:System.Data.DataSet" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">코드 유지에 사용되는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that is used for code persistence.">코드 유지에 사용되는 값입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" />의 각 <see cref="T:System.Data.DataTable" />에 대한 <see cref="T:System.Data.DataSet" />을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">각 <see langword="DataTable" />에 대한 <see cref="T:System.Data.DataViewSettingCollection" />입니다.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에서 열을 추가하거나 삭제한 후 발생합니다.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataViewManager.ListChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.ListChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />을 <see cref="T:System.Data.DataRelation" />에 추가하거나 삭제할 때 <see cref="T:System.Data.DataRelationCollection" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">특정 <see cref="T:System.Collections.ICollection" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ICollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.Count" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.Count" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ICollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" />에 항목을 추가합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" />에 추가할 <see cref="T:System.Collections.IList" />입니다.</param>
      <returns vsli:raw="The position into which the new element was inserted.">새 요소가 삽입된 위치입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Clear" />를 참조하세요.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">
        <see cref="T:System.Collections.IList" />에 특정 값이 들어 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Object" />가 <see cref="T:System.Collections.IList" />에 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" />에서 특정 항목의 인덱스를 결정합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">항목을 <see cref="T:System.Collections.IList" />의 지정된 인덱스에 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" />에 삽입할 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsFixedSize" />를 참조하세요.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsReadOnly" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsReadOnly" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The element at the specified index.">지정한 인덱스의 요소입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.IList" />입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">지정한 인덱스에서 <see cref="T:System.Collections.IList" /> 항목을 제거합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">제거할 항목의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">검색에 사용되는 인덱스에 <see cref="T:System.ComponentModel.PropertyDescriptor" />를 추가합니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">검색에 사용되는 인덱스에 추가할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.AddNew" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IBindingList.AddNew" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 및 <see cref="T:System.ComponentModel.ListSortDirection" />에 따라 목록을 정렬합니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">정렬에 사용할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">지정된 <see cref="T:System.ComponentModel.PropertyDescriptor" />가 있는 행의 인덱스를 반환합니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">검색할 대상 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">검색할 property 매개 변수의 값입니다.</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">지정된 <see cref="T:System.ComponentModel.PropertyDescriptor" />가 있는 행의 인덱스입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">검색에 사용되는 인덱스에서 <see cref="T:System.ComponentModel.PropertyDescriptor" />를 제거합니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">검색에 사용되는 인덱스에서 제거할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">
        <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />를 사용하여 적용되는 모든 정렬을 제거합니다.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />를 참조하세요.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />를 참조하세요.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />를 참조하세요.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">데이터를 바인딩하는데 사용되는 각 항목의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />를 반환합니다.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">컬렉션에서 찾을 바인딩 가능한 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다. 이 매개 변수는 <see langword="null" />이 될 수 있습니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">데이터를 바인딩하는데 사용되는 각 항목의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">해당 목록의 이름을 반환합니다.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">목록 이름이 반환되는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다. 이 매개 변수는 <see langword="null" />이 될 수 있습니다.</param>
      <returns vsli:raw="The name of the list.">목록 이름입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">
        <see cref="E:System.Data.DataTableCollection.CollectionChanged" />을 <see cref="T:System.Data.DataTable" />에 추가하거나 삭제할 때 <see cref="T:System.Data.DataTableCollection" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 데이터 버전을 설명합니다.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">새 행입니다.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">변경되지 않은 행, 새 행 및 수정된 행을 포함한 현재 행입니다. 기본적으로 <see cref="T:System.Data.DataViewRowState" />는 CurrentRows로 설정됩니다.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">삭제된 행입니다.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">수정된 원래 데이터의 현재 버전입니다. <see langword="ModifiedOriginal" />을 참조하십시오.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">수정된 데이터의 원래 버전이며 데이터가 수정되어 <see langword="ModifiedCurrent" />로 사용할 수 있는 경우를 포함합니다.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">없음</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">변경되지 않은 행과 삭제된 행을 포함한 원본 행입니다.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">변경되지 않은 행입니다.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">
        <see cref="P:System.Data.DataView.ApplyDefaultSort" />에서 만든 DataView에 대한 <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" />, <see cref="P:System.Data.DataView.Table" /> 및 <see cref="T:System.Data.DataViewManager" />의 기본 설정을 나타냅니다.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">기본 정렬을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">기본 정렬이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">이 <see cref="T:System.Data.DataViewManager" />이 들어 있는 <see cref="T:System.Data.DataViewSetting" />을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">
        <see cref="T:System.Data.DataView" />에 적용할 필터를 가져오거나 설정합니다. RowFilter를 사용한 코드 예제를 보려면 <see cref="P:System.Data.DataView.RowFilter" />를 참조하십시오.</summary>
      <returns vsli:raw="A string that contains the filter to apply.">적용할 필터가 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에 Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged 행을 표시할지 아무 행도 표시하지 않을지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that indicates which rows to display.">표시할 행을 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에 적용할 정렬을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" />에 적용할 정렬입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">
        <see cref="T:System.Data.DataTable" /> 속성을 적용할 <see cref="T:System.Data.DataViewSetting" />을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSetting" />에 있는 각 <see cref="T:System.Data.DataTable" />에 대한 <see cref="T:System.Data.DataSet" /> 개체의 읽기 전용 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">지정한 인덱스에서 시작하는 1차원 <see cref="T:System.Array" /> 인스턴스에 컬렉션 개체를 복사합니다.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">컬렉션에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">삽입을 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">지정한 인덱스에서 시작하는 1차원 <see cref="T:System.Array" /> 인스턴스에 컬렉션 개체를 복사합니다.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">컬렉션에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">삽입을 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSetting" />의 <see cref="T:System.Data.DataViewSettingCollection" /> 개체 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">컬렉션에 있는 <see cref="T:System.Data.DataViewSetting" /> 개체 수입니다.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">컬렉션에 대한 <see cref="T:System.Collections.IEnumerator" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">
        <see cref="T:System.Collections.IEnumerator" /> 개체</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">
        <see cref="T:System.Data.DataViewSettingCollection" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">컬렉션을 <see langword="true" /> 읽기 전용으로 나타내려면 항상를 반환 합니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">
        <see cref="T:System.Data.DataViewSettingCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">이 속성은 파생 클래스에서 재정의하지 않으면 항상 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">컬렉션에서 지정된 <see cref="T:System.Data.DataViewSetting" />에 있는 <see cref="T:System.Data.DataTable" /> 개체를 가져옵니다.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">찾을 <see cref="T:System.Data.DataTable" />입니다.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">인덱스로 지정된 <see cref="T:System.Data.DataViewSetting" />의 <see cref="T:System.Data.DataTable" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">찾을 <see cref="T:System.Data.DataTable" />의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">이름으로 지정된 <see cref="T:System.Data.DataViewSetting" />의 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">찾을 <see cref="T:System.Data.DataTable" />의 이름입니다.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">영향을 받는 행의 수가 0인 경우 삽입, 업데이트 또는 삭제 작업 동안 <see cref="T:System.Data.Common.DataAdapter" />에서 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">예외를 자세히 설명하는 텍스트 문자열입니다.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">예외를 자세히 설명하는 텍스트 문자열입니다.</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">내부 예외에 대한 참조입니다.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">이 예외의 원인을 설명하는 오류 메시지입니다.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">업데이트에 실패하여 이 예외를 생성한 <see cref="T:System.Data.DataRow" /> 개체가 들어 있는 배열입니다.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">업데이트에 실패하여 이 예외를 생성한 <see cref="T:System.Data.DataRow" /> 개체를 지정된 <see cref="T:System.Data.DataRow" /> 개체 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">
        <see cref="T:System.Data.DataRow" /> 개체를 복사할 대상인 <see cref="T:System.Data.DataRow" /> 개체의 1차원 배열입니다.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">업데이트에 실패하여 이 예외를 생성한 <see cref="T:System.Data.DataRow" /> 개체를 지정된 <see cref="T:System.Data.DataRow" /> 개체 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">
        <see cref="T:System.Data.DataRow" /> 개체를 복사할 대상인 <see cref="T:System.Data.DataRow" /> 개체의 1차원 배열입니다.</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">복사를 시작할 대상 배열 인덱스입니다.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">지정된 serialization 정보 개체를 <see cref="T:System.Data.DBConcurrencyException" />을 serialize하는 데 필요한 데이터로 채웁니다.</summary>
      <param name="si">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />과 연결된 serialize된 개체가 들어 있는 <see cref="T:System.Data.DBConcurrencyException" />입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />과 연결된 serialize된 스트림의 소스와 대상이 들어 있는 <see cref="T:System.Data.DBConcurrencyException" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" />매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)인 경우</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />을 생성한 <see cref="T:System.Data.DBConcurrencyException" />의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />의 값입니다.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">업데이트에 실패하여 이 예외를 생성한 행의 수를 가져옵니다.</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">업데이트에 실패한 행의 수가 들어 있는 정수입니다.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">.NET Framework 데이터 공급자의 필드, 속성 또는 <see langword="Parameter" /> 개체의 데이터 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">범위가 1문자에서 8,000문자까지인 비유니코드 문자의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">유니코드 문자가 아닌 고정 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">범위가 1바이트에서 8,000바이트까지인 이진 데이터의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 또는 <see langword="false" />의 부울 값을 나타내는 단순 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">0에서 255 사이의 값을 갖는 8비트 부호 없는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">정확성이 통화 단위의 10000분의 1이고 범위가 -2 63(또는 -922,337,203,685,477.5808)에서 2 63 -1(또는 +922,337,203,685,477.5807)까지인 통화 값입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">날짜 값을 나타내는 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">날짜 및 시간 값을 나타내는 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">날짜 및 시간 데이터입니다. 날짜 값 범위는 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이입니다. Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">표준 시간대를 고려한 날짜 및 시간 데이터입니다. 날짜 값 범위는 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이입니다. Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다. 표준 시간대 값의 범위는 -14:00에서 +14:00 사이입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">1.0 x 10 -28부터 약 7.9 x 10 28까지 28~29개의 유효 자릿수를 가진 값을 나타내는 단순 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">약 5.0 x 10 -324부터 1.7 x 10 308까지 15~16자리의 정밀도를 가진 값을 나타내는 부동 소수점 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">GUID(Globally Unique IDentifier)입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">-32768과 32767 사이의 값을 가진 부호 있는 16비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">-2147483648과 2147483647 사이의 값을 가진 부호 있는 32비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">-9223372036854775808과 9223372036854775807 사이의 값을 가진 부호 있는 64비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">다른 <see langword="DbType" /> 값에 의해 명시적으로 나타나지 않은 참조 또는 값 형식을 나타내는 일반 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">-128과 127 사이의 값을 가진 부호 있는 8비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">대략 1.5 x 10 -45부터 3.4 x 10 38까지 7자리의 정밀도를 가진 값을 나타내는 부동 소수점 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">유니코드 문자열을 나타내는 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">유니코드 문자의 고정 길이 문자열입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">SQL Server <see langword="DateTime" /> 값을 나타내는 형식입니다. SQL Server <see langword="time" /> 값을 사용하려면 <see cref="F:System.Data.SqlDbType.Time" />을 사용합니다.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">0과 65535 사이의 값을 가진 부호 없는 16비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">0과 4294967295 사이의 값을 가진 부호 없는 32비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">0과 18446744073709551615 사이의 값을 가진 부호 없는 64비트 정수를 나타내는 정수 계열 형식입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">가변 길이 숫자 값입니다.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">XML 문서나 단편의 구문 분석된 표현입니다.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">삭제된 <see cref="T:System.Data.DataRow" />에서 작업을 시도할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">
        <see cref="T:System.Data.DeletedRowInaccessibleException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">
        <see cref="T:System.Data.DataSet" /> 관련 개체에서 추가 작업을 수행하는 동안 중복된 데이터베이스 개체 이름을 발견할 경우 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">
        <see cref="T:System.Data.DuplicateNameException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.DuplicateNameException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.DuplicateNameException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">지정된 문자열과 예외를 사용하여 <see cref="T:System.Data.DuplicateNameException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">LINQ to DataSet 쿼리에서 반환된 <see cref="T:System.Data.DataRow" /> 개체의 컬렉션을 나타냅니다. 이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">
        <see cref="T:System.Data.DataRow" /> 개체의 컬렉션에 대한 열거자를 반환합니다. 이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" /> 개체의 컬렉션을 순회하는 데 사용할 수 있는 <see cref="T:System.Data.DataRow" />입니다.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">쿼리에서 반환된 <see cref="T:System.Data.DataRow" /> 개체의 컬렉션을 나타냅니다.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">포함된 행 개체의 컬렉션에 대한 열거자를 반환합니다.</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">
        <paramref name="TRow" /> 개체의 컬렉션을 순회하는 데 사용할 수 있는 강력한 형식의 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 개체의 컬렉션에 대한 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" /> 개체의 컬렉션을 순회하는 데 사용할 수 있는 <see cref="T:System.Data.DataRow" />입니다.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">데이터 행 컬렉션 클래스의 확장 메서드가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 요소를 지정된 형식으로 변환합니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">변환할 요소가 들어 있는 <see cref="T:System.Data.EnumerableRowCollection" />입니다.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">소스의 요소를 변환할 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">지정된 형식으로 변환되는 소스 시퀀스의 각 요소가 들어 있는 <see cref="T:System.Data.EnumerableRowCollection" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">시퀀스의 요소를 <paramref name="TResult" /> 형식으로 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 오름차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 오름차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 내림차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 내림차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">
        <see cref="T:System.Data.EnumerableRowCollection`1" />의 각 요소를 새 폼에 투영합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">변환 함수를 호출할 <see cref="T:System.Data.EnumerableRowCollection`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">
        <paramref name="TRow" />를 변환할 대상 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">해당 요소가 <paramref name="source" />의 각 요소에 대해 변형 함수를 호출한 결과인 <see cref="T:System.Data.EnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 오름차순으로 두 번째로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 오름차순으로 두 번째로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 내림차순으로 두 번째로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 내림차순으로 두 번째로 정렬합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">지정된 조건자에 따라 행 시퀀스를 필터링합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">필터링할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">입력 시퀀스에서 조건에 맞는 행이 들어 있는 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">
        <see cref="P:System.Data.DataColumn.Expression" />의 <see cref="T:System.Data.DataColumn" /> 속성을 실행할 수 없을 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">
        <see cref="T:System.Data.EvaluateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">
        <see cref="T:System.Data.EvaluateException" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">serialize된 특정 스트림의 소스와 대상입니다.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.EvaluateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.EvaluateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="E:System.Data.Common.DataAdapter.FillError" />의 <see cref="T:System.Data.Common.DbDataAdapter" /> 이벤트에 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.FillErrorEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">업데이트하고 있는 <see cref="T:System.Data.DataTable" />입니다.</param>
      <param name="values" vsli:raw="The values for the row being updated.">업데이트하고 있는 행의 값입니다.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">오류가 발생해도 채우기 작업을 계속할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">채우기 작업을 계속해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">오류 발생 시 업데이트하고 있는 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">업데이트하고 있는 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">처리하고 있는 오류를 가져옵니다.</summary>
      <returns vsli:raw="The errors being handled.">처리하고 있는 오류입니다.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">오류 발생 시 업데이트하고 있는 행의 값을 가져옵니다.</summary>
      <returns vsli:raw="The values for the row being updated.">업데이트하고 있는 행의 값입니다.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">
        <see cref="E:System.Data.Common.DataAdapter.FillError" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.FillErrorEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">값 또는 행이 삭제되거나 업데이트될 때 기본 키/외래 키 관계에서 열 집합에 적용되는 동작 제한을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">지정된 부모 및 자식 <see cref="T:System.Data.ForeignKeyConstraint" /> 개체를 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건의 부모 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건의 자식 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">두 열 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우  
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">부모와 자식 <see cref="T:System.Data.ForeignKeyConstraint" /> 개체의 지정된 배열을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건에 있는 부모 <see cref="T:System.Data.DataColumn" />의 배열입니다.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건에 있는 자식 <see cref="T:System.Data.DataColumn" />의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">두 열 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우  
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">지정된 이름, 부모 및 자식 <see cref="T:System.Data.ForeignKeyConstraint" /> 개체를 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건의 부모 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건의 자식 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">두 열 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우  
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">지정된 이름, 부모와 자식 <see cref="T:System.Data.ForeignKeyConstraint" /> 개체의 배열을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">
        <see cref="T:System.Data.ForeignKeyConstraint" />의 이름입니다. <see langword="null" /> 또는 빈 문자열이면 제약 조건의 컬렉션에 추가될 때 기본 이름이 지정됩니다.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건에 있는 부모 <see cref="T:System.Data.DataColumn" />의 배열입니다.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">제약 조건에 있는 자식 <see cref="T:System.Data.DataColumn" />의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">두 열 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우  
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공됩니다. 이 생성자를 사용하여 만든 <see cref="T:System.Data.ForeignKeyConstraint" /> 개체는 <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />를 통해 컬렉션에 추가해야 합니다. 메서드가 호출될 때, 지정된 이름을 가진 테이블과 열이 있어야 합니다. 이 생성자를 호출하기 전에 <see cref="M:System.Data.DataTable.BeginInit" />이 호출된 경우, 지정된 이름을 가진 테이블과 열이 <see cref="M:System.Data.DataTable.EndInit" />이 호출될 때 있어야 합니다.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">제약 조건에서 부모 <see cref="T:System.Data.DataTable" /> 개체를 포함하는 부모 <see cref="T:System.Data.DataColumn" />의 이름입니다.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">
        <see cref="P:System.Data.DataTable.Namespace" />의 이름입니다.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">제약 조건에 있는 부모 <see cref="T:System.Data.DataColumn" /> 개체의 이름 배열입니다.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">제약 조건에 있는 자식 <see cref="T:System.Data.DataColumn" /> 개체의 이름 배열입니다.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 값 중 하나입니다. 가능한 값은 <see langword="None" />, <see langword="Cascade" /> 및 <see langword="Default" />입니다.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">행이 삭제될 때 사용할 <see cref="T:System.Data.Rule" /> 값 중 하나입니다. 기본값은 <see langword="Cascade" />입니다. 가능한 값은 <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> 및 <see langword="Default" />입니다.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">행이 업데이트될 때 사용할 <see cref="T:System.Data.Rule" /> 값 중 하나입니다. 기본값은 <see langword="Cascade" />입니다. 가능한 값은 <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> 및 <see langword="Default" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">두 열 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우  
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공됩니다. 이 생성자를 사용하여 만든 <see cref="T:System.Data.ForeignKeyConstraint" /> 개체는 <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />를 통해 컬렉션에 추가해야 합니다. 메서드가 호출될 때, 지정된 이름을 가진 테이블과 열이 있어야 합니다. 이 생성자를 호출하기 전에 <see cref="M:System.Data.DataTable.BeginInit" />이 호출된 경우, 지정된 이름을 가진 테이블과 열이 <see cref="M:System.Data.DataTable.EndInit" />이 호출될 때 있어야 합니다.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">제약 조건에서 부모 <see cref="T:System.Data.DataTable" /> 개체를 포함하는 부모 <see cref="T:System.Data.DataColumn" />의 이름입니다.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">제약 조건에 있는 부모 <see cref="T:System.Data.DataColumn" /> 개체의 이름 배열입니다.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">제약 조건에 있는 자식 <see cref="T:System.Data.DataColumn" /> 개체의 이름 배열입니다.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 값 중 하나입니다. 가능한 값은 <see langword="None" />, <see langword="Cascade" /> 및 <see langword="Default" />입니다.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">행이 삭제될 때 사용할 <see cref="T:System.Data.Rule" /> 값 중 하나입니다. 기본값은 <see langword="Cascade" />입니다. 가능한 값은 <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> 및 <see langword="Default" />입니다.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">행이 업데이트될 때 사용할 <see cref="T:System.Data.Rule" /> 값 중 하나입니다. 기본값은 <see langword="Cascade" />입니다. 가능한 값은 <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> 및 <see langword="Default" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">두 열 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">열의 데이터 형식이 다른 경우  
-또는- 
테이블이 동일한 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">
        <see cref="M:System.Data.DataTable.AcceptChanges" />가 호출될 때 이 제약 조건에서 발생하게 될 동작을 나타냅니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 값 중 하나입니다. 가능한 값은 <see langword="None" />과 <see langword="Cascade" />입니다. 기본값은 <see langword="None" />입니다.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">이 제약 조건의 자식 열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">제약 조건의 자식 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">행이 삭제될 때 이 제약 조건에 발생하는 동작을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">
        <see cref="T:System.Data.Rule" /> 값 중 하나입니다. 기본값은 <see langword="Cascade" />입니다.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">현재 <see cref="T:System.Data.ForeignKeyConstraint" />가 지정된 개체와 같은지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">이 <see cref="T:System.Data.ForeignKeyConstraint" />와 비교할 개체입니다. 동일한 열을 제한하는 두 개의 <see cref="T:System.Data.ForeignKeyConstraint" />는 동일합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 동일하면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> 개체의 이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">이 제약 조건의 부모 열입니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">제약 조건의 부모 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">이 제약 조건의 부모 테이블을 가져옵니다.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">이 제약 조건의 부모 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">이 제약 조건의 자식 테이블을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">제약 조건의 자식 테이블인 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">행이 업데이트될 때 이 제약 조건에 발생하는 동작을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">
        <see cref="T:System.Data.Rule" /> 값 중 하나입니다. 기본값은 <see langword="Cascade" />입니다.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">데이터 소스 열을 <see cref="T:System.Data.DataSet" /> 열과 연결하며, .NET Framework 데이터 공급자들이 공통적으로 사용하는 <see cref="T:System.Data.Common.DataColumnMapping" /> 클래스에 의해 구현됩니다.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" />에서 매핑할 열의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">
        <see cref="T:System.Data.DataSet" />에서 매핑할 열의 이름입니다. 이름은 대/소문자를 구분하지 않습니다.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">데이터 소스에서 매핑할 열의 이름을 가져오거나 설정합니다. 이름은 대/소문자를 구분합니다.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">데이터 소스의 열 이름(대/소문자 구분)입니다.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">DataColumnMapping 개체의 컬렉션을 포함하며, .NET Framework 데이터 공급자가 공통적으로 사용하는 <see cref="T:System.Data.Common.DataColumnMappingCollection" />에 의해 구현됩니다.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">소스 열과 <see cref="T:System.Data.DataSet" /> 열 이름을 사용하여 ColumnMapping 개체를 ColumnMapping 컬렉션에 추가합니다.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">소스 열의 이름(대/소문자 구분)입니다.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 열의 이름입니다.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">컬렉션에 추가된 ColumnMapping 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 개체가 <see cref="T:System.Data.Common.DataColumnMapping" />에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">소스 열의 이름(대/소문자 구분)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">지정된 <see cref="T:System.Data.DataSet" /> 열 이름을 가진 ColumnMapping 개체를 가져옵니다.</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">컬렉션 내의 <see cref="T:System.Data.DataSet" /> 열 이름입니다.</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">지정된 <see langword="DataSet" /> 열 이름을 가진 ColumnMapping 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">지정된 소스 열 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체의 위치를 가져옵니다. 이름은 대/소문자를 구분합니다.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">소스 열의 이름(대/소문자 구분)입니다.</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">지정된 소스 열 이름을 가진 <see langword="DataColumnMapping" /> 개체의 위치(0부터 시작)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">지정된 <see langword="SourceColumn" /> 이름을 가진 <see cref="T:System.Data.IColumnMapping" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">찾을 <see langword="SourceColumn" /> 개체의 <see langword="IColumnMapping" /> 이름입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">지정된 <see langword="IColumnMapping" /> 이름을 가진 <see langword="SourceColumn" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">지정된 <see cref="T:System.Data.IColumnMapping" /> 이름을 사용하여 <see cref="P:System.Data.IColumnMapping.SourceColumn" /> 개체를 컬렉션에서 제거합니다.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">대/소문자를 구분하는 <see langword="SourceColumn" /> 이름입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">지정된 <see langword="SourceColumn" /> 이름을 가진 <see cref="T:System.Data.Common.DataColumnMapping" /> 개체가 없는 경우</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">개체가 DataAdapter를 구현하도록 하며, <see cref="T:System.Data.DataSet" />을 채우거나 업데이트하고 데이터 소스를 업데이트하는 데 사용되는 매핑 동작 관련 속성 및 메서드 집합을 나타냅니다.  
 <see cref="T:System.Data.IDbDataAdapter" /> 인스턴스는 텍스트 명령(예: Transact-SQL)을 사용하는 관계형 데이터베이스 또는 그와 유사한 데이터 소스용이며, <see cref="T:System.Data.IDataAdapter" /> 인스턴스는 임의 형식의 데이터 소스를 사용할 수 있습니다.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">
        <see cref="T:System.Data.DataSet" /> 이름을 사용하여 데이터 소스의 행과 일치하도록 <see cref="T:System.Data.DataSet" />의 행을 추가하거나 업데이트하고 "Table"이라는 이름의 <see cref="T:System.Data.DataTable" />을 만듭니다.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">지정된 <see cref="T:System.Data.DataSet" />에 "Table"이라는 <see cref="T:System.Data.DataTable" />을 추가하고 지정된 <see cref="T:System.Data.SchemaType" />에 따라 데이터 원본의 스키마와 일치하도록 스키마를 구성합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">데이터 원본의 스키마로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 값 중 하나입니다.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">데이터 소스에서 반환된 스키마 정보가 들어 있는 <see cref="T:System.Data.DataTable" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">SQL SELECT 문을 실행할 때 사용자가 설정한 매개 변수를 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">사용자가 설정한 매개 변수를 포함하는 <see cref="T:System.Data.IDataParameter" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">매핑되지 않은 소스 테이블과 열 중에서 필터링하거나 오류를 발생시키기 위해 소스 이름과 함께 전달할 항목을 나타내거나 지정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">
        <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나입니다. 기본값은 <see langword="Passthrough" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">설정된 값이 <see cref="T:System.Data.MissingMappingAction" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">누락된 소스 테이블, 열 및 그 관계를 데이터 세트 스키마에 추가할지 무시할지 또는 오류를 발생시킬지를 나타내거나 지정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">
        <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나입니다. 기본값은 <see langword="Add" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">설정된 값이 <see cref="T:System.Data.MissingSchemaAction" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">원본 테이블이 데이터 세트 테이블에 매핑되는 방식을 나타냅니다.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">반환된 레코드와 <see cref="T:System.Data.DataSet" /> 간의 마스터 매핑을 제공하는 컬렉션입니다. 기본값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">"Table"이라는 <see cref="T:System.Data.DataSet" />의 지정된 <see cref="T:System.Data.DataTable" />에서 삽입, 업데이트 또는 삭제된 각 행에 대해 각각 INSERT, UPDATE 또는 DELETE 문을 호출합니다.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">데이터 소스를 업데이트하는 데 사용된 <see cref="T:System.Data.DataSet" />입니다.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 성공적으로 업데이트된 행의 수를 반환합니다.</returns>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">Command 개체에 대한 매개 변수 및 선택적으로 <see cref="T:System.Data.DataSet" /> 열에 대한 매핑을 나타내며, 데이터 소스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">매개 변수의 <see cref="T:System.Data.DbType" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">
        <see cref="T:System.Data.DbType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Data.DbType.String" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">속성이 유효한 <see cref="T:System.Data.DbType" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">
        <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본값은 <see langword="Input" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">속성에 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중 하나를 설정하지 않은 경우</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">null 값이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">
        <see cref="T:System.Data.IDataParameter" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.IDataParameter" />의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />으로 매핑되고 <see cref="P:System.Data.IDataParameter.Value" />를 로드하거나 반환하는 데 사용되는 소스 열의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.DataSet" />으로 매핑되는 소스 열의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">
        <see cref="P:System.Data.IDataParameter.Value" />를 로드할 때 사용할 <see cref="T:System.Data.DataRowVersion" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 <see langword="Current" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">속성이 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">매개 변수의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">Command 개체에 대한 모든 매개 변수 및 <see cref="T:System.Data.DataSet" /> 열에 대한 매핑을 수집하며 데이터 소스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">컬렉션의 매개 변수가 지정된 이름을 갖는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">매개 변수의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">매개 변수가 컬렉션에 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">컬렉션 내의 <see cref="T:System.Data.IDataParameter" /> 위치를 가져옵니다.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">매개 변수의 이름입니다.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">컬렉션 내의 0부터 시작하는 <see cref="T:System.Data.IDataParameter" /> 위치입니다.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">지정한 인덱스에 있는 매개 변수를 가져오거나 설정합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">검색할 매개 변수의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">컬렉션에서 <see cref="T:System.Data.IDataParameter" />을 제거합니다.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">매개 변수의 이름입니다.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">데이터 소스에서 명령을 실행하여 얻은 결과 집합의 하나 이상의 앞으로만 이동 가능한 스트림을 읽는 방법을 제공하며 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">
        <see cref="T:System.Data.IDataReader" /> 개체를 닫습니다.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="The level of nesting.">중첩 수준입니다.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.IDataReader" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.IDataReader" />가 닫혔습니다.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">데이터 판독기가 닫혀 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">데이터 판독기가 닫혀 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">일괄 처리 SQL 문의 결과를 읽을 때 데이터 판독기에서 다음 결과로 진행하도록 합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">
        <see cref="T:System.Data.IDataReader" />를 다음 레코드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">SQL 문을 실행하여 변경, 삽입 또는 삭제된 행 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">변경, 삽입 또는 삭제된 행 수입니다. 영향을 받은 행이 없거나 문이 실패하면 0이고, SELECT 문의 경우는 -1입니다.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">
        <see langword="DataReader" />의 각 행 내 열 값에 액세스할 수 있도록 하고 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">현재 행의 열 수를 가져옵니다.</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">올바른 레코드 집합에 배치되지 않으면 0이고, 배치되면 현재 레코드의 열 수입니다. 기본값은 -1입니다.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">지정된 열의 값에 해당하는 Boolean 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The value of the column.">열의 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">지정된 열의 부호 없는 8비트 정수 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">지정된 열의 부호 없는 8비트 정수 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">지정된 버퍼 오프셋에서 시작하여 지정된 열 오프셋의 바이트 스트림을 배열로 버퍼에 읽어옵니다.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">읽기 작업을 시작할 필드 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">바이트 스트림을 읽을 버퍼입니다.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">읽기 작업을 시작할 <paramref name="buffer" />에 대한 인덱스입니다.</param>
      <param name="length" vsli:raw="The number of bytes to read.">읽을 바이트 수입니다.</param>
      <returns vsli:raw="The actual number of bytes read.">읽은 실제 바이트 수입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">지정된 열의 값에 해당하는 문자 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <returns vsli:raw="The character value of the specified column.">지정된 열의 값에 해당하는 문자 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">지정된 버퍼 오프셋에서 시작하여 지정된 열 오프셋의 문자 스트림을 배열로 버퍼에 읽어옵니다.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">열 서수(0부터 시작)입니다.</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">읽기 작업을 시작할 행 내의 인덱스입니다.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">바이트 스트림을 읽을 버퍼입니다.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">읽기 작업을 시작할 <paramref name="buffer" />에 대한 인덱스입니다.</param>
      <param name="length" vsli:raw="The number of bytes to read.">읽을 바이트 수입니다.</param>
      <returns vsli:raw="The actual number of characters read.">읽은 실제 문자 수입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">지정된 열 서수에 대해 <see cref="T:System.Data.IDataReader" />를 반환합니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">지정된 열 서수에 대한 <see cref="T:System.Data.IDataReader" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">지정된 필드에 대한 데이터 형식 정보를 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The data type information for the specified field.">지정된 필드에 대한 데이터 형식 정보입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">지정된 필드의 날짜 및 시간 데이터 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The date and time data value of the specified field.">지정된 필드의 날짜 및 시간 데이터 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">지정된 필드의 고정 위치 숫자 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">지정된 필드의 고정 위치 숫자 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">지정된 필드의 배정밀도 부동 소수점 숫자를 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The double-precision floating point number of the specified field.">지정된 필드의 배정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">
        <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />에서 반환되는 <see cref="T:System.Object" /> 형식에 해당하는 <see cref="T:System.Type" /> 정보를 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">
        <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />에서 반환되는 <see cref="T:System.Object" /> 형식에 해당하는 <see cref="T:System.Type" /> 정보입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">지정된 필드의 단정밀도 부동 소수점 숫자를 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The single-precision floating point number of the specified field.">지정된 필드의 단정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">지정된 필드의 GUID 값을 반환합니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The GUID value of the specified field.">지정된 필드의 GUID 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">지정된 필드의 부호 있는 16비트 정수 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">지정된 필드의 부호 있는 16비트 정수 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">지정된 필드의 부호 있는 32비트 정수 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">지정된 필드의 부호 있는 32비트 정수 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">지정된 필드의 부호 있는 64비트 정수 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">지정된 필드의 부호 있는 64비트 정수 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">찾을 필드의 이름을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">필드의 이름이거나 반환할 값이 없는 경우 빈 문자열("")입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">명명된 필드의 인덱스를 반환합니다.</summary>
      <param name="name" vsli:raw="The name of the field to find.">찾을 필드의 이름입니다.</param>
      <returns vsli:raw="The index of the named field.">명명된 필드의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">지정된 필드의 문자열 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The string value of the specified field.">지정된 필드의 문자열 값입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">지정된 필드의 값을 반환합니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">반환될 때 필드 값을 포함할 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">현재 레코드의 열 값으로 개체의 배열을 채웁니다.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">특성 필드를 복사할 <see cref="T:System.Object" />의 배열입니다.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">배열에 포함된 <see cref="T:System.Object" /> 인스턴스의 수입니다.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">지정된 필드가 null로 설정되었는지 여부를 반환합니다.</summary>
      <param name="i" vsli:raw="The index of the field to find.">찾을 필드의 인덱스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 필드가 null로 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">지정된 인덱스에 있는 열을 가져옵니다.</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">가져올 열의 0부터 시작하는 인덱스입니다.</param>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" />의 지정된 인덱스 위치에 있는 열입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">지정된 이름을 가진 열을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the column to find.">찾을 열의 이름입니다.</param>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" />로 지정된 이름을 갖는 열입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">지정된 이름의 열을 찾을 수 없는 경우</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">데이터 소스에 연결된 동안 실행되는 SQL 문을 나타내며 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 실행을 취소하려고 합니다.</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">데이터 소스에 대해 실행할 텍스트 명령을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">실행할 텍스트 명령입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">명령이 실행될 때까지 대기하는 시간(초)입니다. 기본값은 30초입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">할당된 속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">
        <see cref="P:System.Data.IDbCommand.CommandText" /> 속성을 해석하는 방법을 지정하거나 나타냅니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">
        <see cref="T:System.Data.CommandType" /> 값 중 하나입니다. 기본값은 <see langword="Text" />입니다.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.IDbConnection" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The connection to the data source.">데이터 원본에 대한 연결입니다.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">
        <see cref="T:System.Data.IDbDataParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">
        <see langword="IDbDataParameter" /> 개체</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">.NET Framework 데이터 공급자의 <see langword="Connection" /> 개체에 대해 SQL 문을 실행하고 영향을 받는 행 수를 반환합니다.</summary>
      <returns vsli:raw="The number of rows affected.">영향을 받은 행 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">연결이 존재하지 않습니다.  
 또는  
 연결이 열려 있지 않습니다.</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="P:System.Data.IDbCommand.Connection" />에 대해 <see cref="P:System.Data.IDbCommand.CommandText" />를 실행하고 <see cref="T:System.Data.IDataReader" />를 빌드합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 개체</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="P:System.Data.IDbCommand.Connection" />에 대해 <see cref="P:System.Data.IDbCommand.CommandText" />를 실행하고 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.IDataReader" />를 빌드합니다.</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 개체</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다. 추가 열이나 행은 무시됩니다.</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">결과 집합에 있는 첫째 행의 첫째 열입니다.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">
        <see cref="T:System.Data.IDataParameterCollection" />를 가져옵니다.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 문 또는 저장 프로시저의 매개 변수</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">데이터 소스에 대해 명령의 준비된(또는 컴파일된) 버전을 만듭니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />이 설정되지 않은 경우  
또는 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" />이 <see cref="M:System.Data.OleDb.OleDbConnection.Open" />이 아닌 경우</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">.NET Framework 데이터 공급자의 <see langword="Command" /> 개체가 실행되는 트랜잭션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">.NET Framework 데이터 공급자의 <see langword="Command" /> 개체가 실행됩니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" />의 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 메서드에 의해 사용될 때 명령 결과가 <see cref="T:System.Data.DataRow" />에 적용되는 방법을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다. 명령이 자동으로 생성되지 않으면 기본값은 <see langword="Both" />입니다. 그러면 기본값은 <see langword="None" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">입력한 값이 <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">데이터 소스에 대한 열린 연결을 나타내며 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns vsli:raw="An object representing the new transaction.">새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">지정된 <see cref="T:System.Data.IsolationLevel" /> 값을 사용하여 데이터베이스 트랜잭션을 시작합니다.</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">
        <see cref="T:System.Data.IsolationLevel" /> 값 중 하나입니다.</param>
      <returns vsli:raw="An object representing the new transaction.">새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">열려 있는 <see langword="Connection" /> 개체의 현재 데이터베이스를 변경합니다.</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">현재 데이터베이스 대신 사용할 데이터베이스의 이름입니다.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">데이터베이스에 대한 연결을 닫습니다.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A string containing connection settings.">연결 설정이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져옵니다.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">연결이 열리기 전까지 대기할 시간(초)입니다. 기본값은 15초입니다.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">연결과 관련된 Command 개체를 만들고 반환합니다.</summary>
      <returns vsli:raw="A Command object associated with the connection.">연결과 관련된 Command 개체입니다.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">공급자별 Connection 개체의 <see langword="ConnectionString" /> 속성으로 지정된 설정을 사용하여 데이터베이스 연결을 엽니다.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">연결의 현재 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">
        <see cref="T:System.Data.DataSet" />을 채우고 데이터 소스를 업데이트하는 데 사용되며 관계 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현되는 명령 관련 속성 집합을 나타냅니다.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">데이터 집합에서 레코드를 삭제하기 위한 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 새 행에 대한 데이터 소스에 레코드를 삽입하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">데이터 소스에서 레코드를 선택하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">데이터 소스에서 레코드를 업데이트하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 수정된 행에 대한 데이터 소스에서 레코드를 업데이트하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Visual Basic .NET 데이터 디자이너가 Command 개체에 대한 매개 변수 및 필요에 따라 <see cref="T:System.Data.DataSet" /> 열에 대한 매핑을 나타내는 데 사용됩니다.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">숫자 매개 변수의 정밀도를 나타냅니다.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">데이터 공급자 Parameter 개체의 Value 속성을 나타내는 데 사용되는 최대 자릿수입니다. 기본값은 0이며 이는 데이터 공급자가 Value의 정밀도를 설정함을 나타냅니다.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">숫자 매개 변수의 소수 자릿수를 나타냅니다.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" />가 확인되는 소수점 이하 자릿수입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">매개 변수의 크기입니다.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">열에 있는 데이터의 최대 크기(바이트)입니다. 기본값은 매개 변수 값에서 유추됩니다.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">데이터 소스에서 수행할 트랜잭션을 나타내며 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">데이터베이스 트랜잭션을 커밋합니다.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">트랜잭션을 커밋하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">트랜잭션이 이미 커밋 또는 롤백된 경우  
 또는  
 연결이 손상된 경우</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">트랜잭션과 연결할 Connection 개체를 지정합니다.</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">트랜잭션과 연결할 Connection 개체입니다.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />을 지정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />입니다. 기본값은 <see langword="ReadCommitted" />입니다.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">보류 상태에서 트랜잭션을 롤백합니다.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">트랜잭션을 커밋하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">트랜잭션이 이미 커밋 또는 롤백된 경우  
 또는  
 연결이 손상된 경우</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="M:System.Data.DataRow.EndEdit" /> 이벤트에서 <see cref="E:System.Data.DataTable.RowChanging" /> 메서드를 호출할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">
        <see cref="T:System.Data.InRowChangingEventException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.InRowChangingEventException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.InRowChangingEventException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.InRowChangingEventException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">컬렉션을 만드는 기본 기능을 제공합니다.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">
        <see cref="T:System.Data.InternalDataCollectionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">지정된 <see cref="T:System.Data.InternalDataCollectionBase" /> 인덱스에서 시작하여 현재 <see cref="T:System.Array" />의 모든 요소를 1차원 <see cref="T:System.Data.InternalDataCollectionBase" />에 복사합니다.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">현재 <see cref="T:System.Array" /> 개체의 요소를 복사할 1차원 <see cref="T:System.Data.InternalDataCollectionBase" />입니다.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">복사를 시작할 대상 <see cref="T:System.Array" /> 인덱스입니다.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">컬렉션에 있는 요소의 총수를 가져옵니다.</summary>
      <returns vsli:raw="The total number of elements in a collection.">컬렉션에 있는 요소의 총수입니다.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">컬렉션에 대한 <see cref="T:System.Collections.IEnumerator" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">컬렉션에 대한 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">
        <see cref="T:System.Data.InternalDataCollectionBase" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">
        <see cref="T:System.Data.InternalDataCollectionBase" />이 동기화되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">컬렉션이 동기화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">컬렉션의 항목을 목록으로 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">컬렉션이 들어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">컬렉션을 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">컬렉션을 동기화하는 데 사용할 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">관계를 잘못 만들거나 액세스하면 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">
        <see cref="T:System.Data.InvalidConstraintException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.InvalidConstraintException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.InvalidConstraintException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.InvalidConstraintException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />에 잘못된 <see cref="P:System.Data.DataColumn.Expression" />이 들어 있는 <see cref="T:System.Data.DataColumnCollection" />을 추가할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">
        <see cref="T:System.Data.InvalidExpressionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">
        <see cref="T:System.Data.InvalidExpressionException" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">serialize된 특정 스트림의 소스와 대상입니다.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.InvalidExpressionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.InvalidExpressionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">연결에 대한 트랜잭션 잠금 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">격리 수준이 높은 트랜잭션에서 보류 중인 변경은 덮어쓸 수 없습니다.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">공유 잠금은 커밋되지 않은 읽기를 방지하기 위해 데이터를 읽는 동안 유지되지만 트랜잭션이 끝나기 전에 데이터가 변경되어 반복되지 않은 읽기나 팬텀 데이터가 생성될 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">공유 잠금이 발행되지 않았고 단독 잠금이 부여되지 않았음을 의미하는 더티 읽기가 가능합니다.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">잠금은 쿼리에서 사용되는 모든 데이터에 적용되어 데이터를 다른 사용자가 업데이트할 수 없게 합니다. 반복되지 않은 읽기를 금지하지만 팬텀 행의 경우는 가능합니다.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">범위 잠금을 <see cref="T:System.Data.DataSet" />에 적용하여 트랜잭션이 완료될 때까지 다른 사용자가 데이터 세트에 행을 삽입하거나 업데이트할 수 없게 합니다.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">동일한 데이터에 대해 한 애플리케이션에서 데이터를 수정하고 있을 때 또 다른 애플리케이션에서 읽을 수 있는 데이터 버전을 저장하여 차단을 줄입니다. 다시 쿼리해도 한 트랜잭션에서 다른 트랜잭션의 변경 내용을 볼 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">지정된 격리 수준과 다른 수준이 사용되지만 수준을 결정할 수는 없습니다.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">소스 테이블을 <see cref="T:System.Data.DataSet" />의 테이블과 연결하며 .NET Framework 데이터 공급자들이 공통적으로 사용하는 <see cref="T:System.Data.Common.DataTableMapping" /> 클래스에 의해 구현됩니다.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />에 대한 파생 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
      <returns vsli:raw="A collection of data column mappings.">데이터 열 매핑의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 테이블 이름(대/소문자를 구분하지 않음)을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 있는 테이블 이름(대/소문자를 구분하지 않음)입니다.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)입니다.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">TableMapping 개체의 컬렉션을 포함하며 .NET Framework 데이터 공급자가 공통적으로 사용하는 <see cref="T:System.Data.Common.DataTableMappingCollection" />에 의해 구현됩니다.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">컬렉션에 테이블 매핑을 추가합니다.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)입니다.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> 테이블의 이름입니다.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">새로 매핑된 <see cref="T:System.Data.ITableMapping" /> 개체에 대한 참조를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">컬렉션에 지정된 소스 테이블 이름을 가지는 테이블 매핑이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 소스 테이블 이름을 가진 테이블 매핑이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">지정된 <see cref="T:System.Data.DataSet" /> 테이블 이름을 가진 TableMapping 개체를 가져옵니다.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">컬렉션 내의 <see langword="DataSet" /> 테이블 이름입니다.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">지정된 <see langword="DataSet" /> 테이블 이름을 가진 TableMapping 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">컬렉션 내의 <see cref="T:System.Data.ITableMapping" /> 개체의 위치를 가져옵니다.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">소스 테이블의 이름(대/소문자를 구분함)입니다.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">컬렉션 내의 <see cref="T:System.Data.ITableMapping" /> 개체의 위치(0부터 시작)를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">지정된 <see cref="T:System.Data.ITableMapping" /> 이름을 가진 <see cref="P:System.Data.ITableMapping.SourceTable" />의 인스턴스를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" />의 <see langword="SourceTable" /> 이름입니다.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">지정된 <see langword="SourceTable" /> 이름을 가진 <see cref="T:System.Data.ITableMapping" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">지정된 <see cref="T:System.Data.ITableMapping" /> 이름을 사용하여 <see cref="P:System.Data.ITableMapping.SourceTable" /> 개체를 컬렉션에서 제거합니다.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">
        <see langword="SourceTable" />의 이름(대/소문자를 구분함)입니다.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">허용되거나 허용되지 않는, <see langword="KeyRestrictions" /> 속성에 의해 식별되는 연결 문자 매개 변수의 목록을 식별합니다.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">기본. 허용되는 추가 연결 문자열 매개 변수만 식별합니다.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">허용되지 않는 추가 연결 문자열 매개 변수를 식별합니다.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">
        <see cref="Overload:System.Data.DataTable.Load" /> 또는 <see cref="Overload:System.Data.DataSet.Load" /> 메서드를 사용할 때 데이터 소스의 값이 기존 행에 적용되는 방식을 제어합니다.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">이 행의 들어오는 값이 각 열 데이터의 현재 값 및 원래 값 버전에 작성됩니다.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">이 행의 들어오는 값이 각 열의 원래 값 버전에 작성됩니다. 각 열 데이터의 현재 버전은 변경되지 않습니다.  이 값이 기본값입니다.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">이 행의 들어오는 값이 각 열의 현재 버전에 작성됩니다. 각 열 데이터의 원래 버전은 변경되지 않습니다.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">
        <see cref="T:System.Data.DataColumn" />이 매핑되는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">열이 XML 특성에 매핑됩니다.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">열이 XML 요소에 매핑됩니다.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">열이 내부 구조에 매핑됩니다.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">열이 <see cref="T:System.Xml.XmlText" /> 노드에 매핑됩니다.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">대상과 소스 <see langword="DataRow" />의 기본 키 값이 같고 <see cref="P:System.Data.DataSet.EnforceConstraints" /> 속성을 true로 설정한 경우 발생합니다.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">병합 충돌에 대한 설명과 <see cref="T:System.Data.MergeFailedEventArgs" />을 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 개체</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">병합 충돌에 대한 설명입니다.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">병합 충돌에 대한 설명을 반환합니다.</summary>
      <returns vsli:raw="A description of the merge conflict.">병합 충돌에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 개체</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">
        <see cref="E:System.Data.DataSet.MergeFailed" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The data for the event.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">소스 테이블 또는 소스 열에 매핑이 없는 경우 발생하는 동작을 결정합니다.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">지정한 열 매핑이 없으면 <see cref="T:System.InvalidOperationException" />이 생성됩니다.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">매핑이 없는 열이나 테이블은 무시됩니다. <see langword="null" />을 반환합니다.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">소스 열 또는 소스 테이블은 만들어진 다음 원래 이름을 사용하는 <see cref="T:System.Data.DataSet" />에 추가됩니다.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">기본 키가 없는 테이블의 행에 액세스하려는 경우 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">
        <see cref="T:System.Data.MissingPrimaryKeyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.MissingPrimaryKeyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.MissingPrimaryKeyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.MissingPrimaryKeyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">
        <see cref="T:System.Data.DataSet" /> 및 필수 <see cref="T:System.Data.DataTable" />에 데이터를 추가하거나 <see cref="T:System.Data.DataColumn" />이 없을 때 수행할 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">스키마를 완료하는 데 필요한 열을 추가합니다.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">스키마를 완료하는 데 필요한 열과 기본 키 정보를 추가합니다. <see cref="T:System.Data.DataTable" />에 기본 키 정보를 추가하는 방법에 대한 자세한 내용은 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />를 참조하십시오. .NET Framework Data Provider for OLE DB에서 제대로 작동하도록 <see langword="AddWithKey" />가 네이티브 OLE DB 공급자가 DBPROP_UNIQUEROWS 속성을 설정하여 필수 기본 키 정보를 가져온 다음 IColumnsRowset에서 DBCOLUMN_KEYCOLUMN을 조사하여 기본 키 열에 해당하는 열을 결정하도록 요구합니다. 또는 사용자가 각 <see cref="T:System.Data.DataTable" />에 기본 키 제약 조건을 명시적으로 설정할 수도 있습니다. 이렇게 하면 기존 레코드와 일치하는 들어오는 레코드가 추가되지 않고 업데이트됩니다. <see langword="AddWithKey" />를 사용하는 경우 .NET Framework Data Provider for SQL Server는 실행 중인 문에 FOR BROWSE 절을 추가합니다. 사용자는 의도하지 않은 결과, 즉 SET FMTONLY ON 문을 사용하는 데 문제가 발생할 수 있다는 사실을 염두에 두어야 합니다. 자세한 내용은 SET FMTONLY(Transact-SQL)를 참조하세요.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">지정한 열 매핑이 없으면 <see cref="T:System.InvalidOperationException" />이 생성됩니다.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">나머지 열을 무시합니다.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" />이 <see langword="false" />로 설정된 열에 null 값을 삽입하려고 할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">
        <see cref="T:System.Data.NoNullAllowedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.NoNullAllowedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.NoNullAllowedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.NoNullAllowedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">쿼리에서 반환된 정렬된 <see cref="T:System.Data.DataRow" /> 개체 컬렉션을 나타냅니다.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />을 기준으로 하는 쿼리 내의 상대 매개 변수의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">입력 매개 변수입니다.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">매개 변수는 입력과 출력 모두에 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">출력 매개 변수입니다.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">저장 프로시저, 기본 제공 함수 또는 사용자 정의 함수 등의 작업에서 반환되는 값을 나타내는 매개 변수입니다.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> 또는 <see cref="T:System.Data.DataTable" />에 추가할 수 있는 속성의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Data.PropertyCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Data.PropertyCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">serialize된 특정 스트림의 소스와 대상입니다.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">
        <see cref="T:System.Data.PropertyCollection" /> 개체의 부분 복사본을 만듭니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">
        <see cref="T:System.Object" /> 개체의 단순 복사본인 <see cref="T:System.Data.PropertyCollection" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">읽기 전용 열의 값을 변경하려고 할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">
        <see cref="T:System.Data.ReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.ReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.ReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.ReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />에 없는 <see cref="T:System.Data.DataTable" />에서 작업을 수행하려고 할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">
        <see cref="T:System.Data.RowNotInTableException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.RowNotInTableException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.RowNotInTableException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.RowNotInTableException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">
        <see cref="T:System.Data.ForeignKeyConstraint" />가 적용될 때 발생하는 동작을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">관련 행을 삭제하거나 업데이트합니다. 이 값이 기본값입니다.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">관련 행에서 수행된 작업이 없습니다.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">관련 행의 값을 <see cref="P:System.Data.DataColumn.DefaultValue" /> 속성에 포함된 값으로 설정합니다.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">관련 행의 값을 <see langword="DBNull" />로 설정합니다.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">형식화된 <see cref="T:System.Data.DataSet" />의 스키마 serialization 모드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">형식화된 <see cref="T:System.Data.DataSet" />의 스키마 serialization을 건너뜁니다.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">형식화된 <see cref="T:System.Data.DataSet" />의 스키마 serialization을 포함합니다. 기본값입니다.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">
        <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 작업을 수행할 때 기존 스키마 매핑의 처리 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">들어오는 스키마에 기존 테이블 매핑을 적용합니다. 변환된 스키마를 사용하여 <see cref="T:System.Data.DataSet" />을 구성합니다.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">DataAdapter의 테이블 매핑을 무시합니다. 변환을 적용하지 않고 들어오는 스키마를 사용하여 <see cref="T:System.Data.DataSet" />을 구성합니다.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에 대한 serialization 형식을 결정합니다.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">이진 내용으로 serialize합니다. ADO.NET 2.0에서만 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">XML 내용으로 serialize합니다. 기본값입니다.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">
        <see cref="T:System.Data.SqlClient.SqlParameter" />에 사용할 필드, 속성의 SQL Server 데이터 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />. 64비트 부호 있는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">
        <see cref="T:System.Array" /> 형식의 <see cref="T:System.Byte" />입니다. 범위가 1바이트에서 8,000바이트까지인 이진 데이터의 고정 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />. 0, 1 또는 <see langword="null" />일 수 있는 부호 없는 숫자 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />. 범위가 1자에서 8,000자까지이고 유니코드가 아닌 문자의 고정 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">값 범위가 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이인 날짜 데이터입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />. 3.33밀리초의 정확성으로 값의 범위가 1753년 1월 1일에서 9999년 12월 31일까지인 날짜 및 시간 데이터입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">날짜 및 시간 데이터입니다. 날짜 값 범위는 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이입니다. Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">표준 시간대를 고려한 날짜 및 시간 데이터입니다. 날짜 값 범위는 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이입니다. Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다. 표준 시간대 값의 범위는 -14:00에서 +14:00 사이입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />. -10 38 -1과 10 38 -1 사이의 고정 전체 자릿수 및 소수 자릿수 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />. 범위가 -1.79E +308에서 1.79E +308까지인 부동 소수점 숫자입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">
        <see cref="T:System.Array" /> 형식의 <see cref="T:System.Byte" />입니다. 범위가 0바이트에서 2 31 -1(또는 2,147,483,647)바이트까지인 이진 데이터의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />. 32비트 부호 있는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. 정확성이 통화 단위의 10000분의 1이고 범위가 -2 63(또는 -9,223,372,036,854,775,808)에서 2 63 -1(또는 +9,223,372,036,854,775,807)까지인 통화 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />. 범위가 1자에서 4,000자까지인 유니코드 문자의 고정 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />. 최대 길이가 2 30 - 1(또는 1,073,741,823)자인 유니코드 데이터의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. 범위가 1자에서 4,000자까지인 유니코드 문자의 가변 길이 스트림입니다. 문자열이 4,000자보다 더 큰 경우 암시적 변환이 실패합니다. 4,000자보다 더 긴 문자열로 작업할 경우 개체를 명시적으로 설정합니다. 데이터 열이 <see langword="nvarchar(max)" />일 경우 <see cref="F:System.Data.SqlDbType.NVarChar" />를 사용합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />. 범위가 -3.40E +38에서 3.40E +38까지인 부동 소수점 숫자입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />. 1분의 정확성으로 값의 범위가 1900년 1월 1일에서 2079년 6월 6일까지인 날짜 및 시간 데이터입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />. 16비트 부호 있는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. 통화 단위의 10000분의 1 정확성으로 범위가 -214,748.3648에서 +214,748.3647까지인 통화 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">테이블 반환 매개 변수에 들어 있는 구조적 데이터를 지정하기 위한 특수 데이터 형식입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />. 최대 길이가 2 31 -1(또는 2,147,483,647)자이고 유니코드가 아닌 데이터의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">24시간제 시간 데이터입니다. Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다. SQL Server <see langword="time" /> 값에 해당합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">
        <see cref="T:System.Array" /> 형식의 <see cref="T:System.Byte" />입니다. 데이터베이스 내에서 고유한 자동 생성되는 이진 숫자입니다. <see langword="timestamp" />는 일반적으로 버전이 표시되는 테이블 행에 대한 메커니즘으로 사용됩니다. 스토리지 크기는 8바이트입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />. 8비트 부호 없는 정수임</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">SQL Server UDT(사용자 정의 형식)입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />. GUID(Globally Unique IDentifier)입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">
        <see cref="T:System.Array" /> 형식의 <see cref="T:System.Byte" />입니다. 범위가 1바이트에서 8,000바이트까지인 이진 데이터의 가변 길이 스트림입니다. 바이트 배열이 8.000바이트보다 더 큰 경우 암시적 변환이 실패합니다. 8.000바이트보다 더 큰 바이트 배열로 작업할 경우 개체를 명시적으로 설정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. 범위가 1문자에서 8,000문자까지인 비유니코드 문자의 가변 길이 스트림입니다. 데이터 열이 <see langword="varchar(max)" />일 경우 <see cref="F:System.Data.SqlDbType.VarChar" />를 사용합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />. SQL Server 값 Empty 및 Null뿐만 아니라 숫자, 문자열, 이진 데이터 또는 날짜 데이터를 포함할 수 있는 특수 데이터 형식으로 다른 데이터 형식이 선언되지 않으면 이 형식이 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">XML 값입니다. <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> 메서드나 <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> 속성을 사용하여 XML을 문자열로 가져오거나 <see cref="T:System.Xml.XmlReader" /> 메서드를 호출하여 XML을 <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />로 가져옵니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">모든 <see cref="N:System.Data.SqlTypes" /> 개체 및 구조체는 <see langword="INullable" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">구조체가 null인지 여부를 나타냅니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 개체의 값이 null이면 <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 클래스는 독립 실행형 구성 요소로는 사용할 수 없고 다른 클래스가 표준 기능을 파생하는 원본 클래스로만 사용할 수 있습니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">내부 예외에 대한 참조입니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 이진 데이터의 가변 길이 스트림을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성을 제공된 바이트 배열의 내용으로 설정하여 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">저장하거나 검색할 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">두 개의 지정된 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 값을 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 만듭니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">X와 Y가 연결된 값인 <see cref="T:System.Data.SqlTypes.SqlBinary" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체를 제공된 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 비교할 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체의 값은 개체보다 작습니다.  

  0 
  <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체와 동일합니다.  

  0보다 큼 
  이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체보다 큽니다.  

또는 
이 개체는 null 참조입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체를 제공된 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 비교할 개체입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체의 값은 개체보다 작습니다.  

  0 
  <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체와 동일합니다.  

  0보다 큼 
  이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체보다 큽니다.  

또는 
이 개체는 null 참조입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 만듭니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" />와 <paramref name="y" /> 매개 변수를 연결한 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일한지 비교합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlBinary" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 null인지 여부를 나타냅니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="null" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">정수 매개 변수인 <paramref name="index" />가 가리키는 위치에 있는 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성에서 싱글 바이트를 가져옵니다. <paramref name="index" />가 바이트 배열의 끝을 넘어선 위치를 가리키면 <see cref="T:System.Data.SqlTypes.SqlNullValueException" />가 발생합니다. 이 속성은 읽기 전용입니다.</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">검색할 바이트의 위치입니다.</param>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">정수 매개 변수가 가리키는 위치에 있는 바이트입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성에 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />이 포함되어 있을 때 속성을 읽는 경우  
또는 
<paramref name="index" /> 매개 변수가 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 속성이 표시된 대로 바이트 배열의 길이를 초과하는 위치를 나타내는 경우</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성의 길이(바이트 단위)를 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성에 있는 이진 데이터의 길이입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 속성에 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />이 포함되어 있을 때 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 속성을 읽는 경우</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일하지 않은지 비교합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlBinary" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 매개 변수를 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 만듭니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" />와 <paramref name="y" /> 매개 변수를 연결한 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일한지 비교합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 <see cref="T:System.Byte" /> 배열로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Byte" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">바이트 배열을 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">변환될 바이트 배열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">변환된 바이트 배열을 나타내는 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일하지 않은지 비교합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하세요.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />를 참조하세요.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />를 참조하세요.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />의 이 인스턴스를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체를 문자열로 변환합니다.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBinary" />를 포함하는 문자열입니다. <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />가 null이면 "null"이 문자열에 포함됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 값입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">속성에 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />이 포함되어 있을 때 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 속성을 읽는 경우</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 정수 값(0 또는 1)을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">제공된 부울 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값(<see langword="true" /> 또는 <see langword="false" />)입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">지정된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 사용할 값이 있는 정수입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 비트 AND 연산을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="The result of the logical AND operation.">논리 AND 연산의 결과입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값을 바이트 형식으로 가져옵니다.</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값을 나타내는 바이트입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체를 제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">비교할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체 또는 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 값의 상대 값을 나타내는 부호 있는 숫자입니다.  
  값 
  설명 
  음의 정수 
  이 인스턴스는 <paramref name="value" />보다 작습니다.  

  0 
  이 인스턴스가 <paramref name="value" />와 같습니다.  

  양의 정수 
  이 인스턴스는 <paramref name="value" />보다 큽니다.  

또는 
 <paramref name="value" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 지정된 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">비교할 개체 또는 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 값의 상대 값을 나타내는 부호 있는 숫자입니다.  
  값 
  설명 
  음의 정수 
  이 인스턴스는 <paramref name="value" />보다 작습니다.  

  0 
  이 인스턴스가 <paramref name="value" />와 같습니다.  

  양의 정수 
  이 인스턴스는 <paramref name="value" />보다 큽니다.  

또는 
 <paramref name="value" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체가 동일한지 비교합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 같지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 속성에 할당할 수 있는 False 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">현재 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />가 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 <see langword="Value" />이면 <see langword="False" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />구조체가 null 이면이 고, <see langword="false" />그렇지 않으면입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /></returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">현재 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />가 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 <see langword="Value" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 대해 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 속성에 할당할 수 있는 1 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 대해 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />에 대한 1의 보수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 비트 AND 연산을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="The result of the logical AND operation.">논리 AND 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">피연산자의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the logical OR operation.">논리 OR 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 같지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR(비트 XOR) 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="The result of the logical XOR operation.">논리 XOR 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />을 부울로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 설정된 부울입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">False 연산자는 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />를 테스트하여 False인지 여부를 확인하는 데 사용할 수 있습니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">테스트할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제공된 매개 변수 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이 <see langword="false" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">제공된 바이트 값을 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 변환될 바이트 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">0 또는 1을 포함하는 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />에 대해 NOT 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">NOT 연산을 수행할 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">인수가 true이면 <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />이고, 인수가 null이면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 대해 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />에 대한 1의 보수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">true 연산자는 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />를 테스트하여 true인지 여부를 확인하는 데 사용할 수 있습니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">테스트할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제공된 매개 변수 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이 <see langword="true" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 대해 비트 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">비트 OR 연산의 결과에 해당하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">논리 값의 지정된 <see cref="T:System.String" /> 표현을 같은 값의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">변환될 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">구문 분석된 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값은 1입니다. 그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값이 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값은 1입니다. 그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값이 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값은 1입니다. 그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값이 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see langword="SqlInt16" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값은 1입니다. 그렇지 않으면 새 <see langword="SqlInt16" /> 구조체의 값이 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see langword="SqlInt32" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 값은 1입니다. 그렇지 않으면 새 <see langword="SqlInt32" /> 구조체의 값이 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see langword="SqlInt64" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 값은 1입니다. 그렇지 않으면 새 <see langword="SqlInt64" /> 구조체의 값이 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">해당 값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값은 1입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="false" />이면 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값은 0입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 1과 0이 아니면 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값은 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.  
<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값은 1이고, 그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">해당 값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see langword="true" />이면 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 값은 1입니다. 그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 값이 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 문자열로 변환합니다.</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 값을 포함하는 문자열입니다. 값이 null이면 "null"이 문자열에 포함됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 속성에 할당할 수 있는 True 값을 나타냅니다.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />가 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">이 속성이 null로 설정되어 있는 경우</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="The result of the logical XOR operation.">논리 XOR 연산의 결과입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 8비트 부호 없는 정수를 나타내며, 값 범위는 0 ~ 255입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">지정된 바이트 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">새 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성에 저장될 바이트 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">덧셈 결과를 포함하는 <see langword="Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">비트 AND 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">비트 OR 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">이 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">비교할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 개체입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">해당 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성에 나누기 결과가 포함되는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlByte" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">제공된 <see cref="T:System.Object" /> 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlByte" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">두 개의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">해당 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성에 곱셈 결과를 포함하는 새 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlByte" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">1의 보수 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수에 대한 1의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">두 피연산자의 합계를 포함하는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">비트 AND 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">비트 OR 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">해당 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성에 나누기 결과가 포함되는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">비트 배타적 OR 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 변환될 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 바이트로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">바이트로 변환될 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 매개 변수의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성과 같은 값을 갖는 바이트입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 <see langword="SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">
        <see langword="SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlString" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">
        <see langword="SqlString" /> 클래스의 인스턴스입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />이 나타내는 숫자 값과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see langword="SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">제공된 바이트 값을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환될 바이트 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">제공된 매개 변수와 같은 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlByte" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">해당 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성에 곱셈 결과를 포함하는 새 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">1의 보수 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수에 대한 1의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺀 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 없는 8비트 정수로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">구문 분석할 <see langword="String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">
        <see langword="String" /> 매개 변수가 나타내는 8비트 숫자를 포함하는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺀 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" />가 0이 아니면 <see langword="true" />이고, 0이면 <see langword="false" />이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">이 <see langword="SqlDecimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />와 같은 값을 갖는 <see langword="SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />와 같은 값을 갖는 <see langword="SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" />를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />와 같은 값을 갖는 <see langword="SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="T:System.Data.SqlTypes.SqlByte" />를 갖는 <see langword="SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">이 <see langword="SqlMoney" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 구조체와 같은 <see cref="T:System.Data.SqlTypes.SqlByte" />를 갖는 <see langword="SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 이 인스턴스를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />에 대한 문자열 표현을 포함하는 <see langword="SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" />의 <see cref="T:System.Data.SqlTypes.SqlByte" />를 포함하는 문자열입니다. <see langword="Value" />이 null인 경우, <see langword="String" />은 null 문자열이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the XOR operation.">XOR 연산의 결과입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> 또는 <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />을 래핑하는 변경 가능한 참조 형식을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">지정된 바이트 배열을 기반으로 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">부호 없는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">지정된 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 값을 기반으로 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">지정된 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 값을 기반으로 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">내부 버퍼에 대한 참조를 반환합니다.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">내부 버퍼에 대 한 참조입니다. 관리되지 않는 포인터의 맨 위에 만들어진 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스의 경우 내부 버퍼의 관리되는 복사본을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">지정된 <see langword="XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" />가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" />가 null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">지정한 인덱스에 있는 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스를 가져오거나 설정합니다.</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">
        <see cref="T:System.Byte" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스에 포함되어 있는 값의 길이를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">
        <see cref="T:System.Int64" /> 인스턴스에 포함되어 있는 값의 길이를 나타내는 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 값입니다.  
인스턴스에 사용할 수 있는 버퍼가 없거나 값이 null이면 -1을 반환합니다.  
스트림 래핑된 인스턴스의 경우 <see cref="P:System.IO.Stream.Length" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" />의 내부 버퍼 값에 대한 최대 길이를 가져옵니다.</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">내부 버퍼에 대한 값의 최대 길이를 나타내는 long 값입니다. 스트림 래핑된 <see cref="T:System.Data.SqlTypes.SqlBytes" />의 경우 -1을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlBytes" />의 null 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> 속성이을 반환 <see langword="true" />하는 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체로 변환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체로 변환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스의 바이트를 전달된 버퍼로 복사한 다음 복사된 바이트의 수를 반환합니다.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> 인스턴스에 포함된 값의 <see cref="T:System.Data.SqlTypes.SqlBytes" /> long 값 오프셋입니다.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">복사할 바이트 배열 버퍼입니다.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">복사할 바이트 수를 나타내는 <see cref="T:System.Int32" /> 정수입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">복사된 바이트의 수를 나타내는 <see cref="T:System.Int64" /> long 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스의 길이를 설정합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">길이를 나타내는 <see cref="T:System.Int64" /> long 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스를 null로 설정합니다.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스의 스토리지 상태에 대한 정보를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" />의 데이터를 스트림으로 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">SqlBytes 데이터가 들어 있는 스트림입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스를 다시 인스턴스화하는 데 필요한 데이터가 모두 들어 있는 serialization 정보를 가져옵니다.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">serialization 정보로 채울 개체입니다.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">serialization의 대상 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 인스턴스로부터 <see cref="T:System.Data.SqlTypes.SqlBytes" />를 생성하고 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">이 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlBinary" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" />가 보유하고 있는 값의 관리되는 복사본을 반환합니다.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" />의 값(바이트 배열)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">전달된 버퍼의 바이트를 이 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스로 복사합니다.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> 인스턴스에 포함된 값의 <see cref="T:System.Data.SqlTypes.SqlBytes" /> long 값 오프셋입니다.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">복사할 바이트 배열 버퍼입니다.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">복사할 바이트 수를 나타내는 <see cref="T:System.Int32" /> 정수입니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" />는 <see cref="T:System.Char" /> 배열 또는 <see cref="T:System.Data.SqlTypes.SqlString" /> 인스턴스를 래핑하는 변경 가능한 참조 형식입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">지정된 문자 배열을 기반으로 <see cref="T:System.Data.SqlTypes.SqlChars" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">
        <see cref="T:System.Char" /> 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">지정된 <see cref="T:System.Data.SqlTypes.SqlChars" /> 값을 기반으로 <see cref="T:System.Data.SqlTypes.SqlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">내부 버퍼에 대한 참조를 반환합니다.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">내부 버퍼에 대 한 참조입니다. 관리되지 않는 포인터의 맨 위에 만들어진 <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스의 경우 내부 버퍼의 관리되는 복사본을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">
        <see cref="T:System.Data.SqlTypes.SqlChars" />가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlChars" />가 null이면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">지정한 인덱스에 있는 <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스를 가져오거나 설정합니다.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">
        <see cref="T:System.Char" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스에 포함되어 있는 값의 길이를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">
        <see cref="T:System.Int64" /> 인스턴스에 포함되어 있는 값의 문자 길이를 나타내는 <see cref="T:System.Data.SqlTypes.SqlChars" /> 값입니다.  
인스턴스에 사용할 수 있는 버퍼가 없거나 값이 null이면 -1을 반환합니다.  
스트림 래핑된 인스턴스의 경우 <see cref="P:System.IO.Stream.Length" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">내부 버퍼에서 보유할 수 있는 2바이트 문자 값의 최대 길이를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">내부 버퍼에 대한 2바이트 문자 값의 최대 길이를 나타내는 <see cref="T:System.Int64" /> 값입니다.  
스트림 래핑된 <see cref="T:System.Data.SqlTypes.SqlChars" />의 경우 -1을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlChars" />의 null 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">
        <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> 속성이을 반환 <see langword="true" />하는 인스턴스입니다. 자세한 내용은 Handling Null Values합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체로 변환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체로 변환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스의 문자를 전달된 버퍼로 복사한 다음 복사된 문자의 수를 반환합니다.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스에 포함된 값의 <see cref="T:System.Int64" /><see langword="long" /> 값 오프셋입니다.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">복사할 문자 배열 버퍼입니다.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">복사할 문자 수를 나타내는 <see cref="T:System.Int32" /> 정수 값입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">복사된 바이트의 수를 나타내는 <see cref="T:System.Int64" /><see langword="long" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스의 길이를 설정합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">길이를 나타내는 <see cref="T:System.Int64" /><see langword="long" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스를 null로 설정합니다.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스의 스토리지 상태에 대한 정보를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스를 다시 인스턴스화하는 데 필요한 데이터가 모두 들어 있는 serialization 정보를 가져옵니다.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">serialization 정보로 채울 개체입니다.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">serialization의 대상 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스를 해당 <see cref="T:System.Data.SqlTypes.SqlString" /> 표현으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">이 형식의 <see cref="T:System.Data.SqlTypes.SqlString" /> 표현입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlChars" />가 보유하고 있는 값의 관리되는 복사본을 반환합니다.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">
        <see cref="T:System.Data.SqlTypes.SqlChars" />의 값(문자 배열)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">전달된 버퍼의 문자를 이 <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스로 복사합니다.</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스에 포함된 값의 <see langword="long" /> 값 오프셋입니다.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">복사할 문자 배열 버퍼입니다.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">복사할 문자 수를 나타내는 <see cref="T:System.Int32" /> 정수입니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션 값을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">이진 정렬을 수행합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">대/소문자를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">가나 형식을 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다. 가나 형식은 일본어의 발성음을 표현하는 히라가나 문자와 가타카나 문자를 나타냅니다. 히라가나는 일본 고유의 어구과 단어를 표현하는 데 사용되고, 가타카나는 "컴퓨터"나 "인터넷" 등과 같은 외래어를 표현하는 데 사용됩니다. 발성음은 히라가나와 가타카나 모두로 표현할 수 있습니다. 이 값이 선택되어 있으면 하나의 발성음에 대해 히라가나 문자와 가타카나 문자가 같은 것으로 간주됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">분음 부호와 같이 공백 없는 조합 문자를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다. 유니코드 표준(Unicode Standard)에서 조합 문자는 기본 문자와 조합하여 새 문자를 만들어내는 문자로 정의됩니다. 공백 없는 조합 문자를 렌더링할 때는 공백 문자가 사용되지 않습니다. 공백 없는 조합 문자에 대한 자세한 내용은 https://www.unicode.org에서 유니코드 표준을 참조하세요.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">문자 너비를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다. 예를 들어, 일본어의 가타카나 문자는 전자나 반자로 쓸 수 있는데, 이 값이 선택되어 있으면 전자로 쓰여진 가타카나 문자와 반자로 쓰여진 가타카나 문자가 같은 것으로 간주됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 비교의 기본 옵션 설정값을 지정합니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">데이터베이스에서 검색할 날짜와 시간 데이터(1753년 1월 1일~9999년 12월 31)를 3.33밀리초의 정밀도로 나타냅니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체는 해당하는 .NET Framework 형식인 <see cref="T:System.DateTime" />과는 다른 내부 데이터 구조를 갖습니다. .NET Framework 형식은 12:00:00 AM(0001년 1월 1일)부터 11:59:59 PM(9999년 12월 31일)까지의 모든 시간을 100나노초의 정밀도로 나타낼 수 있습니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />은 실제로 00:00:00 AM(1900년 1월 1일)을 기준으로 상대적 차이를 저장합니다. 그러므로 "00:00:00 AM(1900년 1월 1일)"을 정수로 변환하면 0이 반환됩니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">지정된 <see cref="T:System.DateTime" /> 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">제공된 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">날짜를 틱 수로 나타내는 정수 값입니다.</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">시간을 틱 수로 나타내는 정수 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일을 초기화합니다.</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다.</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일, 시, 분 및 초를 초기화합니다.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시를 나타내는 정수 값입니다.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 분을 나타내는 정수 값입니다.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 초를 나타내는 정수 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일, 시, 분, 초 및 밀리초를 초기화합니다.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시를 나타내는 정수 값입니다.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 분을 나타내는 정수 값입니다.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 초를 나타내는 정수 값입니다.</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 밀리초를 나타내는 Double 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일, 시, 분, 초 및 마이크로초를 초기화합니다.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다.</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시를 나타내는 정수 값입니다.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 분을 나타내는 정수 값입니다.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 초를 나타내는 정수 값입니다.</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 마이크로초(밀리초의 천분의 1초)를 나타내는 정수 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlDateTime" />에 <see langword="TimeSpan" />을 추가합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">
        <see langword="Timespan" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />보다 작습니다.  

  0 
  이 인스턴스는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />와 같습니다.  

  0보다 큼 
  이 인스턴스는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />보다 큽니다.  

또는 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 날짜를 나타내는 틱 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 속성에 포함된 날짜를 나타내는 틱 수입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">
        <see cref="N:System.Data.SqlTypes" /> 구조체의 <see langword="Value" /> 속성이 null로 설정된 경우 throw되는 예외입니다.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 최대 유효 날짜 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 최소 유효 날짜 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">제공된 <see cref="T:System.TimeSpan" /> 매개 변수가 나타내는 시간인 <paramref name="t" />를 제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 추가합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" />입니다. 인수 중 하나가 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />인 경우, 새 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />는 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 <see cref="T:System.DateTime" /> 구조체로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">제공된 <see cref="T:System.DateTime" /> 구조체의 <see cref="P:System.DateTime.Date" /> 속성과 날짜 및 시간 값이 같은 <see cref="P:System.DateTime.TimeOfDay" /> 및 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDateTime" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 매개 변수가 나타내는 것과 날짜 및 시간이 같은 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlString" />이 null인 경우, 새로 만든 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 <see langword="Value" />는 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.DateTime" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체로 변환합니다.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 조합된 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 및 <see cref="P:System.DateTime.Date" /> 속성과 같은 <see cref="P:System.DateTime.TimeOfDay" />을 갖는 <see cref="T:System.DateTime" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">제공된 <see cref="T:System.TimeSpan" /> 구조체에서 제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체인 <paramref name="t" />를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">뺄셈 결과를 나타내는 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">날짜와 시간의 지정된 <see cref="T:System.String" /> 표현을 같은 값의 <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">구문 분석할 <see langword="string" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">지정된 <see langword="string" />이 나타내는 것과 날짜 및 시간이 같은 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">1시간에 해당하는 틱 수를 값으로 가지는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">1분에 해당하는 틱 수를 값으로 가지는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">1초에 해당하는 틱 수를 값으로 가지는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">지정된 <see langword="Timespan" />을 이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 인스턴스에서 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">
        <see langword="Timespan" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시간을 나타내는 틱 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시간을 나타내는 틱 수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 포함된 날짜 및 시간을 나타내는 문자열 값을 가진 <see langword="SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">이 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 속성을 나타내는 <see langword="String" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 값입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">
        <see cref="N:System.Data.SqlTypes" /> 구조체의 <see langword="Value" /> 속성이 null로 설정된 경우 throw되는 예외입니다.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">전체 자릿수와 소수 자릿수가 고정된 - 10^38 + 1부터 10^38 - 1까지의 숫자 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">제공된 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성을 나타내는 데 사용할 수 있는 최대 자릿수입니다.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성을 나타내는 데 사용할 소수 자릿수입니다.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 양수를 표현하는지 아니면 음수를 표현하는지 여부를 나타내는 부울 값입니다.</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data2, data3 및 data4와 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다.</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data1, data3 및 data4와 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다.</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data1, data2 및 data4와 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다.</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data1, data2 및 data3과 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">제공된 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성을 나타내는 데 사용할 수 있는 최대 자릿수입니다.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성을 나타내는 데 사용할 소수 자릿수입니다.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 양수를 표현하는지 아니면 음수를 표현하는지 여부를 나타내는 부울 값입니다.</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 값을 제공하는 128비트 부호 없는 정수입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 값을 사용하여 <see cref="T:System.Decimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Decimal" /> 구조체로 저장될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">제공된 Double 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값을 나타내는 Double입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">제공된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값으로 사용될 제공된 정수 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">제공된 정수(long) 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">제공된 정수(Long) 값은 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값으로 사용됩니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Abs 메서드는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 절대 값을 가져옵니다.</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 절대값을 나타내는 부호 없는 숫자를 포함하는 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">합계를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 소수 자릿수는 자릿수 매개 변수가 나타내는 자릿수로 조정됩니다. fRound 매개 변수의 값에 따라 해당 자릿수에서 값이 반올림되거나 해당 자릿수 아래의 값을 버립니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">조정될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">조정된 구조체의 자릿수입니다.</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">새 값은 이 매개 변수가 <see langword="true" />이면 반올림되고, <see langword="false" />이면 버려집니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">조정된 숫자를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조의 값에 대한 이진 표현을 바이트 배열 형식으로 가져옵니다.</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값에 대한 이진 표현을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체보다 크거나 같은 최소 정수를 반환합니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">최대값을 계산할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체보다 크거나 같은 최소 정수를 나타내는 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 값을 지정된 전체 자릿수와 소수 자릿수로 조정합니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">조정될 값이 있는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 전체 자릿수입니다.</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 소수 자릿수입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">매개 변수에 지정된 전체 자릿수와 소수 자릿수로 조정된 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대한 이진 표현을 정수 배열 형식으로 가져옵니다.</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대한 이진 표현을 포함하는 정수 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자를 두 번째 피연산자로 나눈 결과를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">해당 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성에 나누기 결과가 포함되는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 두 인스턴스 중 하나가 null이면 <see langword="SqlDecimal" />의 값이 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">제공된 <see cref="T:System.Object" /> 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스이고 둘이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 숫자를 그 다음으로 낮은 정수로 올림합니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">최소값을 계산할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 정수 부분을 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDecimal" />가 0보다 큰지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />가 null로 할당된 경우 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> 속성의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> 속성의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">해당 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성에 곱셈 결과를 포함하는 새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">이 <see cref="T:System.DBNull" /> 클래스 인스턴스에 대해 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlDecimal" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">합계를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자를 두 번째 피연산자로 나눈 결과를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">해당 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성에 나누기 결과가 포함되는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see langword="Decimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Double" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Double" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 값과 같은 값을 갖는 새 <see cref="T:System.Double" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 SqlDecimal로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 피연산자를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Decimal" /> 값을 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">변환될 <see cref="T:System.Decimal" /> 값입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see langword="Decimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">제공된 <see cref="T:System.Int64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Int64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Int64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">해당 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성에 곱셈 결과를 포함하는 새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에서 두 번째 피연산자를 뺀 결과를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">뺄셈 결과를 포함하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">단항 마이너스 연산자는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 부정합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">부정할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">부정 연산의 결과를 포함하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">숫자의 <see cref="T:System.String" /> 표현을 해당하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">구문 분석할 <see langword="String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" />에 포함된 값과 같은 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값을 지정된 지수 제곱으로 올림합니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">거듭제곱될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">숫자의 거듭제곱 수를 나타내는 Double 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 나타내는 데 사용된 숫자의 최대 자릿수를 가져옵니다.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 <see langword="Value" />를 나타내는 데 사용되는 최대 자릿수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">지정된 전체 자릿수를 사용하여 지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값에 가장 가까운 숫자를 가져옵니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">반올림 처리될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">반환 값에서 유효한 소수 자릿수(전체 자릿수)의 숫자입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">올림 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 확인하는 소수 자릿수를 가져옵니다.</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">
        <see langword="Value" /> 속성을 나타내는 데 사용되는 소수 자릿수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대한 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성의 부호를 나타내는 값을 가져옵니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">계산될 부호가 있는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 부호를 나타내는 숫자입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에서 두 번째 피연산자를 뺀 결과를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">뺄셈 결과를 포함하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">이 인스턴스에 대해 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성의 내용과 같은 Double을 반환합니다.</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성의 소수 표현입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />가 0이 아니면 <see langword="true" />이고, 0이면 <see langword="false" />이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />과 같은 <see langword="Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 Value가 <see langword="true" />이면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />가 1입니다. 그렇지 않으면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />는 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">해당 값이 이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체에 들어 있는 값을 나타내는 문자열인 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="T:System.String" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 속성에 대한 문자열 표현을 포함하는 새 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값이 원하는 자리로 잘립니다.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">버림 처리될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">소수점 아래에서 숫자가 버림 처리될 자리입니다.</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">
        <paramref name="position" /> 매개 변수에 대해 음수 값을 제공하여 소수점 왼쪽으로 해당 자리까지의 값을 버립니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">-79,228,162,514,264,337,593,543,950,335~79,228,162,514,162,514,264,337,593,543,950,335 범위의 숫자입니다.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 부동 소수점 숫자를 나타내며, 값 범위는 -1.79E +308 ~ 1.79E +308입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">제공된 Double 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 새 인스턴스를 초기화하여 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성을 설정합니다.</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">새 <see cref="T:System.Data.SqlTypes.SqlDouble" />에 사용할 값을 갖는 Double입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">더하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">비교할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">나눗셈 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 인스턴스가 null인지 여부를 나타내는 부울 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 null이면 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlDouble" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">더하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">나눗셈 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성에 따라 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />이 0 또는 1인 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlBoolean" />이 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 Double로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">지정된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체와 같은 값의 Double입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />이 나타내는 숫자의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />이 <see cref="F:System.Data.SqlTypes.SqlString.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlByte" />이 <see cref="F:System.Data.SqlTypes.SqlByte.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlDecimal" />이 <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />이 <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />이 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />이 <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />이 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />이 <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">제공된 Double 값을 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The double value to convert.">변환할 Double 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">지정된 Double 매개 변수와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the subtraction operation.">뺄셈 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">지정된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 부정 값을 반환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">숫자의 <see cref="T:System.String" /> 표현을 같은 값의 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">구문 분석할 <see langword="String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">
        <see langword="String" />이 나타내는 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="The results of the subtraction operation.">뺄셈 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET Framework에서 사용하는 XML 스키마입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />가 0이 아니고 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 경우, <see cref="T:System.Data.SqlTypes.SqlDouble" />이 0이고 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />인 경우, <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />인 경우 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see langword="SqlBoolean" /> 구조체는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />가 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">이 <see langword="SqlByte" /> 구조체의 <see langword="Value" />과 같은 <see langword="Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">이 <see langword="SqlDecimal" />의 반올림된 값과 동일한 변환된 값을 갖는 새 <see langword="SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체 값의 정수 부분과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체 값의 정수 부분과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체 값의 정수 부분과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />의 값과 같은 <see cref="T:System.Data.SqlTypes.SqlDouble" />를 갖는 새 <see langword="SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="T:System.Data.SqlTypes.SqlDouble" />를 갖는 새 <see langword="SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />의 <see cref="T:System.Data.SqlTypes.SqlDouble" />를 나타내는 <see langword="SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 문자열로 변환합니다.</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />의 <see cref="T:System.Data.SqlTypes.SqlDouble" />를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 GUID를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">제공된 바이트 배열 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A byte array.">바이트 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">지정된 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수를 사용하여 <see cref="T:System.Guid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">지정된 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 처음 4바이트입니다.</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 2바이트입니다.</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 2바이트입니다.</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">지정된 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수를 사용하여 <see cref="T:System.String" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">
        <see cref="T:System.String" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 제공된 <see cref="T:System.Data.SqlTypes.SqlGuid" />와 비교하여 상대 값 표시를 반환합니다. 마지막 6바이트 이상을 비교하지만 비교 시 마지막 6바이트를 최상의 바이트로 처리합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스는 개체보다 작습니다.  

  0 
  이 인스턴스는 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스는 개체보다 큽니다. 
또는 
개체는 null 참조(<see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 제공된 개체와 비교하여 상대 값 표시를 반환합니다. 마지막 6바이트 이상을 비교하지만 비교 시 마지막 6바이트를 최상의 바이트로 처리합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스는 개체보다 작습니다.  

  0 
  이 인스턴스는 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스는 개체보다 큽니다. 
또는 
개체는 null 참조(<see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlGuid" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="null" />이면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlGuid" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">
        <see langword="SqlBinary" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBinary" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수를 <see cref="T:System.Guid" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Guid" />의 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />와 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">제공된 <see cref="T:System.Guid" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />
      </param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수와 같은 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />을 갖는 새 <see cref="T:System.Guid" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">지정된 <see cref="T:System.String" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">구문 분석할 <see langword="String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlGuid" />에 포함된 값과 같은 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 바이트 배열로 변환합니다.</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">이 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlGuid" />을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBinary" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 바이트를 포함하는 <see langword="SqlBinary" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 문자열 표현을 포함하는 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.String" /> 구조체의 문자열 표현을 포함하는 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">
        <see cref="T:System.Guid" /> 구조체입니다.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 16비트 부호 있는 정수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">제공된 정수(Short) 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A short integer.">정수(Short)입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">비트 AND의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">비트 OR의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlInt16" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">지정된 개체를 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 자세한 내용은 Handling Null Values합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값입니다.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">두 매개 변수의 곱을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlInt16" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">비트 AND의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">비트 OR의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">비트 배타적 OR의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 정수(Short)로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 값과 같은 값을 갖는 정수(Short)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 개체 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">제공된 정수(Short)를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <param name="x" vsli:raw="A short integer value.">정수(Short) 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">지정된 정수(Short)와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">두 매개 변수의 곱을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">단항 빼기 연산자는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 피연산자의 <see cref="T:System.Data.SqlTypes.SqlInt16" />을 부정합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 있는 16비트 정수로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">구문 분석할 <see langword="String" />입니다.</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.String" />에 포함된 값과 같은 16비트 부호 있는 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET Framework에서 사용하는 XML 스키마입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />가 0이 아니면 <see langword="true" />이고, 0이면 <see langword="false" />이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlInt16" />의 값이 0보다 작거나 255보다 크면 <see cref="T:System.OverflowException" />이 발생합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 값과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 값과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 값과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값과 같은 <see langword="Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 나타내는 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.String" /> 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />을 나타내는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값을 나타내는 정수(Short)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">XOR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 32비트 부호 있는 정수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">제공된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The integer to be converted.">변환될 정수입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">두 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 첫 번째 매개 변수를 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlInt32" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 속성은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />가 null이면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" />의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값입니다.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">두 매개 변수의 곱을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">이 <see cref="T:System.DBNull" /> 클래스 인스턴스에 대해 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlInt32" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">1의 보수 연산 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">두 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 첫 번째 매개 변수를 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 정수로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="The converted integer value.">변환된 정수 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see langword="SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">제공된 정수를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <param name="x" vsli:raw="An integer value.">정수 값입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">정수 매개 변수와 같은 값 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">두 매개 변수의 곱을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" />를 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">1의 보수 연산 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 피연산자의 <see cref="T:System.Data.SqlTypes.SqlInt32" />을 부정합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 있는 32비트 정수로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">구문 분석할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.String" />에 포함된 값과 같은 32비트 부호 있는 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 속성을 갖는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />가 0이 아니면 <see langword="true" />이고, 0이면 <see langword="false" />이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />과 같은 <see langword="Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. <see langword="SqlInt32" />의 값이 0보다 작거나 255보다 크면 <see cref="T:System.OverflowException" />이 발생합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.String" />의 값과 같은 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 값을 나타내는 정수입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">속성에 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />이 포함된 경우</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 64비트 부호 있는 정수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">제공된 정수(Long)를 사용하여 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A long integer.">정수(Long)입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">나눗셈 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlInt64" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">두 개의 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값입니다.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">두 SqlInt64 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlInt64" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 1의 보수와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">나눗셈 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 Long으로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />의 <see cref="T:System.Data.SqlTypes.SqlInt64" />과 같은 새 Long 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 정수 부분을 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Long 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A long integer value.">정수(Long) 값입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">Long 매개 변수의 값과 같은 <see cref="T:System.Data.SqlTypes.SqlInt64" />을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">두 SqlInt64 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">나머지를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 1의 보수와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">나눗셈 연산의 결과와 같은 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">단항 빼기 연산자는 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 피연산자의 <see cref="T:System.Data.SqlTypes.SqlInt64" />을 부정합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 부정 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 있는 64비트 정수로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">구문 분석할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.String" />에 포함된 값과 같은 64비트 부호 있는 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">나눗셈 연산의 결과와 같은 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />가 0이 아니면 <see langword="true" />이고, 0이면 <see langword="false" />이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />과 같은 <see langword="Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" />의 값을 나타내는 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" />의 이 인스턴스를 <see cref="T:System.String" />로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.String" />의 값을 나타내는 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 값을 나타내는 정수(Long)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 구조체 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 통화 단위를 1/10,000의 정밀도로 나타내며, 통화 값 범위는 -2 63 (-922,337,203,685,477.5808) ~ 2 63 -1(+922,337,203,685,477.5807)입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">지정된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값을 사용하여 <see cref="T:System.Decimal" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">초기화할 통화 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">지정된 Double 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">초기화할 통화 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">지정된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">초기화할 통화 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">지정된 정수(Long) 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">초기화할 통화 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />에 두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlMoney" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체가 null인지 여부를 나타내는 부울 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 클래스 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 속성에 할당할 수 있는 최대값을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 클래스 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 속성에 할당할 수 있는 최소값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">곱셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlMoney" />을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">이 <see cref="T:System.DBNull" /> 클래스 인스턴스에 대해 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlMoney" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />에 두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 속성을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Decimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />와 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 연산자는 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">
        <see cref="T:System.Decimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">변환될 <see cref="T:System.Decimal" /> 값입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />을 갖는 새 <see cref="T:System.Decimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Int64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Int64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Int64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">곱셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlMoney" />을 갖는 새 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">뺄셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">단항 마이너스 연산자는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 부정합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">부정할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">부정 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlMoney" />을 갖는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">숫자의 <see cref="T:System.String" /> 표현을 해당하는 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">구문 분석할 <see langword="String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlMoney" />에 포함된 값과 같은 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">뺄셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 인스턴스의 값을 <see cref="T:System.Decimal" /> 구조체로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">이 <see cref="T:System.Decimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Double" />으로 변환합니다.</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체와 같은 값을 갖는 Double입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Int32" />로 변환합니다.</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 정수 부분과 같은 값을 갖는 32비트 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 값을 <see cref="T:System.Int64" />로 변환합니다.</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 정수 부분과 같은 값을 갖는 64비트 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 값이 0이면 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlByte" />의 값과 같은 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">해당 값이 이 <see cref="T:System.Data.SqlTypes.SqlString" />의 값을 나타내는 문자열인 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" />의 이 인스턴스를 문자열로 변환합니다.</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">해당 값이 이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값에 대한 문자열 표현인 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체 인스턴스의 통화 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체 인스턴스의 통화 값입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">이 속성이 null로 설정되어 있는 경우</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 클래스 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 클래스는 독립 실행형 구성 요소로는 사용할 수 없고 다른 클래스가 표준 기능을 파생하는 원본 클래스로만 사용할 수 있습니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">내부 예외에 대한 참조입니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">
        <see cref="N:System.Data.SqlTypes" /> 구조체의 <see langword="Value" /> 속성이 null로 설정된 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">
        <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">예외를 설명하는 메시지입니다. 이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">예외를 설명하는 메시지입니다. 이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">현재 예외의 원인인 예외입니다. <c>innerException</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">데이터베이스에서 저장하거나 검색할 부동 소수점 숫자를 나타내며, 값 범위는 -3.40E +38 ~ 3.40E +38입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">제공된 Double 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">새 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 사용할 Double 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">새 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 사용할 부동 소수점 숫자입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 두번째 구조체로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">나눗셈 결과를 포함하는 <see langword="SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlSingle" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스이고 둘이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 클래스 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 속성에 할당할 수 있는 최대값을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 클래스 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 속성에 할당할 수 있는 최소값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">곱셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlSingle" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 두번째 구조체로 나눕니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">두 SqlSingle 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />을 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">지정된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 부동 소수점으로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">부동 소수점으로 변환될 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 값입니다.</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값을 포함하는 부동 소수점입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 암시적 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlByte" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">지정된 부동 소수점 값을 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환될 부동 소수점 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">지정된 부동 소수점의 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 곱을 계산합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">곱셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에서 두번째 구조체를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">지정된 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 구조체의 <see cref="T:System.Data.SqlTypes.SqlSingle" />을 부정합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">지정된 <see cref="T:System.String" />을 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">구문 분석할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlSingle" />에 포함된 값과 같은 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에서 두번째 구조체를 뺍니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />가 0이 아니면 <see langword="true" />이고, 0이면 <see langword="false" />이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />과 같은 <see langword="Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 Value가 <see langword="true" />이면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />가 1입니다. 그렇지 않으면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see langword="Value" />는 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see langword="SqlDecimal" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see langword="SqlDouble" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see langword="SqlInt16" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" />의 값을 나타내는 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값을 나타내는 <see langword="String" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">-3.40E+38 ~ 3.40E+38 범위의 부동 소수점 값입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 클래스 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">데이터베이스에서 저장하거나 검색할 문자의 가변 길이 스트림을 나타냅니다. <see cref="T:System.Data.SqlTypes.SqlString" />에는 해당하는 .NET Framework <see cref="T:System.String" /> 데이터 형식과 다른 기본 데이터 구조가 있습니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">지정된 로캘 ID, 비교 옵션 및 데이터를 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다.</param>
      <param name="data" vsli:raw="The data array to store.">저장할 데이터 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다.</param>
      <param name="data" vsli:raw="The data array to store.">저장할 데이터 배열입니다.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유니코드로 인코딩되었으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다.</param>
      <param name="data" vsli:raw="The data array to store.">저장할 데이터 배열입니다.</param>
      <param name="index" vsli:raw="The starting index within the array.">배열 내의 시작 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">인덱스에서 복사할 문자의 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다.</param>
      <param name="data" vsli:raw="The data array to store.">저장할 데이터 배열입니다.</param>
      <param name="index" vsli:raw="The starting index within the array.">배열 내의 시작 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">인덱스에서 복사할 문자의 수입니다.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유니코드로 인코딩되었으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="data" vsli:raw="The string to store.">저장할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">지정된 문자열과 로캘 ID 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="data" vsli:raw="The string to store.">저장할 문자열입니다.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">지정된 문자열, 로캘 ID 및 비교 옵션 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="data" vsli:raw="The string to store.">저장할 문자열입니다.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">두 개의 지정된 <see cref="T:System.Data.SqlTypes.SqlString" /> 값을 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 만듭니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <paramref name="x" />와 <paramref name="y" />의 연결된 값인 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체의 복사본을 만듭니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">모든 속성 값이 원본과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">이 <see cref="T:System.Globalization.CompareInfo" /> 구조체의 문자열 비교 방식을 정의하는 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 문자열 비교 방식을 정의하는 <see langword="CompareInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">지정된 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 값과 동등한 <see cref="T:System.Globalization.CompareOptions" /> 열거형을 가져옵니다.</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 구조체의 비교 옵션을 설명하는 <see cref="T:System.Data.SqlTypes.SqlString" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 <see langword="CompareOptions" />에 해당하는 <see langword="SqlCompareOptions" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlString" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">비교될 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">비교될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.  
  반환 값 
  조건 
  0보다 작음 
  이 인스턴스가 개체보다 작습니다.  

  0 
  이 인스턴스가 개체와 동일합니다.  

  0보다 큼 
  이 인스턴스가 개체보다 큽니다. 
또는 
개체가 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 연결합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">새로 연결되어 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 내용을 나타내는 값이 포함된 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">이 <see cref="T:System.Globalization.CultureInfo" /> 개체의 문화권에 대한 정보를 나타내는 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">날짜 형식 지정 및 문자열 정렬과 같은 일반 작업에 필요한 메서드를 제공하는 문화권의 고유 개체뿐 아니라 문화권의 이름, 쓰기 시스템 및 사용된 달력 등도 포함하여 이 SqlString 구조체의 문화권에 대한 정보를 설명하는 <see cref="T:System.Globalization.CultureInfo" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">두 값이 같으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 인스턴스 중 하나가 null이면 <see langword="SqlString" />가 null이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">제공된 개체 매개 변수를 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 개체의 <see cref="T:System.Data.SqlTypes.SqlString" /> 속성과 비교합니다.</summary>
      <param name="value" vsli:raw="The object to be compared.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스이고 둘이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">ANSI 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열을 가져옵니다.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">ANSI 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">유니코드 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열을 가져옵니다.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">유니코드 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">대/소문자를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">가나 형식을 무시하면서 문자열 비교를 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">분음 부호와 같이 공백 없는 조합 문자를 무시하면서 문자열 비교를 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">문자 너비를 무시하면서 문자열 비교를 수행하도록 지정합니다.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlString.Value" />가 <see cref="F:System.Data.SqlTypes.SqlString.Null" />이면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 속성에 저장된 문자열의 로캘 ID입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">이 <see cref="T:System.DBNull" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.Data.SqlTypes.SqlString" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">지정된 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 연결합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">새로 연결되어 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 내용을 나타내는 값이 포함된 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlDateTime" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">변환할 <see langword="SqlDecimal" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see langword="SqlDecimal" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlString" />의 문자열 표현이 값인 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">변환될 SqlInt32 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">지정된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">변환될 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 속성과 같은 내용을 갖는 <see langword="String" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 크거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.String" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">변환될 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">지정된 <see langword="String" />의 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">두 인스턴스가 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작거나 같은지 여부를 확인합니다.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 설정되는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다. 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다. <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">이 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />과 다른 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 방식을 나타내는 <see cref="T:System.Data.SqlTypes.SqlString" /> 열거형 값을 하나 이상 조합한 것입니다.</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">이 <see cref="T:System.Data.SqlTypes.SqlString" />과 다른 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 방식을 지정하는 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlString.Value" />가 0이 아니면 <see langword="true" />이고, 0이면 <see langword="false" />이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 구조체가 나타내는 숫자와 같은 <see cref="T:System.Data.SqlTypes.SqlString" />를 갖는 새 <see langword="SqlByte" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" />이 나타내는 날짜 값이 들어 있는 새 <see langword="SqlDateTime" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 값이 들어 있는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlDouble" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlGuid" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />가 이 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 구조체에서 나타내는 <see langword="Guid" />인 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt16" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 <see cref="T:System.String" />로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">이 <see cref="T:System.String" /> 구조체와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체에 저장되어 있는 문자열을 가져옵니다. 이 속성은 읽기 전용입니다.</summary>
      <returns vsli:raw="The string that is stored.">저장되어 있는 문자열입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">문자열의 값이 <see cref="F:System.Data.SqlTypes.SqlString.Null" />인 경우</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">
        <see cref="N:System.Data.SqlTypes" /> 구조체에 값을 설정할 경우 이 값이 잘릴 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">지정된 오류 메시지 및 <see cref="T:System.Data.SqlTypes.SqlTruncateException" />에 대한 참조를 사용하여 <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">내부 <see cref="T:System.Exception" />에 대한 참조입니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">
        <see cref="N:System.Data.SqlTypes" />의 기본 예외 클래스입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">예외를 설명하는 메시지입니다. 이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">현재 예외의 원인인 예외입니다. <c>innerException</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">서버에서 저장하거나 검색할 XML 데이터를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">새 <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">제공된 <see cref="T:System.Data.SqlTypes.SqlXml" /> 파생 인스턴스에서 XML 값을 제공하는 새 <see cref="T:System.IO.Stream" /> 인스턴스를 만듭니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">
        <see cref="T:System.IO.Stream" /> 인스턴스의 XML 콘텐츠를 로드해 올 <see cref="T:System.IO.FileStream" /> 파생 인스턴스입니다(예: <see cref="T:System.Data.SqlTypes.SqlXml" />).</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">새 <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스를 만들고 이를 제공된 <see cref="T:System.Xml.XmlReader" />의 내용과 연결합니다.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 값으로 사용할 <see cref="T:System.Data.SqlTypes.SqlXml" /> 파생 클래스 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlXml" />의 XML 콘텐츠 값을 <see cref="T:System.Xml.XmlReader" />로 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">XML 콘텐츠를 포함하는 <see cref="T:System.Xml.XmlReader" /> 파생 인스턴스입니다. 서버에서 내부적으로 정보가 표현되는 방법에 따라 실제 형식은 달라질 수 있습니다. 예를 들어 <see cref="T:System.Xml.XmlTextReader" />가 반환 값이 될 수 있습니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlXml" />의 null 인스턴스에 대한 이 속성에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD(XML 스키마 정의 언어)를 반환합니다.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 XSD를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">이 인스턴스가 null <see cref="T:System.Data.SqlTypes.SqlXml" /> 값을 나타내는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 null이면 <see langword="Value" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식의 null 인스턴스를 나타냅니다.</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식의 null 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />를 참조하십시오.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />를 참조하십시오.</summary>
      <param name="r" vsli:raw="An XmlReader.">XmlReader입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />를 참조하십시오.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">XmlWriter입니다.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스의 XML 콘텐츠에 대한 문자열 표현을 가져옵니다.</summary>
      <returns vsli:raw="The string representation of the XML content.">XML 콘텐츠에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 열거형은 독립 실행형 구성 요소로는 사용할 수 없고 다른 클래스가 표준 기능을 파생하는 원본 열거형으로만 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">버퍼 크기입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">관리되지 않는 버퍼입니다.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">.NET Framework 데이터 공급자의 상태 변경 이벤트에 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">개체의 원래 상태와 현재 상태가 지정된 경우 <see cref="T:System.Data.StateChangeEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 값 중 하나입니다.</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">연결의 새 상태를 가져옵니다. 연결 개체는 이벤트가 발생될 때 이미 새 상태에 있습니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">연결의 원래 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">
        <see cref="E:System.Data.Common.DbConnection.StateChange" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Data.StateChangeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트에 대한 추가 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.StatementCompletedEventArgs" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트를 발생시킨 문의 영향을 받는 행의 수를 나타냅니다.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트를 발생시킨 문의 영향을 받는 행의 수를 나타냅니다.</summary>
      <returns vsli:raw="The number of rows affected.">영향을 받은 행 수입니다.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트의 이벤트 처리기에 대한 대리자 형식입니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The data for the event.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> 등의 클래스에 사용할 SQL 쿼리의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">배치 문인 SQL 쿼리입니다.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">DELETE 문인 SQL 쿼리입니다.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">INSERT 문인 SQL 쿼리입니다.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">SELECT 문인 SQL 쿼리입니다.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">UPDATE 문인 SQL 쿼리입니다.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">사용자가 <see langword="DBNull" /> 값에 액세스할 때 강력한 형식의 <see cref="T:System.Data.DataSet" />에서 throw하는 예외입니다.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">
        <see cref="T:System.Data.StrongTypingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">지정된 serialization 정보와 스트리밍 컨텍스트를 사용하여 <see cref="T:System.Data.StrongTypingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.StrongTypingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">지정된 문자열과 내부 예외를 사용하여 <see cref="T:System.Data.StrongTypingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">내부 예외에 대한 참조입니다.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">
        <see cref="P:System.Data.DataColumn.Expression" />의 <see cref="T:System.Data.DataColumn" /> 속성에 구문 오류가 있을 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">
        <see cref="T:System.Data.SyntaxErrorException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">
        <see cref="T:System.Data.SyntaxErrorException" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">serialize된 특정 스트림의 소스와 대상입니다.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.SyntaxErrorException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.SyntaxErrorException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">이 유형은 Visual Studio 및 XSD.exe .NET Framework 도구로 형식화된 <see cref="T:System.Data.DataTable" /> 개체 생성의 기본 클래스로 사용되며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">테이블이 나타내는 소스 시퀀스의 개체 형식이며 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">새 <see cref="T:System.Data.TypedTableBase`1" />를 초기화합니다. 이 메서드는 Visual Studio 및 XSD.exe .NET Framework 도구에 의한 형식화된 <see cref="T:System.Data.DataTable" /> 개체 생성을 지원합니다. 이 형식은 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">새 <see cref="T:System.Data.TypedTableBase`1" />를 초기화합니다. 이 메서드는 Visual Studio 및 XSD.exe .NET Framework 도구에 의한 형식화된 <see cref="T:System.Data.DataTable" /> 개체 생성을 지원합니다. 이 메서드는 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">개체를 생성하는 데 필요한 데이터가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">deserialize되는 개체에 대한 스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">
        <see cref="T:System.Data.TypedTableBase`1" />의 요소를 지정된 형식으로 변환합니다. 이 메서드는 Visual Studio 및 XSD.exe .NET Framework 도구에 의한 형식화된 <see cref="T:System.Data.DataTable" /> 개체 생성을 지원합니다. 이 메서드는 코드에서 직접 사용할 수 없습니다.</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to." />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">지정된 형식으로 변환되는 소스 시퀀스의 각 요소가 들어 있는 <see cref="T:System.Data.EnumerableRowCollection" />입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">형식화된 <see cref="T:System.Data.DataRow" />에 대한 열거자를 반환합니다. 이 메서드는 Visual Studio 및 XSD.exe .NET Framework 도구에 의한 형식화된 <see cref="T:System.Data.DataTable" /> 개체 생성을 지원합니다. 이 메서드는 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> 인터페이스를 구현하는 개체</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">형식화된 <see cref="T:System.Data.DataRow" />에 대한 열거자를 반환합니다. 이 메서드는 Visual Studio 및 XSD.exe .NET Framework 도구에 의한 형식화된 <see cref="T:System.Data.DataTable" /> 개체 생성을 지원합니다. 이 메서드는 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> 인터페이스를 구현하는 개체</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">
        <see cref="T:System.Data.TypedTableBase`1" /> 클래스에 대한 확장 메서드가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">
        <see cref="T:System.Data.TypedTableBase`1" />의 데이터 행 요소를 열거하고 <see cref="T:System.Data.EnumerableRowCollection`1" /> 개체를 반환합니다. 여기에서 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다. 이 개체는 LINQ 식 또는 메서드 쿼리에 사용될 수 있습니다.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">열거 가능하게 만들 소스 <see cref="T:System.Data.TypedTableBase`1" />입니다.</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">소스의 요소를 변환할 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> 개체이며, 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">시퀀스에서 지정된 행의 요소를 반환하거나, 행이 범위를 벗어나면 기본 값을 반환합니다.</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">요소를 반환할 열거 가능한 개체입니다.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">검색할 요소의 0부터 시작하는 인덱스입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">요소 또는 행의 형식입니다.</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">시퀀스에서 지정된 행의 요소입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">
        <see cref="T:System.Data.TypedTableBase`1" />의 행을 지정된 키에 따라 오름차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.TypedTableBase`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">
        <see cref="T:System.Data.TypedTableBase`1" />의 행을 지정된 키 및 비교자에 따라 오름차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.TypedTableBase`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">
        <see cref="T:System.Data.TypedTableBase`1" />의 행을 지정된 키에 따라 내림차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.TypedTableBase`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">
        <see cref="T:System.Data.TypedTableBase`1" />의 행을 지정된 키 및 비교자에 따라 내림차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">순서를 지정할 <see cref="T:System.Data.TypedTableBase`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">
        <see cref="T:System.Data.TypedTableBase`1" />의 각 요소를 새 폼에 프로젝션합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">변환 함수를 호출할 <see cref="T:System.Data.TypedTableBase`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">해당 요소가 <paramref name="source" />의 각 요소에 대해 변환 함수를 호출한 결과인 <see cref="T:System.Data.EnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">지정된 조건자에 따라 행 시퀀스를 필터링합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">필터링할 <see cref="T:System.Data.TypedTableBase`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />의 행 요소의 형식으로, <see cref="T:System.Data.DataRow" />입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">입력 시퀀스에서 조건에 맞는 행이 들어 있는 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">모든 값이 고유해야 하는 열 집합에 대한 제한을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">지정된 <see cref="T:System.Data.UniqueConstraint" />를 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">제한할 <see cref="T:System.Data.DataColumn" />입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">제한할 <see cref="T:System.Data.UniqueConstraint" />과 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">제한할 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 기본 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.UniqueConstraint" /> 개체의 지정된 배열을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">제한할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">제한할 <see cref="T:System.Data.UniqueConstraint" /> 개체의 배열과 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">제한할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 기본 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">지정된 이름과 <see cref="T:System.Data.UniqueConstraint" />을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">제한할 <see cref="T:System.Data.DataColumn" />입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">지정된 이름, 제한할 <see cref="T:System.Data.UniqueConstraint" /> 및 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">제한할 <see cref="T:System.Data.DataColumn" />입니다.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 기본 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.UniqueConstraint" /> 개체의 지정된 이름과 배열을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">제한할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">지정된 이름, 제한할 <see cref="T:System.Data.UniqueConstraint" /> 개체의 배열 및 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">제한할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 기본 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">지정된 이름, 제한할 <see cref="T:System.Data.UniqueConstraint" /> 개체의 배열 및 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the constraint.">제약 조건의 이름입니다.</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">제한할 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 기본 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">이 제약 조건의 영향을 받는 열로 이루어진 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">이 제약 조건을 둘째 제약 조건과 비교하여 두 제약 조건이 같은지 확인합니다.</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">이 <see cref="T:System.Data.UniqueConstraint" />와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">
        <see cref="T:System.Data.UniqueConstraint" /> 개체의 이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">제약 조건이 기본 키에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제약 조건이 기본 키에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">이 제약 조건이 속한 테이블을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">제약 조건이 속한 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">업데이트 중인 행에 쿼리 명령 결과를 적용하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">출력 매개 변수와 처음 반환된 행은 모두 <see cref="T:System.Data.DataSet" />의 변경된 행에 매핑됩니다.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">처음 반환된 행의 데이터는 <see cref="T:System.Data.DataSet" />의 변경된 행에 매핑됩니다.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">반환된 매개 변수와 행이 무시됩니다.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">출력 매개 변수는 <see cref="T:System.Data.DataSet" />의 변경된 행에 매핑됩니다.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />을 수행하는 동안 현재 행과 나머지 행에 대해 실행할 작업을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">
        <see cref="T:System.Data.Common.DataAdapter" />가 계속해서 행을 처리합니다.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">이벤트 처리기는 업데이트가 오류로 처리됨을 보고합니다.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">현재 행 및 남은 모든 행을 업데이트할 수 없습니다.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">현재 행을 업데이트할 수 없습니다.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">삭제된 <see cref="T:System.Data.DataRow" />의 버전을 반환하려고 할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">
        <see cref="T:System.Data.VersionNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">serialization 정보를 사용하여 <see cref="T:System.Data.VersionNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">개체를 serialize 또는 deserialize하는 데 필요한 데이터입니다.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">serialize된 특정 스트림의 소스 및 대상에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">지정된 문자열을 사용하여 <see cref="T:System.Data.VersionNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">예외가 throw되었을 때 표시할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.VersionNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">현재 예외를 발생시킨 예외입니다. 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">XML 데이터와 관계형 스키마를 <see cref="T:System.Data.DataSet" />으로 읽어오는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">기본 읽기 모드입니다.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">DiffGram을 읽고 DiffGram의 변경 내용을 <see cref="T:System.Data.DataSet" />에 적용합니다. <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 작업과 의미론이 같습니다. <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 작업에서처럼 <see cref="P:System.Data.DataRow.RowState" /> 값이 유지됩니다. <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" />의 출력을 DiffGram으로 사용해야 DiffGram을 사용한 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 입력을 가져올 수 있습니다.
대상 <see cref="T:System.Data.DataSet" />에는 <see cref="Overload:System.Data.DataSet.WriteXml" />이 DiffGram으로 호출되는 <see cref="T:System.Data.DataSet" />와 동일한 스키마가 있어야 합니다. 그렇지 않으면 DiffGram 병합 작업이 실패하고 예외가 throw 됩니다.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">FOR XML 쿼리를 실행하여 생성된 것과 같은 XML 단편을 SQL Server의 인스턴스에 대해 읽습니다. <see cref="T:System.Data.XmlReadMode" />를 <see langword="Fragment" />로 설정한 경우 기본 네임스페이스를 인라인 스키마로 읽습니다.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">인라인 스키마를 무시하고 데이터를 기존 <see cref="T:System.Data.DataSet" /> 스키마로 읽어옵니다. 데이터가 기존 스키마와 일치하지 않으면 <see cref="T:System.Data.DataSet" />에 정의된 다른 네임스페이스의 데이터와 함께 삭제됩니다. 데이터가 DiffGram이면 <see langword="IgnoreSchema" />는 <see langword="DiffGram" />과 같은 기능을 가집니다.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">인라인 스키마를 무시하고 데이터로부터 스키마를 유추한 다음 해당 데이터를 로드합니다. <see cref="T:System.Data.DataSet" />에 스키마가 이미 있으면 새 테이블을 추가하거나 기존 테이블에 열을 추가하여 현재 스키마를 확장합니다. 유추된 테이블이 이미 있지만 네임스페이스가 다르거나 유추된 열 중에 기존 열과 충돌하는 열이 있으면 예외가 throw됩니다.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">모든 인라인 스키마를 무시하고 데이터로부터 강력한 형식의 스키마를 유추한 다음 해당 데이터를 로드합니다. 데이터에서 형식을 유추할 수 없으면 이 형식은 문자열 데이터로 해석됩니다. <see cref="T:System.Data.DataSet" />에 이미 스키마가 있으면 새 테이블을 추가하거나 기존 테이블에 열을 추가하여 현재 스키마를 확장합니다. 유추된 테이블이 이미 있지만 네임스페이스가 다르거나 유추된 열 중에 기존 열과 충돌하는 열이 있으면 예외가 throw됩니다.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">인라인 스키마를 읽고 데이터를 로드합니다. <see cref="T:System.Data.DataSet" />에 스키마가 이미 있으면 스키마에 새 테이블을 추가할 수 있지만 인라인 스키마의 테이블이 <see cref="T:System.Data.DataSet" />에 이미 있으면 예외가 throw됩니다.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" />에서 XML 데이터와 관계형 스키마를 쓰는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">원래 값과 현재 값을 포함하여 전체 <see cref="T:System.Data.DataSet" />을 DiffGram으로 씁니다. 변경된 값만 포함하는 DiffGram을 생성하려면 <see cref="M:System.Data.DataSet.GetChanges" />를 호출한 다음 반환된 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />에서 <see cref="T:System.Data.DataSet" />을 DiffGram으로 호출합니다.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">
        <see cref="T:System.Data.DataSet" />의 현재 내용을 XSD 스키마 없이 XML 데이터로 씁니다. <see cref="T:System.Data.DataSet" />에 로드된 데이터가 없으면 아무 것도 쓰여지지 않습니다.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">관계형 구조를 인라인 XSD 스키마로 사용하여 <see cref="T:System.Data.DataSet" />의 현재 내용을 XML 데이터로 씁니다. <see cref="T:System.Data.DataSet" />에 데이터가 없는 스키마만 있는 경우 인라인 스키마만 쓰여집니다. <see cref="T:System.Data.DataSet" />에 현재 스키마가 없으면 아무 것도 쓰여지지 않습니다.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">관계형 <see cref="T:System.Data.DataSet" />을 통해 구조적 데이터를 저장, 검색 및 조작할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlDataDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlDataDocument" />를 사용하여 <see cref="T:System.Data.DataSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">
        <see langword="DataSet" />에 로드할 <see langword="XmlDataDocument" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">현재 노드의 복사본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 요소를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">새 요소의 접두사입니다. String.Empty 또는 <see langword="null" />인 경우에는 접두사가 없습니다.</param>
      <param name="localName" vsli:raw="The local name of the new element.">새 요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">새 요소의 네임스페이스 URI(Uniform Resource Identifier)입니다. String.Empty 또는 <see langword="null" />인 경우에는 namespaceURI가 없습니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">새 <see cref="T:System.Xml.XmlElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">지정된 이름을 가진 <see cref="T:System.Xml.XmlEntityReference" />를 만듭니다.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">엔터티 참조의 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">지정된 이름의 <see cref="T:System.Xml.XmlEntityReference" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">이 메서드를 호출하는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">이 문서를 탐색하기 위한 새로운 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체를 만듭니다. <see langword="XPathNavigator" />는 <paramref name="node" /> 매개 변수에서 지정된 노드에 있습니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">검색기를 맨 처음 배치할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">문서를 탐색하는 데 사용되는 <see langword="XPathNavigator" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">
        <see langword="XmlDataDocument" />에서 데이터의 관계형 표현을 제공하는 <see cref="T:System.Data.DataSet" />을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">관계형 모델을 사용하여 <see langword="DataSet" />의 데이터에 액세스하는 데 사용할 수 있는 <see langword="XmlDataDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">지정된 ID의 <see cref="T:System.Xml.XmlElement" />를 가져옵니다. 이 메서드는 <see cref="T:System.Xml.XmlDataDocument" /> 클래스에서 지원하지 않습니다. 이 메서드를 호출하면 예외가 throw됩니다.</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">일치시킬 특성 ID입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">지정된 ID의 <see cref="T:System.Xml.XmlElement" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">이 메서드를 호출하는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlElement" />와 관련된 <see cref="T:System.Data.DataRow" />를 검색합니다.</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">검색할 관련 <see langword="DataRow" />가 있는 <see langword="XmlElement" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">지정된 <see langword="XmlElement" />의 표현이 포함된 <see langword="DataRow" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlDocument.Name" />과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">일치시킬 정규화된 이름입니다. 일치하는 노드의 <see cref="P:System.Xml.XmlDocument.Name" /> 속성과 일치합니다. 특수 값 "*"은 모든 태그와 일치합니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">지정된 <see cref="T:System.Data.DataRow" />와 관련된 <see cref="T:System.Xml.XmlElement" />를 검색합니다.</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">검색할 관련 <see langword="XmlElement" />가 있는 <see langword="DataRow" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">
        <see langword="DataRow" />의 표현이 포함된 <see langword="XmlElement" />입니다. <see langword="null" />와 관련된 <see langword="DataRow" />가 없으면 <see langword="XmlElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">지정된 스트림에서 <see langword="XmlDataDocument" />를 로드합니다.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">로드할 XML 문서가 포함된 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.IO.TextReader" />에서 <see langword="XmlDataDocument" />를 로드합니다.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">XML 데이터를 문서에 제공하기 위해 사용하는 <see langword="TextReader" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">지정된 URL을 사용하여 <see langword="XmlDataDocument" />를 로드합니다.</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">로드할 XML 문서가 포함된 파일의 URL입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />에서 <see langword="XmlDataDocument" />를 로드합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">로드할 XML 문서가 포함된 <see langword="XmlReader" />입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">로드되는 XML에 엔터티 참조가 포함되어 있으나 판독기에서 엔터티를 확인할 수 없습니다.</exception>
    </member>
  </members>
</doc>