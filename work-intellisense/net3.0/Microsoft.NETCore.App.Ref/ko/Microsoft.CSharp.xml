<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.CSharp</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.RuntimeBinder.Binder">
      <summary vsli:raw="Contains factory methods to create dynamic call site binders for CSharp.">CSharp의 동적 호출 사이트 바인더를 만드는 팩터리 메서드가 들어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp binary operation binder.">새 CSharp 이항 연산 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="operation" vsli:raw="The binary operation kind.">이항 연산 종류입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp binary operation binder.">새 CSharp 이진 연산 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new CSharp convert binder.">새 CSharp 변환 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="A new CSharp convert binder.">새 CSharp 변환 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get index binder.">새 CSharp 인덱스 가져오기 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp get index binder.">새 CSharp 인덱스 가져오기 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get member binder.">새 CSharp 멤버 가져오기 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="name" vsli:raw="The name of the member to get.">가져올 멤버의 이름입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp get member binder.">새 CSharp 멤버 가져오기 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke binder.">새 CSharp 호출 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp invoke binder.">새 CSharp 호출 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke constructor binder.">새 CSharp 생성자 호출 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp invoke constructor binder.">새 CSharp 생성자 호출 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke member binder.">새 CSharp 멤버 호출 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="name" vsli:raw="The name of the member to invoke.">호출할 멤버의 이름입니다.</param>
      <param name="typeArguments" vsli:raw="The list of type arguments specified for this invoke.">이 호출에 대해 지정된 형식 인수의 목록입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp invoke member binder.">새 CSharp 멤버 호출 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)">
      <summary vsli:raw="Initializes a new CSharp is event binder.">새 CSharp 이벤트 확인 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="name" vsli:raw="The name of the event to look for.">찾을 이벤트의 이름입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="A new CSharp is event binder.">새 CSharp는 이벤트 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set index binder.">새 CSharp 인덱스 설정 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp set index binder.">새 CSharp 인덱스 설정 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set member binder.">새 CSharp 멤버 설정 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="name" vsli:raw="The name of the member to set.">설정할 멤버의 이름입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp set member binder.">새 CSharp 멤버 설정 바인더입니다.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp unary operation binder.">새 CSharp 단항 연산 바인더를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">바인더를 초기화하는 데 사용할 플래그입니다.</param>
      <param name="operation" vsli:raw="The unary operation kind.">단항 연산 종류입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">이 작업이 사용된 위치를 나타내는 <see cref="T:System.Type" />입니다.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">이 작업의 인수에 사용할 <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 인스턴스의 시퀀스입니다.</param>
      <returns vsli:raw="A new CSharp unary operation binder.">새 CSharp 단항 연산 바인더입니다.</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">호출 사이트에서 특정 인수에 한정되는 C# 동적 작업에 대한 정보를 나타냅니다. 이 클래스의 인스턴스는 C# 컴파일러에 의해 생성됩니다.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flags" vsli:raw="The flags for the argument.">인수의 플래그입니다.</param>
      <param name="name" vsli:raw="The name of the argument, if named; otherwise null.">명명된 경우 인수의 이름이고, 그렇지 않으면 null입니다.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> 클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">호출 사이트에서 특정 인수에 한정되는 C# 동적 작업에 대한 정보를 나타냅니다. 이 클래스의 인스턴스는 C# 컴파일러에 의해 생성됩니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.Constant">
      <summary vsli:raw="The argument is a constant.">인수가 상수입니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsOut">
      <summary vsli:raw="The argument is passed to an out parameter.">인수가 out 매개 변수에 전달됩니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsRef">
      <summary vsli:raw="The argument is passed to a ref parameter.">인수가 ref 매개 변수에 전달됩니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsStaticType">
      <summary vsli:raw="The argument is a &lt;see cref=&quot;T:System.Type&quot; /&gt; indicating an actual type name used in source. Used only for target objects in static calls.">인수가 소스에서 사용된 실제 형식 이름을 나타내는 <see cref="T:System.Type" />입니다. 정적 호출의 대상 개체에만 사용됩니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.NamedArgument">
      <summary vsli:raw="The argument is a named argument.">인수가 명명된 인수입니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.None">
      <summary vsli:raw="No additional information to represent.">나타낼 추가 정보가 없습니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.UseCompileTimeType">
      <summary vsli:raw="The argument's compile-time type should be considered during binding.">바인딩하는 동안 인수의 컴파일 타임 형식을 고려해야 합니다.</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are not specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">호출 사이트의 특정 인수와 관련되지 않은 C# 동적 작업에 대한 정보를 나타냅니다. 이 클래스의 인스턴스는 C# 컴파일러에 의해 생성됩니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.BinaryOperationLogical">
      <summary vsli:raw="The binder represents a logical AND or logical OR that is part of a conditional logical operator evaluation.">바인더는 조건부 논리 연산자 계산에 속하는 논리적 AND 또는 논리적 OR를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.CheckedContext">
      <summary vsli:raw="The evaluation of this binder happens in a checked context.">이 바인더에 대한 계산은 확인된 컨텍스트에서 발생합니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertArrayIndex">
      <summary vsli:raw="The binder represents an implicit conversion for use in an array creation expression.">바인더는 배열 생성 식에 사용할 암시적 변환을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertExplicit">
      <summary vsli:raw="The binder represents an explicit conversion.">바인더는 명시적 변환을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSimpleName">
      <summary vsli:raw="The binder represents an invoke on a simple name.">바인더는 단순한 이름에 대한 호출을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSpecialName">
      <summary vsli:raw="The binder represents an invoke on a specialname.">바인더는 특수한 이름에 대한 호출을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.None">
      <summary vsli:raw="There is no additional information required for this binder.">이 바인더에 필요한 추가 정보가 없습니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultDiscarded">
      <summary vsli:raw="The binder is used in a position that does not require a result, and can therefore bind to a void returning method.">바인더는 결과가 필요 없는 위치에서 사용되므로 void를 반환하는 메서드에 바인딩할 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultIndexed">
      <summary vsli:raw="The result of any bind is going to be indexed get a set index or get index binder.">바인딩의 결과가 인덱싱되어 인덱스 설정 또는 인덱스 가져오기 바인더를 가져옵니다.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ValueFromCompoundAssignment">
      <summary vsli:raw="The value in this set index or set member comes a compound assignment operator.">이 인덱스 설정 또는 멤버 설정의 값은 복합 할당 연산자에서 사용됩니다.</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">C# 런타임 바인더의 동적 바인드가 처리될 때 발생하는 오류를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has serialized data.">serialize된 데이터가 있는 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data about the exception being thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message.">지정된 오류 메시지가 있는 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">예외를 설명하는 메시지입니다. 이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 이 예외의 원인인 내부 예외에 대한 참조를 갖는 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">현재 예외의 원인인 예외 또는 내부 예외가 지정되지 않은 경우 null 참조입니다.</param>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">C# 런타임 바인더의 동적 바인드가 처리될 때 발생하는 오류를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a system-supplied message that describes the error.">오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a specified message that describes the error.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">예외를 설명하는 메시지입니다. 이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 이 예외의 원인인 내부 예외에 대한 참조를 갖는 <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">현재 예외의 원인인 예외 또는 내부 예외가 지정되지 않은 경우 null 참조입니다.</param>
    </member>
  </members>
</doc>