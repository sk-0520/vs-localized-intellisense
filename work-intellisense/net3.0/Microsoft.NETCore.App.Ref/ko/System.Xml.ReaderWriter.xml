<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary vsli:raw="Specifies the amount of input or output checking that &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; objects perform.">만들어진 <see cref="T:System.Xml.XmlReader" /> 및 <see cref="T:System.Xml.XmlWriter" /> 개체에서 수행할 입력 또는 출력 검사 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object automatically detects whether document-level or fragment-level checking should be performed, and does the appropriate checking. If you're wrapping another &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object, the outer object doesn't do any additional conformance checking. Conformance checking is left up to the underlying object.  &#xA;  &#xA; See the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.ConformanceLevel&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.ConformanceLevel&quot; /&gt; properties for details on how the compliance level is determined.">
        <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.Xml.XmlWriter" /> 개체가 문서 또는 조각 검사의 수행 여부를 자동으로 확인하고 적합한 검사를 수행합니다. 다른 <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.Xml.XmlWriter" /> 개체를 래핑하면 외부 개체는 추가 규칙 검사를 수행하지 않습니다. 내부 개체에서만 규칙 검사를 수행합니다.  
규격 수준을 결정하는 데 대한 자세한 내용은 <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" /> 및 <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" /> 속성을 참조하세요.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary vsli:raw="The XML data complies with the rules for a well-formed XML 1.0 document, as defined by the W3C. This level of checking ensures that the stream being read or written can be consumed by any processor as an XML 1.0 document.">XML 데이터는 W3C가 정의한 대로 올바른 형식의 XML 1.0 문서에 대한 규칙을 준수합니다. 이 검사 수준은 프로세서에서 읽거나 쓰는 스트림을 XML 1.0 문서로 사용할 수 있도록 합니다.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary vsli:raw="The XML data is a well-formed XML fragment, as defined by the W3C.  This conformance level represents an XML document that might not have a root element but is otherwise well-formed. This level of checking ensures that the stream being read or written can be consumed by any processor as an XML 1.0 external parsed entity].">W3C에서 정의한 대로 XML 데이터가 형식이 올바른 XML 조각입니다.  이 준수 수준은 루트 요소가 없는 XML 문서를 나타내지만 그러지 않은 경우에는 잘 구성됩니다(Well-Formed). 이 검사 수준은 프로세서에서 읽거나 쓰는 스트림을 XML 1.0 외부 구문 분석된 엔터티로 사용할 수 있도록 합니다.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary vsli:raw="Specifies the options for processing DTDs. The &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration is used by the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class.">DTD를 처리하기 위한 옵션을 지정합니다. <see cref="T:System.Xml.DtdProcessing" /> 열거형은 <see cref="T:System.Xml.XmlReaderSettings" /> 클래스에서 사용됩니다.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary vsli:raw="Causes the DOCTYPE element to be ignored. No DTD processing occurs, and the DTD/DOCTYPE is lost on output.">DOCTYPE 요소가 무시됩니다. DTD 처리가 수행되지 않고 DTD/DOCTYPE이 출력에서 손실됩니다.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary vsli:raw="Used for parsing DTDs.">DTD 구문 분석에 사용됩니다.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary vsli:raw="Specifies that when a DTD is encountered, an &lt;see cref=&quot;T:System.Xml.XmlException&quot; /&gt; is thrown with a message that states that DTDs are prohibited. This is the default behavior.">DTD가 발견되면 DTD가 금지되었다는 메시지와 함께 <see cref="T:System.Xml.XmlException" />이 throw되도록 지정합니다. 이것은 기본적인 동작입니다.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary vsli:raw="Specifies how the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; handle entities.">
        <see cref="T:System.Xml.XmlTextReader" />나 <see cref="T:System.Xml.XmlValidatingReader" />에서 엔터티를 처리하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary vsli:raw="Expands character entities and returns general entities as &lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes. &#xA;        &#xA;You must call &lt;see cref=&quot;Overload:System.Xml.XmlReader.ResolveEntity&quot; /&gt; to see what the general entities expand to. This enables you to optimize entity handling by only expanding the entity the first time it is used.  &#xA;  &#xA;When set to &lt;see langword=&quot;ExpandCharEntities&quot; /&gt;, a reader call to the &lt;see cref=&quot;Overload:System.Xml.XmlReader.GetAttribute&quot; /&gt; method expands all entities (both general and character entities).">문자 엔터티를 확장하고 <see cref="F:System.Xml.XmlNodeType.EntityReference" /> 노드로 일반 엔터티를 반환합니다. 
일반 엔터티가 무엇으로 확장되는지 확인하려면 <see cref="Overload:System.Xml.XmlReader.ResolveEntity" />를 호출해야 합니다. 이렇게 하면 처음 사용될 때 엔터티를 확장하는 것만으로 엔터티 처리를 최적화할 수 있습니다.  
<see langword="ExpandCharEntities" />로 설정되면 <see cref="Overload:System.Xml.XmlReader.GetAttribute" /> 메서드에 대한 reader 호출이 모든 엔터티(일반 및 문자 엔터티 모두)를 확장합니다.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary vsli:raw="Expands all entities and returns the expanded nodes.&#xA;        &#xA;&lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes are not returned. The entity text is expanded in place of the entity references.">모든 엔터티를 확장하고 확장 노드를 반환합니다.
<see cref="F:System.Xml.XmlNodeType.EntityReference" /> 노드는 반환되지 않습니다. 엔터티 참조 대신에 엔터티 텍스트가 확장됩니다.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary vsli:raw="Specifies formatting options for the &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlTextWriter" />에 대해 형식 지정 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary vsli:raw="Causes child elements to be indented according to the &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Indentation&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlTextWriter.IndentChar&quot; /&gt; settings.&#xA;&#xA;This option indents element content only; mixed content is not affected. For the XML 1.0 definitions of these terms, see the World Wide Web Consortium (W3C) documentation Element Content and Mixed Content.">
        <see cref="P:System.Xml.XmlTextWriter.Indentation" /> 및 <see cref="P:System.Xml.XmlTextWriter.IndentChar" /> 설정에 따라 자식 요소가 들여쓰기됩니다.
이 옵션은 요소 콘텐츠만 들여쓰고, 혼합 콘텐츠는 영향을 받지 않습니다. 이 용어의 XML 1.0 정의는 W3C(World Wide Web 컨소시엄) 설명서 Element Content(요소 콘텐츠) 및 Mixed Content(혼합 콘텐츠)를 참조하세요.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary vsli:raw="No special formatting is applied. This is the default.">특별한 형식 지정은 적용되지 않습니다. 이 값이 기본값입니다.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary vsli:raw="Represents an application resource stream resolver.">애플리케이션 리소스 스트림 확인자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary vsli:raw="Returns an application resource stream from the specified URI.">지정된 URI에서 애플리케이션 리소스 스트림을 반환합니다.</summary>
      <param name="relativeUri" vsli:raw="The relative URI.">상대 URI입니다.</param>
      <returns vsli:raw="An application resource stream.">애플리케이션 리소스 스트림입니다.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary vsli:raw="Enables a class to return an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; from the current context or position.">클래스가 현재 컨텍스트나 위치에서 <see cref="T:System.Xml.XmlNode" />를 반환할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; for the current position.">현재 위치에 대한 <see cref="T:System.Xml.XmlNode" />를 반환합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; for the current position.">현재 위치에 대한 <see langword="XmlNode" />입니다.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary vsli:raw="Provides an interface to enable a class to return line and position information.">클래스에서 줄과 위치 정보를 반환할 수 있는 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">클래스에서 줄 정보를 반환할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Xml.IXmlLineInfo.LineNumber&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.IXmlLineInfo.LinePosition&quot; /&gt; can be provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Xml.IXmlLineInfo.LineNumber" />, <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary vsli:raw="Gets the current line number.">현재 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The current line number or 0 if no line information is available (for example, &lt;see cref=&quot;M:System.Xml.IXmlLineInfo.HasLineInfo&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).">현재 줄 번호이거나, 예를 들어 <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" />에서 <see langword="false" />를 반환하는 경우와 같이 줄 정보가 없는 경우에는 0입니다.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary vsli:raw="Gets the current line position.">현재 줄 위치를 가져옵니다.</summary>
      <returns vsli:raw="The current line position or 0 if no line information is available (for example, &lt;see cref=&quot;M:System.Xml.IXmlLineInfo.HasLineInfo&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).">현재 줄 위치이거나, 예를 들어 <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" />에서 <see langword="false" />를 반환하는 경우와 같이 줄 정보가 없는 경우에는 0입니다.</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary vsli:raw="Provides read-only access to a set of prefix and namespace mappings.">접두사 및 네임스페이스 매핑 집합에 읽기 전용으로 액세스하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection of defined prefix-namespace mappings that are currently in scope.">현재 범위 내에 정의된 접두사-네임스페이스 매핑 컬렉션을 가져옵니다.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">반환할 네임스페이스 노드의 형식을 지정하는 <see cref="T:System.Xml.XmlNamespaceScope" /> 값입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the current in-scope namespaces.">현재 범위 내의 네임스페이스가 포함된 <see cref="T:System.Collections.IDictionary" />입니다.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI mapped to the specified prefix.">지정된 접두사에 매핑된 네임스페이스 URI를 가져옵니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you wish to find.">찾을 네임스페이스 URI의 접두사입니다.</param>
      <returns vsli:raw="The namespace URI that is mapped to the prefix; &lt;see langword=&quot;null&quot; /&gt; if the prefix is not mapped to a namespace URI.">접두사에 매핑된 네임스페이스 URI이거나, 접두사가 네임스페이스 URI에 매핑되지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary vsli:raw="Gets the prefix that is mapped to the specified namespace URI.">지정된 네임스페이스 URI에 매핑된 접두사를 가져옵니다.</summary>
      <param name="namespaceName" vsli:raw="The namespace URI whose prefix you wish to find.">찾을 접두사의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The prefix that is mapped to the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if the namespace URI is not mapped to a prefix.">네임스페이스 URI에 매핑된 접두사이거나, 네임스페이스 URI가 접두사에 매핑되지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary vsli:raw="Specifies whether to remove duplicate namespace declarations in the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />에서 중복된 네임스페이스 선언을 제거할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary vsli:raw="Specifies that duplicate namespace declarations will not be removed.">중복된 네임스페이스 선언을 제거하지 않도록 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary vsli:raw="Specifies that duplicate namespace declarations will be removed. For the duplicate namespace to be removed, the prefix and the namespace must match.">중복된 네임스페이스 선언을 제거하도록 지정합니다. 중복된 네임스페이스를 제거하려면 접두사와 네임스페이스가 일치해야 합니다.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary vsli:raw="Implements a single-threaded &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">단일 스레드 <see cref="T:System.Xml.XmlNameTable" />을 구현합니다.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;NameTable&quot; /&gt; class.">
        <see langword="NameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Atomizes the specified string and adds it to the &lt;see langword=&quot;NameTable&quot; /&gt;.">지정된 문자열을 원자화하여 이를 <see langword="NameTable" />에 추가합니다.</summary>
      <param name="key" vsli:raw="The character array containing the string to add.">추가할 문자열이 포함된 문자 배열입니다.</param>
      <param name="start" vsli:raw="The zero-based index into the array specifying the first character of the string.">문자열의 첫 번째 문자를 지정하는 배열의 0부터 시작하는 인덱스입니다.</param>
      <param name="len" vsli:raw="The number of characters in the string.">문자열에 있는 문자의 수입니다.</param>
      <returns vsli:raw="The atomized string or the existing string if one already exists in the &lt;see langword=&quot;NameTable&quot; /&gt;. If &lt;paramref name=&quot;len&quot; /&gt; is zero, String.Empty is returned.">원자화된 문자열이거나 <see langword="NameTable" />에 이미 있을 경우 기존 문자열입니다. <paramref name="len" />가 0이면 String.Empty가 반환됩니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;start&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;start&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;len&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;len&quot; /&gt; =0.">0 &gt; <paramref name="start" />  
또는 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
또는 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
위의 경우 <paramref name="len" /> =0이면 예외가 throw되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0.">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary vsli:raw="Atomizes the specified string and adds it to the &lt;see langword=&quot;NameTable&quot; /&gt;.">지정된 문자열을 원자화하여 이를 <see langword="NameTable" />에 추가합니다.</summary>
      <param name="key" vsli:raw="The string to add.">추가할 문자열입니다.</param>
      <returns vsli:raw="The atomized string or the existing string if it already exists in the &lt;see langword=&quot;NameTable&quot; /&gt;.">원자화된 문자열이거나 <see langword="NameTable" />에 이미 있을 경우 기존 문자열입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Gets the atomized string containing the same characters as the specified range of characters in the given array.">주어진 배열의 지정된 문자 범위와 같은 문자가 포함된 원자화된 문자열을 가져옵니다.</summary>
      <param name="key" vsli:raw="The character array containing the name to find.">찾을 이름이 포함된 문자 배열입니다.</param>
      <param name="start" vsli:raw="The zero-based index into the array specifying the first character of the name.">이름의 첫 번째 문자를 지정하는 배열의 0부터 시작하는 인덱스입니다.</param>
      <param name="len" vsli:raw="The number of characters in the name.">이름에 있는 문자의 수입니다.</param>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized. If &lt;paramref name=&quot;len&quot; /&gt; is zero, String.Empty is returned.">문자열이 이미 원자화되지 않은 경우 원자화된 문자열 또는 <see langword="null" />입니다. <paramref name="len" />가 0이면 String.Empty가 반환됩니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;start&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;start&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;len&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;len&quot; /&gt; =0.">0 &gt; <paramref name="start" />  
또는 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
또는 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
위의 경우 <paramref name="len" /> =0이면 예외가 throw되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0.">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary vsli:raw="Gets the atomized string with the specified value.">지정된 값을 가진 원자화된 문자열을 가져옵니다.</summary>
      <param name="value" vsli:raw="The name to find.">찾을 이름입니다.</param>
      <returns vsli:raw="The atomized string object or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized.">원자화된 문자열이거나 문자열이 이미 원자화되지 않은 경우에는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary vsli:raw="Specifies how to handle line breaks.">줄 바꿈을 처리하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary vsli:raw="New line characters are entitized. This setting preserves all characters when the output is read by a normalizing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">새 줄 문자를 엔터티화합니다. 이 설정을 사용하면 정규화 <see cref="T:System.Xml.XmlReader" />에서 출력을 읽을 경우 모든 문자가 유지됩니다.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary vsli:raw="The new line characters are unchanged. The output is the same as the input.">새 줄 문자를 변경하지 않습니다. 이 경우에는 입력과 출력이 같습니다.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary vsli:raw="New line characters are replaced to match the character specified in the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.NewLineChars&quot; /&gt; property.">
        <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> 속성에 지정된 문자와 일치하도록 새 줄 문자를 바꿉니다.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary vsli:raw="Specifies the state of the reader.">판독기의 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Xml.XmlReader.Close&quot; /&gt; method has been called.">
        <see cref="M:System.Xml.XmlReader.Close" /> 메서드가 호출되었습니다.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary vsli:raw="The end of the file has been reached successfully.">파일 끝에 성공적으로 도달했습니다.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary vsli:raw="An error occurred that prevents the read operation from continuing.">읽기 작업을 계속할 수 없는 오류가 발생했습니다.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary vsli:raw="The &lt;see langword=&quot;Read&quot; /&gt; method has not been called.">
        <see langword="Read" /> 메서드가 호출되지 않았습니다.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary vsli:raw="The &lt;see langword=&quot;Read&quot; /&gt; method has been called. Additional methods may be called on the reader.">
        <see langword="Read" /> 메서드가 호출되었습니다. 판독기에 메서드가 추가로 호출될 수 있습니다.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlKnownDtds&quot; /&gt; enumeration is used by the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; and defines which well-known DTDs that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; recognizes.">
        <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> 열거형은 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />에서 사용되며 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />에서 인식되는 잘 알려진 DTD를 정의합니다.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize all currently supported DTDs. This is the default behavior.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />가 현재 지원되는 모든 DTD를 인식하도록 지정합니다. 이것은 기본적인 동작입니다.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will not recognize any of the predefined DTDs.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />가 미리 정의된 어떠한 DTD도 인식하지 않도록 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize DTDs and entities that are defined in RSS 0.91.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />가 RSS 0.91에 정의된 엔터티와 DTD를 인식하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize DTDs and entities that are defined in XHTML 1.0.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />가 XHTML 1.0에 정의된 엔터티와 DTD를 인식하도록 지정합니다.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary vsli:raw="Represents a class that is used to prepopulate the cache with DTDs or XML streams.">DTD 또는 XML 스트림으로 캐시를 미리 채우는 데 사용되는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified preloaded well-known DTDs.">지정되어 미리 로드된 잘 알려진 DTD를 사용하여 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into the cache.">캐시에 미리 채워넣어야 하는 잘 알려진 DTD입니다.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver.">지정된 대체(fallback) 해결 프로그램을 사용하여 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> 또는 자체 해결 프로그램입니다.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver and preloaded well-known DTDs.">지정된 대체(fallback) 해결 프로그램과 미리 로드된 잘 알려진 DTD를 사용하여 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> 또는 자체 해결 프로그램입니다.</param>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into the cache.">캐시에 미리 채워넣어야 하는 잘 알려진 DTD입니다.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.">지정된 대체(fallback) 확인자, 미리 로드된 잘 알려진 DTD, URI 같음 비교자를 사용하여 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> 또는 자체 해결 프로그램입니다.</param>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into cache.">캐시에 미리 채워넣어야 하는 잘 알려진 DTD입니다.</param>
      <param name="uriComparer" vsli:raw="The implementation of the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface to use when you compare URIs.">URI를 비교할 때 사용할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 제네릭 인터페이스 구현입니다.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary vsli:raw="Adds a byte array to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에 바이트 배열을 추가하고 이 배열을 URI에 매핑합니다. 저장소에 동일한 URI에 대한 매핑이 이미 있으면 기존 매핑이 재정의됩니다.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에 추가되는 데이터의 URI입니다.</param>
      <param name="value" vsli:raw="A byte array with the data that corresponds to the provided URI.">제공된 URI에 해당하는 데이터가 있는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Adds a byte array to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에 바이트 배열을 추가하고 이 배열을 URI에 매핑합니다. 저장소에 동일한 URI에 대한 매핑이 이미 있으면 기존 매핑이 재정의됩니다.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에 추가되는 데이터의 URI입니다.</param>
      <param name="value" vsli:raw="A byte array with the data that corresponds to the provided URI.">제공된 URI에 해당하는 데이터가 있는 바이트 배열입니다.</param>
      <param name="offset" vsli:raw="The offset in the provided byte array where the data starts.">제공된 바이트 배열에서 데이터가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The number of bytes to read from the byte array, starting at the provided offset.">제공된 오프셋부터 시작하여 바이트 배열에서 읽을 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of the &lt;paramref name=&quot;value&quot; /&gt; minus &lt;paramref name=&quot;offset&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="offset" /> 또는 <paramref name="count" />가 0 미만입니다.  
또는 
<paramref name="value" />에서 <paramref name="offset" />을 뺀 길이가 <paramref name="count." />보다 작은 경우</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">
        <see cref="T:System.IO.Stream" /> 저장소에 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />을 추가하고 이 스트림을 URI에 매핑합니다. 저장소에 동일한 URI에 대한 매핑이 이미 있으면 기존 매핑이 재정의됩니다.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에 추가되는 데이터의 URI입니다.</param>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; with the data that corresponds to the provided URI.">제공된 URI에 해당하는 데이터가 있는 <see cref="T:System.IO.Stream" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary vsli:raw="Adds a string with preloaded data to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">미리 로드된 데이터가 있는 문자열을 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에 추가하고 URI에 매핑합니다. 저장소에 동일한 URI에 대한 매핑이 이미 있으면 기존 매핑이 재정의됩니다.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에 추가되는 데이터의 URI입니다.</param>
      <param name="value" vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; with the data that corresponds to the provided URI.">제공된 URI에 해당하는 데이터가 있는 <see langword="String" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary vsli:raw="Sets the credentials that are used to authenticate the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">기본 <see cref="T:System.Net.WebRequest" />를 인증하는 데 사용하는 자격 증명을 설정합니다.</summary>
      <returns vsli:raw="The credentials that are used to authenticate the underlying web request.">기본 웹 요청을 인증하는 데 사용하는 자격 증명입니다.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource.">실제 리소스가 포함된 개체로 URI를 매핑합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.">.NET Framework for Silverlight의 현재 버전에서는 URI를 확인할 때 이 매개 변수를 사용하지 않습니다. 이 매개 변수는 다음 버전의 확장을 위해 제공됩니다. 예를 들어, 이 매개 변수를 xlink:role에 매핑하여 다른 시나리오에서 구현 관련 인수로 사용할 수 있습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; supports &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; objects for URIs that were added as &lt;see langword=&quot;String&quot; /&gt;. If the requested type is not supported by the resolver, an exception will be thrown. Use the &lt;see cref=&quot;M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)&quot; /&gt; method to determine whether a certain &lt;see langword=&quot;Type&quot; /&gt; is supported by this resolver.">반환할 개체의 형식입니다. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />는 <see langword="String" />으로 추가된 URI에 대해 <see cref="T:System.IO.Stream" /> 개체와 <see cref="T:System.IO.TextReader" /> 개체를 지원합니다. 요청된 형식이 해결 프로그램에서 지원되지 않는 경우 예외가 throw됩니다. <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> 메서드를 사용하여 이 확인자에서 특정 <see langword="Type" />이 지원되는지 여부를 확인합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; object that corresponds to the actual source.">실제 소스에 해당하는 <see cref="T:System.IO.Stream" /> 또는 <see cref="T:System.IO.TextReader" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Cannot resolve URI passed in &lt;paramref name=&quot;absoluteUri&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is not of a supported type.">
        <paramref name="absoluteUri" />에 전달된 URI를 확인할 수 없는 경우  
또는 
 <paramref name="ofObjectToReturn" />이 지원되는 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.">.NET Framework for Silverlight의 현재 버전에서는 URI를 확인할 때 이 매개 변수를 사용하지 않습니다. 이 매개 변수는 다음 버전의 확장을 위해 제공됩니다. 예를 들어, 이 매개 변수를 xlink:role에 매핑하여 다른 시나리오에서 구현 관련 인수로 사용할 수 있습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; supports &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; objects for URIs that were added as &lt;see langword=&quot;String&quot; /&gt;. If the requested type is not supported by the resolver, an exception will be thrown. Use the &lt;see cref=&quot;M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)&quot; /&gt; method to determine whether a certain &lt;see langword=&quot;Type&quot; /&gt; is supported by this resolver.">반환할 개체의 형식입니다. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />는 <see langword="String" />으로 추가된 URI에 대해 <see cref="T:System.IO.Stream" /> 개체와 <see cref="T:System.IO.TextReader" /> 개체를 지원합니다. 요청된 형식이 해결 프로그램에서 지원되지 않는 경우 예외가 throw됩니다. <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> 메서드를 사용하여 이 확인자에서 특정 <see langword="Type" />이 지원되는지 여부를 확인합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; object that corresponds to the actual source.">실제 소스에 해당하는 <see cref="T:System.IO.Stream" /> 또는 <see cref="T:System.IO.TextReader" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary vsli:raw="Gets a collection of preloaded URIs.">미리 로드된 URI의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of preloaded URIs.">미리 로드된 URI의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary vsli:raw="Removes the data that corresponds to the URI from the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt;.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />에서 URI에 해당하는 데이터를 제거합니다.</summary>
      <param name="uri" vsli:raw="The URI of the data that should be removed from the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">
        <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 저장소에서 제거되어야 하는 데이터의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs.">기본 및 상대 URI에서 절대 URI를 확인합니다.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">상대 URI를 확인하는 데 사용된 기본 URI입니다.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">확인할 URI입니다. 절대 URI나 상대 URI일 수 있습니다. 절대 URI인 경우 이 값은 <paramref name="baseUri" /> 값을 효율적으로 대체합니다. 상대 URI인 경우 <paramref name="baseUri" />와 결합하여 절대 URI를 만듭니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; representing the absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">절대 URI를 나타내는 <see cref="T:System.Uri" />이거나, 상대 URI를 확인할 수 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary vsli:raw="Determines whether the resolver supports other &lt;see cref=&quot;T:System.Type&quot; /&gt;s than just &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">확인자가 <see cref="T:System.Type" />뿐만 아니라 다른 <see cref="T:System.IO.Stream" />을 지원하는지 여부를 확인합니다.</summary>
      <param name="absoluteUri" vsli:raw="The absolute URI to check.">확인할 절대 URI입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to return.">반환할 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Type&quot; /&gt; is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Type" />이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary vsli:raw="Defines the post-schema-validation infoset of a validated XML node.">유효성이 검사된 XML 노드의 스키마 유효성 검사 이후 정보 집합을 정의합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary vsli:raw="Gets a value indicating if this validated XML node was set as the result of a default being applied during XML Schema Definition Language (XSD) schema validation.">유효성이 검사된 이 XML 노드가 XSD(XML 스키마 정의 언어) 스키마 유효성 검사를 수행하는 동안 기본값이 적용되는 결과로 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this validated XML node was set as the result of a default being applied during schema validation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유효성이 검사된 이 XML 노드가 스키마 유효성 검사 동안 기본값 적용 결과로 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary vsli:raw="Gets a value indicating if the value for this validated XML node is nil.">유효성이 검사된 이 XML 노드의 값이 nil인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value for this validated XML node is nil; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유효성이 검사된 이 XML 노드의 값이 nil이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary vsli:raw="Gets the dynamic schema type for this validated XML node.">유효성이 검사된 이 XML 노드의 동적 스키마 형식을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object that represents the dynamic schema type for this validated XML node.">유효성이 검사된 이 XML 노드의 동적 스키마 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary vsli:raw="Gets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; that corresponds to this validated XML node.">유효성이 검사된 이 XML 노드에 해당하는 컴파일된 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; that corresponds to this validated XML node.">유효성이 검사된 이 XML 노드에 해당하는 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary vsli:raw="Gets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; that corresponds to this validated XML node.">유효성이 검사된 이 XML 노드에 해당하는 컴파일된 <see cref="T:System.Xml.Schema.XmlSchemaElement" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; that corresponds to this validated XML node.">유효성이 검사된 이 XML 노드에 해당하는 <see cref="T:System.Xml.Schema.XmlSchemaElement" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary vsli:raw="Gets the static XML Schema Definition Language (XSD) schema type of this validated XML node.">유효성이 검사된 이 XML 노드의 정적 XSD(XML 스키마 정의 언어) 스키마 형식을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; of this validated XML node.">유효성이 검사된 이 XML 노드의 <see cref="T:System.Xml.Schema.XmlSchemaType" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">유효성이 검사된 이 XML 노드의 <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">유효성이 검사된 이 XML 노드의 <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary vsli:raw="Returns detailed information related to the &lt;see langword=&quot;ValidationEventHandler&quot; /&gt;.">
        <see langword="ValidationEventHandler" />와 관련된 자세한 정보를 반환합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; associated with the validation event.">유효성 검사 이벤트와 관련된 <see cref="T:System.Xml.Schema.XmlSchemaException" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaException&quot; /&gt; associated with the validation event.">유효성 검사 이벤트와 관련된 <see langword="XmlSchemaException" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary vsli:raw="Gets the text description corresponding to the validation event.">유효성 검사 이벤트에 해당하는 텍스트 설명을 가져옵니다.</summary>
      <returns vsli:raw="The text description.">텍스트 설명입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary vsli:raw="Gets the severity of the validation event.">유효성 검사 이벤트의 심각도를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSeverityType&quot; /&gt; value representing the severity of the validation event.">유효성 검사 이벤트의 심각도를 나타내는 <see cref="T:System.Xml.Schema.XmlSeverityType" /> 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary vsli:raw="Represents the callback method that will handle XML schema validation events and the &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventArgs&quot; /&gt;.">XML 스키마 유효성 검사 이벤트와 <see cref="T:System.Xml.Schema.ValidationEventArgs" />를 처리할 콜백 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.  &#xA;  &#xA; Note Determine the type of a sender before using it in your code. You cannot assume that the sender is an instance of a particular type. The sender is also not guaranteed to not  be null. Always surround your casts with failure handling logic.">이벤트 소스입니다.  
 참고 코드에 사용하기 전에 전송자 형식을 확인합니다. 전송자를 특정 유형의 인스턴스로 가정할 수 없으며 전송자가 null이 아니라고 보장할 수도 없습니다. 항상 실패 처리 논리로 캐스트를 둘러싸야 합니다.</param>
      <param name="e" vsli:raw="The event data.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary vsli:raw="Represents the typed value of a validated XML element or attribute. The &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; class cannot be inherited.">유효성이 검사된 XML 요소나 특성의 형식화된 값을 나타냅니다. <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">이 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 개체의 복사본을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">이 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 개체의 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 개체 복사본입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary vsli:raw="Gets a value indicating whether the validated XML element or attribute is an XPath node or an atomic value.">유효성이 검사된 XML 요소나 특성이 XPath 노드 또는 atomic 값인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the validated XML element or attribute is an XPath node; &lt;see langword=&quot;false&quot; /&gt; if the validated XML element or attribute is an atomic value.">유효성이 검사된 XML 요소나 특성이 XPath 노드이면 <see langword="true" />이고, atomic 값이면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlAtomicValue.Clone&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />를 참조하십시오.</summary>
      <returns vsli:raw="A copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">이 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary vsli:raw="Gets the &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">유효성이 검사된 XML 요소나 특성의 <see langword="string" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">유효성이 검사된 XML 요소나 특성의 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary vsli:raw="Gets the current validated XML element or attribute as a boxed object of the most appropriate .NET type according to its schema type.">현재 유효성이 검사된 XML 요소나 특성을 해당 스키마 형식에 따라 가장 적합한 Microsoft .NET Framework 형식의 boxed 개체 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The current validated XML element or attribute as a boxed object of the most appropriate .NET type.">현재 유효성이 검사된 XML 요소나 특성에 해당하는 가장 적합한 .NET Framework 형식의 boxed 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">유효성이 검사된 XML 요소나 특성의 <see langword="string" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">유효성이 검사된 XML 요소나 특성의 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Returns the validated XML element or attribute's value as the type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">네임스페이스 접두사 확인을 위해 지정된 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체를 사용하여, 유효성이 검사된 XML 요소나 특성의 값을 지정된 형식으로 반환합니다.</summary>
      <param name="type" vsli:raw="The type to return the validated XML element or attribute's value as.">유효성이 검사된 XML 요소나 특성의 값을 반환할 형식입니다.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체는 네임스페이스 접두사를 확인하는 데 사용됩니다.</param>
      <returns vsli:raw="The value of the validated XML element or attribute as the type requested.">유효성이 검사된 XML 요소나 특성의 값을 요청된 형식으로 반환합니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the target type.">유효성이 검사된 XML 요소나 특성의 값 형식이 대상 형식과 맞지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값을 <see cref="T:System.Boolean" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값에 해당하는 <see cref="T:System.Boolean" /> 형식입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; type.">특성 값의 유효성이 검사된 XML 요소 형식이 <see cref="T:System.Boolean" /> 형식과 맞지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">
        <see cref="T:System.Boolean" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값을 <see cref="T:System.DateTime" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값에 해당하는 <see cref="T:System.DateTime" /> 형식입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; type.">특성 값의 유효성이 검사된 XML 요소 형식이 <see cref="T:System.DateTime" /> 형식과 맞지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">
        <see cref="T:System.DateTime" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값을 <see cref="T:System.Double" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값에 해당하는 <see cref="T:System.Double" /> 형식입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Double&quot; /&gt; type.">특성 값의 유효성이 검사된 XML 요소 형식이 <see cref="T:System.Double" /> 형식과 맞지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">
        <see cref="T:System.Double" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary vsli:raw="Gets the validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값을 <see cref="T:System.Int32" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값에 해당하는 <see cref="T:System.Int32" /> 형식입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">특성 값의 유효성이 검사된 XML 요소 형식이 <see cref="T:System.Int32" /> 형식과 맞지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">
        <see cref="T:System.Int32" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary vsli:raw="Gets the validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값을 <see cref="T:System.Int64" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 값에 해당하는 <see cref="T:System.Int64" /> 형식입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; type.">특성 값의 유효성이 검사된 XML 요소 형식이 <see cref="T:System.Int64" /> 형식과 맞지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">
        <see cref="T:System.Int64" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary vsli:raw="Gets the .NET type of the validated XML element or attribute.">유효성이 검사된 XML 요소나 특성의 Microsoft .NET Framework 형식을 가져옵니다.</summary>
      <returns vsli:raw="The .NET type of the validated XML element or attribute. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">유효성이 검사된 XML 요소나 특성의 .NET Framework 형식입니다. 기본값은 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the validated XML element or attribute.">유효성이 검사된 XML 요소나 특성의 <see cref="T:System.Xml.Schema.XmlSchemaType" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the validated XML element or attribute.">유효성이 검사된 XML 요소나 특성의 <see cref="T:System.Xml.Schema.XmlSchemaType" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary vsli:raw="An in-memory representation of an XML Schema, as specified in the World Wide Web Consortium (W3C) XML Schema Part 1: Structures and XML Schema Part 2: Datatypes].">W3C(World Wide Web 컨소시엄) XML 스키마 파트 1: 구조 및 XML 스키마 파트 2: 데이터 형식]에서 지정한 XML 스키마의 메모리 내 표현입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary vsli:raw="Gets or sets the form for attributes declared in the target namespace of the schema.">스키마의 대상 네임스페이스에서 선언된 특성에 해당하는 폼을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; value that indicates if attributes from the target namespace are required to be qualified with the namespace prefix. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">대상 네임스페이스의 특성을 네임스페이스 접두사로 한정해야 하는지 여부를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값입니다. 기본값은 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary vsli:raw="Gets the post-schema-compilation value of all the global attribute groups in the schema.">스키마에 있는 모든 전역 특성 그룹의 스키마 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the global attribute groups in the schema.">스키마에 있는 모든 전역 특성 그룹의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary vsli:raw="Gets the post-schema-compilation value for all the attributes in the schema.">스키마에 있는 모든 특성에 대한 스키마 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the attributes in the schema.">스키마에 있는 모든 특성의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;blockDefault&quot; /&gt; attribute which sets the default value of the &lt;see langword=&quot;block&quot; /&gt; attribute on element and complex types in the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the schema.">스키마의 <see langword="blockDefault" />에 포함된 요소 및 복합 형식에 대한 <see langword="block" /> 특성의 기본값을 설정하는 <see langword="targetNamespace" /> 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; value representing the different methods for preventing derivation. The default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;.">파생 방지를 위해 서로 다른 메서드를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 값입니다. 기본값은 <see langword="XmlSchemaDerivationMethod.None" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Compiles the XML Schema Object Model (SOM) into schema information for validation. Used to check the syntactic and semantic structure of the programmatically built SOM. Semantic validation checking is performed during compilation.">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다. 프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다. 의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</summary>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about XML Schema validation errors.">XML 스키마 유효성 검사 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XML Schema Object Model (SOM) into schema information for validation. Used to check the syntactic and semantic structure of the programmatically built SOM. Semantic validation checking is performed during compilation.">유효성 검사를 위해 XML SOM(스키마 개체 모델)을 스키마 정보로 컴파일합니다. 프로그래밍에 의해 생성된 SOM의 구문 및 의미론 구조를 검사하는 데 사용됩니다. 의미론 유효성 검사는 컴파일 과정에서 수행됩니다.</summary>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema validation errors.">XML 스키마 유효성 검사 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements.">
        <see langword="include" /> 및 <see langword="import" /> 요소에서 참조된 모든 네임스페이스를 확인하는 데 사용할 <see langword="XmlResolver" />입니다.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary vsli:raw="Gets or sets the form for elements declared in the target namespace of the schema.">스키마의 대상 네임스페이스에서 선언된 요소에 해당하는 폼을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; value that indicates if elements from the target namespace are required to be qualified with the namespace prefix. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">대상 네임스페이스의 요소를 네임스페이스 접두사로 한정해야 하는지 여부를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값입니다. 기본값은 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary vsli:raw="Gets the post-schema-compilation value for all the elements in the schema.">스키마에 있는 모든 요소에 대한 스키마 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the elements in the schema.">스키마에 있는 모든 요소의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;finalDefault&quot; /&gt; attribute which sets the default value of the &lt;see langword=&quot;final&quot; /&gt; attribute on elements and complex types in the target namespace of the schema.">스키마의 대상 네임스페이스에 포함된 요소 및 복합 형식에 대한 <see langword="finalDefault" /> 특성의 기본값을 설정하는 <see langword="final" /> 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; value representing the different methods for preventing derivation. The default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;.">파생 방지를 위해 서로 다른 메서드를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 값입니다. 기본값은 <see langword="XmlSchemaDerivationMethod.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary vsli:raw="Gets the post-schema-compilation value of all the groups in the schema.">스키마에 있는 모든 그룹의 스키마 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the groups in the schema.">스키마에 있는 모든 그룹의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary vsli:raw="Gets or sets the string ID.">문자열 ID를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The ID of the string. The default value is &lt;see langword=&quot;String.Empty&quot; /&gt;.">문자열 ID입니다. 기본값은 <see langword="String.Empty" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary vsli:raw="Gets the collection of included and imported schemas.">포함된 스키마와 가져온 스키마의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of the included and imported schemas.">포함된 스키마와 가져온 스키마의 <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />입니다.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary vsli:raw="The XML schema instance namespace. This field is constant.">XML 스키마 인스턴스 네임스페이스입니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary vsli:raw="Indicates if the schema has been compiled.">스키마가 컴파일되었는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if schema has been compiled, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">스키마가 컴파일되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary vsli:raw="Gets the collection of schema elements in the schema and is used to add new element types at the &lt;see langword=&quot;schema&quot; /&gt; element level.">스키마에 있는 스키마 요소의 컬렉션을 가져오며 <see langword="schema" /> 요소 수준에서 새 요소 형식을 추가하는 데 사용됩니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of schema elements in the schema.">스키마에 있는 스키마 요소의 <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />입니다.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary vsli:raw="The XML schema namespace. This field is constant.">XML 스키마 네임스페이스입니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary vsli:raw="Gets the post-schema-compilation value for all notations in the schema.">스키마에 있는 모든 표기법에 대한 스키마 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all notations in the schema.">스키마에 있는 모든 표기법의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied stream.">제공된 스트림에서 XML 스키마를 읽습니다.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">제공된 데이터 스트림입니다.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about XML Schema syntax errors.">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">XML 스키마를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">
        <see cref="T:System.Xml.Schema.XmlSchemaException" />를 지정하지 않으면 <see cref="T:System.Xml.Schema.ValidationEventHandler" />이 발생합니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">제공된 <see cref="T:System.IO.TextReader" />에서 XML 스키마를 읽습니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML Schema to read.">읽을 XML 스키마를 포함하는 <see langword="TextReader" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema syntax errors.">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">XML 스키마를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">
        <see cref="T:System.Xml.Schema.XmlSchemaException" />를 지정하지 않으면 <see cref="T:System.Xml.Schema.ValidationEventHandler" />이 발생합니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">제공된 <see cref="T:System.Xml.XmlReader" />에서 XML 스키마를 읽습니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML Schema to read.">읽을 XML 스키마를 포함하는 <see langword="XmlReader" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema syntax errors.">XML 스키마 구문 오류에 대한 정보를 수신하는 유효성 검사 이벤트 처리기입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">XML 스키마를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">
        <see cref="T:System.Xml.Schema.XmlSchemaException" />를 지정하지 않으면 <see cref="T:System.Xml.Schema.ValidationEventHandler" />이 발생합니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary vsli:raw="Gets the post-schema-compilation value of all schema types in the schema.">스키마에 있는 모든 스키마 형식의 스키마 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of all schema types in the schema.">스키마에 있는 모든 스키마 형식의 <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) of the schema target namespace.">스키마 대상 네임스페이스의 URI(Uniform Resource Identifier)를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The schema target namespace.">스키마 대상 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes which do not belong to the schema target namespace.">스키마 대상 네임스페이스에 속하지 않는 정규화된 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of qualified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema target namespace.">스키마 대상 네임스페이스에 속하지 않는 정규화된 <see cref="T:System.Xml.XmlAttribute" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary vsli:raw="Gets or sets the version of the schema.">스키마의 버전을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The version of the schema. The default value is &lt;see langword=&quot;String.Empty&quot; /&gt;.">스키마의 버전입니다. 기본값은 <see langword="String.Empty" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary vsli:raw="Writes the XML Schema to the supplied data stream.">제공된 데이터 스트림에 XML 스키마를 작성합니다.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">제공된 데이터 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; specified.">지정된 <see cref="T:System.IO.Stream" />를 사용하여 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />에 XML 스키마를 씁니다.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">제공된 데이터 스트림입니다.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">제공된 <see cref="T:System.IO.TextWriter" />에 XML 스키마를 작성합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to write to.">쓸 <see cref="T:System.IO.TextWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">제공된 <see cref="T:System.IO.TextWriter" />에 XML 스키마를 작성합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to write to.">쓸 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">제공된 <see cref="T:System.Xml.XmlWriter" />에 XML 스키마를 작성합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; parameter is null.">
        <paramref name="writer" /> 매개 변수가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">제공된 <see cref="T:System.Xml.XmlWriter" />에 XML 스키마를 작성합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />
      </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;all&quot; /&gt; element (compositor).">W3C(World Wide Web 컨소시엄) <see langword="all" /> 요소(compositor)를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary vsli:raw="Gets the collection of &lt;see langword=&quot;XmlSchemaElement&quot; /&gt; elements contained within the &lt;see langword=&quot;all&quot; /&gt; compositor.">
        <see langword="XmlSchemaElement" /> compositor 내에 포함된 <see langword="all" /> 요소의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of elements contained in &lt;see langword=&quot;XmlSchemaAll&quot; /&gt;.">
        <see langword="XmlSchemaAll" /> 내에 포함된 요소의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary vsli:raw="The base class for any element that can contain annotation elements.">주석 요소를 포함할 수 있는 요소의 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotated&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">
        <see langword="annotation" /> 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt; representing the &lt;see langword=&quot;annotation&quot; /&gt; property.">
        <see langword="annotation" /> 속성을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary vsli:raw="Gets or sets the string id.">문자열 ID를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">문자열 id입니다. 기본값은 <see langword="String.Empty" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes that do not belong to the current schema's target namespace.">현재 스키마의 대상 네임스페이스에 속하지 않는 정규화된 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of qualified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema's target namespace.">스키마의 대상 네임스페이스에 속하지 않는 정규화된 <see cref="T:System.Xml.XmlAttribute" /> 개체의 배열입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;annotation&quot; /&gt; element.">W3C(World Wide Web 컨소시엄) <see langword="annotation" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary vsli:raw="Gets or sets the string id.">문자열 ID를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">문자열 id입니다. 기본값은 <see langword="String.Empty" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary vsli:raw="Gets the &lt;see langword=&quot;Items&quot; /&gt; collection that is used to store the &lt;see langword=&quot;appinfo&quot; /&gt; and &lt;see langword=&quot;documentation&quot; /&gt; child elements.">
        <see langword="Items" />와 <see langword="appinfo" /> 자식 요소를 저장하는 데 사용되는 <see langword="documentation" /> 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of &lt;see langword=&quot;appinfo&quot; /&gt; and &lt;see langword=&quot;documentation&quot; /&gt; child elements.">
        <see langword="appinfo" /> 및 <see langword="documentation" /> 자식 요소의 <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes that do not belong to the schema's target namespace.">스키마의 대상 네임스페이스에 속하지 않는 정규화된 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema's target namespace.">스키마의 대상 네임스페이스에 속하지 않는 <see cref="T:System.Xml.XmlAttribute" /> 개체의 배열입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;any&quot; /&gt; element.">W3C(World Wide Web 컨소시엄) <see langword="any" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAny" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary vsli:raw="Gets or sets the namespaces containing the elements that can be used.">사용 가능한 요소를 포함하는 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Namespaces for elements that are available for use. The default is &lt;see langword=&quot;##any&quot; /&gt;. Optional.">사용 가능한 요소를 위한 네임스페이스입니다. 기본값은 <see langword="##any" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary vsli:raw="Gets or sets information about how an application or XML processor should handle the validation of XML documents for the elements specified by the &lt;see langword=&quot;any&quot; /&gt; element.">애플리케이션 또는 XML 프로세서가 <see langword="any" /> 요소에 의해 지정된 요소에 대해 XML 문서의 유효성 검사를 처리하는 방법에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentProcessing&quot; /&gt; values. If no &lt;see langword=&quot;processContents&quot; /&gt; attribute is specified, the default is &lt;see langword=&quot;Strict&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" /> 값 중 하나입니다. <see langword="processContents" /> 특성이 지정되지 않은 경우 기본값은 <see langword="Strict" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">W3C(World Wide Web 컨소시엄) <see langword="anyAttribute" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespaces containing the attributes that can be used.">사용 가능한 특성을 포함하는 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Namespaces for attributes that are available for use. The default is &lt;see langword=&quot;##any&quot; /&gt;. Optional.">사용 가능한 특성을 위한 네임스페이스입니다. 기본값은 <see langword="##any" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary vsli:raw="Gets or sets information about how an application or XML processor should handle the validation of XML documents for the attributes specified by the &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">애플리케이션 또는 XML 프로세서가 <see langword="anyAttribute" /> 요소에 의해 지정된 특성에 대해 XML 문서의 유효성 검사를 처리하는 방법에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentProcessing&quot; /&gt; values. If no &lt;see langword=&quot;processContents&quot; /&gt; attribute is specified, the default is &lt;see langword=&quot;Strict&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" /> 값 중 하나입니다. <see langword="processContents" /> 특성이 지정되지 않은 경우 기본값은 <see langword="Strict" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;appinfo&quot; /&gt; element.">W3C(World Wide Web 컨소시엄) <see langword="appinfo" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAppInfo&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary vsli:raw="Gets or sets an array of &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects that represents the &lt;see langword=&quot;appinfo&quot; /&gt; child nodes.">
        <see langword="appinfo" /> 자식 노드를 나타내는 <see cref="T:System.Xml.XmlNode" /> 개체의 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects that represents the &lt;see langword=&quot;appinfo&quot; /&gt; child nodes.">
        <see langword="appinfo" /> 자식 노드를 나타내는 <see cref="T:System.Xml.XmlNode" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary vsli:raw="Gets or sets the source of the application information.">애플리케이션 정보 소스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A Uniform Resource Identifier (URI) reference. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">URI(Uniform Resource Identifier) 참조. 기본값은 <see langword="String.Empty" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attribute&quot; /&gt; element from the XML Schema as specified by the World Wide Web Consortium (W3C). Attributes provide additional information for other document elements. The attribute tag is nested between the tags of a document's element for the schema. The XML document displays attributes as named items in the opening tag of an element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="attribute" /> 요소를 나타냅니다. 특성은 다른 문서 요소에 대한 추가 정보를 제공합니다. 특성 태그는 스키마에 대한 문서 요소의 태그 사이에 중첩됩니다. XML 문서에서는 특성이 요소의 여는 태그에 명명된 항목으로 표시됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object representing the type of the attribute based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName&quot; /&gt; of the attribute.">특성의 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 또는 <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" />에 따라 특성의 형식을 나타내는 <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 개체</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary vsli:raw="Gets the common language runtime (CLR) object based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName&quot; /&gt; of the attribute that holds the post-compilation value of the &lt;see langword=&quot;AttributeType&quot; /&gt; property.">
        <see langword="AttributeType" /> 속성의 컴파일 이후 값을 보유하는 특성의 <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> 또는 <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" />을 기준으로 CLR(공용 런타임 라이브러리) 개체를 가져옵니다.</summary>
      <returns vsli:raw="The common runtime library (CLR) object that holds the post-compilation value of the &lt;see langword=&quot;AttributeType&quot; /&gt; property.">
        <see langword="AttributeType" /> 속성의 컴파일 이후 값을 보유하는 CLR(공용 런타임 라이브러리) 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the attribute.">특성의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The default value for the attribute. The default is a null reference. Optional.">특성의 기본값입니다. 기본값은 null 참조입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary vsli:raw="Gets or sets the fixed value for the attribute.">특성의 고정 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The fixed value for the attribute. The default is null. Optional.">특성의 고정 값입니다. 기본값은 Null입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary vsli:raw="Gets or sets the form for the attribute.">특성의 폼을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is the value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchema.AttributeFormDefault&quot; /&gt; of the schema element containing the attribute. Optional.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다. 기본값은 특성을 포함하는 스키마 요소의 <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> 값입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary vsli:raw="Gets or sets the name of the attribute.">특성의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the attribute.">특성 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary vsli:raw="Gets the qualified name for the attribute.">특성에 대한 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">
        <see langword="QualifiedName" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary vsli:raw="Gets or sets the name of an attribute declared in this schema (or another schema indicated by the specified namespace).">이 스키마 또는 지정된 네임스페이스에 의해 표시되는 다른 스키마에서 선언된 특성의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the attribute declared.">선언된 특성의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary vsli:raw="Gets or sets the attribute type to a simple type.">특성 형식을 단순 형식으로 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The simple type defined in this schema.">이 스키마에서 정의된 단순 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary vsli:raw="Gets or sets the name of the simple type defined in this schema (or another schema indicated by the specified namespace).">이 스키마 또는 지정된 네임스페이스에 의해 표시된 다른 스키마에서 정의된 단순 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the simple type.">단순 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary vsli:raw="Gets or sets information about how the attribute is used.">특성이 사용되는 방법에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the following values: None, Prohibited, Optional, or Required. The default is Optional. Optional.">None, Prohibited, Optional 또는 Required 중 하나의 값입니다. 기본값은 Optional입니다. 선택 사항입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attributeGroup&quot; /&gt; element from the XML Schema as specified by the World Wide Web Consortium (W3C). AttributesGroups provides a mechanism to group a set of attribute declarations so that they can be incorporated as a group into complex type definitions.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="attributeGroup" /> 요소를 나타냅니다. AttributesGroups는 복합 형식 정의에 그룹으로 통합할 수 있도록 특성 선언 집합을 그룹화하는 메커니즘을 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the attribute group.">특성 그룹의 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The World Wide Web Consortium (W3C) &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">W3C(World Wide Web 컨소시엄) <see langword="anyAttribute" /> 요소입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the attribute group. Contains &lt;see langword=&quot;XmlSchemaAttribute&quot; /&gt; and &lt;see langword=&quot;XmlSchemaAttributeGroupRef&quot; /&gt; elements.">특성 그룹에 대한 특성 컬렉션을 가져옵니다. <see langword="XmlSchemaAttribute" />와 <see langword="XmlSchemaAttributeGroupRef" /> 요소를 포함합니다.</summary>
      <returns vsli:raw="The collection of attributes for the attribute group.">특성 그룹에 대한 특성 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary vsli:raw="Gets or sets the name of the attribute group.">특성 그룹의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the attribute group.">특성 그룹의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the attribute group.">특성 그룹의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the attribute group.">특성 그룹의 정규화된 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary vsli:raw="Gets the redefined attribute group property from the XML Schema.">XML 스키마에서 다시 정의된 특성 그룹 속성을 가져옵니다.</summary>
      <returns vsli:raw="The redefined attribute group property.">다시 정의된 특성 그룹 속성입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attributeGroup&quot; /&gt; element with the &lt;see langword=&quot;ref&quot; /&gt; attribute from the XML Schema as specified by the World Wide Web Consortium (W3C). AttributesGroupRef is the reference for an attributeGroup, name property contains the attribute group being referenced.">W3C(World Wide Web 컨소시엄)에 지정된 XML 스키마의 <see langword="ref" /> 특성을 가진 <see langword="attributeGroup" /> 요소를 나타냅니다. AttributesGroupRef는 attributeGroup에 대한 참조이며 name 속성에는 참조되는 특성 그룹이 포함됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary vsli:raw="Gets or sets the name of the referenced &lt;see langword=&quot;attributeGroup&quot; /&gt; element.">참조된 <see langword="attributeGroup" /> 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the referenced attribute group. The value must be a QName.">참조된 특성 그룹의 이름입니다. 값은 QName이어야 합니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary vsli:raw="Represents the &lt;see langword=&quot;choice&quot; /&gt; element (compositor) from the XML Schema as specified by the World Wide Web Consortium (W3C). The &lt;see langword=&quot;choice&quot; /&gt; allows only one of its children to appear in an instance.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="choice" /> 요소(작성자)를 나타냅니다. <see langword="choice" />는 해당 자식 중 하나만 인스턴스에 나타나도록 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary vsli:raw="Gets the collection of the elements contained with the compositor (&lt;see langword=&quot;choice&quot; /&gt;): &lt;see langword=&quot;XmlSchemaElement&quot; /&gt;, &lt;see langword=&quot;XmlSchemaGroupRef&quot; /&gt;, &lt;see langword=&quot;XmlSchemaChoice&quot; /&gt;, &lt;see langword=&quot;XmlSchemaSequence&quot; /&gt;, or &lt;see langword=&quot;XmlSchemaAny&quot; /&gt;.">compositor(<see langword="choice" />)에 포함된 <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> 또는 <see langword="XmlSchemaAny" /> 등의 요소 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of elements contained within &lt;see langword=&quot;XmlSchemaChoice&quot; /&gt;.">
        <see langword="XmlSchemaChoice" />에 포함된 요소의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary vsli:raw="Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCollection&quot; /&gt; class is obsolete. Use &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instead.">XSD(XML 스키마 정의 언어)와 XDR(XML-Data Reduced) 스키마의 캐시를 포함합니다. <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> 클래스는 사용되지 않습니다. 대신 <see cref="T:System.Xml.Schema.XmlSchemaSet" />를 사용하세요.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; class.">
        <see langword="XmlSchemaCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;. The &lt;see langword=&quot;XmlNameTable&quot; /&gt; is used when loading schemas.">지정된 <see langword="XmlSchemaCollection" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다. <see langword="XmlNameTable" />은 스키마를 로드할 때 사용합니다.</summary>
      <param name="nametable" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds the schema located by the given URL into the schema collection.">지정한 URL에 의해 경로가 지정된 스키마를 스키마 컬렉션에 추가합니다.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">스키마에 연결된 네임스페이스 URI입니다. XML 스키마의 경우 일반적으로 <see langword="targetNamespace" />입니다.</param>
      <param name="uri" vsli:raw="The URL that specifies the schema to load.">로드할 스키마를 지정하는 URL입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">스키마 컬렉션에 추가된 <see cref="T:System.Xml.Schema.XmlSchema" />입니다. 추가되는 스키마가 XDR 스키마이거나 스키마에 컴파일 오류가 있는 경우에는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">올바른 스키마가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Adds the schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the schema collection.">
        <see cref="T:System.Xml.XmlReader" />에 포함된 스키마를 스키마 컬렉션에 추가합니다.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">스키마에 연결된 네임스페이스 URI입니다. XML 스키마의 경우 일반적으로 <see langword="targetNamespace" />입니다.</param>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the schema to add.">추가할 스키마를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">스키마 컬렉션에 추가된 <see cref="T:System.Xml.Schema.XmlSchema" />입니다. 추가되는 스키마가 XDR 스키마이거나 스키마에 컴파일 오류가 있는 경우에는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">올바른 스키마가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary vsli:raw="Adds the schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the schema collection. The specified &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is used to resolve any external resources.">
        <see cref="T:System.Xml.XmlReader" />에 포함된 스키마를 스키마 컬렉션에 추가합니다. 지정된 <see cref="T:System.Xml.XmlResolver" />는 외부 리소스를 확인하는 데 사용됩니다.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">스키마에 연결된 네임스페이스 URI입니다. XML 스키마의 경우 일반적으로 <see langword="targetNamespace" />입니다.</param>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the schema to add.">추가할 스키마를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements or &lt;see langword=&quot;x-schema&quot; /&gt; attribute (XDR schemas). If this is &lt;see langword=&quot;null&quot; /&gt;, external references are not resolved.">
        <see cref="T:System.Xml.XmlResolver" />는 <see langword="include" /> 및 <see langword="import" /> 요소 또는 <see langword="x-schema" /> 특성(XDR 스키마)에서 참조된 네임스페이스를 확인하는 데 사용됩니다. 이 해결 프로그램이 <see langword="null" />이면 외부 참조는 확인되지 않습니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">스키마 컬렉션에 추가된 <see cref="T:System.Xml.Schema.XmlSchema" />입니다. 추가되는 스키마가 XDR 스키마이거나 스키마에 컴파일 오류가 있는 경우에는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">올바른 스키마가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the collection.">
        <see cref="T:System.Xml.Schema.XmlSchema" />를 컬렉션에 추가합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see langword="XmlSchema" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; object.">
        <see langword="XmlSchema" /> 개체</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the collection. The specified &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is used to resolve any external references.">
        <see cref="T:System.Xml.Schema.XmlSchema" />를 컬렉션에 추가합니다. 지정된 <see cref="T:System.Xml.XmlResolver" />는 외부 참조를 확인하는 데 사용됩니다.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see langword="XmlSchema" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external references are not resolved.">
        <see langword="include" /> 및 <see langword="import" /> 요소에서 참조된 모든 네임스페이스를 확인하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />입니다. 이 해결 프로그램이 <see langword="null" />이면 외부 참조는 확인되지 않습니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; added to the schema collection.">스키마 컬렉션에 추가된 <see langword="XmlSchema" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">올바른 스키마가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary vsli:raw="Adds all the namespaces defined in the given collection (including their associated schemas) to this collection.">지정한 컬렉션에 정의된 네임스페이스(연결된 스키마 포함)를 모두 이 컬렉션에 추가합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; you want to add to this collection.">이 컬렉션에 추가할 <see langword="XmlSchemaCollection" />입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a schema with the specified namespace is in the collection.">지정된 네임스페이스를 가진 스키마가 컬렉션에 있는지를 나타내는 값을 가져옵니다.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the target namespace.">스키마에 연결된 네임스페이스 URI입니다. XML 스키마의 경우 일반적으로 대상 네임스페이스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a schema with the specified namespace is in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 네임스페이스가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is in the collection.">지정된 <see cref="T:System.Xml.Schema.XmlSchema" />의 <see langword="targetNamespace" />가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; object.">
        <see langword="XmlSchema" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a schema in the collection with the same &lt;see langword=&quot;targetNamespace&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">동일한 <see langword="true" />를 가진 스키마가 컬렉션에 있으면 <see langword="targetNamespace" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see langword=&quot;XmlSchema&quot; /&gt; objects from this collection into the given array starting at the given index.">지정된 인덱스에서 시작하여 지정된 배열에 이 컬렉션의 <see langword="XmlSchema" /> 개체를 모두 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy the objects to.">개체를 복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying will begin.">복사를 시작할 <paramref name="array" />의 인덱스입니다.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary vsli:raw="Gets the number of namespaces defined in this collection.">이 컬렉션에 정의된 네임스페이스의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of namespaces defined in this collection.">이 컬렉션에 정의된 네임스페이스의 수입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary vsli:raw="Provides support for the &quot;for each&quot; style iteration over the collection of schemas.">스키마 컬렉션에 대해 개별 스타일 반복을 지원합니다.</summary>
      <returns vsli:raw="An enumerator for iterating over all schemas in the current collection.">현재 컬렉션에 포함된 모든 스키마에 대한 반복을 위한 열거자입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; associated with the given namespace URI.">지정한 네임스페이스 URI에 연결된 <see cref="T:System.Xml.Schema.XmlSchema" />를 가져옵니다.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema you want to return. This will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the schema.">반환할 스키마에 연결된 네임스페이스 URI입니다. 이것은 대개 스키마의 <see langword="targetNamespace" />가 됩니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; associated with the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if there is no loaded schema associated with the given namespace or if the namespace is associated with an XDR schema.">네임스페이스 URI에 연결된 <see langword="XmlSchema" />입니다. 지정한 네임스페이스에 연결되어 있는 로드된 스키마가 없거나 네임스페이스가 XDR 스키마에 연결되어 있는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary vsli:raw="Gets the default &lt;see langword=&quot;XmlNameTable&quot; /&gt; used by the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; when loading new schemas.">새 스키마를 로드할 때 <see langword="XmlNameTable" />에서 사용하는 기본 <see langword="XmlSchemaCollection" />을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">
        <see langword="XmlNameTable" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />를 참조하세요.</summary>
      <param name="array" vsli:raw="The array to copy the objects to.">개체를 복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying will begin.">복사를 시작할 <paramref name="array" />의 인덱스입니다.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.Count&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />를 참조하세요.</summary>
      <returns vsli:raw="The count of the items in the collection.">컬렉션에 있는 항목의 수입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />를 참조하세요.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션이 동기화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />를 참조하세요.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; object that can be used to synchronize access to the collection.">컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다.<see cref="P:System.Collections.ICollection.SyncRoot" /></returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />를 참조하십시오.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">컬렉션에 대한 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary vsli:raw="Sets an event handler for receiving information about the XDR and XML schema validation errors.">XDR 및 XML 스키마 유효성 검사 오류에 대한 정보를 받는 이벤트 처리기를 설정합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary vsli:raw="Supports a simple iteration over a collection. This class cannot be inherited.">컬렉션에서 단순하게 반복할 수 있도록 지원합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; in the collection.">컬렉션의 현재 <see cref="T:System.Xml.Schema.XmlSchema" />를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;XmlSchema&quot; /&gt; in the collection.">컬렉션의 현재 <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next schema in the collection.">열거자를 컬렉션의 다음 스키마로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move was successful; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">이동이 성공적으로 이루어진 경우 <see langword="true" />이고, 열거자가 컬렉션의 끝을 지난 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />를 참조하세요.</summary>
      <returns vsli:raw="The current node.">현재 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />를 참조하세요.</summary>
      <returns vsli:raw="The next node.">다음 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />를 참조하십시오.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary vsli:raw="Provides schema compilation options for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class This class cannot be inherited.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 클래스에 대한 스키마 컴파일 옵션을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; should check for Unique Particle Attribution (UPA) violations.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 UPA(Unique Particle Attribution) 위반을 검사해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; should check for Unique Particle Attribution (UPA) violations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 UPA(Unique Particle Attribution) 위반을 검사해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary vsli:raw="Represents the &lt;see langword=&quot;complexContent&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class represents the complex content model for complex types. It contains extensions or restrictions on a complex type that has either only elements or mixed content.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="complexContent" /> 요소를 나타냅니다. 이 클래스는 복합 형식의 복합 콘텐츠 모델을 나타내며 혼합 콘텐츠나 요소만 있는 복합 형식에 대한 확장이나 제한을 포함합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContent&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary vsli:raw="Gets or sets the content.">콘텐츠를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of either the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentRestriction&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentExtension&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" /> 클래스 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary vsli:raw="Gets or sets information that determines if the type has a mixed content model.">형식이 혼합 콘텐츠 모델을 포함하는지 여부를 결정하는 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="If this property is &lt;see langword=&quot;true&quot; /&gt;, character data is allowed to appear between the child elements of the complex type (mixed content model). The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">이 속성이 <see langword="true" />이면 문자 데이터를 복합 형식(혼합 콘텐츠 모델)의 자식 요소들 사이에 표시할 수 있습니다. 기본값은 <see langword="false" />입니다. 선택적 요소.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary vsli:raw="Represents the &lt;see langword=&quot;extension&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for complex types with complex content model derived by extension. It extends the complex type by adding attributes or elements.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="extension" /> 요소를 나타냅니다. 이 클래스는 확장에 의해 파생된 복합 콘텐츠 모델을 포함하는 복합 형식용이며 특성 또는 요소를 추가하여 복합 형식을 확장합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentExtension&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">복합 콘텐츠 모델의 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">복합 콘텐츠 모델의 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 구성 요소입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex content. Contains &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; elements.">복합 내용에 대한 특성 컬렉션을 가져옵니다. <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />와 <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> 요소를 포함합니다.</summary>
      <returns vsli:raw="The collection of attributes for the complex content.">복합 내용에 대한 특성 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the complex type from which this type is derived by extension.">확장에 의해 이 형식이 파생된 복합 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the complex type from which this type is derived by extension.">확장에 의해 이 형식이 파생된 복합 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for complex types with a complex content model derived by restriction. It restricts the contents of the complex type to a subset of the inherited complex type.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="restriction" /> 요소를 나타냅니다. 이 클래스는 제한에 의해 파생된 복합 콘텐츠 모델을 포함하는 복합 형식용이며 복합 형식의 콘텐츠를 상속된 복합 형식의 하위 집합으로 제한합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentRestriction&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">복합 콘텐츠 모델의 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">복합 콘텐츠 모델의 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 구성 요소입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex type. Contains the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; elements.">복합 형식에 대한 특성 컬렉션을 가져옵니다. <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />와 <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> 요소를 포함합니다.</summary>
      <returns vsli:raw="The collection of attributes for the complex type.">복합 형식에 대한 특성 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of a complex type from which this type is derived by restriction.">제한에 의해 이 형식이 파생된 기본 복합 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the complex type from which this type is derived by restriction.">제한에 의해 이 형식이 파생된 기본 복합 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary vsli:raw="Represents the &lt;see langword=&quot;complexType&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines a complex type that determines the set of attributes and content of an element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="complexType" /> 요소를 나타냅니다. 이 클래스는 요소의 콘텐츠 및 특성 집합을 결정하는 복합 형식을 정의합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary vsli:raw="Gets or sets the value for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex type.">복합 형식의 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 구성 요소에 대한 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex type.">복합 형식의 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 구성 요소입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex type.">복합 형식에 대한 특성 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Contains &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />와 <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> 클래스를 포함합니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary vsli:raw="Gets the collection of all the complied attributes of this complex type and its base types.">이 복합 형식과 해당 기본 형식의 모든 컴파일된 특성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of all the attributes from this complex type and its base types. The post-compilation value of the &lt;see langword=&quot;AttributeUses&quot; /&gt; property.">이 복합 형식과 그 네이티브 형식의 모든 특성 컬렉션입니다. <see langword="AttributeUses" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary vsli:raw="Gets the post-compilation value for &lt;see langword=&quot;anyAttribute&quot; /&gt; for this complex type and its base type(s).">이 복합 형식과 해당 기본 형식에 대한 <see langword="anyAttribute" />의 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">
        <see langword="anyAttribute" /> 요소의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;block&quot; /&gt; attribute.">
        <see langword="block" /> 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;block&quot; /&gt; attribute prevents a complex type from being used in the specified type of derivation. The default is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">
        <see langword="block" /> 특성은 복합 형식을 지정된 파생 형식에서 사용하지 못하게 합니다. 기본값은 <see langword="XmlSchemaDerivationMethod.None" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary vsli:raw="Gets the value after the type has been compiled to the post-schema-validation information set (infoset). This value indicates how the type is enforced when &lt;see langword=&quot;xsi:type&quot; /&gt; is used in the instance document.">형식이 스키마 유효성 검사 이후 정보 집합(infoset)에 컴파일된 후의 값을 가져옵니다. 이 값은 <see langword="xsi:type" />이 인스턴스 문서에서 사용되는 경우 형식이 적용되는 방법을 나타냅니다.</summary>
      <returns vsli:raw="The post-schema-validated infoset value. The default is &lt;see langword=&quot;BlockDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">스키마 유효성 검사 이후 정보 집합 값입니다. 기본값은 <see langword="BlockDefault" /> 요소의 <see langword="schema" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary vsli:raw="Gets or sets the post-compilation &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentModel&quot; /&gt; of this complex type.">이 복합 형식의 컴파일 이후 <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The content model type that is one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContent&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContent&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" /> 클래스 중 하나인 콘텐츠 모델 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary vsli:raw="Gets the content model of the complex type which holds the post-compilation value.">컴파일 이후 값을 보유하는 복합 형식의 콘텐츠 모델을 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the content model for the complex type.">복합 형식에 대한 콘텐츠 모델의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary vsli:raw="Gets the particle that holds the post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaComplexType.ContentType&quot; /&gt; particle.">
        <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> 파티클의 컴파일 이후 값을 보유하는 파티클을 가져옵니다.</summary>
      <returns vsli:raw="The particle for the content type. The post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaComplexType.ContentType&quot; /&gt; particle.">콘텐츠 형식에 대한 파티클입니다. <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> 파티클의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary vsli:raw="Gets or sets the information that determines if the &lt;see langword=&quot;complexType&quot; /&gt; element can be used in the instance document.">
        <see langword="complexType" /> 요소를 인스턴스 문서에서 사용할 수 있는지 여부를 결정하는 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, an element cannot use this &lt;see langword=&quot;complexType&quot; /&gt; element directly and must use a complex type that is derived from this &lt;see langword=&quot;complexType&quot; /&gt; element. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">
        <see langword="true" />이면 요소는 이 <see langword="complexType" /> 요소를 직접 사용할 수 없고 이 <see langword="complexType" /> 요소에서 파생되는 복합 형식을 사용해야 합니다. 기본값은 <see langword="false" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary vsli:raw="Gets or sets information that determines if the complex type has a mixed content model (markup within the content).">복합 형식이 혼합 콘텐츠 모델(콘텐츠 내의 태그)을 포함하는지 여부를 결정하는 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if character data can appear between child elements of this complex type; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">문자 데이터를 이 복합 형식의 자식 요소들 사이에 표시할 수 있는 경우에는 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary vsli:raw="Gets or sets the compositor type as one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">compositor 형식을 <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나로 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The compositor type.">compositor 형식입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary vsli:raw="An abstract class for schema content.">스키마 내용에 대한 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContent&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary vsli:raw="Specifies the order and structure of the child elements of a type.">형식의 자식 요소에 대한 순서 및 구조를 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentModel&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary vsli:raw="Gets or sets the content of the type.">형식의 내용을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Provides the content of the type.">형식의 내용을 제공합니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary vsli:raw="Provides information about the validation mode of &lt;see langword=&quot;any&quot; /&gt; and &lt;see langword=&quot;anyAttribute&quot; /&gt; element replacements.">
        <see langword="any" /> 및 <see langword="anyAttribute" /> 요소의 대체에 대한 유효성 검사 모드 정보를 제공합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary vsli:raw="If the associated schema is found, the document items will be validated. No errors will be thrown otherwise.&#xA;        &#xA;If the item is not validated, the XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt;. If a validation event handler has not been set up, no information is returned when the warning is produced.">연결된 스키마가 있으면 문서 항목의 유효성이 검사됩니다. 그렇지 않으면 오류가 throw되지 않습니다.
항목의 유효성이 검사되지 않은 경우 XML 프로세서는 <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />을 사용하여 유효성 검사 이벤트 처리기를 통해 클라이언트에 알리려고 합니다. 유효성 검사 이벤트 처리기가 설정되지 않은 경우에는 경고가 생성될 때 정보가 반환되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary vsli:raw="Document items are not validated.">문서 항목의 유효성이 검사되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary vsli:raw="Document items must consist of well-formed XML and are not validated by the schema.&#xA;        &#xA;The XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt; that no validation took place for the given item. If a validation event handler has not been set up, no information is returned when the warning is produced.">문서 항목은 올바른 형식의 XML로 구성되어야 하며 스키마에 대해 유효성이 검사되지 않습니다.
XML 프로세서는 <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />을 사용하여 유효성 검사 이벤트 처리기를 통해 해당 항목에 대한 유효성 검사가 수행되지 않았음을 클라이언트에 알리려고 합니다. 유효성 검사 이벤트 처리기가 설정되지 않은 경우에는 경고가 생성될 때 정보가 반환되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary vsli:raw="The schema processor must find a schema associated with the indicated namespace to validate the document items.&#xA;        &#xA;If the processor cannot find a schema or if the items are not valid, the XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt;. If a validation error occurs and a validation event handler is not provided, an exception is thrown.">스키마 프로세서는 표시된 네임스페이스와 연결된 스키마를 찾아 문서 항목의 유효성을 검사해야 합니다.
프로세서가 스키마를 찾을 수 없거나 항목이 유효하지 않은 경우 XML 프로세서는 <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />을 사용하여 유효성 검사 이벤트 처리기를 통해 클라이언트에 알리려고 합니다. 유효성 검사 오류가 발생하고 유효성 검사 이벤트 처리기가 제공되지 않으면 예외가 throw됩니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary vsli:raw="Enumerations for the content model of the complex type. This represents the content in the post-schema-validation information set (infoset).">복합 형식의 콘텐츠 모델에 대한 열거형입니다. 이것은 스키마 유효성 검사 이후 정보 집합(infoset)의 내용을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary vsli:raw="Element-only content.">요소 전용 콘텐츠입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary vsli:raw="Empty content.">빈 콘텐츠입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary vsli:raw="Mixed content.">혼합 내용입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary vsli:raw="Text-only content.">텍스트 전용 콘텐츠입니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 클래스는 XSD(XML 스키마 정의 언어) 형식을 CLR(공용 언어 런타임) 형식에 매핑하는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, to the CLR type specified.">지정된 값을 지정된 CLR(공용 언어 런타임) 형식으로 변환합니다. 이 때 원래 값은 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />으로 표시되는 XML 스키마 형식에 대한 유효한 CLR 표현 형식 중 하나입니다.</summary>
      <param name="value" vsli:raw="The input value to convert to the specified type.">지정된 형식으로 변환할 입력 값입니다.</param>
      <param name="targetType" vsli:raw="The target type to convert the input value to.">입력 값을 변환할 대상 형식입니다.</param>
      <returns vsli:raw="The converted input value.">변환된 입력 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> 또는 <see cref="T:System.Type" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; does not support a conversion from type of the value specified to the type specified.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />이 나타내는 형식이 지정된 값 형식에서 지정된 대상 형식으로의 변환을 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, to the CLR type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; represents the xs:QName type or a type derived from it.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />이 xs:QName 형식 또는 여기에서 파생된 형식을 나타내는 경우, 지정된 값을 <see cref="T:System.Xml.IXmlNamespaceResolver" />를 사용하여 특정 CLR(공용 언어 런타임) 형식으로 변환합니다. 이 때 원래 값은 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />으로 표시되는 XML 스키마 형식에 대한 유효한 CLR 표현 형식 중 하나입니다.</summary>
      <param name="value" vsli:raw="The input value to convert to the specified type.">지정된 형식으로 변환할 입력 값입니다.</param>
      <param name="targetType" vsli:raw="The target type to convert the input value to.">입력 값을 변환할 대상 형식입니다.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; used for resolving namespace prefixes. This is only of use if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; represents the xs:QName type or a type derived from it.">네임스페이스 접두사를 확인하는 데 사용되는 <see cref="T:System.Xml.IXmlNamespaceResolver" />입니다. 이 매개 변수는 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />이 xs:QName 형식 또는 이 형식에서 파생된 형식을 나타내는 경우에만 사용됩니다.</param>
      <returns vsli:raw="The converted input value.">변환된 입력 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> 또는 <see cref="T:System.Type" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; does not support a conversion from type of the value specified to the type specified.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />이 나타내는 형식이 지정된 값 형식에서 지정된 대상 형식으로의 변환을 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)&quot; /&gt; method always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> 메서드는 항상 <see langword="false" />를 반환합니다.</summary>
      <param name="datatype" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />
      </param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">항상 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, validates the &lt;see langword=&quot;string&quot; /&gt; specified against a built-in or user-defined simple type.">파생 클래스에서 재정의된 경우 기본 제공되거나 사용자 정의된 단순 형식에 대해 지정한 <see langword="string" />의 유효성을 검사합니다.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to validate against the simple type.">단순 형식에 대해 유효성을 검사할 <see langword="string" />입니다.</param>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use for atomization while parsing the &lt;see langword=&quot;string&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; object represents the xs:NCName type.">이 <see cref="T:System.Xml.XmlNameTable" /> 개체가 xs:NCName 형식을 나타내는 경우  <see langword="string" />을 구문 분석하는 동안 원자화에 사용할 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />입니다.</param>
      <param name="nsmgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object to use while parsing the &lt;see langword=&quot;string&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; object represents the xs:QName type.">이 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체가 xs:QName 형식을 나타내는 경우  <see langword="string" />을 구문 분석하는 동안 사용할 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be cast safely to the type returned by the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaDatatype.ValueType&quot; /&gt; property.">
        <see cref="T:System.Object" /> 속성에서 반환하는 형식으로 안전하게 캐스팅할 수 있는 <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The input value is not a valid instance of this W3C XML Schema type.">입력 값이 이 W3C XML 스키마 형식의 올바른 인스턴스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value to parse cannot be &lt;see langword=&quot;null&quot; /&gt;.">구문 분석할 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary vsli:raw="When overridden in a derived class, gets the type for the &lt;see langword=&quot;string&quot; /&gt; as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.">파생 클래스에서 재정의된 경우 W3C(World Wide Web 컨소시엄) XML 1.0 사양에 지정된 대로 <see langword="string" />의 형식을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlTokenizedType&quot; /&gt; value for the &lt;see langword=&quot;string&quot; /&gt;.">
        <see langword="string" />에 대한 <see cref="T:System.Xml.XmlTokenizedType" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; value for the simple type.">단순 형식에 대한 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; value for the simple type.">단순 형식에 대한 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary vsli:raw="When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.">파생 클래스에서 재정의된 경우 항목의 CLR(공용 언어 런타임) 형식을 가져옵니다.</summary>
      <returns vsli:raw="The Common Language Runtime (CLR) type of the item.">항목의 CLR(공용 언어 런타임) 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatypeVariety&quot; /&gt; value for the simple type.">단순 형식에 대한 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatypeVariety&quot; /&gt; value for the simple type.">단순 형식에 대한 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary vsli:raw="Specifies the W3C XML schema data type variety of the type.">W3C XML 스키마 데이터 형식의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary vsli:raw="A W3C XML schema atomic type.">W3C XML 스키마 atomic 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary vsli:raw="A W3C XML schema list type.">W3C XML 스키마 list 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary vsli:raw="A W3C XML schema union type.">W3C XML 스키마 union 형식입니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary vsli:raw="Provides different methods for preventing derivation.">파생 방지를 위해 서로 다른 메서드를 제공합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary vsli:raw="&lt;see langword=&quot;#all&quot; /&gt;. Refers to all derivation methods.">
        <see langword="#all" />. 모든 파생 메서드를 참조합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary vsli:raw="Override default derivation method to allow any derivation.">기본 파생 메서드를 재정의하여 파생을 허용합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Extension&quot; /&gt;.">
        <see langword="Extension" />에 의한 파생을 참조합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;List&quot; /&gt;.">
        <see langword="List" />에 의한 파생을 참조합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary vsli:raw="Accepts the default derivation method.">기본 파생 메서드를 적용합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Restriction&quot; /&gt;.">
        <see langword="Restriction" />에 의한 파생을 참조합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Substitution&quot; /&gt;.">
        <see langword="Substitution" />에 의한 파생을 참조합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Union&quot; /&gt;.">
        <see langword="Union" />에 의한 파생을 참조합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary vsli:raw="Represents the &lt;see langword=&quot;documentation&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class specifies information to be read or used by humans within an &lt;see langword=&quot;annotation&quot; /&gt;.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="documentation" /> 요소를 나타냅니다. 이 클래스는 <see langword="annotation" /> 내에서 사용자가 읽거나 사용할 정보를 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDocumentation&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute. This serves as an indicator of the language used in the contents.">
        <see langword="xml:lang" /> 특성을 가져오거나 설정합니다. 이 특성은 내용에 사용되는 언어 표시기의 역할을 합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; attribute. Optional.">
        <see langword="xml:lang" /> 특성입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary vsli:raw="Gets or sets an array of &lt;see langword=&quot;XmlNodes&quot; /&gt; that represents the documentation child nodes.">설명서 자식 노드를 나타내는 <see langword="XmlNodes" />의 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The array that represents the documentation child nodes.">설명서 자식 노드를 나타내는 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) source of the information.">정보의 URI(Uniform Resource Identifier) 소스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A URI reference. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">URI 참조입니다. 기본값은 <see langword="String.Empty" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary vsli:raw="Represents the &lt;see langword=&quot;element&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is the base class for all particle types and is used to describe an element in an XML document.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="element" /> 요소를 나타냅니다. 이 클래스는 모든 파티클 형식의 기본 클래스이며 XML 문서에서 요소를 설명하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary vsli:raw="Gets or sets a &lt;see langword=&quot;Block&quot; /&gt; derivation.">
        <see langword="Block" /> 파생을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The attribute used to block a type derivation. Default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">형식 파생을 차단하는 데 사용되는 특성입니다. 기본값은 <see langword="XmlSchemaDerivationMethod.None" />여야 합니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see langword=&quot;Block&quot; /&gt; property.">
        <see langword="Block" /> 속성의 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Block&quot; /&gt; property. The default is the &lt;see langword=&quot;BlockDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">
        <see langword="Block" /> 속성의 컴파일 이후 값입니다. 기본값은 <see langword="BlockDefault" /> 요소의 <see langword="schema" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary vsli:raw="Gets the collection of constraints on the element.">요소에 대한 제약 조건의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of constraints.">제약 조건 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the element if its content is a simple type or content of the element is &lt;see langword=&quot;textOnly&quot; /&gt;.">요소의 내용이 단순 형식이거나 <see langword="textOnly" />인 경우 해당 요소의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The default value for the element. The default is a null reference. Optional.">요소의 기본값입니다. 기본값은 null 참조입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object representing the type of the element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaElement.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName&quot; /&gt; values of the element.">요소의 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 또는 <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> 값에 따라 요소의 형식을 나타내는 <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> 개체</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary vsli:raw="Gets a common language runtime (CLR) object based on the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; of the element, which holds the post-compilation value of the &lt;see langword=&quot;ElementType&quot; /&gt; property.">
        <see langword="ElementType" /> 속성의 컴파일 이후 값을 보유하는 요소의 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaElement" />에 기반하는 CLR(공용 언어 런타임) 개체를 가져옵니다.</summary>
      <returns vsli:raw="The common language runtime object. The post-compilation value of the &lt;see langword=&quot;ElementType&quot; /&gt; property.">CLR(공용 언어 런타임) 개체입니다. <see langword="ElementType" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;Final&quot; /&gt; property to indicate that no further derivations are allowed.">추가 파생이 허용되지 않음을 나타내는 <see langword="Final" /> 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;Final&quot; /&gt; property. The default is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">
        <see langword="Final" /> 속성 기본값은 <see langword="XmlSchemaDerivationMethod.None" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see langword=&quot;Final&quot; /&gt; property.">
        <see langword="Final" /> 속성의 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Final&quot; /&gt; property. Default value is the &lt;see langword=&quot;FinalDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">
        <see langword="Final" /> 속성의 컴파일 이후 값입니다. 기본값은 <see langword="FinalDefault" /> 요소의 <see langword="schema" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary vsli:raw="Gets or sets the fixed value.">고정 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The fixed value that is predetermined and unchangeable. The default is a null reference. Optional.">미리 결정되어 변경할 수 없는 고정 값입니다. 기본값은 null 참조입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary vsli:raw="Gets or sets the form for the element.">요소에 대한 폼을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The form for the element. The default is the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchema.ElementFormDefault&quot; /&gt; value. Optional.">요소에 대한 폼입니다. 기본값은 <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" /> 값입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary vsli:raw="Gets or sets information to indicate if the element can be used in an instance document.">요소를 인스턴스 문서에서 사용할 수 있는지 여부를 나타내는 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the element cannot appear in the instance document. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">이 값이 <see langword="true" />이면 인스턴스 문서에서 요소를 사용할 수 없습니다. 기본값은 <see langword="false" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary vsli:raw="Gets or sets information that indicates if &lt;see langword=&quot;xsi:nil&quot; /&gt; can occur in the instance data. Indicates if an explicit nil value can be assigned to the element.">
        <see langword="xsi:nil" />을 인스턴스 데이터에서 사용할 수 있는지 여부를 나타내는 정보를 가져오거나 설정합니다. 명시적 nil 값을 요소에 할당할 수 있는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="If nillable is &lt;see langword=&quot;true&quot; /&gt;, this enables an instance of the element to have the &lt;see langword=&quot;nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;. The &lt;see langword=&quot;nil&quot; /&gt; attribute is defined as part of the XML Schema namespace for instances. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">nillable이 <see langword="true" />이면 요소의 인스턴스에서 <see langword="nil" /> 특성을 <see langword="true" />로 설정할 수 있습니다. <see langword="nil" /> 특성은 인스턴스에 대한 XML 스키마 네임스페이스의 일부로 정의됩니다. 기본값은 <see langword="false" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary vsli:raw="Gets or sets the name of the element.">요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the element. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;.">요소의 이름을 나타내며 기본값은 <see langword="String.Empty" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary vsli:raw="Gets the actual qualified name for the given element.">지정된 요소의 실제 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the element. The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">요소의 정규화된 이름입니다. <see langword="QualifiedName" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary vsli:raw="Gets or sets the reference name of an element declared in this schema (or another schema indicated by the specified namespace).">이 스키마 또는 지정된 네임스페이스가 나타내는 다른 스키마에 선언된 요소의 참조 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The reference name of the element.">요소의 참조 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary vsli:raw="Gets or sets the type of the element. This can either be a complex type or a simple type.">요소의 형식을 가져오거나 설정합니다. 이 형식은 복합 형식이거나 단순 형식일 수 있습니다.</summary>
      <returns vsli:raw="The type of the element.">요소의 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type defined in this schema or another schema indicated by the specified namespace.">이 스키마 또는 지정된 네임스페이스가 나타내는 다른 스키마에 정의된 기본 제공 데이터 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the built-in data type.">기본 제공 데이터 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary vsli:raw="Gets or sets the name of an element that is being substituted by this element.">이 요소로 대체할 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The qualified name of an element that is being substituted by this element. Optional.">이 요소로 대체할 요소의 정규화된 이름입니다. 선택 사항입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;enumeration&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class specifies a list of valid values for a simpleType element. Declaration is contained within a &lt;see langword=&quot;restriction&quot; /&gt; declaration.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="enumeration" /> 패싯을 나타냅니다. 이 클래스는 simpleType 요소에 대해 유효한 값 목록을 지정합니다. 선언은 <see langword="restriction" /> 선언 내에 포함됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary vsli:raw="Returns detailed information about the schema exception.">스키마 예외에 대한 자세한 정보를 반환합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Constructs a new &lt;see langword=&quot;XmlSchemaException&quot; /&gt; object with the given &lt;see langword=&quot;SerializationInfo&quot; /&gt; and &lt;see langword=&quot;StreamingContext&quot; /&gt; information that contains all the properties of the &lt;see langword=&quot;XmlSchemaException&quot; /&gt;.">지정된 <see langword="XmlSchemaException" /> 및 <see langword="SerializationInfo" /> 정보를 사용하여 <see langword="StreamingContext" />의 모든 속성을 포함하는 새 <see langword="XmlSchemaException" /> 개체를 만듭니다.</summary>
      <param name="info" vsli:raw="SerializationInfo.">SerializationInfo.</param>
      <param name="context" vsli:raw="StreamingContext.">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message specified.">지정된 예외 메시지를 사용하여 <see cref="T:System.Xml.Schema.XmlSchemaException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">오류 조건에 대한 <see langword="string" /> 설명입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message and original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception specified.">지정된 예외 메시지 및 예외를 발생시킨 원래 <see cref="T:System.Xml.Schema.XmlSchemaException" /> 개체를 사용하여 <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">오류 조건에 대한 <see langword="string" /> 설명입니다.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">이 예외를 발생시킨 원래 T:System.Exception 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message specified, and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, line number, and line position of the XML that cause this exception specified.">지정된 예외 메시지, 예외를 발생시킨 원래 <see cref="T:System.Xml.Schema.XmlSchemaException" /> 개체, 줄 번호 및 XML의 줄 위치를 사용하여 <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">오류 조건에 대한 <see langword="string" /> 설명입니다.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">이 예외를 발생시킨 원래 T:System.Exception 개체입니다.</param>
      <param name="lineNumber" vsli:raw="The line number of the XML that caused this exception.">이 예외를 발생시킨 XML의 줄 번호입니다.</param>
      <param name="linePosition" vsli:raw="The line position of the XML that caused this exception.">이 예외를 발생시킨 XML의 줄 위치입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XmlSchemaException&quot; /&gt; properties into the &lt;see langword=&quot;SerializationInfo&quot; /&gt; class for the given &lt;see langword=&quot;StreamingContext&quot; /&gt;.">모든 <see langword="XmlSchemaException" /> 속성을 지정한 <see langword="SerializationInfo" />의 <see langword="StreamingContext" /> 클래스로 스트리밍합니다.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt;.">
        <see langword="SerializationInfo" />
      </param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; information.">
        <see langword="StreamingContext" /> 정보입니다.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 위치를 가져옵니다.</summary>
      <returns vsli:raw="The line position indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 위치입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary vsli:raw="Gets the description of the error condition of this exception.">이 예외의 오류 조건 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description of the error condition of this exception.">이 예외의 오류 조건 설명입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary vsli:raw="The &lt;see langword=&quot;XmlSchemaObject&quot; /&gt; that produced the &lt;see langword=&quot;XmlSchemaException&quot; /&gt;.">
        <see langword="XmlSchemaObject" />을 생성하는 <see langword="XmlSchemaException" />입니다.</summary>
      <returns vsli:raw="A valid object instance represents a structural validation error in the XML Schema Object Model (SOM).">올바른 개체 인스턴스는 XML SOM(스키마 개체 모델)의 구조적 유효성 검사 오류를 나타냅니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) location of the schema that caused the exception.">예외를 발생시킨 스키마의 URI(Uniform Resource Identifier) 위치를 가져옵니다.</summary>
      <returns vsli:raw="The URI location of the schema that caused the exception.">예외를 발생시킨 스키마의 URI 위치입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary vsli:raw="An abstract class. Provides information about the included schema.">추상 클래스입니다. 포함된 스키마에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaExternal&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary vsli:raw="Gets or sets the string id.">문자열 ID를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">문자열 id입니다. 기본값은 <see langword="String.Empty" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;XmlSchema&quot; /&gt; for the referenced schema.">참조된 스키마에 대한 <see langword="XmlSchema" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; for the referenced schema.">참조된 스키마에 대한 <see langword="XmlSchema" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) location for the schema, which tells the schema processor where the schema physically resides.">스키마 프로세서에 스키마의 실제 위치를 알려 주는 스키마의 URI(Uniform Resource Identifier) 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The URI location for the schema. Optional for imported schemas.">스키마의 URI 위치입니다. 가져온 스키마에 대해 선택적입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes, which do not belong to the schema target namespace.">스키마 대상 네임스페이스에 속하지 않는 정규화된 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Qualified attributes that belong to another target namespace.">다른 대상 네임스페이스에 속한 정규화된 특성입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary vsli:raw="Abstract class for all facets that are used when simple types are derived by restriction.">단순 형식이 제한으로 파생되는 경우 사용되는 모든 패싯에 대한 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary vsli:raw="Gets or sets information that indicates that this facet is fixed.">이 패싯이 고정되었음을 나타내는 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, value is fixed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">
        <see langword="true" />인 경우 값이 고정되고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;value&quot; /&gt; attribute of the facet.">패싯의 <see langword="value" /> 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value attribute.">값 특성입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary vsli:raw="Indicates if attributes or elements need to be qualified with a namespace prefix.">특성이나 요소를 네임스페이스 접두사로 한정해야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary vsli:raw="Element and attribute form is not specified in the schema.">스키마에 요소 및 특성 형식을 지정하지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary vsli:raw="Elements and attributes must be qualified with a namespace prefix.">요소와 특성을 네임스페이스 접두사로 한정해야 합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary vsli:raw="Elements and attributes are not required to be qualified with a namespace prefix.">요소와 특성을 네임스페이스 접두사로 한정할 필요는 없습니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary vsli:raw="Specifies a restriction on the number of digits that can be entered for the fraction value of a simpleType element. The value of fractionDigits must be a positive integer. Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;fractionDigits&quot; /&gt; facet.">simpleType 요소의 소수 값에 입력할 수 있는 자릿수에 대한 제한을 지정합니다. fractionDigits 값은 양의 정수여야 합니다. W3C(World Wide Web 컨소시엄) <see langword="fractionDigits" /> 패싯을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary vsli:raw="Represents the &lt;see langword=&quot;group&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines groups at the &lt;see langword=&quot;schema&quot; /&gt; level that are referenced from the complex types. It groups a set of element declarations so that they can be incorporated as a group into complex type definitions.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="group" /> 요소를 나타냅니다. 이 클래스는 복합 형식에서 참조되는 <see langword="schema" /> 수준으로 그룹을 정의하며 복합 형식 정의에 그룹으로 통합할 수 있도록 요소 선언 집합을 그룹화합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary vsli:raw="Gets or sets the name of the schema group.">스키마 그룹의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the schema group.">스키마 그룹의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the schema group.">스키마 그룹의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object representing the qualified name of the schema group.">스키마 그룹의 정규화된 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary vsli:raw="An abstract class for &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" />에 대한 추상 클래스입니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary vsli:raw="This collection is used to add new elements to the compositor.">이 컬렉션은 compositor에 새 요소를 추가하는 데 사용됩니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">
        <see langword="XmlSchemaObjectCollection" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary vsli:raw="Represents the &lt;see langword=&quot;group&quot; /&gt; element with &lt;see langword=&quot;ref&quot; /&gt; attribute from the XML Schema as specified by the World Wide Web Consortium (W3C). This class is used within complex types that reference a &lt;see langword=&quot;group&quot; /&gt; defined at the &lt;see langword=&quot;schema&quot; /&gt; level.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="ref" /> 특성을 가진 <see langword="group" /> 요소를 나타냅니다. 이 클래스는 <see langword="group" /> 수준에서 정의된 <see langword="schema" />을 참조하는 복합 형식 내에서 사용됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary vsli:raw="Gets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes, which holds the post-compilation value of the &lt;see langword=&quot;Particle&quot; /&gt; property.">
        <see langword="Particle" /> 속성의 컴파일 이후 값을 보유하는 <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스 중 하나를 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Particle&quot; /&gt; property, which is one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스의 속성 중 하나인 <see langword="Particle" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary vsli:raw="Gets or sets the name of a group defined in this schema (or another schema indicated by the specified namespace).">이 스키마 또는 지정된 네임스페이스가 나타내는 다른 스키마에 지정된 그룹의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of a group defined in this schema.">이 스키마에 정의된 그룹의 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary vsli:raw="Class for the identity constraints: &lt;see langword=&quot;key&quot; /&gt;, &lt;see langword=&quot;keyref&quot; /&gt;, and &lt;see langword=&quot;unique&quot; /&gt; elements.">identity 제약 조건인 <see langword="key" />, <see langword="keyref" /> 및 <see langword="unique" /> 요소에 대한 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaIdentityConstraint&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary vsli:raw="Gets the collection of fields that apply as children for the XML Path Language (XPath) expression selector.">XPath(XML Path Language) 식 선택기에 대한 자식으로 적용되는 필드의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of fields.">필드의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary vsli:raw="Gets or sets the name of the identity constraint.">identity 제약 조건의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the identity constraint.">identity 제약 조건의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the identity constraint, which holds the post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">
        <see langword="QualifiedName" /> 속성의 컴파일 이후 값을 보유하는 identity 제약 조건의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">
        <see langword="QualifiedName" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary vsli:raw="Gets or sets the XPath expression &lt;see langword=&quot;selector&quot; /&gt; element.">XPath 식의 <see langword="selector" /> 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The XPath expression &lt;see langword=&quot;selector&quot; /&gt; element.">XPath 식의 <see langword="selector" /> 요소입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary vsli:raw="Represents the &lt;see langword=&quot;import&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is used to import schema components from other schemas.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="import" /> 요소를 나타냅니다. 이 클래스는 다른 스키마에서 스키마 구성 요소를 가져오는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaImport&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaImport" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">
        <see langword="annotation" /> 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The annotation.">주석입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary vsli:raw="Gets or sets the target namespace for the imported schema as a Uniform Resource Identifier (URI) reference.">URI(Uniform Resource Identifier) 참조로 가져온 스키마에 대한 대상 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The target namespace for the imported schema as a URI reference. Optional.">URI 참조로 가져온 스키마에 대한 대상 네임스페이스입니다. 선택 사항입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary vsli:raw="Represents the &lt;see langword=&quot;include&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is used to include declarations and definitions from an external schema. The included declarations and definitions are then available for processing in the containing schema.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="include" /> 요소를 나타냅니다. 이 클래스를 사용하여 외부 스키마의 선언과 정의를 포함할 수 있습니다. 그러면 포함하는 스키마에서 포함된 선언과 정의를 처리할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInclude&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">
        <see langword="annotation" /> 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The annotation.">주석입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from an XML document. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class cannot be inherited.">XML 문서에서 XSD(XML 스키마 정의 언어) 스키마를 유추합니다. <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary vsli:raw="Affects occurrence and type information inferred by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class for elements and attributes in an XML document.">XML 문서 내의 요소와 특성에 대해 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 클래스에서 유추하는 발생 및 형식 정보에 영향을 줍니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary vsli:raw="Indicates that a less restrictive schema declaration should be inferred for a particular element or attribute.">특정 요소나 특성에 대해 덜 제한적인 스키마 선언을 유추하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary vsli:raw="Indicates that a more restrictive schema declaration should be inferred for a particular element or attribute.">특정 요소나 특성에 대해 더 제한적인 스키마 선언을 유추하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">지정된 <see cref="T:System.Xml.XmlReader" /> 개체에 포함된 XML 문서에서 XSD(XML 스키마 정의 언어) 스키마를 유추합니다.</summary>
      <param name="instanceDocument" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object containing the XML document to infer a schema from.">스키마를 유추할 XML 문서가 포함된 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the inferred schemas.">유추된 스키마가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML document is not well-formed.">XML 문서가 제대로 구성되지 않은 경우</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is not positioned on the root node or on an element. An error occurs during the schema inference process.">
        <see cref="T:System.Xml.XmlReader" /> 개체가 루트 노드 또는 요소에 없는 경우. 스키마를 유추하는 동안 오류가 발생합니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified, and refines the inferred schema using an existing schema in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object specified with the same target namespace.">지정된 <see cref="T:System.Xml.XmlReader" /> 개체에 포함된 XML 문서에서 XSD(XML 스키마 정의 언어) 스키마를 유추한 후 이 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체에서 대상 네임스페이스가 같은 기존 스키마를 사용하여 구체화합니다.</summary>
      <param name="instanceDocument" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object containing the XML document to infer a schema from.">스키마를 유추할 XML 문서가 포함된 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing an existing schema used to refine the inferred schema.">유추된 스키마를 구체화하는 데 사용할 기존 스키마가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the inferred schemas.">유추된 스키마가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML document is not well-formed.">XML 문서가 제대로 구성되지 않은 경우</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is not positioned on the root node or on an element. An error occurs during the schema inference process.">
        <see cref="T:System.Xml.XmlReader" /> 개체가 루트 노드 또는 요소에 없는 경우. 스키마를 유추하는 동안 오류가 발생합니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; value that affects schema occurrence declarations inferred from the XML document.">XML 문서에서 유추되는 스키마 발생 선언에 영향을 주는 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 개체</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; value that affects types inferred from the XML document.">XML 문서에서 유추되는 형식에 영향을 주는 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary vsli:raw="Returns information about errors encountered by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class while inferring a schema from an XML document.">XML 문서에서 스키마를 유추하는 동안 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 클래스에서 발생한 오류에 대한 정보를 반환합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects specified that contain all the properties of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />의 모든 속성을 포함하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 및 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체를 지정하여 <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified.">지정된 오류 메시지를 사용하여 <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A description of the error.">오류에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; specified.">지정된 오류 메시지 및 <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />을 발생시킨 원래 <see cref="T:System.Exception" />을 사용하여 <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A description of the error.">오류에 대한 설명입니다.</param>
      <param name="innerException" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object containing the original exception that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">
        <see cref="T:System.Exception" />을 발생시킨 원래 예외가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified, the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; specified, and the line number and line position of the error in the XML document specified.">지정된 오류 메시지, <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />을 발생시킨 원래 <see cref="T:System.Exception" /> 및 XML 문서 내에서 오류가 발생한 줄의 번호와 위치를 사용하여 <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A description of the error.">오류에 대한 설명입니다.</param>
      <param name="innerException" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object containing the original exception that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">
        <see cref="T:System.Exception" />을 발생시킨 원래 예외가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 개체입니다.</param>
      <param name="lineNumber" vsli:raw="The line number in the XML document that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />을 발생시킨 XML 문서 내의 줄 번호입니다.</param>
      <param name="linePosition" vsli:raw="The line position in the XML document that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />을 발생시킨 XML 문서 내의 줄 위치입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; object properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object specified for the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object specified.">
        <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> 개체의 모든 속성을 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체의 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체에 스트리밍합니다.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary vsli:raw="Represents the post-schema-validation infoset of a validated XML node.">유효성이 검사된 XML 노드의 스키마 유효성 검사 이후 정보 집합을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentType&quot; /&gt; object that corresponds to the content type of this validated XML node.">유효성이 검사된 이 XML 노드의 콘텐츠 형식에 해당하는 <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentType&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> 개체</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary vsli:raw="Gets or sets a value indicating if this validated XML node was set as the result of a default being applied during XML Schema Definition Language (XSD) schema validation.">유효성이 검사된 이 XML 노드가 XSD(XML 스키마 정의 언어) 스키마 유효성 검사를 수행하는 동안 기본값이 적용되는 결과로 설정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;bool&quot; /&gt; value.">
        <see langword="bool" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary vsli:raw="Gets or sets a value indicating if the value for this validated XML node is nil.">유효성이 검사된 이 XML 노드의 값이 nil인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;bool&quot; /&gt; value.">
        <see langword="bool" /> 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary vsli:raw="Gets or sets the dynamic schema type for this validated XML node.">유효성이 검사된 이 XML 노드의 동적 스키마 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary vsli:raw="Gets or sets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; object that corresponds to this validated XML node.">유효성이 검사된 이 XML 노드에 해당하는 컴파일된 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 개체</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary vsli:raw="Gets or sets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; object that corresponds to this validated XML node.">유효성이 검사된 이 XML 노드에 해당하는 컴파일된 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 개체</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary vsli:raw="Gets or sets the static XML Schema Definition Language (XSD) schema type of this validated XML node.">유효성이 검사된 이 XML 노드의 정적 XSD(XML 스키마 정의 언어) 스키마 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> 개체</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">유효성이 검사된 이 XML 노드의 <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value.">
        <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary vsli:raw="This class represents the &lt;see langword=&quot;key&quot; /&gt; element from XMLSchema as specified by the World Wide Web Consortium (W3C).">이 클래스는 W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="key" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaKey&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaKey" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary vsli:raw="This class represents the &lt;see langword=&quot;keyref&quot; /&gt; element from XMLSchema as specified by the World Wide Web Consortium (W3C).">이 클래스는 W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="keyref" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaKeyref&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaKeyref" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary vsli:raw="Gets or sets the name of the key that this constraint refers to in another simple or complex type.">이 제약 조건이 다른 단순 형식이나 복합 형식에서 참조하는 키의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The QName of the key that this constraint refers to.">이 제약 조건이 참조하는 키의 QName입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;length&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the length of a &lt;see langword=&quot;simpleType&quot; /&gt; element on the data type.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="length" /> 패싯을 나타냅니다. 이 클래스를 사용하여 데이터 형식에 <see langword="simpleType" /> 요소의 길이에 대한 제한을 지정할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxExclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be less than the value of the &lt;see langword=&quot;maxExclusive&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="maxExclusive" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소의 최대값에 대한 제한을 지정할 수 있습니다. 요소 값은 <see langword="maxExclusive" /> 요소의 값보다 작아야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxInclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be less than or equal to the value of the &lt;see langword=&quot;maxInclusive&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="maxInclusive" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소의 최대값에 대한 제한을 지정할 수 있습니다. 요소 값은 <see langword="maxInclusive" /> 요소 값보다 작거나 같아야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxLength&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum length of the data value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The length must be less than the value of the &lt;see langword=&quot;maxLength&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="maxLength" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소의 최대 데이터 값 길이에 대한 제한을 지정할 수 있습니다. 길이는 <see langword="maxLength" /> 요소 값보다 작아야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minExclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be greater than the value of the &lt;see langword=&quot;minExclusive&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="minExclusive" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소의 최소값에 대한 제한을 지정할 수 있습니다. 요소 값은 <see langword="minExclusive" /> 요소의 값보다 커야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minInclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum value of a simpleType element. The element value must be greater than or equal to the value of the &lt;see langword=&quot;minInclusive&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="minInclusive" /> 요소를 나타냅니다. 이 클래스를 사용하여 simpleType 요소의 최소값에 대한 제한을 지정할 수 있습니다. 요소 값은 <see langword="minInclusive" /> 요소 값보다 크거나 같아야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minLength&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum length of the data value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The length must be greater than the value of the &lt;see langword=&quot;minLength&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="minLength" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소의 최소 데이터 값 길이에 대한 제한을 지정할 수 있습니다. 길이는 <see langword="minLength" /> 요소 값보다 커야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary vsli:raw="Represents the &lt;see langword=&quot;notation&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). An XML Schema &lt;see langword=&quot;notation&quot; /&gt; declaration is a reconstruction of &lt;see langword=&quot;XML 1.0 NOTATION&quot; /&gt; declarations. The purpose of notations is to describe the format of non-XML data within an XML document.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="notation" /> 요소를 나타냅니다. XML 스키마 <see langword="notation" /> 선언은 <see langword="XML 1.0 NOTATION" /> 선언을 재구성한 것입니다. 주석의 목적은 XML 문서 내의 XML이 아닌 데이터의 서식을 설명하는 것입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaNotation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary vsli:raw="Gets or sets the name of the notation.">주석의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the notation.">주석의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;public&quot; /&gt; identifier.">
        <see langword="public" /> 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;public&quot; /&gt; identifier. The value must be a valid Uniform Resource Identifier (URI).">
        <see langword="public" /> 식별자입니다. 값은 올바른 URI(Uniform Resource Identifier)이어야 합니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;system&quot; /&gt; identifier.">
        <see langword="system" /> 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;system&quot; /&gt; identifier. The value must be a valid URI.">
        <see langword="system" /> 식별자입니다. 값은 올바른 URI이어야 합니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary vsli:raw="Abstract class for defining &lt;see langword=&quot;numeric&quot; /&gt; facets. This class is the base class for numeric facet classes such as &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;.">
        <see langword="numeric" /> 패싯을 정의하는 추상 클래스입니다. 이 클래스는 <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />과 같은 숫자 패싯 클래스의 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNumericFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary vsli:raw="Represents the root class for the Xml schema object model hierarchy and serves as a base class for classes such as the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class.">XML 스키마 개체 모델 계층 구조의 루트 클래스를 나타내며 <see cref="T:System.Xml.Schema.XmlSchema" /> 클래스와 같은 클래스의 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary vsli:raw="Gets or sets the line number in the file to which the &lt;see langword=&quot;schema&quot; /&gt; element refers.">
        <see langword="schema" /> 요소가 참조하는 파일에서 줄 번호를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The line number.">줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary vsli:raw="Gets or sets the line position in the file to which the &lt;see langword=&quot;schema&quot; /&gt; element refers.">
        <see langword="schema" /> 요소가 참조하는 파일에서 줄 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The line position.">줄 위치입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; to use with this schema object.">이 스키마 개체에 사용할 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; property for the schema object.">해당 스키마 개체의 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 속성입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary vsli:raw="Gets or sets the parent of this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">이 <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 부모를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 부모 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary vsli:raw="Gets or sets the source location for the file that loaded the schema.">스키마를 로드한 파일의 소스 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The source location (URI) for the file.">파일의 소스 위치(URI)입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;s.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 컬렉션입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt; class.">
        <see langword="XmlSchemaObjectCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt; class that takes an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 사용하는 <see langword="XmlSchemaObjectCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parent" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />에 <see langword="XmlSchemaObjectCollection" />을 추가합니다.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />
      </param>
      <returns vsli:raw="The index at which the item has been added.">항목이 추가된 인덱스입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see langword=&quot;Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
 <paramref name="index" />가 <see langword="Count" />보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter specified is not of type &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaExternal&quot; /&gt; or its derived types &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaImport&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInclude&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaRedefine&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 매개 변수는 <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> 형식 또는 파생된 <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaRedefine" /> 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Indicates if the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; is in the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaObject" />가 <see langword="XmlSchemaObjectCollection" />에 있는지 여부를 나타냅니다.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified qualified name is in the collection; otherwise, returns &lt;see langword=&quot;false&quot; /&gt;. If null is supplied, &lt;see langword=&quot;false&quot; /&gt; is returned because there is no qualified name with a null name.">지정된 정규화 이름이 컬렉션에 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다. null이 제공되면 null 이름을 갖는 정규화된 이름이 없기 때문에 <see langword="false" />가 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;s from the collection into the given array, starting at the given index.">지정된 인덱스에서 시작하여, 지정된 배열에 컬렉션의 <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 모두 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;. The array must have zero-based indexing.">
        <see langword="XmlSchemaObjectCollection" />에서 복사한 요소의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="array" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multi-dimensional.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; is greater than the available space from index to the end of the destination array.">
        <paramref name="array" />는 다차원 배열입니다.  
또는 
 <paramref name="index" />가 <paramref name="array" />의 길이보다 크거나 같은 경우  
또는 
소스 <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 요소 수가 인덱스에서 대상 배열 끝까지의 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; cannot be cast automatically to the type of the destination array.">소스 <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 형식을 대상 배열의 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for iterating through the &lt;see langword=&quot;XmlSchemaObjects&quot; /&gt; contained in the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">
        <see langword="XmlSchemaObjects" />에 포함된 <see langword="XmlSchemaObjectCollection" />에서 반복 실행할 열거형을 반환합니다.</summary>
      <returns vsli:raw="The iterator returns &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectEnumerator&quot; /&gt;.">반복기는 <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Gets the collection index corresponding to the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">지정한 <see cref="T:System.Xml.Schema.XmlSchemaObject" />에 해당하는 컬렉션 인덱스를 가져옵니다.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; whose index you want to return.">인덱스가 반환되도록 하려는 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</param>
      <returns vsli:raw="The index corresponding to the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">지정한 <see cref="T:System.Xml.Schema.XmlSchemaObject" />에 해당하는 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">
        <see langword="XmlSchemaObjectCollection" />에 <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which an item should be inserted.">0부터 시작하는 인덱스이며 항목을 삽입해야 합니다.</param>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to insert.">삽입할 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see langword=&quot;Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
 <paramref name="index" />가 <see langword="Count" />보다 큰 경우</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary vsli:raw="&lt;see langword=&quot;OnClear&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Clear&quot; /&gt; behavior. For more information, see OnClear method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnClear" />는 표준 <see langword="Clear" /> 동작보다 먼저 호출됩니다. 자세한 내용은 <see cref="T:System.Collections.CollectionBase" />에 대한 OnClear 메서드를 참조하십시오.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnInsert&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Insert&quot; /&gt; behavior. For more information, see &lt;see langword=&quot;OnInsert&quot; /&gt; method &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnInsert" />는 표준 <see langword="Insert" /> 동작보다 먼저 호출됩니다. 자세한 내용은 <see langword="OnInsert" /> 메서드 <see cref="T:System.Collections.CollectionBase" />를 참조하십시오.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 인덱스입니다.</param>
      <param name="item" vsli:raw="The item.">항목입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnRemove&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Remove&quot; /&gt; behavior. For more information, see the &lt;see langword=&quot;OnRemove&quot; /&gt; method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnRemove" />는 표준 <see langword="Remove" /> 동작보다 먼저 호출됩니다. 자세한 내용은 <see cref="T:System.Collections.CollectionBase" />에 대한 <see langword="OnRemove" /> 메서드를 참조하십시오.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 인덱스입니다.</param>
      <param name="item" vsli:raw="The item.">항목입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnSet&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Set&quot; /&gt; behavior. For more information, see the OnSet method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnSet" />는 표준 <see langword="Set" /> 동작보다 먼저 호출됩니다. 자세한 내용은 <see cref="T:System.Collections.CollectionBase" />에 대한 OnSet 메서드를 참조하십시오.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />의 인덱스입니다.</param>
      <param name="oldValue" vsli:raw="The old value.">이전 값입니다.</param>
      <param name="newValue" vsli:raw="The new value.">새 값입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; from the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">
        <see langword="XmlSchemaObjectCollection" />에서 <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 제거합니다.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to remove.">제거할 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary vsli:raw="Represents the enumerator for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />에 대한 열거자를 나타냅니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; in the collection.">컬렉션의 현재 <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">현재 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary vsli:raw="Moves to the next item in the collection.">컬렉션의 다음 항목으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; at the end of the collection.">컬렉션의 끝에서는 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary vsli:raw="Resets the enumerator to the start of the collection.">열거자를 컬렉션의 시작으로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />를 참조하십시오.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">현재 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />를 참조하십시오.</summary>
      <returns vsli:raw="The next &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">다음 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />를 참조하십시오.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary vsli:raw="Provides the collections for contained elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class (for example, Attributes, AttributeGroups, Elements, and so on).">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 클래스에 포함된 Attributes, AttributeGroups, Elements 등의 요소에 대한 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Determines if the qualified name specified exists in the collection.">지정된 정규화된 이름이 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the qualified name specified exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 정규화된 이름이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />에 들어 있는 항목 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />에 들어 있는 항목 수입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />를 통해 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that can iterate through &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionaryEnumerator" />을 반복할 수 있는 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns the element in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; specified by qualified name.">정규화된 이름으로 지정된 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />의 요소를 반환합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the element to return.">반환할 요소의 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the element in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; specified by qualified name.">정규화된 이름으로 지정된 <see cref="T:System.Xml.Schema.XmlSchemaObject" />에 있는 요소의 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary vsli:raw="Returns a collection of all the named elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />에 있는 모든 명명된 요소의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A collection of all the named elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />에 있는 모든 명명된 요소의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary vsli:raw="Returns a collection of all the values for all the elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />에 있는 모든 요소에 대한 모든 값의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A collection of all the values for all the elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />에 있는 모든 요소에 대한 모든 값의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary vsli:raw="Abstract class for that is the base class for all particle types (e.g. &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt;).">해당 추상 클래스는 모든 파티클 형식의 기본 클래스입니다(예: <see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaParticle&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary vsli:raw="Gets or sets the maximum number of times the particle can occur.">파티클이 발생할 수 있는 최대 횟수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum number of times the particle can occur. The default is 1.">파티클이 발생할 수 있는 최대 횟수입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary vsli:raw="Gets or sets the number as a string value. Maximum number of times the particle can occur.">숫자를 문자열 값으로 가져오거나 설정합니다. 파티클이 발생할 수 있는 최대 횟수입니다.</summary>
      <returns vsli:raw="The number as a string value. &lt;see langword=&quot;String.Empty&quot; /&gt; indicates that &lt;see langword=&quot;MaxOccurs&quot; /&gt; is equal to the default value. The default is a null reference.">문자열 값인 숫자입니다. <see langword="String.Empty" />는 <see langword="MaxOccurs" />가 기본값과 같음을 나타냅니다. 기본값은 null 참조입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary vsli:raw="Gets or sets the minimum number of times the particle can occur.">파티클이 발생할 수 있는 최소 횟수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The minimum number of times the particle can occur. The default is 1.">파티클이 발생할 수 있는 최소 횟수입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary vsli:raw="Gets or sets the number as a string value. The minimum number of times the particle can occur.">숫자를 문자열 값으로 가져오거나 설정합니다. 파티클이 발생할 수 있는 최소 횟수입니다.</summary>
      <returns vsli:raw="The number as a string value. &lt;see langword=&quot;String.Empty&quot; /&gt; indicates that &lt;see langword=&quot;MinOccurs&quot; /&gt; is equal to the default value. The default is a null reference.">문자열 값인 숫자입니다. <see langword="String.Empty" />는 <see langword="MinOccurs" />가 기본값과 같음을 나타냅니다. 기본값은 null 참조입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;pattern&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the value entered for a &lt;see langword=&quot;simpleType&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="pattern" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소에 입력한 값에 대한 제한을 지정할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary vsli:raw="Represents the &lt;see langword=&quot;redefine&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to allow simple and complex types, groups and attribute groups from external schema files to be redefined in the current schema. This class can also be used to provide versioning for the schema elements.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="redefine" /> 요소를 나타냅니다. 이 클래스를 사용하여 현재 스키마에서 단순 형식, 복합 형식, 그룹 및 외부 스키마 파일의 특성 그룹을 재정의할 수 있습니다. 스키마 요소에 대한 버전 관리를 제공하는 데도 이 클래스를 사용할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaRedefine&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaRedefine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; , for all attributes in the schema, which holds the post-compilation value of the &lt;see langword=&quot;AttributeGroups&quot; /&gt; property.">스키마에 있는 모든 특성에 대해 <see langword="AttributeGroups" /> 속성의 컴파일 이후 값을 포함하는 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all attributes in the schema. The post-compilation value of the &lt;see langword=&quot;AttributeGroups&quot; /&gt; property.">스키마에 있는 모든 특성에 대한 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />입니다. <see langword="AttributeGroups" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;, for all groups in the schema, which holds the post-compilation value of the &lt;see langword=&quot;Groups&quot; /&gt; property.">스키마에 있는 모든 그룹에 대해 <see langword="Groups" /> 속성의 컴파일 이후 값을 보유하는 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all groups in the schema. The post-compilation value of the &lt;see langword=&quot;Groups&quot; /&gt; property.">스키마에 있는 모든 그룹에 대한 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />입니다. <see langword="Groups" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary vsli:raw="Gets the collection of the following classes: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaGroup" /> 클래스의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The elements contained within the redefine element.">재정의 요소 내에 포함된 요소입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;, for all simple and complex types in the schema, which holds the post-compilation value of the &lt;see langword=&quot;SchemaTypes&quot; /&gt; property.">스키마에 있는 모든 단순 형식과 복합 형식에 대해 <see langword="SchemaTypes" /> 속성의 컴파일 이후 값을 보유하는 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all schema types in the schema. The post-compilation value of the &lt;see langword=&quot;SchemaTypes&quot; /&gt; property.">스키마에 있는 모든 스키마 형식에 대한 <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />입니다. <see langword="SchemaTypes" /> 속성의 컴파일 이후 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary vsli:raw="Represents the &lt;see langword=&quot;sequence&quot; /&gt; element (compositor) from the XML Schema as specified by the World Wide Web Consortium (W3C). The &lt;see langword=&quot;sequence&quot; /&gt; requires the elements in the group to appear in the specified sequence within the containing element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="sequence" /> 요소(작성자)를 나타냅니다. <see langword="sequence" />에서는 포함하는 요소 내에 지정된 시퀀스로 그룹의 요소가 나타나야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary vsli:raw="The elements contained within the compositor. Collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt;.">compositor 내에 포함된 요소입니다. <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaAny" />의 컬렉션입니다.</summary>
      <returns vsli:raw="The elements contained within the compositor.">compositor 내에 포함된 요소입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary vsli:raw="Contains a cache of XML Schema definition language (XSD) schemas.">XSD(XML 스키마 정의 언어) 스키마의 캐시를 포함합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object to use.">사용할 <see cref="T:System.Xml.XmlNameTable" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.XmlNameTable" /> 개체가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary vsli:raw="Adds the XML Schema definition language (XSD) schema at the URL specified to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 URL에 있는 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property, or &lt;see langword=&quot;null&quot; /&gt; to use the &lt;paramref name=&quot;targetNamespace&quot; /&gt; specified in the schema.">스키마 <paramref name="targetNamespace" /> 속성이거나, 스키마에 지정된 <paramref name="targetNamespace" />를 사용하면 <see langword="null" />입니다.</param>
      <param name="schemaUri" vsli:raw="The URL that specifies the schema to load.">로드할 스키마를 지정하는 URL입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다. 스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다. 그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">스키마가 유효하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The URL passed as a parameter is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">매개 변수로 전달된 URL이 <see langword="null" />이거나 <see cref="F:System.String.Empty" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Adds the XML Schema definition language (XSD) schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />에 포함된 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property, or &lt;see langword=&quot;null&quot; /&gt; to use the &lt;paramref name=&quot;targetNamespace&quot; /&gt; specified in the schema.">스키마 <paramref name="targetNamespace" /> 속성이거나, 스키마에 지정된 <paramref name="targetNamespace" />를 사용하면 <see langword="null" />입니다.</param>
      <param name="schemaDocument" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 개체</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다. 스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다. 그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">스키마가 유효하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.XmlReader" /> 개체가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds the given &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchema" />를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to add to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다. 스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다. 그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">스키마가 유효하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Adds all the XML Schema definition language (XSD) schemas in the given &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가합니다.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="A schema in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; is not valid.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 스키마가 유효하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />의 <see cref="T:System.Xml.Schema.XmlSchemaSet" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;. The default is an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; instance with the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />에 대한 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다. 기본값은 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary vsli:raw="Compiles the XML Schema definition language (XSD) schemas added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; into one logical schema.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가된 XSD(XML 스키마 정의 언어) 스키마를 하나의 논리 스키마로 컴파일합니다.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An error occurred when validating and compiling the schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 스키마에 대해 유효성을 검사하고 컴파일하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary vsli:raw="Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 대상 네임스페이스 URI가 있는 XSD(XML 스키마 정의 언어) 스키마가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있는지 여부를 나타냅니다.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property.">스키마 <paramref name="targetNamespace" /> 속성입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a schema with the specified target namespace URI is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 대상 네임스페이스 URI가 있는 스키마가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Indicates whether the specified XML Schema definition language (XSD) &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 XSD(XML 스키마 정의 언어) <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있는지 여부를 나타냅니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchemaSet" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to the given array, starting at the given index.">지정된 인덱스부터 시작하여 <see cref="T:System.Xml.Schema.XmlSchema" />의 모든 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체를 지정된 배열에 복사합니다.</summary>
      <param name="schemas" vsli:raw="The array to copy the objects to.">개체를 복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The index in the array where copying will begin.">복사를 시작할 배열 내의 인덱스입니다.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary vsli:raw="Gets the number of logical XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 논리 XSD(XML 스키마 정의 언어) 스키마의 개수를 가져옵니다.</summary>
      <returns vsli:raw="The number of logical schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 논리 스키마의 개수입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary vsli:raw="Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 특성을 모두 가져옵니다.</summary>
      <returns vsli:raw="The collection of global attributes.">전역 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary vsli:raw="Gets all the global elements in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 요소를 모두 가져옵니다.</summary>
      <returns vsli:raw="The collection of global elements.">전역 요소의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary vsli:raw="Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마에 있는 전역 단순 및 복합 형식을 모두 가져옵니다.</summary>
      <returns vsli:raw="The collection of global simple and complex types.">전역 단순 및 복합 형식의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; have been compiled.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 XSD(XML 스키마 정의 언어) 스키마가 컴파일되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; have been compiled since the last time a schema was added or removed from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 스키마를 마지막으로 추가하거나 제거한 후 <see cref="T:System.Xml.Schema.XmlSchemaSet" />의 스키마가 컴파일되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; when loading new XML Schema definition language (XSD) schemas.">새 XSD(XML 스키마 정의 언어) 스키마를 로드할 때 <see cref="T:System.Xml.XmlNameTable" />에서 사용하는 기본 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 가져옵니다.</summary>
      <returns vsli:raw="A table of atomized string objects.">원자화된 문자열 개체의 테이블입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the specified XML Schema definition language (XSD) schema from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 XSD(XML 스키마 정의 언어) 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 제거합니다.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to remove from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" />에서 제거할 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object removed from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the schema was not found in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" />에서 제거된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체이거나, 해당 스키마가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not a valid schema.">올바른 스키마가 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">지정된 XSD(XML 스키마 정의 언어) 스키마와 해당 스키마에 가져온 모든 스키마를 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 제거합니다.</summary>
      <param name="schemaToRemove" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to remove from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" />에서 제거할 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object and all its imports were successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체와 해당 개체에 가져온 모든 항목이 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Reprocesses an XML Schema definition language (XSD) schema that already exists in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 이미 있는 XSD(XML 스키마 정의 언어) 스키마를 다시 처리합니다.</summary>
      <param name="schema" vsli:raw="The schema to reprocess.">다시 처리할 스키마입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is a valid schema. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">스키마가 유효한 경우에는 <see cref="T:System.Xml.Schema.XmlSchema" /> 입니다. 스키마가 유효하지 않고 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정된 경우에는 <see langword="null" />이 반환되고 적절한 유효성 검사 이벤트가 발생합니다. 그렇지 않으면 <see cref="T:System.Xml.Schema.XmlSchemaException" />이 throw됩니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">스키마가 유효하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter does not already exist in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">매개 변수로 전달된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 아직 없는 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary vsli:raw="Returns a collection of all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 모든 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing all the schemas that have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;. If no schemas have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, an empty &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object is returned.">
        <see cref="T:System.Collections.ICollection" />에 추가된 모든 스키마를 포함하는 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다. <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가된 스키마가 없으면 빈 <see cref="T:System.Collections.ICollection" /> 개체가 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary vsli:raw="Returns a collection of all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that belong to the given namespace.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 지정된 네임스페이스에 속하는 모든 XSD(XML 스키마 정의 언어) 스키마의 컬렉션을 반환합니다.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property.">스키마 <paramref name="targetNamespace" /> 속성입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing all the schemas that have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that belong to the given namespace. If no schemas have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, an empty &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object is returned.">
        <see cref="T:System.Collections.ICollection" />에 추가되고 지정된 네임스페이스에 속하는 모든 스키마가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체를 반환합니다. <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 추가된 스키마가 없으면 빈 <see cref="T:System.Collections.ICollection" /> 개체가 반환됩니다.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary vsli:raw="Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.">XSD(XML 스키마 정의 언어) 스키마 유효성 검사 오류에 대한 정보를 받을 이벤트 처리기를 지정합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces or locations referenced in include and import elements of a schema.">스키마의 include 및 import 요소에서 참조하는 네임스페이스 또는 위치를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces or locations referenced in include and import elements of a schema.">스키마의 include 및 import 요소에서 참조하는 네임스페이스 또는 위치를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary vsli:raw="Represents the &lt;see langword=&quot;simpleContent&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for simple and complex types with simple content model.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="simpleContent" /> 요소를 나타냅니다. 이 클래스는 단순 콘텐츠 모델의 단순 및 복합 형식용입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContent&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary vsli:raw="Gets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentRestriction&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentExtension&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" /> 중 하나를 가져옵니다.</summary>
      <returns vsli:raw="The content contained within the &lt;see langword=&quot;XmlSchemaSimpleContentRestriction&quot; /&gt; or &lt;see langword=&quot;XmlSchemaSimpleContentExtension&quot; /&gt; class.">
        <see langword="XmlSchemaSimpleContentRestriction" /> 또는 <see langword="XmlSchemaSimpleContentExtension" /> 클래스에 포함된 콘텐츠입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary vsli:raw="Represents the &lt;see langword=&quot;extension&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to derive simple types by extension. Such derivations are used to extend the simple type content of the element by adding attributes.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 단순 내용에 대한 <see langword="extension" /> 요소를 나타냅니다. 이 클래스를 사용하여 확장으로 단순 형식을 파생시킬 수 있습니다. 이러한 파생은 특성을 추가하여 요소의 단순 형식 내용을 확장하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentExtension&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;XmlSchemaAnyAttribute&quot; /&gt; to be used for the attribute value.">특성 값에 대해 사용할 <see langword="XmlSchemaAnyAttribute" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaAnyAttribute&quot; /&gt;. Optional.">
        <see langword="XmlSchemaAnyAttribute" /> 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of attributes for the &lt;see langword=&quot;simpleType&quot; /&gt; element.">
        <see langword="simpleType" /> 요소에 대한 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type or simple type from which this type is extended.">기본 제공 테이터 형식 또는 이 형식이 확장되는 단순 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The base type name.">기본 형식 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to derive simple types by restriction. Such derivations can be used to restrict the range of values for the element to a subset of the values specified in the inherited simple type.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 단순 내용에 대한 <see langword="restriction" /> 요소를 나타냅니다. 이 클래스를 사용하여 제한으로 단순 형식을 파생시킬 수 있습니다. 이러한 파생을 통해 요소에 대한 값 범위를 상속된 단순 형식에 지정한 값의 하위 집합으로 제한할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentRestriction&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; to be used for the attribute value.">특성 값에 대해 사용할 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; for the attribute value. Optional.">특성 값에 대한 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />입니다. 선택 사항입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; collection of attributes for the simple type.">단순 형식에 대한 특성의 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of attributes for a simple type.">단순 형식에 대한 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary vsli:raw="Gets or sets the simple type base value.">단순 형식 기준 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The simple type base value.">단순 형식 기준 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the built-in data type or simple type from which this type is derived.">기본 제공 테이터 형식 또는 이 형식이 파생되는 단순 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the base type.">기본 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary vsli:raw="Gets or sets an Xml Schema facet.">XML 스키마 패싯을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the following facet classes:  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt;.">다음 패싯 클래스 중 하나입니다. 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary vsli:raw="Represents the &lt;see langword=&quot;simpleType&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines a simple type. Simple types can specify information and constraints for the value of attributes or elements with text-only content.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 단순 내용에 대한 <see langword="simpleType" /> 요소를 나타냅니다. 이 클래스는 단순 형식을 정의합니다. 단순 형식은 내용에 텍스트만 있는 요소 또는 특성의 값에 대한 정보와 제약 조건을 지정할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary vsli:raw="Gets or sets one of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeUnion&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeList&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" /> 중 하나를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of &lt;see langword=&quot;XmlSchemaSimpleTypeUnion&quot; /&gt;, &lt;see langword=&quot;XmlSchemaSimpleTypeList&quot; /&gt;, or &lt;see langword=&quot;XmlSchemaSimpleTypeRestriction&quot; /&gt;.">
        <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" /> 또는 <see langword="XmlSchemaSimpleTypeRestriction" /> 중 하나입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary vsli:raw="Abstract class for simple type content classes.">단순 형식 내용 클래스에 대한 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeContent&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary vsli:raw="Represents the &lt;see langword=&quot;list&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to define a &lt;see langword=&quot;simpleType&quot; /&gt; element as a list of values of a specified data type.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="list" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소를 지정된 데이터 형식의 값 목록으로 정의할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeList&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName&quot; /&gt; values of the simple type.">단순 형식의 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 및 <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> 값에 따라 <see langword="simpleType" /> 요소의 형식을 나타내는 <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element.">
        <see langword="simpleType" /> 요소의 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;simpleType&quot; /&gt; element that is derived from the type specified by the base value.">기준 값에 의해 지정된 형식에서 파생되는 <see langword="simpleType" /> 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The item type for the simple type element.">단순 형식 요소에 대한 항목 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type or &lt;see langword=&quot;simpleType&quot; /&gt; element defined in this schema (or another schema indicated by the specified namespace).">이 스키마 또는 지정된 네임스페이스가 나타내는 다른 스키마에 정의된 기본 제공 데이터 형식 또는 <see langword="simpleType" /> 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type name of the simple type list.">단순 형식 목록의 형식 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element for simple types from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used restricting &lt;see langword=&quot;simpleType&quot; /&gt; element.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 단순 형식에 대한 <see langword="restriction" /> 요소를 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소를 제한할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary vsli:raw="Gets or sets information on the base type.">네이티브 형식에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The base type for the &lt;see langword=&quot;simpleType&quot; /&gt; element.">
        <see langword="simpleType" /> 요소에 대한 네이티브 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the qualified base type.">정규화된 기본 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The qualified name of the simple type restriction base type.">단순 형식 제한 기본 형식의 정규화된 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary vsli:raw="Gets or sets an Xml Schema facet.">XML 스키마 패싯을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the following facet classes:  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt;.">다음 패싯 클래스 중 하나입니다. 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary vsli:raw="Represents the &lt;see langword=&quot;union&quot; /&gt; element for simple types from XML Schema as specified by the World Wide Web Consortium (W3C). A &lt;see langword=&quot;union&quot; /&gt; datatype can be used to specify the content of a &lt;see langword=&quot;simpleType&quot; /&gt;. The value of the &lt;see langword=&quot;simpleType&quot; /&gt; element must be any one of a set of alternative datatypes specified in the union. Union types are always derived types and must comprise at least two alternative datatypes.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 단순 형식에 대한 <see langword="union" /> 요소를 나타냅니다. <see langword="union" /> 데이터 형식을 사용하여 <see langword="simpleType" />의 내용을 지정할 수 있습니다. <see langword="simpleType" /> 요소의 값은 공용 구조체에 지정된 다른 데이터 형식의 집합 중 하나여야 합니다. 공용 구조체 형식은 항상 파생 형식이며 다른 데이터 형식을 두 개 이상 구성해야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeUnion&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; objects representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes&quot; /&gt; values of the simple type.">단순 형식의 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 및 <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> 값에 따라 <see langword="simpleType" /> 요소의 형식을 나타내는 <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> 개체의 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; objects representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element.">
        <see langword="simpleType" /> 요소의 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary vsli:raw="Gets the collection of base types.">기본 형식의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of simple type base values.">단순 형식 기준 값의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary vsli:raw="Gets or sets the array of qualified member names of built-in data types or &lt;see langword=&quot;simpleType&quot; /&gt; elements defined in this schema (or another schema indicated by the specified namespace).">이 스키마 또는 지정된 네임스페이스가 나타내는 다른 스키마에 정의된 기본 제공 데이터 형식 또는 <see langword="simpleType" /> 요소의 한정된 멤버 이름의 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array that consists of a list of members of built-in data types or simple types.">기본 제공 데이터 형식 또는 단순 형식의 멤버 목록으로 구성된 배열입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;totalDigits&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the number of digits that can be entered for the value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. That value of &lt;see langword=&quot;totalDigits&quot; /&gt; must be a positive integer.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="totalDigits" /> 패싯을 나타냅니다. 이 클래스를 사용하여 <see langword="simpleType" /> 요소의 값으로 입력할 수 있는 자릿수에 대한 제한을 지정할 수 있습니다. <see langword="totalDigits" /> 값은 양의 정수여야 합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary vsli:raw="The base class for all simple types and complex types.">모든 단순 형식 및 복합 형식에 대한 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary vsli:raw="Gets the post-compilation object type or the built-in XML Schema Definition Language (XSD) data type, simpleType element, or complexType element. This is a post-schema-compilation infoset property.">컴파일 이후 개체 형식 또는 기본 제공 XSD(XML 스키마 정의 언어) 데이터 형식, simpleType 요소 또는 complexType 요소를 가져옵니다. 이 속성은 스키마 컴파일 이후 정보 집합 속성입니다.</summary>
      <returns vsli:raw="The built-in XSD data type, simpleType element, or complexType element.">기본 제공 XSD 데이터 형식, simpleType 요소 또는 complexType 요소입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary vsli:raw="Gets the post-compilation value for the base type of this schema type.">이 스키마 형식의 기본 형식에 대한 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object representing the base type of this schema type.">이 스키마 형식의 기본 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary vsli:raw="Gets the post-compilation value for the data type of the complex type.">복합 형식의 데이터 형식에 대한 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; post-schema-compilation value.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 스키마 컴파일 이후 값입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary vsli:raw="Gets the post-compilation information on how this element was derived from its base type.">이 요소가 해당 기본 형식에서 파생된 방법에 대한 컴파일 이후 정보를 가져옵니다.</summary>
      <returns vsli:raw="One of the valid &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values.">유효한 <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary vsli:raw="Gets or sets the final attribute of the type derivation that indicates if further derivations are allowed.">추가 파생이 허용되는지 여부를 나타내는 형식 파생의 최종 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the valid &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaDerivationMethod.None&quot; /&gt;.">유효한 <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaType.Final&quot; /&gt; property.">
        <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> 속성의 컴파일 이후 값을 가져옵니다.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaType.Final&quot; /&gt; property. The default is the &lt;see langword=&quot;finalDefault&quot; /&gt; attribute value of the &lt;see langword=&quot;schema&quot; /&gt; element.">
        <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> 속성의 컴파일 이후 값입니다. 기본값은 <see langword="finalDefault" /> 요소의 <see langword="schema" /> 특성 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type of the complex type specified.">지정된 복합 형식의 기본 제공 복합 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />을 반환합니다.</summary>
      <param name="typeCode" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values representing the complex type.">복합 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type.">기본 제공 복합 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type of the complex type specified by qualified name.">정규화된 이름으로 지정된 복합 형식의 기본 제공 복합 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />을 반환합니다.</summary>
      <param name="qualifiedName" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the complex type.">복합 형식의 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type.">기본 제공 복합 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type of the specified simple type.">지정된 단순 형식의 기본 제공 단순 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />을 반환합니다.</summary>
      <param name="typeCode" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values representing the simple type.">단순 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 값 중 하나입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type.">기본 제공 단순 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type of the simple type that is specified by the qualified name.">정규화된 이름으로 지정된 단순 형식의 기본 제공 단순 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />을 반환합니다.</summary>
      <param name="qualifiedName" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the simple type.">단순 형식의 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type.">기본 제공 단순 형식을 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary vsli:raw="Returns a value indicating if the derived schema type specified is derived from the base schema type specified.">파생된 스키마 형식이 기본 스키마 형식에서 파생되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="derivedType" vsli:raw="The derived &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; to test.">테스트할 파생된 <see cref="T:System.Xml.Schema.XmlSchemaType" />입니다.</param>
      <param name="baseType" vsli:raw="The base &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; to test the derived &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; against.">파생된 <see cref="T:System.Xml.Schema.XmlSchemaType" />을 테스트하는 기준으로 사용할 기본 <see cref="T:System.Xml.Schema.XmlSchemaType" />입니다.</param>
      <param name="except" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values representing a type derivation method to exclude from testing.">테스트에서 제외할 형식 파생 메서드를 나타내는 <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 값 중 하나입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the derived type is derived from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">파생 형식이 기본 형식에서 파생되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary vsli:raw="Gets or sets a value indicating if this type has a mixed content model. This property is only valid in a complex type.">이 형식에 혼합 콘텐츠 모델을 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이 속성은 복합 형식에만 유효합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type has a mixed content model; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">형식에 혼합 콘텐츠 모델을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary vsli:raw="Gets or sets the name of the type.">형식의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the type.">형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary vsli:raw="Gets the qualified name for the type built from the &lt;see langword=&quot;Name&quot; /&gt; attribute of this type. This is a post-schema-compilation property.">이 형식의 <see langword="Name" /> 특성으로부터 만들어진 형식에 대한 정규화된 이름을 가져옵니다. 이 속성은 스키마 컴파일 이후 속성입니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; for the type built from the &lt;see langword=&quot;Name&quot; /&gt; attribute of this type.">이 형식의 <see langword="Name" /> 특성으로부터 만든 형식에 대한 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; of the type.">형식의 <see cref="T:System.Xml.Schema.XmlTypeCode" />를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values.">
        <see cref="T:System.Xml.Schema.XmlTypeCode" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary vsli:raw="Represents the &lt;see langword=&quot;unique&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to identify a unique constraint among a set of elements.">W3C(World Wide Web 컨소시엄)에서 지정한 대로 XML 스키마의 <see langword="unique" /> 요소를 나타냅니다. 이 클래스를 사용하여 요소 집합 간의 고유 제약 조건을 식별할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaUnique&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaUnique" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary vsli:raw="Indicator of how the attribute is used.">특성이 사용되는 방법에 대한 표시기입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary vsli:raw="Attribute use not specified.">특성을 사용하도록 지정하지 않았습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary vsli:raw="Attribute is optional.">특성은 선택 사항입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary vsli:raw="Attribute cannot be used.">특성을 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary vsli:raw="Attribute must appear once.">특성은 한 번만 사용해야 합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary vsli:raw="Represents the exception thrown when XML Schema Definition Language (XSD) schema validation errors and warnings are encountered in an XML document being validated.">유효성을 검사할 XML 문서에서 XSD(XML 스키마 정의 언어) 스키마 유효성 검사 오류 및 경고가 발생할 경우 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects specified.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message specified.">지정된 예외 메시지를 사용하여 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">오류 조건에 대한 <see langword="string" /> 설명입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message and original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception specified.">지정된 예외 메시지 및 예외를 발생시킨 원래 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> 개체를 사용하여 <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">오류 조건에 대한 <see langword="string" /> 설명입니다.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">이 예외를 발생시킨 원래 <see cref="T:System.Exception" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message specified, and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, line number, and line position of the XML that cause this exception specified.">지정된 예외 메시지, 예외를 발생시킨 원래 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> 개체, 줄 번호 및 XML의 줄 위치를 사용하여 <see cref="T:System.Exception" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">오류 조건에 대한 <see langword="string" /> 설명입니다.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">이 예외를 발생시킨 원래 <see cref="T:System.Exception" /> 개체입니다.</param>
      <param name="lineNumber" vsli:raw="The line number of the XML that caused this exception.">이 예외를 발생시킨 XML의 줄 번호입니다.</param>
      <param name="linePosition" vsli:raw="The line position of the XML that caused this exception.">이 예외를 발생시킨 XML의 줄 위치입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; information that contains all the properties of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 정보를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" />의 모든 속성을 포함하는 새 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> 개체를 만듭니다.</summary>
      <param name="info" vsli:raw="&lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context" vsli:raw="&lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary vsli:raw="Sets the XML node that causes the error.">오류를 발생시키는 XML 노드를 설정합니다.</summary>
      <param name="sourceObject" vsli:raw="The source object.">소스 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary vsli:raw="Gets the XML node that caused this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">이 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />을 발생시킨 XML 노드를 가져옵니다.</summary>
      <returns vsli:raw="The XML node that caused this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">이 <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />을 발생시킨 XML 노드입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary vsli:raw="Specifies schema validation options used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; classes.">
        <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 및 <see cref="T:System.Xml.XmlReader" /> 클래스에서 사용하는 스키마 유효성 검사 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary vsli:raw="Allow xml:* attributes even if they are not defined in the schema. The attributes will be validated based on their data type.">스키마에 정의되지 않은 xml:* 특성도 허용합니다. 해당 데이터 형식을 기반으로 이러한 특성의 유효성이 검사됩니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary vsli:raw="Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.">Identity 제약 조건, 인라인 스키마 및 스키마 위치 힌트를 처리하지 않고 스키마 유효성 검사 경고를 보고하지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary vsli:raw="Process identity constraints (&lt;c&gt;xs:ID&lt;/c&gt;, &lt;c&gt;xs:IDREF&lt;/c&gt;, &lt;c&gt;xs:key&lt;/c&gt;, &lt;c&gt;xs:keyref&lt;/c&gt;, &lt;c&gt;xs:unique&lt;/c&gt;) encountered during validation.">유효성 검사 중 발생한 프로세스 ID 제약 조건(<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>)입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary vsli:raw="Process inline schemas encountered during validation.">유효성 검사를 수행하는 동안 발견되는 인라인 스키마를 처리합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary vsli:raw="Process schema location hints (&lt;c&gt;xsi:schemaLocation&lt;/c&gt;, &lt;c&gt;xsi:noNamespaceSchemaLocation&lt;/c&gt;) encountered during validation.">유효성 검사 중 발생한 프로세스 스키마 위치 힌트(<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>)입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary vsli:raw="Report schema validation warnings encountered during validation.">유효성 검사를 수행하는 동안 발생하는 스키마 유효성 검사 경고를 보고합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary vsli:raw="Represents an XML Schema Definition Language (XSD) Schema validation engine. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class cannot be inherited.">XSD(XML 스키마 정의 언어) 스키마 유효성 검사 엔진을 나타냅니다. <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nameTable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object containing element and attribute names as atomized strings.">원자화된 문자열 형식의 요소 및 특성 이름이 포함된 <see cref="T:System.Xml.XmlNameTable" /> 개체입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the XML Schema Definition Language (XSD) schemas used for validation.">유효성 검사에 사용할 XSD(XML 스키마 정의 언어) 스키마가 포함된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used for resolving namespaces encountered during validation.">유효성을 검사하는 동안 발견된 네임스페이스를 확인하는 데 사용하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</param>
      <param name="validationFlags" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationFlags&quot; /&gt; value specifying schema validation options.">스키마 유효성 검사 옵션을 지정하는 <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An error occurred while compiling schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 매개 변수에 포함된 스키마를 컴파일하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.">유효성 검사에 사용되는 스키마 집합에 XSD(XML 스키마 정의 언어) 스키마를 추가합니다.</summary>
      <param name="schema" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to add to the set of schemas used for validation.">유효성 검사에 사용되는 스키마 집합에 추가할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter specified is &lt;see langword=&quot;null&quot; /&gt;.">지정된 <see cref="T:System.Xml.Schema.XmlSchema" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The target namespace of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter matches that of any element or attribute already encountered by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 매개 변수의 대상 네임스페이스가 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체에서 이미 발견한 요소 또는 특성의 대상 네임스페이스와 일치하는 경우</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter is invalid.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 매개 변수가 잘못된 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary vsli:raw="Ends validation and checks identity constraints for the entire XML document.">유효성 검사를 끝내고 전체 XML 문서에서 identity 제약 조건을 확인합니다.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="An identity constraint error was found in the XML document.">XML 문서에 identity 제약 조건 오류가 있는 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary vsli:raw="Returns the expected attributes for the current element context.">현재 요소 컨텍스트에 나타날 수 있는 특성을 반환합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects or an empty array if there are no expected attributes.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 개체의 배열이거나, 나타날 수 있는 특성이 없는 경우 빈 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary vsli:raw="Returns the expected particles in the current element context.">현재 요소 컨텍스트에 나타날 수 있는 파티클을 반환합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaParticle&quot; /&gt; objects or an empty array if there are no expected particles.">
        <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> 개체의 배열이거나, 나타날 수 있는 파티클이 없는 경우 빈 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary vsli:raw="Validates identity constraints on the default attributes and populates the &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; specified with &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects for any attributes with default values that have not been previously validated using the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method in the element context.">기본 특성에 대한 identity 제약 조건의 유효성을 검사하고, 요소 컨텍스트에서 <see cref="T:System.Collections.ArrayList" /> 메서드를 사용하여 아직 유효성이 검사되지 않고 기본값을 사용하는 모든 특성에 대해 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 개체로 지정된 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />를 채웁니다.</summary>
      <param name="defaultAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; to populate with &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects for any attributes not yet encountered during validation in the element context.">요소 컨텍스트에서 유효성 검사를 수행하는 동안 발견되지 않은 특성에 대해 <see cref="T:System.Collections.ArrayList" /> 개체로 채울 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary vsli:raw="Initializes the state of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체의 상태를 초기화합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.Initialize&quot; /&gt; method is valid immediately after the construction of an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object or after a call to &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.EndValidation&quot; /&gt; only.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> 개체를 만든 직후 또는 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />을 호출한 후가 아닌 시점에 <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Initializes the state of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object using the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; specified for partial validation.">지정된 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />를 사용하여 부분 유효성 검사를 위해 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 개체의 상태를 초기화합니다.</summary>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object used to initialize the validation context of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object for partial validation.">부분 유효성 검사를 위해 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 개체의 유효성 검사 컨텍스트를 초기화하는 데 사용할 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, <see cref="T:System.Xml.Schema.XmlSchemaType" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.Initialize&quot; /&gt; method is valid immediately after the construction of an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object or after a call to &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.EndValidation&quot; /&gt; only.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> 개체를 만든 직후 또는 <see cref="T:System.Xml.Schema.XmlSchemaValidator" />을 호출한 후가 아닌 시점에 <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> 메서드를 호출한 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter is not an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 매개 변수가 <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 개체가 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary vsli:raw="Gets or sets the line number information for the XML node being validated.">유효성을 검사할 XML 노드의 줄 번호 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlLineInfo&quot; /&gt; object.">
        <see cref="T:System.Xml.IXmlLineInfo" /> 개체</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Skips validation of the current element content and prepares the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object to validate content in the parent element's context.">현재 요소 내용의 유효성 검사를 생략하고 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체를 준비하여 부모 요소의 컨텍스트에서 내용의 유효성을 검사합니다.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set if the current element content is successfully skipped. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">현재 요소 콘텐츠를 성공적으로 건너뛴 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">
        <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary vsli:raw="Gets or sets the source URI for the XML node being validated.">유효성을 검사할 XML 노드의 소스 URI를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; object representing the source URI for the XML node being validated; the default is &lt;see langword=&quot;null&quot; /&gt;.">유효성을 검사할 XML 노드의 소스 URI를 나타내는 <see cref="T:System.Uri" /> 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the attribute name, namespace URI, and value in the current element context.">현재 요소 컨텍스트에서 특성의 이름, 네임스페이스 URI 및 값에 대해 유효성을 검사합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to validate.">유효성을 검사할 특성의 로컬 이름입니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute to validate.">유효성을 검사할 특성의 네임스페이스 URI입니다.</param>
      <param name="attributeValue" vsli:raw="The value of the attribute to validate.">유효성을 검사할 특성의 값입니다.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the attribute. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">특성의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The validated attribute's value.">유효성이 검사된 특성의 값입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The attribute is not valid in the current element context.">특성이 현재 요소 컨텍스트에서 유효하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the attribute name, namespace URI, and value in the current element context.">현재 요소 컨텍스트에서 특성의 이름, 네임스페이스 URI 및 값에 대해 유효성을 검사합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to validate.">유효성을 검사할 특성의 로컬 이름입니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute to validate.">유효성을 검사할 특성의 네임스페이스 URI입니다.</param>
      <param name="attributeValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">특성 값을 특성의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />입니다.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the attribute. This parameter and can be &lt;see langword=&quot;null&quot; /&gt;.">특성의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The validated attribute's value.">유효성이 검사된 특성의 값입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The attribute is not valid in the current element context.">특성이 현재 요소 컨텍스트에서 유효하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the element in the current context.">현재 컨텍스트에서 요소의 유효성을 검사합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element to validate.">유효성을 검사할 요소의 로컬 이름입니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element to validate.">유효성을 검사할 요소의 네임스페이스 URI입니다.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element's name. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소 이름의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's name is not valid in the current context.">요소 이름이 현재 컨텍스트에서 유효하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Validates the element in the current context with the &lt;c&gt;xsi:Type&lt;/c&gt;, &lt;c&gt;xsi:Nil&lt;/c&gt;, &lt;c&gt;xsi:SchemaLocation&lt;/c&gt;, and &lt;c&gt;xsi:NoNamespaceSchemaLocation&lt;/c&gt; attribute values specified.">지정된 <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> 및 <c>xsi:NoNamespaceSchemaLocation</c> 특성 값으로 현재 컨텍스트에서 요소의 유효성을 검사합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element to validate.">유효성을 검사할 요소의 로컬 이름입니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element to validate.">유효성을 검사할 요소의 네임스페이스 URI입니다.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element's name. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소 이름의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="xsiType" vsli:raw="The &lt;c&gt;xsi:Type&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소의 <c>xsi:Type</c> 특성 값입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="xsiNil" vsli:raw="The &lt;c&gt;xsi:Nil&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소의 <c>xsi:Nil</c> 특성 값입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="xsiSchemaLocation" vsli:raw="The &lt;c&gt;xsi:SchemaLocation&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소의 <c>xsi:SchemaLocation</c> 특성 값입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="xsiNoNamespaceSchemaLocation" vsli:raw="The &lt;c&gt;xsi:NoNamespaceSchemaLocation&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소의 <c>xsi:NoNamespaceSchemaLocation</c> 특성 값입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's name is not valid in the current context.">요소 이름이 현재 컨텍스트에서 유효하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.">단순 콘텐츠를 포함하는 요소에 대해 해당 데이터 형식을 기준으로 요소의 텍스트 콘텐츠가 유효한지 확인하고 복합 콘텐츠를 포함하는 요소에 대해 현재 요소의 콘텐츠가 완전한지 확인합니다.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소의 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The parsed, typed text value of the element if the element has simple content.">요소에 단순 콘텐츠가 있는 경우 요소의 구문 분석되고 형식화된 텍스트 값입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's content is not valid.">요소의 콘텐츠가 유효하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method is called after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 메서드를 호출하는 경우가 여기에 해당합니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary vsli:raw="Verifies if the text content of the element specified is valid according to its data type.">지정된 요소의 데이터 형식을 기준으로 해당 요소의 텍스트 콘텐츠가 유효한지 확인합니다.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the text content of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소의 텍스트 콘텐츠에 대한 유효성이 성공적으로 검사될 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="typedValue" vsli:raw="The typed text content of the element.">요소의 형식화된 텍스트 콘텐츠입니다.</param>
      <returns vsli:raw="The parsed, typed simple content of the element.">요소의 구문 분석되고 형식화된 단순 콘텐츠입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's text content is not valid.">요소의 텍스트 콘텐츠가 유효하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method was not called in the correct sequence (for example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method is called after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;), calls to the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method have been previously made, or the element has complex content.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 메서드의 호출 순서가 잘못되거나(예: <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우), <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 메서드를 이전에 호출했거나, 요소에 복합 콘텐츠가 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The typed text content parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">형식화된 텍스트 콘텐츠 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Verifies whether all the required attributes in the element context are present and prepares the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object to validate the child content of the element.">요소 컨텍스트에 필수 특성이 모두 있는지 확인하고 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체를 준비하여 요소의 자식 내용의 유효성을 검사합니다.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful verification that all the required attributes in the element context are present. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">요소 컨텍스트의 필수 특성이 모두 있는지를 화인하는 유효성 검사가 성공할 경우 속성이 설정되는 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="One or more of the required attributes in the current element context were not found.">현재 요소 컨텍스트의 필수 특성 중 하나 이상이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">
        <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 후 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />를 호출한 경우가 여기에 해당합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">지정된 매개 변수 중 하나 이상이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary vsli:raw="Validates whether the text &lt;see langword=&quot;string&quot; /&gt; specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.">지정된 텍스트 <see langword="string" />을 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 텍스트를 누적시킵니다.</summary>
      <param name="elementValue" vsli:raw="A text &lt;see langword=&quot;string&quot; /&gt; to validate in the current element context.">현재 요소 컨텍스트에서 유효성을 검사할 텍스트 <see langword="string" />입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; specified is not allowed in the current element context.">지정된 텍스트 <see langword="string" />을 현재 요소 컨텍스트에서 사용할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">텍스트 <see langword="string" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary vsli:raw="Validates whether the text returned by the &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt; object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.">지정된 <see cref="T:System.Xml.Schema.XmlValueGetter" /> 개체에서 반환된 텍스트를 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 텍스트를 누적시킵니다.</summary>
      <param name="elementValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">텍스트 값을 특성의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; specified is not allowed in the current element context.">지정된 텍스트 <see langword="string" />을 현재 요소 컨텍스트에서 사용할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">텍스트 <see langword="string" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary vsli:raw="Validates whether the white space in the &lt;see langword=&quot;string&quot; /&gt; specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.">지정된 <see langword="string" />에 있는 공백을 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 공백을 누적시킵니다.</summary>
      <param name="elementValue" vsli:raw="A white space &lt;see langword=&quot;string&quot; /&gt; to validate in the current element context.">현재 요소 컨텍스트에서 유효성을 검사할 공백 <see langword="string" />입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="White space is not allowed in the current element context.">현재 요소 컨텍스트에서 공백을 사용할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary vsli:raw="Validates whether the white space returned by the &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt; object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.">지정된 <see cref="T:System.Xml.Schema.XmlValueGetter" /> 개체에서 반환된 공백을 현재 요소 컨텍스트에서 사용할 수 있는지 확인하고, 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사를 위해 공백을 누적시킵니다.</summary>
      <param name="elementValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">공백 값을 특성의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="White space is not allowed in the current element context.">현재 요소 컨텍스트에서 공백을 사용할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">
        <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 메서드가 올바른 시퀀스로 호출되지 않은 경우. 예를 들어, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />를 호출한 후 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 메서드를 호출하는 경우가 여기에 해당합니다.</exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that receives schema validation warnings and errors encountered during schema validation.">스키마 유효성을 검사하는 동안 발생하는 스키마 유효성 검사 경고 및 오류를 받을 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary vsli:raw="Gets or sets the object sent as the sender object of a validation event.">유효성 검사 이벤트의 sender 개체로 보낼 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;; the default is this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">
        <see cref="T:System.Object" />입니다. 기본값은 이 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object used to resolve &lt;c&gt;xs:import&lt;/c&gt; and &lt;c&gt;xs:include&lt;/c&gt; elements as well as &lt;c&gt;xsi:schemaLocation&lt;/c&gt; and &lt;c&gt;xsi:noNamespaceSchemaLocation&lt;/c&gt; attributes.">
        <c>xs:import</c> 및 <c>xs:include</c> 요소뿐만 아니라 <c>xsi:schemaLocation</c> 및 <c>xsi:noNamespaceSchemaLocation</c> 특성을 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" /> 개체를 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object; the default is an &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlResolver" /> 개체입니다. 기본값은 <see cref="T:System.Xml.XmlUrlResolver" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary vsli:raw="Represents the validity of an XML item validated by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 클래스를 사용하여 유효성이 검사된 XML 항목의 유효성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary vsli:raw="The XML item is invalid.">XML 항목이 유효하지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary vsli:raw="The validity of the XML item is not known.">XML 항목의 유효성을 알 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary vsli:raw="The XML item is valid.">XML 항목이 유효합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;whiteSpace&quot; /&gt; facet.">W3C(World Wide Web 컨소시엄) <see langword="whiteSpace" /> 패싯을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;selector&quot; /&gt; element.">W3C(World Wide Web 컨소시엄) <see langword="selector" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaXPath&quot; /&gt; class.">
        <see cref="T:System.Xml.Schema.XmlSchemaXPath" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary vsli:raw="Gets or sets the attribute for the XPath expression.">XPath 식의 특성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The string attribute value for the XPath expression.">XPath 식에 대한 문자열 특성 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary vsli:raw="Represents the severity of the validation event.">유효성 검사 이벤트의 심각도를 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary vsli:raw="Indicates a validation error occurred when validating the instance document. This applies to document type definitions (DTDs) and XML Schema definition language (XSD) schemas. The World Wide Web Consortium (W3C) validity constraints are considered errors. If no validation event handler has been created, errors throw an exception.">인스턴스 문서의 유효성을 검사할 때 발생한 유효성 검사 오류를 나타냅니다. 이 멤버는 DTD(문서 형식 정의) 및 XSD(XML 스키마 정의 언어) 스키마에 적용됩니다. W3C(World Wide Web 컨소시엄) 유효성 검사 제약 조건은 오류로 간주됩니다. 유효성 검사 이벤트 처리기를 만들지 않은 경우 오류는 예외를 throw합니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary vsli:raw="Indicates that a validation event occurred that is not an error. A warning is typically issued when there is no DTD, or XML Schema to validate a particular element or attribute against. Unlike errors, warnings do not throw an exception if there is no validation event handler.">오류가 아닌 유효성 검사 이벤트가 발생했음을 나타냅니다. 일반적으로 경고는 DTD가 없거나, 특정 요소나 특성의 유효성을 검사하는 데 사용할 XML 스키마가 없는 경우에 발생합니다. 오류와 달리 경고는 유효성 검사 이벤트 처리기가 없어도 예외를 throw하지 않습니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary vsli:raw="Represents the W3C XML Schema Definition Language (XSD) schema types.">W3C XSD(XML 스키마 정의 언어) 스키마 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary vsli:raw="Any atomic value of a union.">공용 구조체의 atomic 값입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:anyURI&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:anyURI" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:base64Binary&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:base64Binary" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:boolean&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:boolean" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:byte&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:byte" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:date&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:date" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:dateTime&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:dateTime" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:decimal&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:decimal" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:double&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:double" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:Duration&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:Duration" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:ENTITY&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:ENTITY" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:float&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:float" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gDay&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:gDay" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gMonth&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:gMonth" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gMonthDay&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:gMonthDay" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gYear&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:gYear" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gYearMonth&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:gYearMonth" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:hexBinary&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:hexBinary" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:ID&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:ID" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:IDREF&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:IDREF" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:int&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:int" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:integer&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:integer" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary vsli:raw="An item such as a node or atomic value.">노드나 atomic 값 등의 항목입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:language&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:language" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:long&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:long" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:Name&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:Name" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NCName&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:NCName" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:negativeInteger&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:negativeInteger" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NMTOKEN&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:NMTOKEN" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary vsli:raw="No type information.">형식 정보가 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:nonNegativeInteger&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:nonNegativeInteger" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:nonPositiveInteger&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:nonPositiveInteger" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:normalizedString&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:normalizedString" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NOTATION&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:NOTATION" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:positiveInteger&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:positiveInteger" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:QName&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:QName" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:short&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:short" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:string&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:string" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:time&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:time" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:token&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:token" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedByte&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:unsignedByte" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedInt&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:unsignedInt" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedLong&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:unsignedLong" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedShort&quot; /&gt; type.">W3C XML 스키마 <see langword="xs:unsignedShort" /> 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary vsli:raw="An untyped atomic value.">형식화되지 않은 atomic 값입니다.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 값은 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary vsli:raw="A &lt;see langword=&quot;delegate&quot; /&gt; used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class to pass attribute, text, and white space values as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute, text, or white space.">
        <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 클래스에서 특성, 텍스트 및 공백 값을 해당 특성, 텍스트 또는 공백의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용하는 <see langword="delegate" />입니다.</summary>
      <returns vsli:raw="An object containing the attribute, text, or white space value. The object is a CLR type that corresponds to the XSD type of the attribute, text, or white space value.">특성, 텍스트 또는 공백 값을 포함하는 개체입니다. 개체는 특성, 텍스트 또는 공백 값의 XSD 형식에 해당하는 CLR 형식입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary vsli:raw="Provides custom formatting for XML serialization and deserialization.">XML serialization 및 deserialization을 위한 사용자 지정 서식을 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary vsli:raw="This method is reserved and should not be used. When implementing the &lt;see langword=&quot;IXmlSerializable&quot; /&gt; interface, you should return &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaProviderAttribute&quot; /&gt; to the class.">이 메서드는 예약되어 있으므로 사용해서는 안 됩니다. <see langword="IXmlSerializable" /> 인터페이스를 구현할 때 이 메서드에서 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)을 반환해야 하지만 사용자 지정 스키마를 지정해야 하는 경우에는 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />를 클래스에 적용합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">개체의 XML 표현에서 개체를 생성합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; stream from which the object is deserialized.">개체가 deserialize되는 <see cref="T:System.Xml.XmlReader" /> 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">개체를 XML 표현으로 변환합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">개체가 serialize되는 <see cref="T:System.Xml.XmlWriter" /> 스트림입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary vsli:raw="Specifies that the member (a field that returns an array of &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects) can contain any XML attributes.">멤버(<see cref="T:System.Xml.XmlAttribute" /> 개체의 배열을 반환하는 필드)가 XML 특성을 포함할 수 있도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary vsli:raw="Constructs a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary vsli:raw="Specifies that the member (a field that returns an array of &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.">멤버(<see cref="T:System.Xml.XmlElement" /> 또는 <see cref="T:System.Xml.XmlNode" /> 개체의 배열을 반환하는 필드)가 serialize 또는 deserialize되고 있는 개체에 해당 멤버가 없는 XML 요소를 나타내는 개체를 포함하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서에 생성된 XML 요소의 이름을 지정합니다.</summary>
      <param name="name" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document and its XML namespace.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서와 이 문서의 XML 네임스페이스에 생성된 XML 요소의 이름을 지정합니다.</summary>
      <param name="name" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</param>
      <param name="ns" vsli:raw="The XML namespace of the XML element.">XML 요소의 XML 네임스페이스입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary vsli:raw="Gets or sets the XML element name.">XML 요소 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the XML element.">XML 요소의 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The element name of an array member does not match the element name specified by the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAnyElementAttribute.Name&quot; /&gt; property.">배열 멤버의 요소 이름이 <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> 속성으로 지정한 요소 이름과 일치하지 않는 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace generated in the XML document.">XML 문서에 생성된 XML 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An XML namespace.">XML 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The order of the code generation.">코드가 생성되는 순서입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 해당 클래스 멤버를 XML 특성으로 serialize하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class and specifies the name of the generated XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화하고 생성된 XML 특성의 이름을 지정합니다.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 특성의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute that is generated.">생성되는 XML 특성의 이름입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; used to store the attribute.">특성을 저장하는 데 사용되는 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; used to store the attribute.">특성을 저장하는 데 사용되는 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute.">XML 특성의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member name.">XML 특성의 이름입니다. 기본값은 멤버 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XSD data type of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 특성의 XSD 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An XSD (XML Schema Document) data type.">XSD (XML 스키마 문서) 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML attribute name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 통해 생성된 XML 특성의 이름이 정규화된 이름인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다. 기본값은 <see langword="XmlForm.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">XML 특성의 XML 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">XML 특성의 XML 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary vsli:raw="Gets or sets the complex type of the XML attribute.">XML 특성의 복합 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of the XML attribute.">XML 특성의 형식입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary vsli:raw="Indicates that a public field or property represents an XML element when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes or deserializes the object that contains it.">공용 필드 또는 속성을 포함하는 개체를 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize하거나 deserialize할 때 해당 필드나 속성이 XML 요소를 나타냄을 의미합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class and specifies the name of the XML element.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 요소의 이름을 지정합니다.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">serialize된 멤버의 XML 요소 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; and specifies the name of the XML element and a derived type for the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; is applied. This member type is used when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the object that contains it.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 새 인스턴스를 초기화하고 XML 요소의 이름을 지정하며 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 적용되는 멤버의 파생 형식도 지정합니다. 이 멤버 형식은 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 이를 포함하는 개체를 serialize할 때 사용됩니다.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">serialize된 멤버의 XML 요소 이름입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of an object derived from the member's type.">멤버의 형식에서 파생된 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class and specifies a type for the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; is applied. This type is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when serializing or deserializing object that contains it.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 적용되는 멤버에 대한 형식을 지정합니다. 이 형식은 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 이를 포함하는 개체를 serialize하거나 deserialize할 때 사용됩니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of an object derived from the member's type.">멤버의 형식에서 파생된 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 요소의 XSD(XML 스키마 정의) 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An XML Schema data type.">XML 스키마 데이터 형식입니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the.NET data type.">지정한 XML 스키마 데이터 형식을 .NET 데이터 형식에 매핑할 수 없는 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">생성된 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">생성된 XML 요소의 이름입니다. 기본값은 멤버 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the element is qualified.">요소가 한정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that is set to &lt;see langword=&quot;null&quot; /&gt; as an empty tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="null" />로 설정된 멤버를 <see langword="xsi:nil" /> 특성이 <see langword="true" />로 설정된 빈 태그로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace assigned to the XML element that results when the class is serialized.">클래스가 serialize될 때 결과로 만들어지는 XML 요소에 할당된 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace of the XML element.">XML 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The order of the code generation.">코드가 생성되는 순서입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary vsli:raw="Gets or sets the object type used to represent the XML element.">XML 요소를 나타내는 데 사용되는 개체 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member.">멤버의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; class, and specifies the XML value that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates or recognizes (when it serializes or deserializes the enumeration, respectively).">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize하거나 deserialize할 때 생성하거나 인식하는 XML 값을 지정합니다.</summary>
      <param name="name" vsli:raw="The overriding name of the enumeration member.">열거형 멤버의 재정의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML-document instance when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서 인스턴스에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value generated in an XML-document instance when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it is deserializes the enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서 인스턴스에서 생성된 값, 또는 열거형 멤버를 deserialize할 때 인식된 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">
        <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 메서드를 호출하여 공용 필드 또는 공용 읽기/쓰기 속성 값을 serialize하지 않도록 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIgnoreAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary vsli:raw="Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.">대상 속성, 매개 변수, 반환 값 또는 클래스 멤버가 XML 문서 내에서 사용되는 네임스페이스와 연관된 접두사를 포함하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary vsli:raw="Controls XML serialization of the attribute target as an XML root element.">특성 대상의 XML serialization을 XML 루트 요소로 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; class and specifies the name of the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 루트 요소의 이름을 지정합니다.</summary>
      <param name="elementName" vsli:raw="The name of the XML root element.">XML 루트 요소의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary vsli:raw="Gets or sets the XSD data type of the XML root element.">XML 루트 요소의 XSD 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An XSD (XML Schema Document) data type.">XSD (XML 스키마 문서) 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the XML element that is generated and recognized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class's &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)&quot; /&gt; methods, respectively.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> 및 <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> 메서드에 의해 각각 생성되고 인식되는 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the XML root element that is generated and recognized in an XML-document instance. The default is the name of the serialized class.">XML 문서 인스턴스에서 생성되고 인식되는 XML 루트 요소의 이름입니다. 기본값은 serialize된 클래스의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that is set to &lt;see langword=&quot;null&quot; /&gt; into the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="null" />로 설정된 멤버를 <see langword="xsi:nil" />로 설정된 <see langword="true" /> 특성으로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML root element.">XML 루트 요소의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace for the XML element.">XML 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary vsli:raw="When applied to a type, stores the name of a static method of the type that returns an XML schema and a &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; (or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for anonymous types) that controls the serialization of the type.">형식에 적용되는 경우 XML 스키마를 반환하는 형식의 정적 메서드 이름과 형식의 serialization을 제어하는 <see cref="T:System.Xml.XmlQualifiedName" />(익명 형식의 경우 <see cref="T:System.Xml.Schema.XmlSchemaType" />)을 저장합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaProviderAttribute&quot; /&gt; class, taking the name of the static method that supplies the type's XML schema.">형식의 XML 스키마를 제공하는 정적 메서드 이름을 가져와서 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="methodName" vsli:raw="The name of the static method that must be implemented.">구현되어야 하는 정적 메서드의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary vsli:raw="Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an &lt;see langword=&quot;xs:any&quot; /&gt; element.">대상 클래스가 와일드카드이거나 클래스의 스키마에 <see langword="xs:any" /> 요소만 포함되어 있는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the class is a wildcard, or if the schema contains only the &lt;see langword=&quot;xs:any&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">클래스가 와일드카드이거나 스키마에 <see langword="true" /> 요소만 있으면 <see langword="xs:any" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary vsli:raw="Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.">형식의 XML 스키마를 제공하는 정적 메서드의 이름과 해당 XML 스키마 데이터 형식의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the method that is invoked by the XML infrastructure to return an XML schema.">XML 스키마를 반환하기 위해 XML 인프라에서 호출하는 메서드의 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary vsli:raw="Contains the XML namespaces and prefixes that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; uses to generate qualified names in an XML-document instance.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 XML 문서 인스턴스에서 정규화된 이름을 생성하는 데 사용하는 XML 네임스페이스 및 접두사를 포함합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class, using the specified instance of &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; containing the collection of prefix and namespace pairs.">접두사와 네임스페이스 쌍의 컬렉션을 포함하는 <see langword="XmlSerializerNamespaces" />의 지정된 인스턴스를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="namespaces" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; containing the namespace and prefix pairs.">네임스페이스와 접두사 쌍을 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="namespaces" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary vsli:raw="Adds a prefix and namespace pair to an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 개체에 접두사와 네임스페이스 쌍을 추가합니다.</summary>
      <param name="prefix" vsli:raw="The prefix associated with an XML namespace.">XML 네임스페이스와 관련된 접두사입니다.</param>
      <param name="ns" vsli:raw="An XML namespace.">XML 네임스페이스입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary vsli:raw="Gets the number of prefix and namespace pairs in the collection.">컬렉션에 있는 접두사와 네임스페이스 쌍의 개수를 가져옵니다.</summary>
      <returns vsli:raw="The number of prefix and namespace pairs in the collection.">컬렉션에 있는 접두사와 네임스페이스 쌍의 개수입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary vsli:raw="Gets the array of prefix and namespace pairs in an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 개체에 있는 접두사와 네임스페이스 쌍으로 이루어진 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects that are used as qualified names in an XML document.">XML 문서에서 정규화된 이름으로 사용되는 <see cref="T:System.Xml.XmlQualifiedName" /> 개체로 이루어진 배열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary vsli:raw="Indicates to the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; that the member must be treated as XML text when the class that contains it is serialized or deserialized.">멤버가 포함된 클래스가 serialize되거나 deserialize될 때 멤버를 XML 텍스트로 처리하도록 <see cref="T:System.Xml.Serialization.XmlSerializer" />에 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member to be serialized.">serialize할 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the text generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 텍스트의 XSD(XML 스키마 정의) 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An XML Schema (XSD) data type.">XSD (XML 스키마) 데이터 형식입니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">지정한 XML 스키마 데이터 형식을 .NET 데이터 형식에 매핑할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.">지정한 XML 스키마 데이터 형식은 속성에 맞지 않으므로 멤버 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the member.">멤버의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member.">멤버의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary vsli:raw="Specifies the type of validation to perform.">실행할 유효성 검사의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary vsli:raw="Validates if DTD or schema information is found. &#xA;&#xA;Starting with .NET Framework 2.0, this field is obsolete. It applies only to the obsolete &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class.">DTD나 스키마 정보가 있는지를 확인합니다. 
.NET Framework 2.0부터 이 필드는 더 이상 사용되지 않습니다. 사용되지 않는 <see cref="T:System.Xml.XmlValidatingReader" /> 클래스에만 적용됩니다.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary vsli:raw="Validates according to the DTD.">DTD에 따라 유효성을 검사합니다.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary vsli:raw="No validation is performed, and no validation errors are thrown. This setting creates an XML 1.0 compliant non-validating parser.&#xA;        &#xA;Calls to &lt;see cref=&quot;M:System.Xml.XmlReader.ResolveEntity&quot; /&gt; report default attributes and resolve general entities. The DOCTYPE is not used for validation purposes.">유효성 검사가 수행되지 않고 유효성 검사 오류가 throw되지 않습니다. 이 설정은 XML 1.0 규격 유효성 비확인 파서를 만듭니다.
<see cref="M:System.Xml.XmlReader.ResolveEntity" /> 보고서 기본 특성을 호출하고 일반 엔터티를 확인합니다. DOCTYPE은 유효성 검사 목적으로 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary vsli:raw="Validate according to XML Schema definition language (XSD) schemas, including inline XML Schemas. XML Schemas are associated with namespace URIs either by using the &lt;see langword=&quot;schemaLocation&quot; /&gt; attribute or the provided &lt;see langword=&quot;Schemas&quot; /&gt; property.">인라인 XML 스키마를 포함하여 XSD(XML 스키마 정의 언어)에 따라 유효성을 검사합니다. XSD 스키마는 <see langword="schemaLocation" /> 특성이나 제공된 <see langword="Schemas" /> 속성을 사용하여 네임스페이스 URI와 연결됩니다.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary vsli:raw="Validate according to XML-Data Reduced (XDR) schemas, including inline XDR schemas. XDR schemas are recognized using the &lt;see langword=&quot;x-schema&quot; /&gt; namespace prefix or the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.Schemas&quot; /&gt; property.&#xA;        &#xA;Starting with .NET Framework 2.0, this field is obsolete. It applies only to the obsolete &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class.">인라인 XDR 스키마를 포함하여 XDR(XML-Data Reduced) 스키마에 따라 유효성을 검사합니다. XDR 스키마는 <see langword="x-schema" /> 네임스페이스 접두사나 <see cref="P:System.Xml.XmlValidatingReader.Schemas" /> 속성을 사용하여 인식됩니다.
.NET Framework 2.0부터 이 필드는 더 이상 사용되지 않습니다. 사용되지 않는 <see cref="T:System.Xml.XmlValidatingReader" /> 클래스에만 적용됩니다.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary vsli:raw="Specifies how white space is handled.">공백을 처리하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary vsli:raw="Return &lt;see langword=&quot;Whitespace&quot; /&gt; and &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes. This is the default.">
        <see langword="Whitespace" /> 및 <see langword="SignificantWhitespace" /> 노드를 반환합니다. 이 값이 기본값입니다.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary vsli:raw="Return no &lt;see langword=&quot;Whitespace&quot; /&gt; and no &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes.">
        <see langword="Whitespace" /> 및 <see langword="SignificantWhitespace" /> 노드를 반환하지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary vsli:raw="Return &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes only.">
        <see langword="SignificantWhitespace" /> 노드만을 반환합니다.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary vsli:raw="Specifies the state of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />의 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary vsli:raw="Indicates that an attribute value is being written.">특성 값을 쓰고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method has been called.">
        <see cref="M:System.Xml.XmlWriter.Close" /> 메서드가 이미 호출되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary vsli:raw="Indicates that element content is being written.">요소 내용을 쓰고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary vsli:raw="Indicates that an element start tag is being written.">요소 시작 태그를 쓰고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary vsli:raw="An exception has been thrown, which has left the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; in an invalid state. You can call the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method to put the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; in the &lt;see cref=&quot;F:System.Xml.WriteState.Closed&quot; /&gt; state. Any other &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method calls results in an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt;.&#xA;&#xA;This field was added in .NET Framework 2.0.">예외가 throw되어 <see cref="T:System.Xml.XmlWriter" />가 잘못된 상태에 있습니다. <see cref="M:System.Xml.XmlWriter.Close" /> 메서드를 호출하여 <see cref="T:System.Xml.XmlWriter" />를 <see cref="F:System.Xml.WriteState.Closed" /> 상태로 설정할 수 있습니다. 이외의 경우 <see cref="T:System.Xml.XmlWriter" /> 메서드를 호출하면 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
이 필드는 .NET Framework 2.0에서 추가되었습니다.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary vsli:raw="Indicates that the prolog is being written.">프롤로그를 쓰고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary vsli:raw="Indicates that a Write method has not yet been called.">Write 메서드가 아직 호출되지 않았음을 나타냅니다.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary vsli:raw="Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.">특성을 나타냅니다. 특성에 대해 유효한 값과 기본값은 DTD(문서 형식 정의) 또는 스키마에 정의됩니다.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace uniform resource identifier (URI).">네임스페이스 URI(Uniform Resource Identifier)입니다.</param>
      <param name="doc" vsli:raw="The parent XML document.">부모 XML 문서입니다.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the end of the list of child nodes, of this node.">지정된 노드를 이 노드의 자식 노드 목록 끝에 추가합니다.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to add.">추가할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; added.">추가된 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the node.">노드의 기본 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="The location from which the node was loaded or String.Empty if the node has no base URI. Attribute nodes have the same base URI as their owner element. If an attribute node does not have an owner element, &lt;see langword=&quot;BaseURI&quot; /&gt; returns String.Empty.">노드가 로드된 위치이거나 노드에 기본 URI가 없으면 String.Empty입니다. Attribute 노드의 기본 URI는 해당 노드의 소유자 요소의 기본 URI와 같습니다. Attribute 노드에 소유자 요소가 없으면, <see langword="BaseURI" />가 String.Empty를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The duplicate node.">복제 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary vsli:raw="Sets the concatenated values of the node and all its children.">노드와 모든 자식의 연결된 값을 설정합니다.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children. For attribute nodes, this property has the same functionality as the &lt;see cref=&quot;P:System.Xml.XmlAttribute.Value&quot; /&gt; property.">노드와 모든 자식의 연결된 값입니다. Attribute 노드의 경우, 이 속성의 기능은 <see cref="P:System.Xml.XmlAttribute.Value" /> 속성의 기능과 같습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary vsli:raw="Sets the value of the attribute.">특성 값을 설정합니다.</summary>
      <returns vsli:raw="The attribute value.">특성 값입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately after the specified reference node.">지정된 노드를 지정된 참조 노드 바로 다음에 삽입합니다.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to insert.">삽입할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <param name="refChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is the reference node. The &lt;paramref name=&quot;newChild&quot; /&gt; is placed after the &lt;paramref name=&quot;refChild&quot; /&gt;.">참조 노드인 <see cref="T:System.Xml.XmlNode" />입니다. <paramref name="newChild" />는 <paramref name="refChild" /> 다음에 있습니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; inserted.">삽입된 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
<paramref name="refChild" />가 이 노드의 자식이 아닌 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately before the specified reference node.">지정된 노드를 지정된 참조 노드 바로 앞에 삽입합니다.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to insert.">삽입할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <param name="refChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is the reference node. The &lt;paramref name=&quot;newChild&quot; /&gt; is placed before this node.">참조 노드인 <see cref="T:System.Xml.XmlNode" />입니다. 이 노드 앞에 <paramref name="newChild" />가 있습니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; inserted.">삽입된 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">현재 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식인 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
<paramref name="refChild" />가 이 노드의 자식이 아닌 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the attribute node with the prefix removed. In the following example &amp;lt;book bk:genre= 'novel'&amp;gt;, the &lt;see langword=&quot;LocalName&quot; /&gt; of the attribute is &lt;see langword=&quot;genre&quot; /&gt;.">접두사가 제거된 Attribute 노드의 이름입니다. 다음 예에서 &lt;bk:genre 책 = 'novel'&gt;의 <see langword="LocalName" /> 특성은 <see langword="genre" />합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the attribute node.">Attribute 노드의 정규화된 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">이 노드의 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI of this node. If the attribute is not explicitly given a namespace, this property returns String.Empty.">이 노드의 네임스페이스 URI입니다. 해당 특성에 네임스페이스가 명시적으로 부여되지 않으면, 이 속성은 String.Empty를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type for &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes is XmlNodeType.Attribute.">
        <see langword="XmlAttribute" /> 노드의 노드 형식은 XmlNodeType.Attribute입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</summary>
      <returns vsli:raw="An XML document to which this node belongs.">이 노드가 속하는 XML 문서입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; to which the attribute belongs.">특성이 속한 <see cref="T:System.Xml.XmlElement" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; that the attribute belongs to or &lt;see langword=&quot;null&quot; /&gt; if this attribute is not part of an &lt;see langword=&quot;XmlElement&quot; /&gt;.">해당 특성이 속한 <see langword="XmlElement" />이거나, 이 특성이 <see langword="null" />의 일부가 아닌 경우 <see langword="XmlElement" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary vsli:raw="Gets the parent of this node. For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property always returns &lt;see langword=&quot;null&quot; /&gt;.">이 노드의 부모 노드를 가져옵니다. <see langword="XmlAttribute" /> 노드의 경우, 이 속성은 항상 <see langword="null" />을 반환합니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="XmlAttribute" /> 노드의 경우, 이 속성은 항상 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace prefix of this node. If there is no prefix, this property returns String.Empty.">이 노드의 네임스페이스 접두사입니다. 접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">이 노드가 읽기 전용인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The namespaceURI of this node is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; The specified prefix is &quot;xml&quot;, and the namespaceURI of this node is different from &quot;http://www.w3.org/XML/1998/namespace&quot;.  &#xA;  &#xA; This node is an attribute, the specified prefix is &quot;xmlns&quot;, and the namespaceURI of this node is different from &quot;http://www.w3.org/2000/xmlns/&quot;.  &#xA;  &#xA; This node is an attribute, and the qualifiedName of this node is &quot;xmlns&quot; [Namespaces].">지정된 접두사에 잘못된 문자가 포함된 경우  
지정된 접두사의 형식이 잘못된 경우  
이 노드의 namespaceURI가 <see langword="null" />인 경우  
지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우  
이 노드가 특성이고, 지정된 접두사가 “xmlns”이며, 이 노드의 namespaceURI가 “http://www.w3.org/2000/xmlns/”와 다른 경우  
이 노드가 특성이고 이 노드의 qualifiedName이 "xmlns" [Namespaces]인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the beginning of the list of child nodes for this node.">지정된 노드를 이 노드의 자식 노드 목록 앞에 추가합니다.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to add. If it is an &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt;, the entire contents of the document fragment are moved into the child list of this node.">추가할 <see cref="T:System.Xml.XmlNode" />입니다. <see cref="T:System.Xml.XmlDocumentFragment" />일 경우 문서 단편의 전체 내용이 이 노드의 자식 목록으로 이동합니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; added.">추가된 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary vsli:raw="Removes the specified child node.">지정된 자식 노드를 제거합니다.</summary>
      <param name="oldChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to remove.">제거할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; removed.">제거된 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node. Or this node is read-only.">
        <paramref name="oldChild" />가 이 노드의 자식이 아닌 경우 이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Replaces the child node specified with the new child node specified.">지정된 자식 노드를 지정된 새 자식 노드로 바꿉니다.</summary>
      <param name="newChild" vsli:raw="The new child &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">새 자식 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <param name="oldChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to replace.">바꿀 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; replaced.">바꾼 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.  &#xA;  &#xA; The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
이 노드가 읽기 전용인 경우  
<paramref name="oldChild" />가 이 노드의 자식이 아닌 경우</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary vsli:raw="Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.">스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; containing the post-schema-validation-infoset of this node.">이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary vsli:raw="Gets a value indicating whether the attribute value was explicitly set.">특성 값이 명시적으로 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute was explicitly given a value in the original instance document; otherwise, &lt;see langword=&quot;false&quot; /&gt;. A value of &lt;see langword=&quot;false&quot; /&gt; indicates that the value of the attribute came from the DTD.">원본 인스턴스 문서에서 이 특성에 값이 명시적으로 부여되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" /> 값은 해당 특성 값을 DTD에서 가져왔음을 나타냅니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property is the value of attribute.">노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. <see langword="XmlAttribute" /> 노드의 경우, 이 속성은 특성 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only and a set operation is called.">노드가 읽기 전용인데 set 작업이 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary vsli:raw="Represents a collection of attributes that can be accessed by name or index.">이름이나 인덱스로 액세스할 수 있는 특성의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute as the last node in the collection.">지정된 특성을 컬렉션의 마지막 노드로 삽입합니다.</summary>
      <param name="node" vsli:raw="The attribute to insert.">삽입할 특성입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to append to the collection.">컬렉션에 추가할 <see langword="XmlAttribute" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; was created from a document different from the one that created this collection.">이 컬렉션을 만든 문서와 다른 문서에서 <paramref name="node" />를 만든 경우</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects from this collection into the given array.">모든 <see cref="T:System.Xml.XmlAttribute" /> 개체를 이 컬렉션에서 지정된 배열로 복사합니다.</summary>
      <param name="array" vsli:raw="The array that is the destination of the objects copied from this collection.">이 컬렉션에서 복사된 개체의 대상인 배열입니다.</param>
      <param name="index" vsli:raw="The index in the array where copying begins.">복사를 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute immediately after the specified reference attribute.">지정된 특성을 지정된 참조 특성 바로 뒤에 삽입합니다.</summary>
      <param name="newNode" vsli:raw="The attribute to insert.">삽입할 특성입니다.</param>
      <param name="refNode" vsli:raw="The reference attribute. &lt;paramref name=&quot;newNode&quot; /&gt; is placed after the &lt;paramref name=&quot;refNode&quot; /&gt;.">참조 특성입니다. <paramref name="newNode" />는 <paramref name="refNode" /> 뒤에 삽입됩니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to insert into the collection.">컬렉션에 삽입할 <see langword="XmlAttribute" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newNode&quot; /&gt; was created from a document different from the one that created this collection. Or the &lt;paramref name=&quot;refNode&quot; /&gt; is not a member of this collection.">이 컬렉션을 만든 문서와 다른 문서에서 <paramref name="newNode" />를 만든 경우 또는 <paramref name="refNode" />가 이 컬렉션의 멤버가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute immediately before the specified reference attribute.">지정된 특성을 지정된 참조 특성 바로 앞에 삽입합니다.</summary>
      <param name="newNode" vsli:raw="The attribute to insert.">삽입할 특성입니다.</param>
      <param name="refNode" vsli:raw="The reference attribute. &lt;paramref name=&quot;newNode&quot; /&gt; is placed before the &lt;paramref name=&quot;refNode&quot; /&gt;.">참조 특성입니다. <paramref name="newNode" />는 <paramref name="refNode" /> 앞에 삽입됩니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to insert into the collection.">컬렉션에 삽입할 <see langword="XmlAttribute" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newNode&quot; /&gt; was created from a document different from the one that created this collection. Or the &lt;paramref name=&quot;refNode&quot; /&gt; is not a member of this collection.">이 컬렉션을 만든 문서와 다른 문서에서 <paramref name="newNode" />를 만든 경우 또는 <paramref name="refNode" />가 이 컬렉션의 멤버가 아닌 경우</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary vsli:raw="Gets the attribute with the specified index.">지정된 인덱스가 있는 특성을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the attribute.">특성의 인덱스입니다.</param>
      <returns vsli:raw="The attribute at the specified index.">지정 된 인덱스에 있는 특성입니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index being passed in is out of range.">전달된 인덱스가 범위를 벗어납니다.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary vsli:raw="Gets the attribute with the specified name.">지정된 이름이 있는 특성을 가져옵니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="The attribute with the specified name. If the attribute does not exist, this property returns &lt;see langword=&quot;null&quot; /&gt;.">지정 된 이름을 가진 특성입니다. 특성이 없는 경우 이 속성은 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary vsli:raw="Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성을 가져옵니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The attribute with the specified local name and namespace URI. If the attribute does not exist, this property returns &lt;see langword=&quot;null&quot; /&gt;.">지정 된 로컬 이름과 네임 스페이스 URI를 사용 하는 특성입니다. 특성이 없는 경우 이 속성은 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute as the first node in the collection.">지정된 특성을 컬렉션의 첫 노드로 삽입합니다.</summary>
      <param name="node" vsli:raw="The attribute to insert.">삽입할 특성입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; added to the collection.">컬렉션에 추가된 <see langword="XmlAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary vsli:raw="Removes the specified attribute from the collection.">컬렉션에서 지정된 특성을 제거합니다.</summary>
      <param name="node" vsli:raw="The attribute to remove.">제거할 특성입니다.</param>
      <returns vsli:raw="The node removed or &lt;see langword=&quot;null&quot; /&gt; if it is not found in the collection.">제거된 노드이거나 컬렉션에 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary vsli:raw="Removes all attributes from the collection.">컬렉션에서 모든 특성을 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the attribute corresponding to the specified index from the collection.">컬렉션에서 지정된 인덱스에 해당하는 특성을 제거합니다.</summary>
      <param name="i" vsli:raw="The index of the node to remove. The first node has index 0.">제거할 노드의 인덱스입니다. 첫 번째 노드에 인덱스 0이 있습니다.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt; if there is no attribute at the specified index.">지정된 인덱스에 특성이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; using its &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property.">해당 <see cref="T:System.Xml.XmlNode" /> 속성을 사용하여 <see cref="P:System.Xml.XmlNode.Name" />를 추가합니다.</summary>
      <param name="node" vsli:raw="An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.">이 컬렉션에 저장할 Attribute 노드입니다. 노드 이름을 사용하여 나중에 노드에 액세스할 수 있습니다. 컬렉션에 해당 이름의 노드가 이미 있으면 새 노드로 바뀌고, 그렇지 않으면 노드가 컬렉션 끝에 추가됩니다.</param>
      <returns vsli:raw="If the &lt;paramref name=&quot;node&quot; /&gt; replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.">
        <paramref name="node" />가 기존 노드를 같은 이름으로 바꾸면 이전 노드가 반환되고, 그렇지 않으면 추가된 노드가 반환됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; was created from a different &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; than the one that created this collection.  &#xA;  &#xA; This &lt;see langword=&quot;XmlAttributeCollection&quot; /&gt; is read-only.">이 컬렉션을 만든 문서와 다른 <see cref="T:System.Xml.XmlDocument" />에서 <paramref name="node" />를 만든 경우  
이 <see langword="XmlAttributeCollection" />이 읽기 전용인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that is already an attribute of another &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; object. To re-use attributes in other elements, you must clone the &lt;see langword=&quot;XmlAttribute&quot; /&gt; objects you want to re-use.">
        <paramref name="node" />가 이미 다른 <see cref="T:System.Xml.XmlAttribute" /> 개체의 특성인 <see cref="T:System.Xml.XmlElement" />인 경우. 다른 요소에서 특성을 다시 사용하려면 다시 사용할 <see langword="XmlAttribute" /> 개체를 복제해야 합니다.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />를 참조하십시오.</summary>
      <param name="array" vsli:raw="The array that is the destination of the objects copied from this collection.">이 컬렉션에서 복사된 개체의 대상인 배열입니다.</param>
      <param name="index" vsli:raw="The index in the array where copying begins.">복사를 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />를 참조하세요.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; that contains the count of the attributes.">특성의 수를 포함 하는입니다.<see langword="int" /></returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />를 참조하십시오.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized.">
        <see langword="true" />컬렉션이 동기화 되 면입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />를 참조하십시오.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the root of the collection.">
        <see cref="T:System.Object" /> 컬렉션의 루트인입니다.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary vsli:raw="Represents a CDATA section.">CDATA 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlCDataSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="data" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains character data.">문자 데이터가 포함된 <see cref="T:System.String" />입니다.</param>
      <param name="doc" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlDocument" /> 개체</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because CDATA nodes do not have children, regardless of the parameter setting, the cloned node will always include the data content.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다. CDATA 노드에는 자식이 없으므로 복제된 노드는 매개 변수 설정에 상관 없이 항상 데이터 내용을 포함하게 됩니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For CDATA nodes, the local name is &lt;see langword=&quot;#cdata-section&quot; /&gt;.">CDATA 노드의 경우 로컬 이름은 <see langword="#cdata-section" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For CDATA nodes, the name is &lt;see langword=&quot;#cdata-section&quot; /&gt;.">CDATA 노드의 경우 이 이름은 <see langword="#cdata-section" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For CDATA nodes, the value is XmlNodeType.CDATA.">노드 형식입니다. CDATA 노드의 경우 이 값은 XmlNodeType.CDATA입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">현재 노드의 부모인 <see langword="XmlNode" />입니다. 노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다. 다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 자식을 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary vsli:raw="Provides text manipulation methods that are used by several classes.">일부 클래스에서 사용하는 텍스트 조작 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlCharacterData&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlCharacterData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="data" vsli:raw="String that contains character data to be added to document.">문서에 추가할 문자 데이터가 포함된 문자열입니다.</param>
      <param name="doc" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to contain character data.">문자 데이터를 포함하기 위한 <see cref="T:System.Xml.XmlDocument" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary vsli:raw="Appends the specified string to the end of the character data of the node.">지정한 문자열을 노드의 문자 데이터 끝에 추가합니다.</summary>
      <param name="strData" vsli:raw="The string to insert into the existing string.">기존 문자열에 삽입할 문자열입니다.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary vsli:raw="Contains the data of the node.">노드의 데이터가 포함됩니다.</summary>
      <returns vsli:raw="The data of the node.">노드의 데이터입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary vsli:raw="Removes a range of characters from the node.">노드에서 문자 범위를 제거합니다.</summary>
      <param name="offset" vsli:raw="The position within the string to start deleting.">삭제를 시작할 문자열 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to delete.">삭제할 문자의 수입니다.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all the children of the node.">노드의 연결된 값과 모든 자식 노드를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The concatenated values of the node and all the children of the node.">노드의 연결된 값과 모든 자식 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary vsli:raw="Inserts the specified string at the specified character offset.">지정된 문자 오프셋에 지정된 문자열을 삽입합니다.</summary>
      <param name="offset" vsli:raw="The position within the string to insert the supplied string data.">제공된 문자열 데이터를 삽입할 문자열 내의 위치입니다.</param>
      <param name="strData" vsli:raw="The string data that is to be inserted into the existing string.">기존 문자열에 삽입할 문자열 데이터입니다.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary vsli:raw="Gets the length of the data, in characters.">데이터의 길이(문자 수)를 가져옵니다.</summary>
      <returns vsli:raw="The length, in characters, of the string in the &lt;see cref=&quot;P:System.Xml.XmlCharacterData.Data&quot; /&gt; property. The length may be zero; that is, CharacterData nodes can be empty.">
        <see cref="P:System.Xml.XmlCharacterData.Data" /> 속성의 문자열 길이(문자 수)입니다. 이 길이는 0일 수 있습니다. 즉, CharacterData 노드가 비어 있을 수 있습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Replaces the specified number of characters starting at the specified offset with the specified string.">지정된 오프셋에서 시작하여 지정된 수의 문자를 지정된 문자열로 교체합니다.</summary>
      <param name="offset" vsli:raw="The position within the string to start replacing.">교체를 시작할 문자열 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to replace.">교체할 문자 수입니다.</param>
      <param name="strData" vsli:raw="The new data that replaces the old string data.">기존 문자열 데이터를 대체하는 새 데이터입니다.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves a substring of the full string from the specified range.">지정된 범위에서 전체 문자열의 부분 문자열을 검색합니다.</summary>
      <param name="offset" vsli:raw="The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data.">검색을 시작할 문자열 내의 위치입니다. 오프셋이 0이면 시작 위치가 데이터의 시작 부분임을 나타냅니다.</param>
      <param name="count" vsli:raw="The number of characters to retrieve.">검색할 문자 수입니다.</param>
      <returns vsli:raw="The substring corresponding to the specified range.">지정된 범위에 해당하는 부분 문자열입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the node.">노드의 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Node is read-only.">노드가 읽기 전용인 경우</exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary vsli:raw="Represents the content of an XML comment.">XML 주석의 내용을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlComment" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="comment" vsli:raw="The content of the comment element.">주석 요소의 콘텐츠입니다.</param>
      <param name="doc" vsli:raw="The parent XML document.">부모 XML 문서입니다.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다. Comment 노드에는 자식이 없으므로 복제된 노드는 매개 변수 설정에 상관 없이 항상 텍스트 내용을 포함합니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For comment nodes, the value is &lt;see langword=&quot;#comment&quot; /&gt;.">Comment 노드의 경우 이 값은 <see langword="#comment" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For comment nodes, the value is &lt;see langword=&quot;#comment&quot; /&gt;.">Comment 노드의 경우 이 값은 <see langword="#comment" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For comment nodes, the value is XmlNodeType.Comment.">Comment 노드의 경우 이 값은 XmlNodeType.Comment입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. Because comment nodes do not have children, this method has no effect.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다. Comment 노드에 자식이 없으므로 이 메서드는 아무런 영향을 주지 않습니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary vsli:raw="Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returned are locale-independent.">XML 이름을 인코딩 및 디코딩하고 공용 언어 런타임 형식과 XSD(XML 스키마 정의) 언어 형식 사이의 변환 메서드를 제공합니다. 데이터 형식을 변환할 때 반환되는 값은 로캘과 무관합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlConvert&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlConvert" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary vsli:raw="Decodes a name. This method does the reverse of the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeLocalName(System.String)&quot; /&gt; methods.">이름을 디코딩합니다. 이 메서드는 <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> 메서드와 <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> 메서드와 반대로 수행합니다.</summary>
      <param name="name" vsli:raw="The name to be transformed.">변환될 이름입니다.</param>
      <returns vsli:raw="The decoded name.">디코딩한 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary vsli:raw="Converts the name to a valid XML local name.">이름을 올바른 XML 로컬 이름으로 변환합니다.</summary>
      <param name="name" vsli:raw="The name to be encoded.">인코딩할 이름입니다.</param>
      <returns vsli:raw="The encoded name.">인코딩된 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary vsli:raw="Converts the name to a valid XML name.">이름을 올바른 XML 이름으로 변환합니다.</summary>
      <param name="name" vsli:raw="A name to be translated.">변환할 이름입니다.</param>
      <returns vsli:raw="The name with any invalid characters replaced by an escape string.">잘못된 문자가 이스케이프 문자열로 바뀐 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary vsli:raw="Verifies the name is valid according to the XML specification.">XML 사양에 따라 올바른 이름인지 확인합니다.</summary>
      <param name="name" vsli:raw="The name to be encoded.">인코딩할 이름입니다.</param>
      <returns vsli:raw="The encoded name.">인코딩된 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary vsli:raw="Checks whether the passed-in character is a valid non-colon character type.">전달된 문자가 콜론이 아닌 올바른 문자 형식인지 확인합니다.</summary>
      <param name="ch" vsli:raw="The character to verify as a non-colon character.">콜론이 아닌 문자로 확인할 문자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character is a valid non-colon character type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">문자가 콜론이 아닌 올바른 문자 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary vsli:raw="Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise &lt;see langword=&quot;null&quot; /&gt;.">인수에 있는 문자가 올바른 공용 ID 문자이면 전달된 문자 인스턴스를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</summary>
      <param name="ch" vsli:raw="&lt;see cref=&quot;T:System.Char&quot; /&gt; object to validate.">유효성을 검사할 <see cref="T:System.Char" /> 개체입니다.</param>
      <returns vsli:raw="The passed-in character if the character is a valid public id character, otherwise &lt;see langword=&quot;null&quot; /&gt;.">문자가 올바른 공용 id 문자이면 전달된 문자이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid Start Name Character type.">전달된 문자가 올바른 시작 이름 문자 형식인지 확인합니다.</summary>
      <param name="ch" vsli:raw="The character to validate.">유효성을 확인할 문자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character is a valid Start Name Character type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전달된 문자가 올바른 시작 이름 문자 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid XML whitespace character.">전달된 문자가 올바른 XML 공백 문자인지 확인합니다.</summary>
      <param name="ch" vsli:raw="The character to validate.">유효성을 확인할 문자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in character is a valid XML whitespace character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전달된 문자가 올바른 XML 공백 문자이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid XML character.">전달된 문자가 올바른 XML 문자인지 확인합니다.</summary>
      <param name="ch" vsli:raw="The character to validate.">유효성을 확인할 문자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in character is a valid XML character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전달된 문자가 올바른 XML 문자이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary vsli:raw="Checks if the passed-in surrogate pair of characters is a valid XML character.">전달된 서로게이트 문자 쌍이 올바른 XML 문자인지 확인합니다.</summary>
      <param name="lowChar" vsli:raw="The surrogate character to validate.">유효성을 검사할 서로게이트 문자입니다.</param>
      <param name="highChar" vsli:raw="The surrogate character to validate.">유효성을 검사할 서로게이트 문자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in surrogate pair of characters is a valid XML character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전달된 서로게이트 문자 쌍이 올바른 XML 문자이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Boolean" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value, that is, &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Boolean" /> 값, 즉 <see langword="true" /> 또는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; does not represent a &lt;see langword=&quot;Boolean&quot; /&gt; value.">
        <paramref name="s" />가 <see langword="Boolean" /> 값을 나타내지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Byte" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Byte&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Byte" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Byte.MinValue&quot;&gt;Byte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Byte.MaxValue&quot;&gt;Byte.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.Byte.MinValue" />보다 작거나 <see cref="F:System.Byte.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Char&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Char" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string containing a single character to convert.">변환할 단일 문자가 포함된 문자열입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Char&quot; /&gt; representing the single character.">단일 문자를 나타내는 <see langword="Char" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of the &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> 매개 변수의 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter contains more than one character.">
        <paramref name="s" /> 매개 변수에 문자가 두 개 이상 포함된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.DateTime" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="DateTime" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is an empty string or is not in the correct format.">
        <paramref name="s" />가 빈 문자열이거나 형식이 잘못된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.DateTime" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="format" vsli:raw="The format structure to apply to the converted &lt;see langword=&quot;DateTime&quot; /&gt;. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets. The string is validated against this format.">변환된 <see langword="DateTime" />에 적용할 형식 구조입니다. 올바른 형식에는 "yyyy-MM-ddTHH:mm:sszzzzzz" 및 그 하위 집합이 포함됩니다. 문자열은 이 형식에 대해 유효성을 확인합니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="DateTime" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or &lt;paramref name=&quot;format&quot; /&gt; is String.Empty  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;s&quot; /&gt; does not contain a date and time that corresponds to &lt;paramref name=&quot;format&quot; /&gt;.">
        <paramref name="s" /> 또는 <paramref name="format" />이 String.Empty인 경우 
또는 
 <paramref name="s" />에 <paramref name="format" />과 일치하는 날짜와 시간이 포함되지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.DateTime" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="formats" vsli:raw="An array containing the format structures to apply to the converted &lt;see langword=&quot;DateTime&quot; /&gt;. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.">변환된 <see langword="DateTime" />에 적용할 형식 구조가 포함된 배열입니다. 올바른 형식에는 "yyyy-MM-ddTHH:mm:sszzzzzz" 및 그 하위 집합이 포함됩니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="DateTime" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or an element of &lt;paramref name=&quot;formats&quot; /&gt; is String.Empty  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;s&quot; /&gt; does not contain a date and time that corresponds to any of the elements of &lt;paramref name=&quot;formats&quot; /&gt;.">
        <paramref name="s" /> 또는 <paramref name="formats" />의 요소가 String.Empty인 경우 
또는 
 <paramref name="s" />에 <paramref name="formats" />의 요소에 해당하는 날짜와 시간이 포함되지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; specified.">지정된 <see cref="T:System.String" />를 사용하여 <see cref="T:System.DateTime" />을 <see cref="T:System.Xml.XmlDateTimeSerializationMode" />으로 변환합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; value to convert.">변환할 <see cref="T:System.String" /> 값입니다.</param>
      <param name="dateTimeOption" vsli:raw="One of the enumeration values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.">UTC(Coordinated Universal Time) 날짜를 현지 시간으로 변환할지 아니면 UTC로 유지할지 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent of the &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.DateTime" />에 해당하는 <see cref="T:System.String" /> 값입니다.</returns>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dateTimeOption&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dateTimeOption" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is an empty string or is not in a valid format.">
        <paramref name="s" />가 빈 문자열이거나 형식이 잘못된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">제공된 <see cref="T:System.String" />을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert. The string must conform to a subset of the W3C Recommendation for the XML dateTime type. For more information, see the dateTime section of the XML Schema specification.">변환할 문자열입니다.  
 참고 이 문자열은 W3C 권장 사항 중 XML dateTime 형식에 대한 부분을 준수해야 합니다. 자세한 내용은 XML 스키마 사양의 dateTime 섹션을 참조하세요.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">제공된 문자열에 해당하는 <see cref="T:System.DateTimeOffset" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The argument passed to this method is outside the range of allowable values. For information about allowable values, see &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">이 메서드에 전달된 인수가 허용되는 값 범위를 벗어나는 경우. 허용되는 값에 대한 자세한 내용은 <see cref="T:System.DateTimeOffset" />을 참조하십시오.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type. For more information, see the dateTime section of the XML Schema specification.">이 메서드에 전달된 인수가 W3C 권장 사항 중 XML dateTime 형식에 대한 부분을 준수하지 않는 경우. 자세한 내용은 XML 스키마 사양의 dateTime 섹션을 참조하세요.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">제공된 <see cref="T:System.String" />을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="format" vsli:raw="The format from which &lt;paramref name=&quot;s&quot; /&gt; is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..) The string &lt;paramref name=&quot;s&quot; /&gt; is validated against this format.">
        <paramref name="s" />를 변환할 형식입니다. 형식 매개 변수는 W3C 권장 사항 중 XML dateTime 형식에 대한 부분이 될 수 있습니다. (자세한 내용은 XML 스키마 사양의 dateTime 섹션을 참조하세요.) 이 형식을 사용하여 문자열 <paramref name="s" />의 유효성을 검사합니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">제공된 문자열에 해당하는 <see cref="T:System.DateTimeOffset" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or &lt;paramref name=&quot;format&quot; /&gt; is an empty string or is not in the specified format.">
        <paramref name="s" /> 또는 <paramref name="format" />이 빈 문자열이거나 지정된 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">제공된 <see cref="T:System.String" />을 해당 <see cref="T:System.DateTimeOffset" />으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="formats" vsli:raw="An array of formats from which &lt;paramref name=&quot;s&quot; /&gt; can be converted. Each format in &lt;paramref name=&quot;formats&quot; /&gt; can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..) The string &lt;paramref name=&quot;s&quot; /&gt; is validated against one of these formats.">
        <paramref name="s" />를 변환할 수 있는 형식의 배열입니다. <paramref name="formats" />의 각 형식은 W3C 권장 사항 중 XML dateTime 형식에 대한 부분이 될 수 있습니다. (자세한 내용은 XML 스키마 사양의 dateTime 섹션을 참조하세요.) 이러한 형식 중 하나를 사용하여 문자열 <paramref name="s" />의 유효성을 검사합니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">제공된 문자열에 해당하는 <see cref="T:System.DateTimeOffset" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Decimal" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Decimal&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Decimal.MinValue&quot;&gt;Decimal.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Double" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Double" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Double.MinValue&quot;&gt;Double.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.Double.MinValue" />보다 작거나 <see cref="F:System.Double.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Guid" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Guid&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Guid" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int16&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Int16" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int16&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Int16" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int16.MinValue&quot;&gt;Int16.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int16.MaxValue&quot;&gt;Int16.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int32&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Int32" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Int32" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int64&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Int64" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Int64" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.Int64.MinValue" />보다 작거나 <see cref="F:System.Int64.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.SByte&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.SByte" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="An &lt;see langword=&quot;SByte&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="SByte" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.SByte.MinValue&quot;&gt;SByte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.SByte.MaxValue&quot;&gt;SByte.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.Single" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="Single" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Single.MinValue&quot;&gt;Single.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.Single.MinValue" />보다 작거나 <see cref="F:System.Single.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Boolean" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Boolean&quot; /&gt;, that is, &quot;true&quot; or &quot;false&quot;.">
        <see langword="Boolean" />에 대한 문자열 표현, 즉 "true" 또는 "false"입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Byte&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Byte" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Byte&quot; /&gt;.">
        <see langword="Byte" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Char&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Char" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Char&quot; /&gt;.">
        <see langword="Char" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.DateTime" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;DateTime&quot; /&gt; in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.">형식이 yyyy-MM-ddTHH:mm:ss(여기서 'T'는 상수 리터럴)인 <see langword="DateTime" />에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.DateTime" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <param name="format" vsli:raw="The format structure that defines how to display the converted string. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.">변환된 문자열을 표시하는 방법을 정의하는 형식 구조입니다. 올바른 형식에는 "yyyy-MM-ddTHH:mm:sszzzzzz" 및 그 하위 집합이 포함됩니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;DateTime&quot; /&gt; in the specified format.">지정된 형식의 <see langword="DateTime" />에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; specified.">지정된 <see cref="T:System.DateTime" />를 사용하여 <see cref="T:System.String" />을 <see cref="T:System.Xml.XmlDateTimeSerializationMode" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to convert.">변환할 <see cref="T:System.DateTime" /> 값입니다.</param>
      <param name="dateTimeOption" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; values that specify how to treat the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> 값 처리 방법을 지정하는 <see cref="T:System.DateTime" /> 값 중 하나입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; equivalent of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.String" />에 해당하는 <see cref="T:System.DateTime" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;dateTimeOption&quot; /&gt; value is not valid.">
        <paramref name="dateTimeOption" /> 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; or &lt;paramref name=&quot;dateTimeOption&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 또는 <paramref name="dateTimeOption" /> 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">제공된 <see cref="T:System.DateTimeOffset" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to be converted.">변환될 <see cref="T:System.DateTimeOffset" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">제공된 <see cref="T:System.String" />의 <see cref="T:System.DateTimeOffset" /> 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt; in the specified format.">제공된 <see cref="T:System.DateTimeOffset" />을 지정된 형식의 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to be converted.">변환될 <see cref="T:System.DateTimeOffset" />입니다.</param>
      <param name="format" vsli:raw="The format to which &lt;paramref name=&quot;s&quot; /&gt; is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..)">
        <paramref name="s" />를 변환할 대상 형식입니다. 형식 매개 변수는 W3C 권장 사항 중 XML dateTime 형식에 대한 부분이 될 수 있습니다. (자세한 내용은 XML 스키마 사양의 dateTime 섹션을 참조하세요.)</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation in the specified format of the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">제공된 <see cref="T:System.String" />을 지정된 형식으로 나타낸 <see cref="T:System.DateTimeOffset" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Decimal" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Decimal&quot; /&gt;.">
        <see langword="Decimal" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Double" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see langword="Double" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Guid&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Guid" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Guid&quot; /&gt;.">
        <see langword="Guid" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int16&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Int16" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">
        <see langword="Int16" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int32&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Int32" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see langword="Int32" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int64&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Int64" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see langword="Int64" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.SByte&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.SByte" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;SByte&quot; /&gt;.">
        <see langword="SByte" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Single&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Single" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see langword="Single" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.TimeSpan" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;TimeSpan&quot; /&gt;.">
        <see langword="TimeSpan" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt16&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.UInt16" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">
        <see langword="UInt16" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt32&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.UInt32" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see langword="UInt32" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt64&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.UInt64" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see langword="UInt64" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.TimeSpan" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert. The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.">변환할 문자열입니다. 형식 문자열은 W3C XML Schema Part 2를 준수해야 합니다. 기간에 대한 Datatypes 권장 사항을 참조하세요.</param>
      <returns vsli:raw="A &lt;see langword=&quot;TimeSpan&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="TimeSpan" /> 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in correct format to represent a &lt;see langword=&quot;TimeSpan&quot; /&gt; value.">
        <paramref name="s" />가 <see langword="TimeSpan" /> 값을 나타내는 올바른 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt16&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.UInt16" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt16&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="UInt16" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt16.MinValue&quot;&gt;UInt16.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.UInt16.MinValue" />보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.UInt32" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="UInt32" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.UInt32.MinValue" />보다 작거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt; equivalent.">
        <see cref="T:System.String" />을 해당하는 <see cref="T:System.UInt64" /> 값으로 변환합니다.</summary>
      <param name="s" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; equivalent of the string.">문자열에 해당하는 <see langword="UInt64" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" />가 올바른 형식이 아닙니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;.">
        <paramref name="s" />는 <see cref="F:System.UInt64.MinValue" />보다 작거나 <see cref="F:System.UInt64.MaxValue" />보다 큰 숫자를 나타냅니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary vsli:raw="Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.">해당 이름이 W3C Extended Markup Language 권장 사항에 따라 올바른 이름인지 확인합니다.</summary>
      <param name="name" vsli:raw="The name to verify.">유효성을 확인할 이름입니다.</param>
      <returns vsli:raw="The name, if it is a valid XML name.">이름입니다. 단, 이름이 올바른 XML 이름인 경우에 한합니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name.">
        <paramref name="name" />이 올바른 XML 이름이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or String.Empty.">
        <paramref name="name" />이 <see langword="null" /> 또는 String.Empty인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary vsli:raw="Verifies that the name is a valid &lt;see langword=&quot;NCName&quot; /&gt; according to the W3C Extended Markup Language recommendation. An &lt;see langword=&quot;NCName&quot; /&gt; is a name that cannot contain a colon.">이름이 W3C Extended Markup Language 권장 사항에 따라 올바른 <see langword="NCName" />인지 확인합니다. <see langword="NCName" />은 콜론이 포함될 수 없는 이름입니다.</summary>
      <param name="name" vsli:raw="The name to verify.">유효성을 확인할 이름입니다.</param>
      <returns vsli:raw="The name, if it is a valid NCName.">이름입니다. 단, 이름이 올바른 NCName인 경우에 한합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" />이 <see langword="null" /> 또는 <c>String.Empty</c>입니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid non-colon name.">
        <paramref name="name" />을를은 유효한 콜론 없는 이름이 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary vsli:raw="Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation.">W3C XML Schema Part2를 기준으로 문자열이 올바른 NMTOKEN인지 확인합니다. Datatypes 권장 사항</summary>
      <param name="name" vsli:raw="The string you wish to verify.">확인할 문자열입니다.</param>
      <returns vsli:raw="The name token, if it is a valid NMTOKEN.">이름 토큰입니다. 단, 문자열이 올바른 NMTOKEN인 경우에 한합니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The string is not a valid name token.">문자열이 올바른 이름 토큰이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary vsli:raw="Returns the passed in string instance if all the characters in the string argument are valid public id characters.">문자열 인수에 있는 모든 문자가 올바른 공용 ID 문자이면 전달된 문자열 인스턴스를 반환합니다.</summary>
      <param name="publicId" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the id to validate.">유효성을 검사할 ID가 포함된 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The passed-in string if all the characters in the argument are valid public id characters.">인수에 있는 모든 문자가 올바른 공용 ID 문자이면 전달된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary vsli:raw="Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.">W3C XML Schema Part2를 기준으로 문자열이 올바른 토큰인지 확인합니다. Datatypes 권장 사항을 참조하세요.</summary>
      <param name="token" vsli:raw="The string value you wish to verify.">확인할 문자열 값입니다.</param>
      <returns vsli:raw="The token, if it is a valid token.">토큰입니다. 단, 문자열이 올바른 토큰인 경우에 한합니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The string value is not a valid token.">문자열 값이 올바른 토큰이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary vsli:raw="Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.">문자열 인수에 있는 모든 문자가 올바른 공백 문자이면 전달된 문자열 인스턴스를 반환합니다.</summary>
      <param name="content" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; to verify.">확인할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise &lt;see langword=&quot;null&quot; /&gt;.">문자열 인수에 있는 모든 문자가 올바른 공백 문자이면 전달된 문자열 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary vsli:raw="Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an &lt;see langword=&quot;XmlException&quot; /&gt; is thrown with information on the first invalid character encountered.">문자열 인수의 모든 문자와 서로게이트 쌍 문자가 올바른 XML 문자인 경우 전달된 문자열을 반환하고 그렇지 않으면 첫 번째 잘못된 문자에 대한 정보로 <see langword="XmlException" />을 throw합니다.</summary>
      <param name="content" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains characters to verify.">확인할 문자가 포함된 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an &lt;see langword=&quot;XmlException&quot; /&gt; is thrown with information on the first invalid character encountered.">문자열 인수의 모든 문자와 서로게이트 쌍 문자가 올바른 XML 문자인 경우 전달된 문자열이고, 그렇지 않으면 첫 번째 잘못된 문자에 대한 정보로 <see langword="XmlException" />을 throw합니다.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary vsli:raw="Specifies how to treat the time value when converting between string and &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">문자열과 <see cref="T:System.DateTime" /> 사이에 변환할 때 시간 값을 처리하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary vsli:raw="Treat as local time. If the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object represents a Coordinated Universal Time (UTC), it is converted to the local time.">현지 시간으로 처리합니다. <see cref="T:System.DateTime" /> 개체가 UTC(Coordinated Universal Time)를 나타내면 값을 현지 시간으로 변환합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary vsli:raw="Time zone information should be preserved when converting.">변환할 때 표준 시간대 정보를 유지합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary vsli:raw="Treat as a local time if a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is being converted to a string. If a string is being converted to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, convert to a local time if a time zone is specified.">
        <see cref="T:System.DateTime" />을 문자열로 변환하는 경우 값을 현지 시간으로 처리합니다. 문자열이 <see cref="T:System.DateTime" />으로 변환되는 경우 표준 시간대가 지정되면 현지 시간으로 변환합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary vsli:raw="Treat as a UTC. If the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object represents a local time, it is converted to a UTC.">UTC로 처리합니다. <see cref="T:System.DateTime" /> 개체가 현지 시간을 나타내면 값을 UTC로 변환합니다.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary vsli:raw="Represents the XML declaration node &amp;lt;?xml version='1.0'...?&amp;gt;.">XML 선언 노드 &lt;?xml version='1.0'...?&gt;를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDeclaration&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlDeclaration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="version" vsli:raw="The XML version; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Version&quot; /&gt; property.">XML 버전입니다. <see cref="P:System.Xml.XmlDeclaration.Version" /> 속성을 참조하십시오.</param>
      <param name="encoding" vsli:raw="The encoding scheme; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Encoding&quot; /&gt; property.">인코딩 체계입니다. <see cref="P:System.Xml.XmlDeclaration.Encoding" /> 속성을 참조하십시오.</param>
      <param name="standalone" vsli:raw="Indicates whether the XML document depends on an external DTD; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Standalone&quot; /&gt; property.">XML 문서가 외부 DTD에 따라 달라지는지 여부를 나타냅니다. <see cref="P:System.Xml.XmlDeclaration.Standalone" /> 속성을 참조하십시오.</param>
      <param name="doc" vsli:raw="The parent XML document.">부모 XML 문서입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다. <see langword="XmlDeclaration" /> 노드에는 자식이 없으므로 복제된 노드는 매개 변수 설정에 상관 없이 항상 데이터 값을 포함합니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding level of the XML document.">XML 문서의 인코딩 수준을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The valid character encoding name. The most commonly supported character encoding names for XML are the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Category&lt;/term&gt;&lt;description&gt; Encoding Names&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Unicode&lt;/term&gt;&lt;description&gt; UTF-8, UTF-16&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ISO 10646&lt;/term&gt;&lt;description&gt; ISO-10646-UCS-2, ISO-10646-UCS-4&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ISO 8859&lt;/term&gt;&lt;description&gt; ISO-8859-n (where &quot;n&quot; is a digit from 1 to 9)&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; JIS X-0208-1997&lt;/term&gt;&lt;description&gt; ISO-2022-JP, Shift_JIS, EUC-JP&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; This value is optional. If a value is not set, this property returns String.Empty.  &#xA;  &#xA; If an encoding attribute is not included, UTF-8 encoding is assumed when the document is written or saved out.">올바른 문자 인코딩 이름입니다. 다음은 가장 일반적으로 지원되는 XML 문자 인코딩 이름입니다.  
  범주  

  인코딩 이름  

  유니코드(Unicode)  

  UTF-8, UTF-16  

  ISO 10646  

  ISO-10646-UCS-2, ISO-10646-UCS-4  

  ISO 8859  

  ISO-8859-n(여기서 "n"은 1에서 9 사이의 숫자임)  

  JIS X-0208-1997  

  ISO-2022-JP, Shift_JIS, EUC-JP  

   

 이 값은 선택 사항입니다. 값이 설정되지 않으면 이 속성은 String.Empty를 반환합니다.  
인코딩 속성이 포함되지 않으면 문서를 쓰거나 저장할 때 UTF-8 인코딩을 가정합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt;.">
        <see langword="XmlDeclaration" />의 연결된 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The concatenated values of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt; (that is, everything between &lt;c&gt;&amp;lt;?xml&lt;/c&gt; and &lt;c&gt;?&amp;gt;&lt;/c&gt;).">연결된 된 값을 <see langword="XmlDeclaration" /> (사이의 모든 것 이므로 <c>&lt;? xml</c> 및 <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, the local name is &lt;see langword=&quot;xml&quot; /&gt;.">
        <see langword="XmlDeclaration" /> 노드의 경우 이 이름은 <see langword="xml" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, the name is &lt;see langword=&quot;xml&quot; /&gt;.">
        <see langword="XmlDeclaration" /> 노드의 경우 이 이름은 <see langword="xml" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, this value is XmlNodeType.XmlDeclaration.">
        <see langword="XmlDeclaration" /> 노드의 경우 이 값은 XmlNodeType.XmlDeclaration입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the value of the standalone attribute.">독립형 특성의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Valid values are &lt;see langword=&quot;yes&quot; /&gt; if all entity declarations required by the XML document are contained within the document or &lt;see langword=&quot;no&quot; /&gt; if an external document type definition (DTD) is required. If a standalone attribute is not present in the XML declaration, this property returns String.Empty.">유효한 값은 XML 문서에서 필요로 하는 모든 엔터티 선언이 문서 내에 포함되는 경우에는 <see langword="yes" />이고, 외부 DTD(문서 형식 정의)를 필요로 하는 경우에는 <see langword="no" />입니다. XML 선언에 독립형 특성이 없으면 이 속성은 String.Empty를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt;.">
        <see langword="XmlDeclaration" />의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The contents of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt; (that is, everything between &lt;c&gt;&amp;lt;?xml&lt;/c&gt; and &lt;c&gt;?&amp;gt;&lt;/c&gt;).">콘텐츠를 <see langword="XmlDeclaration" /> (사이의 모든 것 이므로 <c>&lt;? xml</c> 및 <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary vsli:raw="Gets the XML version of the document.">XML 버전의 문서를 가져옵니다.</summary>
      <returns vsli:raw="The value is always &lt;see langword=&quot;1.0&quot; /&gt;.">값은 항상 <see langword="1.0" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. Because &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes do not have children, this method has no effect.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 자식을 저장합니다. <see langword="XmlDeclaration" /> 노드에 자식이 없으므로 이 메서드는 아무런 영향을 주지 않습니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary vsli:raw="Represents an XML document. You can use this class to load, validate, edit, add, and position XML in a document.">XML 문서를 나타냅니다. 이 클래스를 사용하여 문서에서 XML 로드, 유효성 검사, 편집, 추가 및 위치 지정을 수행할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt;.">지정된 <see langword="XmlDocument" />를 사용하여 <see cref="T:System.Xml.XmlImplementation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="imp" vsli:raw="The &lt;see langword=&quot;XmlImplementation&quot; /&gt; to use.">사용할 <see langword="XmlImplementation" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 <see langword="XmlDocument" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">현재 노드의 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="The location from which the node was loaded.">노드를 로드한 위치입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The cloned &lt;see langword=&quot;XmlDocument&quot; /&gt; node.">복제된 <see langword="XmlDocument" /> 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlDocument.Name" />을 가진 <see cref="T:System.Xml.XmlAttribute" />를 만듭니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute. If the name contains a colon, the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property reflects the part of the name preceding the first colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property reflects the part of the name following the first colon. The &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt; remains empty unless the prefix is a recognized built-in prefix such as xmlns. In this case &lt;see langword=&quot;NamespaceURI&quot; /&gt; has a value of &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;.">특성의 정규화된 이름입니다. 이름에 콜론이 포함되어 있는 경우, <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 첫 번째 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 첫 번째 콜론 뒤의 이름 부분을 반영합니다. 접두사가 xmlns같은 인식된 기본 제공되는 접두사가 아닌 경우 <see cref="P:System.Xml.XmlNode.NamespaceURI" />는 비어 있습니다. 이 경우 <see langword="NamespaceURI" />에 <c></c>의 값이 있습니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">새 <see langword="XmlAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified qualified name and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 정규화된 이름과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlAttribute" />를 만듭니다.</summary>
      <param name="qualifiedName" vsli:raw="The qualified name of the attribute. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property will reflect the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property will reflect the part of the name after the colon.">특성의 정규화된 이름입니다. 이름에 콜론이 포함되어 있는 경우, <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 콜론 뒤의 이름 부분을 반영합니다.</param>
      <param name="namespaceURI" vsli:raw="The namespaceURI of the attribute. If the qualified name includes a prefix of xmlns, then this parameter must be &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;.">특성의 네임스페이스 URI입니다. 정규화된 이름에 xmlns 접두사가 포함된 경우 이 매개 변수는 <c></c>이어야 합니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">새 <see langword="XmlAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlAttribute" />를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">특성의 접두사입니다. String.Empty와 <see langword="null" />은 같습니다.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent. If &lt;paramref name=&quot;prefix&quot; /&gt; is xmlns, then this parameter must be &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;; otherwise an exception is thrown.">특성의 네임스페이스 URI입니다. String.Empty와 <see langword="null" />은 같습니다. <paramref name="prefix" />가 xmlns일 경우 이 매개 변수는 <c></c>이어야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">새 <see langword="XmlAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; containing the specified data.">지정된 데이터가 포함된 <see cref="T:System.Xml.XmlCDataSection" />를 만듭니다.</summary>
      <param name="data" vsli:raw="The content of the new &lt;see langword=&quot;XmlCDataSection&quot; /&gt;.">새 <see langword="XmlCDataSection" />의 콘텐츠입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlCDataSection&quot; /&gt;.">새 <see langword="XmlCDataSection" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; containing the specified data.">지정된 데이터가 포함된 <see cref="T:System.Xml.XmlComment" />를 만듭니다.</summary>
      <param name="data" vsli:raw="The content of the new &lt;see langword=&quot;XmlComment&quot; /&gt;.">새 <see langword="XmlComment" />의 콘텐츠입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlComment&quot; /&gt;.">새 <see langword="XmlComment" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a default attribute with the specified prefix, local name and namespace URI.">지정된 접두사, 로컬 이름 및 네임스페이스 URI가 있는 기본 특성을 만듭니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute (if any).">특성의 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute (if any).">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">새 <see cref="T:System.Xml.XmlAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDocumentFragment" />를 만듭니다.</summary>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt;.">새 <see langword="XmlDocumentFragment" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Xml.XmlDocumentType&quot; /&gt; object.">새 <see cref="T:System.Xml.XmlDocumentType" /> 개체를 반환합니다.</summary>
      <param name="name" vsli:raw="Name of the document type.">문서 형식의 이름입니다.</param>
      <param name="publicId" vsli:raw="The public identifier of the document type or &lt;see langword=&quot;null&quot; /&gt;. You can specify a public URI and also a system identifier to identify the location of the external DTD subset.">문서 형식의 공용 식별자이거나 <see langword="null" />입니다. 공용 URI 또는 외부 DTD 하위 집합의 위치를 나타내는 시스템 식별자를 지정할 수 있습니다.</param>
      <param name="systemId" vsli:raw="The system identifier of the document type or &lt;see langword=&quot;null&quot; /&gt;. Specifies the URL of the file location for the external DTD subset.">문서 형식의 시스템 식별자이거나 <see langword="null" />입니다. 외부 DTD 하위 집합의 파일 위치를 지정하는 URL입니다.</param>
      <param name="internalSubset" vsli:raw="The DTD internal subset of the document type or &lt;see langword=&quot;null&quot; /&gt;.">문서 형식의 DTD 내부 하위 집합이거나 <see langword="null" />입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocumentType&quot; /&gt;.">새 <see langword="XmlDocumentType" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary vsli:raw="Creates an element with the specified name.">지정된 이름을 가진 요소를 만듭니다.</summary>
      <param name="name" vsli:raw="The qualified name of the element. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property reflects the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property reflects the part of the name after the colon. The qualified name cannot include a prefix of 'xmlns'.">요소의 정규화된 이름입니다. 이름에 콜론이 포함되어 있는 경우 <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 콜론 뒤의 이름 부분을 반영합니다. 정규화된 이름에는 'xmlns'라는 접두사가 포함될 수 없습니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlElement&quot; /&gt;.">새 <see langword="XmlElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the qualified name and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">정규화된 이름과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 가진 <see cref="T:System.Xml.XmlElement" />를 만듭니다.</summary>
      <param name="qualifiedName" vsli:raw="The qualified name of the element. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property will reflect the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property will reflect the part of the name after the colon. The qualified name cannot include a prefix of 'xmlns'.">요소의 정규화된 이름입니다. 이름에 콜론이 포함되어 있는 경우, <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 콜론 뒤의 이름 부분을 반영합니다. 정규화된 이름에는 'xmlns'라는 접두사가 포함될 수 없습니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlElement&quot; /&gt;.">새 <see langword="XmlElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 요소를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">새 요소의 접두사입니다. String.Empty와 <see langword="null" /> 은 같습니다.</param>
      <param name="localName" vsli:raw="The local name of the new element.">새 요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new element (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">새 요소의 네임스페이스 URI입니다. String.Empty와 <see langword="null" />은 같습니다.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">새 <see cref="T:System.Xml.XmlElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">지정된 이름을 가진 <see cref="T:System.Xml.XmlEntityReference" />를 만듭니다.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">엔터티 참조의 이름입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlEntityReference&quot; /&gt;.">새 <see langword="XmlEntityReference" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name is invalid (for example, names starting with'#' are invalid.)">이름이 잘못되었습니다(예: '#'으로 시작하는 이름은 올바르지 않음).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document.">이 문서를 탐색하기 위한 새로운 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체를 만듭니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document positioned on the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; specified.">지정된 <see cref="T:System.Xml.XmlNode" />에 있는 이 문서를 탐색하기 위한 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체를 만듭니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">검색기를 맨 처음 배치할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified node type, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 노드 형식, <see cref="P:System.Xml.XmlDocument.Name" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlNode" />를 만듭니다.</summary>
      <param name="nodeTypeString" vsli:raw="String version of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the new node. This parameter must be one of the values listed in the table below.">새 노드의 <see cref="T:System.Xml.XmlNodeType" /> 문자열 버전입니다. 이 매개 변수는 아래 테이블에 나열된 값 중 하나여야 합니다.</param>
      <param name="name" vsli:raw="The qualified name of the new node. If the name contains a colon, it is parsed into &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; components.">새 노드의 정규화된 이름입니다. 이름에 콜론이 포함된 경우에는 <see cref="P:System.Xml.XmlNode.Prefix" /> 및 <see cref="P:System.Xml.XmlDocument.LocalName" /> 구성 요소로 구문 분석됩니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">새 노드의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">새 <see langword="XmlNode" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name; or &lt;paramref name=&quot;nodeTypeString&quot; /&gt; is not one of the strings listed below.">이름이 제공되지 않았으며 <see langword="XmlNodeType" />에 이름이 필요합니다. 또는 <paramref name="nodeTypeString" />이(가) 아래 나열된 문자열 중 하나가 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlNode" />를 만듭니다.</summary>
      <param name="type" vsli:raw="The &lt;see langword=&quot;XmlNodeType&quot; /&gt; of the new node.">새 노드의 <see langword="XmlNodeType" />입니다.</param>
      <param name="name" vsli:raw="The qualified name of the new node. If the name contains a colon then it is parsed into &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; components.">새 노드의 정규화된 이름입니다. 이름에 콜론이 포함되어 있으면 <see cref="P:System.Xml.XmlNode.Prefix" /> 및 <see cref="P:System.Xml.XmlDocument.LocalName" /> 구성 요소로 구문 분석됩니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">새 노드의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">새 <see langword="XmlNode" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name.">이름이 제공되지 않았으며 <see langword="XmlNodeType" />에 이름이 필요합니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlNode" />를 만듭니다.</summary>
      <param name="type" vsli:raw="The &lt;see langword=&quot;XmlNodeType&quot; /&gt; of the new node.">새 노드의 <see langword="XmlNodeType" />입니다.</param>
      <param name="prefix" vsli:raw="The prefix of the new node.">새 노드의 접두사입니다.</param>
      <param name="name" vsli:raw="The local name of the new node.">새 노드의 지역 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">새 노드의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">새 <see langword="XmlNode" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name.">이름이 제공되지 않았으며 <see langword="XmlNodeType" />에 이름이 필요합니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlProcessingInstruction&quot; /&gt; with the specified name and data.">지정된 이름과 데이터가 있는 <see cref="T:System.Xml.XmlProcessingInstruction" />을 만듭니다.</summary>
      <param name="target" vsli:raw="The name of the processing instruction.">처리 명령의 이름입니다.</param>
      <param name="data" vsli:raw="The data for the processing instruction.">처리 명령의 데이터입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlProcessingInstruction&quot; /&gt;.">새 <see langword="XmlProcessingInstruction" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; node.">
        <see cref="T:System.Xml.XmlSignificantWhitespace" /> 노드를 만듭니다.</summary>
      <param name="text" vsli:raw="The string must contain only the following characters &amp;amp;#20; &amp;amp;#10; &amp;amp;#13; and &amp;amp;#9;.">문자열에는 &amp;#20; &amp;#10; &amp;#13; 및 &amp;#9; 문자만 포함되어야 합니다.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; node.">새 <see langword="XmlSignificantWhitespace" /> 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; with the specified text.">지정된 텍스트가 있는 <see cref="T:System.Xml.XmlText" />를 만듭니다.</summary>
      <param name="text" vsli:raw="The text for the Text node.">Text 노드의 텍스트입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlText&quot; /&gt; node.">새 <see langword="XmlText" /> 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; node.">
        <see cref="T:System.Xml.XmlWhitespace" /> 노드를 만듭니다.</summary>
      <param name="text" vsli:raw="The string must contain only the following characters &amp;amp;#20; &amp;amp;#10; &amp;amp;#13; and &amp;amp;#9;.">문자열에는 &amp;#20; &amp;#10; &amp;#13; 및 &amp;#9; 문자만 포함되어야 합니다.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;XmlWhitespace&quot; /&gt; node.">새 <see langword="XmlWhitespace" /> 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDeclaration&quot; /&gt; node with the specified values.">지정된 값이 있는 <see cref="T:System.Xml.XmlDeclaration" /> 노드를 만듭니다.</summary>
      <param name="version" vsli:raw="The version must be &quot;1.0&quot;.">버전은 "1.0"이어야 합니다.</param>
      <param name="encoding" vsli:raw="The value of the encoding attribute. This is the encoding that is used when you save the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to a file or a stream; therefore, it must be set to a string supported by the &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; class, otherwise &lt;see cref=&quot;M:System.Xml.XmlDocument.Save(System.String)&quot; /&gt; fails. If this is &lt;see langword=&quot;null&quot; /&gt; or String.Empty, the &lt;see langword=&quot;Save&quot; /&gt; method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.  &#xA;  &#xA; Note: If the &lt;see langword=&quot;XmlDocument&quot; /&gt; is saved to either a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or an &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt;, this encoding value is discarded. Instead, the encoding of the &lt;see langword=&quot;TextWriter&quot; /&gt; or the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; is used. This ensures that the XML written out can be read back using the correct encoding.">인코딩 특성 값입니다. <see cref="T:System.Xml.XmlDocument" />를 파일이나 스트림으로 저장할 경우 사용하는 인코딩입니다. 그러므로 <see cref="T:System.Text.Encoding" /> 클래스에서 지원하는 문자열로 설정되어야 합니다. 그렇지 않으면 <see cref="M:System.Xml.XmlDocument.Save(System.String)" />이 실패합니다. <see langword="null" /> 또는 String.Empty일 경우 <see langword="Save" /> 메서드에서 인코딩 특성을 XML 선언에 기록하지 않으므로 기본 인코딩인 UTF-8을 사용하게 됩니다.  
참고: <see langword="XmlDocument" />를 <see cref="T:System.IO.TextWriter" />나 <see cref="T:System.Xml.XmlTextWriter" />로 저장하면 이 인코딩 값이 삭제됩니다. 대신 <see langword="TextWriter" /> 또는 <see langword="XmlTextWriter" />의 인코딩을 사용합니다. 그러면 기록된 XML을 올바른 인코딩을 사용하여 다시 읽을 수 있습니다.</param>
      <param name="standalone" vsli:raw="The value must be either &quot;yes&quot; or &quot;no&quot;. If this is &lt;see langword=&quot;null&quot; /&gt; or String.Empty, the &lt;see langword=&quot;Save&quot; /&gt; method does not write a standalone attribute on the XML declaration.">값은 "Yes" 또는 "No"여야 합니다. 값이 <see langword="null" />이나 String.Empty일 경우에는 <see langword="Save" /> 메서드에서 독립형 특성을 XML 선언에 기록하지 않습니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDeclaration&quot; /&gt; node.">새 <see langword="XmlDeclaration" /> 노드입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The values of &lt;paramref name=&quot;version&quot; /&gt; or &lt;paramref name=&quot;standalone&quot; /&gt; are something other than the ones specified above.">
        <paramref name="version" /> 또는 <paramref name="standalone" />의 값이 위에서 지정한 값 이외의 값입니다.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary vsli:raw="Gets the root &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for the document.">문서의 루트 <see cref="T:System.Xml.XmlElement" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; that represents the root of the XML document tree. If no root exists, &lt;see langword=&quot;null&quot; /&gt; is returned.">XML 문서 트리의 루트를 나타내는 <see langword="XmlElement" />입니다. 루트가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary vsli:raw="Gets the node containing the DOCTYPE declaration.">DOCTYPE 선언이 포함된 노드를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; containing the DocumentType (DOCTYPE declaration).">DocumentType(DOCTYPE 선언)이 포함된 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">지정된 ID의 <see cref="T:System.Xml.XmlElement" />를 가져옵니다.</summary>
      <param name="elementId" vsli:raw="The attribute ID to match.">일치시킬 특성 ID입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; with the matching ID or &lt;see langword=&quot;null&quot; /&gt; if no matching element is found.">일치하는 ID가 있으면 <see langword="XmlElement" />, 일치하는 요소가 없을 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlDocument.Name" />과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">일치시킬 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다. 특수 값 "*"은 모든 태그와 일치합니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. If no nodes match &lt;paramref name=&quot;name&quot; /&gt;, the returned collection will be empty.">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다. <paramref name="name" />과 일치하는 노드가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlDocument.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />와 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
      <param name="localName" vsli:raw="The LocalName to match. The special value &quot;*&quot; matches all tags.">일치시킬 LocalName입니다. 특수 값 "*"은 모든 태그와 일치합니다.</param>
      <param name="namespaceURI" vsli:raw="NamespaceURI to match.">일치시킬 NamespaceURI입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. If no nodes match the specified &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceURI&quot; /&gt;, the returned collection will be empty.">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다. 지정된 <paramref name="localName" /> 및 <paramref name="namespaceURI" />와 일치하는 노드가 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; object for the current document.">현재 문서에 대한 <see cref="T:System.Xml.XmlImplementation" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlImplementation&quot; /&gt; object for the current document.">현재 문서에 대한 <see langword="XmlImplementation" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary vsli:raw="Imports a node from another document to the current document.">다른 문서에서 현재 문서로 노드를 가져옵니다.</summary>
      <param name="node" vsli:raw="The node being imported.">가져올 노드입니다.</param>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to perform a deep clone; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전체 복제를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The imported &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">가져온 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling this method on a node type which cannot be imported.">가져올 수 없는 노드 형식에 대해 이 메서드 호출</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary vsli:raw="Throws an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; in all cases.">모든 경우에 <see cref="T:System.InvalidOperationException" />을 throw합니다.</summary>
      <returns vsli:raw="The values of the node and all its child nodes.">노드와 모든 자식 노드의 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">모든 경우</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the children of the current node.">현재 노드의 자식을 나타내는 태그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The markup of the children of the current node.">현재 노드의 자식을 나타내는 태그입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the current node is read-only.">현재 노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes always return &lt;see langword=&quot;false&quot; /&gt;.">현재 노드가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="XmlDocument" /> 노드에서는 항상 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the XML document from the specified stream.">지정된 스트림에서 XML 문서를 로드합니다.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">로드할 XML 문서가 포함된 스트림입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, a &lt;see cref=&quot;T:System.IO.FileNotFoundException&quot; /&gt; is raised.">XML에 로드 또는 구문 분석 오류가 있습니다. 이 경우 <see cref="T:System.IO.FileNotFoundException" />이 발생합니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the XML document from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.IO.TextReader" />에서 XML 문서를 로드합니다.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">XML 데이터를 문서에 제공하기 위해 사용하는 <see langword="TextReader" />입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">XML에 로드 또는 구문 분석 오류가 있습니다. 이 경우 문서는 빈 상태로 유지됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary vsli:raw="Loads the XML document from the specified URL.">지정된 URL에서 XML 문서를 로드합니다.</summary>
      <param name="filename" vsli:raw="URL for the file containing the XML document to load. The URL can be either a local file or an HTTP URL (a Web address).">로드할 XML 문서가 포함된 파일의 URL입니다. URL은 로컬 파일 또는 HTTP URL(웹 주소)일 수 있습니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, a &lt;see cref=&quot;T:System.IO.FileNotFoundException&quot; /&gt; is raised.">XML에 로드 또는 구문 분석 오류가 있습니다. 이 경우 <see cref="T:System.IO.FileNotFoundException" />이 발생합니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="filename" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="filename" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid (for example, it is on an unmapped drive).">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred while opening the file.">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; specified a file that is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;filename&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="filename" />에 읽기 전용인 파일이 지정되었습니다.  
또는 
현재 플랫폼이 해당 작업을 지원하지 않는 경우  
또는 
 <paramref name="filename" />에 디렉터리가 지정되었습니다.  
또는 
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;filename&quot; /&gt; was not found.">
        <paramref name="filename" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is in an invalid format.">
        <paramref name="filename" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the XML document from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />에서 XML 문서를 로드합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; used to feed the XML data into the document.">XML 데이터를 문서에 제공하기 위해 사용하는 <see langword="XmlReader" />입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">XML에 로드 또는 구문 분석 오류가 있습니다. 이 경우 문서는 빈 상태로 유지됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary vsli:raw="Loads the XML document from the specified string.">지정된 문자열에서 XML 문서를 로드합니다.</summary>
      <param name="xml" vsli:raw="String containing the XML document to load.">로드할 XML 문서가 포함된 문자열입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">XML에 로드 또는 구문 분석 오류가 있습니다. 이 경우 문서는 빈 상태로 유지됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, the local name is #document.">
        <see langword="XmlDocument" /> 노드의 경우 로컬 이름이 #document가 됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, the name is #document.">
        <see langword="XmlDocument" /> 노드의 경우 이름이 #document가 됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the document.">문서 내에서 원자화된 버전의 문자열을 가져올 수 있게 해주는 <see langword="XmlNameTable" />입니다.</returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Xml.XmlNode.Value&quot; /&gt; of a node belonging to this document has been changed.">이 문서에 속하는 노드의 <see cref="P:System.Xml.XmlNode.Value" />가 변경된 경우에 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Xml.XmlNode.Value&quot; /&gt; of a node belonging to this document is about to be changed.">이 문서에 속하는 노드의 <see cref="P:System.Xml.XmlNode.Value" />를 변경할 경우에 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary vsli:raw="Occurs when a node belonging to this document has been inserted into another node.">이 문서에 속하는 노드를 다른 노드에 삽입한 경우에 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary vsli:raw="Occurs when a node belonging to this document is about to be inserted into another node.">이 문서에 속하는 노드를 다른 노드에 삽입할 경우에 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary vsli:raw="Occurs when a node belonging to this document has been removed from its parent.">이 문서에 속하는 노드를 부모에서 제거한 경우에 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary vsli:raw="Occurs when a node belonging to this document is about to be removed from the document.">이 문서에 속하는 노드를 문서에서 제거할 경우에 발생합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, this value is XmlNodeType.Document.">노드 형식입니다. <see langword="XmlDocument" /> 노드의 경우 이 값은 XmlNodeType.Document가 됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which the current node belongs.">현재 노드가 속하는 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes (&lt;see cref=&quot;P:System.Xml.XmlDocument.NodeType&quot; /&gt; equals XmlNodeType.Document), this property always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="XmlDocument" /> 노드(<see cref="P:System.Xml.XmlDocument.NodeType" />이 XmlNodeType.Document)의 경우 이 속성에서는 항상 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary vsli:raw="Gets the parent node of this node (for nodes that can have parents).">부모가 있을 수 있는 노드의 경우 이 노드의 부모 노드를 가져옵니다.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">항상 <see langword="null" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary vsli:raw="Gets or sets a value indicating whether to preserve white space in element content.">요소 콘텐츠에서 공백을 유지할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve white space; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">공백을 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object based on the information in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The reader must be positioned on a node or attribute.">
        <see cref="T:System.Xml.XmlNode" />의 내용을 기준으로 <see cref="T:System.Xml.XmlReader" /> 개체를 만듭니다. 판독기는 노드나 특성에 위치해야 합니다.</summary>
      <param name="reader" vsli:raw="The XML source.">XML 소스입니다.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if no more nodes exist.">새 <see langword="XmlNode" />이거나 더 이상 노드가 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.NullReferenceException" vsli:raw="The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).">판독기가 유효한 DOM 노드(예: EndElement 또는 EndEntity)로 변환되지 않는 노드 형식 위치에 있습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Saves the XML document to the specified stream.">XML 문서를 지정된 스트림에 저장합니다.</summary>
      <param name="outStream" vsli:raw="The stream to which you want to save.">저장할 스트림입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Saves the XML document to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">XML 문서를 지정된 <see cref="T:System.IO.TextWriter" />에 저장합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see langword=&quot;TextWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="TextWriter" />입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary vsli:raw="Saves the XML document to the specified file. If the specified file exists, this method overwrites it.">XML 문서를 지정된 파일에 저장합니다. 지정한 파일이 존재하면 이 메서드를 덮어씁니다.</summary>
      <param name="filename" vsli:raw="The location of the file where you want to save the document.">문서를 저장할 파일의 위치입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the XML document to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">XML 문서를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary vsli:raw="Returns the Post-Schema-Validation-Infoset (PSVI) of the node.">노드의 PSVI(스키마 유효성 검사 이후 정보 집합)를 반환합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object representing the PSVI of the node.">노드의 PSVI를 나타내는 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object associated with this &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">이 <see cref="T:System.Xml.XmlDocument" />에 연결된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the XML Schema Definition Language (XSD) schemas associated with this &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;; otherwise, an empty &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">이 <see cref="T:System.Xml.XmlDocument" />에 연결된 XSD(XML 스키마 정의) 언어를 포함하는 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체이거나, 빈 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Validates the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; against the XML Schema Definition Language (XSD) schemas contained in the &lt;see cref=&quot;P:System.Xml.XmlDocument.Schemas&quot; /&gt; property.">
        <see cref="P:System.Xml.XmlDocument.Schemas" /> 속성에 포함된 XSD(XML 스키마 정의) 언어 스키마를 기준으로 <see cref="T:System.Xml.XmlDocument" />의 유효성을 검사합니다.</summary>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object that receives information about schema validation warnings and errors.">스키마 유효성 검사 경고 및 오류에 대한 정보를 받는 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation event occurred and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object was specified.">스키마 유효성 검사 이벤트가 발생했으며 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체가 지정되지 않았습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary vsli:raw="Validates the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object specified against the XML Schema Definition Language (XSD) schemas in the &lt;see cref=&quot;P:System.Xml.XmlDocument.Schemas&quot; /&gt; property.">
        <see cref="P:System.Xml.XmlDocument.Schemas" /> 속성에 포함된 XSD(XML 스키마 정의) 언어 스키마를 기준으로, 지정된 <see cref="T:System.Xml.XmlNode" /> 개체의 유효성을 검사합니다.</summary>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object that receives information about schema validation warnings and errors.">스키마 유효성 검사 경고 및 오류에 대한 정보를 받는 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체입니다.</param>
      <param name="nodeToValidate" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object created from an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to validate.">
        <see cref="T:System.Xml.XmlDocument" />에서 만든 <see cref="T:System.Xml.XmlNode" /> 개체이며 유효성을 검사할 대상입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object parameter was not created from an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> 개체 매개 변수는 <see cref="T:System.Xml.XmlDocument" />에서 만들어지지 않았습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object parameter is not an element, attribute, document fragment, or the root node.">
        <see cref="T:System.Xml.XmlNode" /> 개체 매개 변수는 요소, 특성, 문서 조각 또는 루트 노드가 아닙니다.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation event occurred and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object was specified.">스키마 유효성 검사 이벤트가 발생했으며 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체가 지정되지 않았습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the &lt;see langword=&quot;XmlDocument&quot; /&gt; node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see langword="XmlDocument" /> 노드의 모든 자식을 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
      <param name="xw" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the &lt;see langword=&quot;XmlDocument&quot; /&gt; node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see langword="XmlDocument" /> 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use for resolving external resources.">외부 리소스 확인을 위해 사용할 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use.  &#xA;  &#xA; In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">사용할 <see langword="XmlResolver" />입니다.  
.NET Framework 버전 1.1에서는 완전히 신뢰할 수 있는 호출자만 <see langword="XmlResolver" />를 지정할 수 있습니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="This property is set to &lt;see langword=&quot;null&quot; /&gt; and an external DTD or entity is encountered.">이 속성이 <see langword="null" />로 설정되어 있고 외부 DTD 또는 엔터티가 발생했습니다.</exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary vsli:raw="Represents a lightweight object that is useful for tree insert operations.">트리 삽입 작업에 유용한 경량의 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlDocumentFragment" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="ownerDocument" vsli:raw="The XML document that is the source of the fragment.">조각의 소스인 XML 문서입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the children of this node.">이 노드의 자식을 나타내는 태그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The markup of the children of this node.">이 노드의 자식 태그입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, the local name is &lt;see langword=&quot;#document-fragment&quot; /&gt;.">
        <see langword="XmlDocumentFragment" /> 노드의 경우 이 이름은 <see langword="#document-fragment" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt;, the name is &lt;see langword=&quot;#document-fragment&quot; /&gt;.">
        <see langword="XmlDocumentFragment" />의 경우 이 이름은 <see langword="#document-fragment" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, this value is XmlNodeType.DocumentFragment.">
        <see langword="XmlDocumentFragment" /> 노드의 경우 이 값은 XmlNodeType.DocumentFragment입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlDocument&quot; /&gt; to which this node belongs.">이 노드가 속한 <see langword="XmlDocument" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</summary>
      <returns vsli:raw="The parent of this node.  &#xA;  &#xA; For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, this property is always &lt;see langword=&quot;null&quot; /&gt;.">이 노드의 부모입니다.  
<see langword="XmlDocumentFragment" /> 노드의 경우 이 속성은 항상 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary vsli:raw="Represents the document type declaration.">문서 형식 선언을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocumentType&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlDocumentType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The qualified name; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.Name&quot; /&gt; property.">정규화된 이름입니다. <see cref="P:System.Xml.XmlDocumentType.Name" /> 속성을 참조하십시오.</param>
      <param name="publicId" vsli:raw="The public identifier; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.PublicId&quot; /&gt; property.">공용 식별자입니다. <see cref="P:System.Xml.XmlDocumentType.PublicId" /> 속성을 참조하십시오.</param>
      <param name="systemId" vsli:raw="The system identifier; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.SystemId&quot; /&gt; property.">시스템 식별자입니다. <see cref="P:System.Xml.XmlDocumentType.SystemId" /> 속성을 참조하십시오.</param>
      <param name="internalSubset" vsli:raw="The DTD internal subset; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.InternalSubset&quot; /&gt; property.">DTD 내부 하위 집합입니다. <see cref="P:System.Xml.XmlDocumentType.InternalSubset" /> 속성을 참조하십시오.</param>
      <param name="doc" vsli:raw="The parent document.">부모 문서입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다. DocumentType 노드의 경우 복제된 노드에는 항상 매개 변수 설정과 상관없이 하위 트리가 포함됩니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; nodes declared in the document type declaration.">문서 형식 선언에서 선언한 <see cref="T:System.Xml.XmlEntity" /> 노드의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamedNodeMap&quot; /&gt; containing the &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes. The returned &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <see langword="XmlEntity" /> 노드가 포함된 <see cref="T:System.Xml.XmlNamedNodeMap" />입니다. 반환된 <see langword="XmlNamedNodeMap" />은 읽기 전용입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary vsli:raw="Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.">DOCTYPE 선언의 DTD(문서 형식 정의) 내부 하위 집합 값을 가져옵니다.</summary>
      <returns vsli:raw="The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, String.Empty is returned.">DOCTYPE의 DTD 내부 하위 집합입니다. DTD 내부 하위 집합이 없으면 String.Empty가 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because DocumentType nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />노드가 읽기 전용 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.  
DocumentType 노드가 읽기 전용이기 때문에 이 속성은 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For DocumentType nodes, this property returns the name of the document type.">DocumentType 노드의 경우, 이 속성은 문서 형식의 이름을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For DocumentType nodes, this property returns the name of the document type.">DocumentType 노드의 경우, 이 속성은 문서 형식의 이름을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For DocumentType nodes, this value is XmlNodeType.DocumentType.">DocumentType 노드의 경우 이 값은 XmlNodeType.DocumentType입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; nodes present in the document type declaration.">문서 형식 선언에 있는 <see cref="T:System.Xml.XmlNotation" /> 노드의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamedNodeMap&quot; /&gt; containing the &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes. The returned &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <see langword="XmlNotation" /> 노드가 포함된 <see cref="T:System.Xml.XmlNamedNodeMap" />입니다. 반환된 <see langword="XmlNamedNodeMap" />은 읽기 전용입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the DOCTYPE declaration.">DOCTYPE 선언의 공용 식별자 값을 가져옵니다.</summary>
      <returns vsli:raw="The public identifier on the DOCTYPE. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">DOCTYPE의 공용 식별자입니다. 공용 식별자가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the DOCTYPE declaration.">DOCTYPE 선언의 시스템 식별자 값을 가져옵니다.</summary>
      <returns vsli:raw="The system identifier on the DOCTYPE. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">DOCTYPE의 시스템 식별자입니다. 시스템 식별자가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlDocumentType&quot; /&gt; nodes, this method has no effect.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다. <see langword="XmlDocumentType" /> 노드의 경우, 이 메서드는 의미 없는 메서드입니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary vsli:raw="Represents an element.">요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix; see the &lt;see cref=&quot;P:System.Xml.XmlElement.Prefix&quot; /&gt; property.">네임스페이스 접두사입니다. <see cref="P:System.Xml.XmlElement.Prefix" /> 속성을 참조하십시오.</param>
      <param name="localName" vsli:raw="The local name; see the &lt;see cref=&quot;P:System.Xml.XmlElement.LocalName&quot; /&gt; property.">로컬 이름입니다. <see cref="P:System.Xml.XmlElement.LocalName" /> 속성을 참조하십시오.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI; see the &lt;see cref=&quot;P:System.Xml.XmlElement.NamespaceURI&quot; /&gt; property.">네임스페이스 URI입니다. <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 속성을 참조하십시오.</param>
      <param name="doc" vsli:raw="The parent XML document.">부모 XML 문서입니다.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the list of attributes for this node.">이 노드에 대한 특성 목록을 포함하는 <see cref="T:System.Xml.XmlAttributeCollection" />을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the list of attributes for this node.">이 노드에 대한 특성 목록을 포함하는 <see cref="T:System.Xml.XmlAttributeCollection" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself (and its attributes if the node is an &lt;see langword=&quot;XmlElement&quot; /&gt;).">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체(노드가 <see langword="XmlElement" />인 경우 해당 특성)만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary vsli:raw="Returns the value for the attribute with the specified name.">지정된 이름을 가진 특성의 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The name of the attribute to retrieve. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">검색할 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
      <returns vsli:raw="The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.">지정된 특성의 값을 반환합니다. 일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Returns the value for the attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to retrieve.">검색할 특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to retrieve.">검색할 특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.">지정된 특성의 값을 반환합니다. 일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary vsli:raw="Returns the &lt;see langword=&quot;XmlAttribute&quot; /&gt; with the specified name.">지정된 이름의 <see langword="XmlAttribute" />를 반환합니다.</summary>
      <param name="name" vsli:raw="The name of the attribute to retrieve. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">검색할 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
      <returns vsli:raw="The specified &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching attribute was not found.">지정된 <see langword="XmlAttribute" />이거나 일치하는 특성이 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 <see cref="T:System.Xml.XmlAttribute" />를 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The specified &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching attribute was not found.">지정된 <see langword="XmlAttribute" />이거나 일치하는 특성이 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlElement.Name&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlElement.Name" />과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
      <param name="name" vsli:raw="The name tag to match. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node. The asterisk (*) is a special value that matches all tags.">일치시킬 이름 태그입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다. 별표(*)는 모든 태그와 일치하는 특수 값입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. The list is empty if there are no matching nodes.">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다. 일치하는 노드가 없으면 목록이 비어 있습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlElement.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlElement.NamespaceURI&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlElement.LocalName" /> 및 <see cref="P:System.Xml.XmlElement.NamespaceURI" />와 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name to match. The asterisk (*) is a special value that matches all tags.">일치시킬 로컬 이름입니다. 별표(*)는 모든 태그와 일치하는 특수 값입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI to match.">일치시킬 네임스페이스 URI입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. The list is empty if there are no matching nodes.">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다. 일치하는 노드가 없으면 목록이 비어 있습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary vsli:raw="Determines whether the current node has an attribute with the specified name.">현재 노드에 지정된 이름의 특성이 있는지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The name of the attribute to find. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">찾을 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has the specified attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드에 지정된 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary vsli:raw="Determines whether the current node has an attribute with the specified local name and namespace URI.">현재 노드에 지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성이 있는지 확인합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to find.">찾을 특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to find.">찾을 특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has the specified attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드에 지정된 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary vsli:raw="Gets a &lt;see langword=&quot;boolean&quot; /&gt; value indicating whether the current node has any attributes.">현재 노드에 특성이 있는지를 나타내는 <see langword="boolean" /> 값을 얻습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드에 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its children.">노드와 모든 자식의 연결된 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">노드와 모든 자식의 연결된 값입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing just the children of this node.">이 노드의 자식을 나타내는 태그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The markup of the children of this node.">이 노드의 자식 태그입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary vsli:raw="Gets or sets the tag format of the element.">요소의 태그 서식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is to be serialized in the short tag format &quot;&amp;lt;item/&amp;gt;&quot;; &lt;see langword=&quot;false&quot; /&gt; for the long format &quot;&amp;lt;item&amp;gt;&amp;lt;/item&amp;gt;&quot;.  &#xA;  &#xA; When setting this property, if set to &lt;see langword=&quot;true&quot; /&gt;, the children of the element are removed and the element is serialized in the short tag format. If set to &lt;see langword=&quot;false&quot; /&gt;, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.  &#xA;  &#xA; This property is a Microsoft extension to the Document Object Model (DOM).">
        <see langword="true" />요소가 짧은 태그 형식 "&lt;item/&gt;"으로 serialize 되 면이 고, 그렇지 않으면입니다. <see langword="false" /> "item&lt;/item&gt;"의 긴 형식입니다.&gt;&lt;  
이 속성을 설정할 때 <see langword="true" />로 설정하면 요소의 자식이 제거되고 요소는 짧은 태그 형식으로 serialize됩니다. <see langword="false" />로 설정하면 요소에 내용이 있는지 여부와 상관없이 속성 값이 변경되고, 요소가 비었으면 긴 형식으로 serialize됩니다.  
이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">현재 노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is book for the element &amp;lt;bk:book&amp;gt;.">접두사를 제거한 현재 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 은 요소 book &lt;예&gt;합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the node. For &lt;see langword=&quot;XmlElement&quot; /&gt; nodes, this is the tag name of the element.">노드의 정규화된 이름입니다. <see langword="XmlElement" /> 노드의 경우에는 요소의 태그 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">이 노드의 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.">이 노드의 네임스페이스 URI입니다. 네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; immediately following this element.">이 요소 바로 다음에 오는 <see cref="T:System.Xml.XmlNode" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; immediately following this element.">이 요소 바로 다음에 오는 <see langword="XmlNode" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlElement&quot; /&gt; nodes, this value is XmlNodeType.Element.">노드 형식입니다. <see langword="XmlElement" /> 노드의 경우 이 값은 XmlNodeType.Element입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlDocument&quot; /&gt; to which this element belongs.">이 요소가 속한 <see langword="XmlDocument" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">현재 노드의 부모인 <see langword="XmlNode" />입니다. 노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다. 다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace prefix of this node. If there is no prefix, this property returns String.Empty.">이 노드의 네임스페이스 접두사입니다. 접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">이 노드가 읽기 전용인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The namespaceURI of this node is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; The specified prefix is &quot;xml&quot; and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.">지정된 접두사에 잘못된 문자가 포함된 경우  
지정된 접두사의 형식이 잘못된 경우  
이 노드의 namespaceURI가 <see langword="null" />인 경우  
지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary vsli:raw="Removes all specified attributes and children of the current node. Default attributes are not removed.">지정된 특성 및 현재 노드의 자식을 모두 제거합니다. 기본 특성은 제거되지 않습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary vsli:raw="Removes all specified attributes from the element. Default attributes are not removed.">요소에서 지정된 모든 특성을 제거합니다. 기본 특성은 제거되지 않습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary vsli:raw="Removes an attribute by name.">이름을 사용하여 특성을 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the attribute to remove. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">제거할 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">노드는 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary vsli:raw="Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성을 제거합니다. 제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to remove.">제거할 특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to remove.">제거할 특성의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">노드는 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary vsli:raw="Removes the attribute node with the specified index from the element. (If the removed attribute has a default value, it is immediately replaced).">요소에서 지정된 인덱스의 특성 노드를 제거합니다. 제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</summary>
      <param name="i" vsli:raw="The index of the node to remove. The first node has index 0.">제거할 노드의 인덱스입니다. 첫 번째 노드에 인덱스 0이 있습니다.</param>
      <returns vsli:raw="The attribute node removed or &lt;see langword=&quot;null&quot; /&gt; if there is no node at the given index.">제거한 Attribute 노드이거나, 지정한 인덱스에 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).">로컬 이름과 네임스페이스 URI로 지정한 <see cref="T:System.Xml.XmlAttribute" />를 제거합니다. 제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The removed &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see langword=&quot;XmlElement&quot; /&gt; does not have a matching attribute node.">제거한 <see langword="XmlAttribute" />이거나 <see langword="null" />에 일치하는 Attribute 노드가 없으면 <see langword="XmlElement" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlAttribute" />을 제거합니다.</summary>
      <param name="oldAttr" vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; node to remove. If the removed attribute has a default value, it is immediately replaced.">제거할 <see langword="XmlAttribute" /> 노드입니다. 제거한 특성에 기본값이 있으면 바로 대체됩니다.</param>
      <returns vsli:raw="The removed &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;oldAttr&quot; /&gt; is not an attribute node of the &lt;see langword=&quot;XmlElement&quot; /&gt;.">제거한 <see langword="XmlAttribute" />이거나, <paramref name="oldAttr" />이 <see langword="null" />의 Attribute 노드가 아닐 경우에는 <see langword="XmlElement" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary vsli:raw="Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.">스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the post schema validation infoset of this node.">이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary vsli:raw="Sets the value of the attribute with the specified name.">지정된 이름을 가진 특성의 값을 설정합니다.</summary>
      <param name="name" vsli:raw="The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.">만들거나 변경할 특성의 이름입니다. 정규화된 이름입니다. 이름에 콜론이 포함되어 있으면 접두사와 로컬 이름 구성 요소로 구문 분석됩니다.</param>
      <param name="value" vsli:raw="The value to set for the attribute.">특성에 설정할 값입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified name contains an invalid character.">지정된 이름에 잘못된 문자가 있는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">노드는 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Sets the value of the attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 설정합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <param name="value" vsli:raw="The value to set for the attribute.">특성에 설정할 값입니다.</param>
      <returns vsli:raw="The attribute value.">특성 값입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to add.">추가할 <see langword="XmlAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</summary>
      <param name="newAttr" vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; node to add to the attribute collection for this element.">이 요소의 특성 컬렉션에 추가할 <see langword="XmlAttribute" /> 노드입니다.</param>
      <returns vsli:raw="If the attribute replaces an existing attribute with the same name, the old &lt;see langword=&quot;XmlAttribute&quot; /&gt; is returned; otherwise, &lt;see langword=&quot;null&quot; /&gt; is returned.">특성이 같은 이름을 가진 기존 특성을 대체할 경우 이전 <see langword="XmlAttribute" />가 반환됩니다. 그렇지 않으면 <see langword="null" />이 반환됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newAttr&quot; /&gt; was created from a different document than the one that created this node. Or this node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newAttr" />를 만든 경우 이 노드가 읽기 전용인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;newAttr&quot; /&gt; is already an attribute of another &lt;see langword=&quot;XmlElement&quot; /&gt; object. You must explicitly clone &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes to re-use them in other &lt;see langword=&quot;XmlElement&quot; /&gt; objects.">
        <paramref name="newAttr" />가 이미 다른 <see langword="XmlElement" /> 개체의 특성인 경우. 다른 <see langword="XmlAttribute" /> 개체에서 다시 사용하려면 명시적으로 <see langword="XmlElement" /> 노드를 복제해야 합니다.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the current node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">현재 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary vsli:raw="Represents an entity declaration, such as &amp;lt;!ENTITY... &amp;gt;.">&lt;!ENTITY... &gt;와 같은 엔터티 선언을 나타냅니다.</summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the current node.">현재 노드의 기본 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="The location from which the node was loaded.">노드를 로드한 위치입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node. Entity nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; object throws an exception.">이 노드의 복제본을 만듭니다. entity 노드는 복제할 수 없습니다. <see cref="T:System.Xml.XmlEntity" /> 개체에서 이 메서드를 호출하면 예외가 throw됩니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; from which the method is called.">메서드를 호출한 <see cref="T:System.Xml.XmlNode" />의 복사본입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Entity nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; object throws an exception.">entity 노드는 복제할 수 없습니다. <see cref="T:System.Xml.XmlEntity" /> 개체에서 이 메서드를 호출하면 예외가 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary vsli:raw="Gets the concatenated values of the entity node and all its children.">entity 노드와 모든 자식의 연결된 값을 가져옵니다.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">노드와 모든 자식의 연결된 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">속성을 설정하려고 시도한 경우</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary vsli:raw="Gets the markup representing the children of this node.">이 노드의 자식을 나타내는 태그를 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, String.Empty is returned.">
        <see langword="XmlEntity" /> 노드의 경우 String.Empty가 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">속성을 설정하려고 시도한 경우</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />노드가 읽기 전용 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.  
<see langword="XmlEntity" /> 노드가 읽기 전용이므로 이 속성은 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary vsli:raw="Gets the name of the node without the namespace prefix.">네임스페이스 접두사가 없는 노드의 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this property returns the name of the entity.">
        <see langword="XmlEntity" /> 노드의 경우, 이 속성은 엔터티 이름을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary vsli:raw="Gets the name of the node.">노드의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the entity.">엔터티의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary vsli:raw="Gets the type of the node.">노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, the value is XmlNodeType.Entity.">노드 형식입니다. <see langword="XmlEntity" /> 노드의 경우, 값은 XmlNodeType.Entity입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary vsli:raw="Gets the name of the optional NDATA attribute on the entity declaration.">엔터티 선언에서 선택적인 NDATA 특성의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the NDATA attribute. If there is no NDATA, &lt;see langword=&quot;null&quot; /&gt; is returned.">NDATA 특성의 이름입니다. NDATA가 없으면, <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary vsli:raw="Gets the markup representing this node and all its children.">이 노드와 이 노드의 모든 자식을 나타내는 태그를 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, String.Empty is returned.">
        <see langword="XmlEntity" /> 노드의 경우 String.Empty가 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the entity declaration.">엔터티 선언의 공용 식별자 값을 가져옵니다.</summary>
      <returns vsli:raw="The public identifier on the entity. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">엔터티의 공용 식별자입니다. 공용 식별자가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the entity declaration.">엔터티 선언의 시스템 식별자 값을 가져옵니다.</summary>
      <returns vsli:raw="The system identifier on the entity. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">엔터티의 시스템 식별자입니다. 시스템 식별자가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this method has no effect.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다. <see langword="XmlEntity" /> 노드의 경우, 이 메서드는 의미 없는 메서드입니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this method has no effect.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다. <see langword="XmlEntity" /> 노드의 경우, 이 메서드는 의미 없는 메서드입니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary vsli:raw="Represents an entity reference node.">entityreference 노드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlEntityReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the entity reference; see the &lt;see cref=&quot;P:System.Xml.XmlEntityReference.Name&quot; /&gt; property.">엔터티 참조의 이름입니다. <see cref="P:System.Xml.XmlEntityReference.Name" /> 속성을 참조하십시오.</param>
      <param name="doc" vsli:raw="The parent XML document.">부모 XML 문서입니다.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the current node.">현재 노드의 기본 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="The location from which the node was loaded.">노드를 로드한 위치입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this method always returns an entity reference node with no children. The replacement text is set when the node is inserted into a parent.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다. <see langword="XmlEntityReference" /> 노드의 경우, 이 메서드는 항상 자식이 없는 entityreference 노드를 반환합니다. 노드를 부모에 삽입할 경우 대체 텍스트가 설정됩니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">노드가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.  
<see langword="XmlEntityReference" /> 노드가 읽기 전용이므로 이 속성은 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this property returns the name of the entity referenced.">
        <see langword="XmlEntityReference" /> 노드의 경우, 이 속성은 참조하는 엔터티의 이름을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary vsli:raw="Gets the name of the node.">노드의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the entity referenced.">참조된 엔터티의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary vsli:raw="Gets the type of the node.">노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, the value is XmlNodeType.EntityReference.">노드 형식입니다. <see langword="XmlEntityReference" /> 노드의 경우, 값은 XmlNodeType.EntityReference입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the node. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this property returns &lt;see langword=&quot;null&quot; /&gt;.">노드의 값입니다. <see langword="XmlEntityReference" /> 노드의 경우 이 속성은 <see langword="null" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Node is read-only.">노드가 읽기 전용인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the property.">속성을 설정하는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary vsli:raw="Returns detailed information about the last exception.">마지막 예외에 대한 자세한 정보를 반환합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class.">
        <see langword="XmlException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 및 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체의 정보를 사용하여 <see langword="XmlException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XmlException&quot; /&gt;.">
        <see langword="SerializationInfo" />의 모든 속성이 포함된 <see langword="XmlException" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object containing the context information.">컨텍스트 정보가 포함된 <see langword="StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see langword="XmlException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error description.">오류 설명입니다.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class.">
        <see langword="XmlException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The description of the error condition.">오류 조건에 대한 설명입니다.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that threw the &lt;see langword=&quot;XmlException&quot; /&gt;, if any. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Exception" />을 throw한 <see langword="XmlException" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class with the specified message, inner exception, line number, and line position.">지정된 메시지, 내부 예외, 줄 번호 및 줄 위치를 갖는 <see langword="XmlException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error description.">오류 설명입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. This value can be &lt;see langword=&quot;null&quot; /&gt;.">현재 예외의 원인인 예외입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="lineNumber" vsli:raw="The line number indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 번호입니다.</param>
      <param name="linePosition" vsli:raw="The line position indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 위치입니다.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XmlException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">모든 <see langword="XmlException" /> 속성을 지정한 <see cref="T:System.Runtime.Serialization.SerializationInfo" />의 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스로 스트리밍합니다.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">
        <see langword="SerializationInfo" /> 개체</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">
        <see langword="StreamingContext" /> 개체</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred. Line numbers start at 1.">오류가 발생한 곳을 나타내는 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred. Line position starts at 1.">오류가 발생한 곳을 나타내는 줄 위치를 가져옵니다.</summary>
      <returns vsli:raw="The line position indicating where the error occurred.">오류가 발생한 곳을 나타내는 줄 위치입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary vsli:raw="Gets a message describing the current exception.">현재 예외를 설명하는 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary vsli:raw="Gets the location of the XML file.">XML 파일의 위치를 가져옵니다.</summary>
      <returns vsli:raw="The source URI for the XML data. If there is no source URI, this property returns &lt;see langword=&quot;null&quot; /&gt;.">XML 데이터의 소스 URI입니다. 소스 URI가 없으면 이 속성은 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary vsli:raw="Defines the context for a set of &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; objects.">
        <see cref="T:System.Xml.XmlDocument" /> 개체 집합에 대한 컨텍스트를 정의합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlImplementation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; class with the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; specified.">지정된 <see cref="T:System.Xml.XmlImplementation" />을 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nt" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlNameTable" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">새 <see cref="T:System.Xml.XmlDocument" />를 만듭니다.</summary>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocument&quot; /&gt; object.">새로운 <see langword="XmlDocument" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary vsli:raw="Tests if the Document Object Model (DOM) implementation implements a specific feature.">DOM(문서 개체 모델)을 구현할 때 특정 기능을 구현하는지 여부를 테스트합니다.</summary>
      <param name="strFeature" vsli:raw="The package name of the feature to test. This name is not case-sensitive.">테스트할 기능의 패키지 이름입니다. 대/소문자를 구분하지 않습니다.</param>
      <param name="strVersion" vsli:raw="This is the version number of the package name to test. If the version is not specified (&lt;see langword=&quot;null&quot; /&gt;), supporting any version of the feature causes the method to return &lt;see langword=&quot;true&quot; /&gt;.">이것은 테스트할 패키지 이름의 버전 번호입니다. 버전이 지정되지 않은 경우(<see langword="null" />) 아무 기능 버전이나 지원하도록 하면 메서드가 <see langword="true" />를 반환합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the feature is implemented in the specified version; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; The following table shows the combinations that cause &lt;see langword=&quot;HasFeature&quot; /&gt; to return &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; strFeature&lt;/term&gt;&lt;description&gt; strVersion&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 1.0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 2.0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">지정된 버전에 기능이 구현되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.  
다음 표에서는 <see langword="HasFeature" />가 <see langword="true" />를 반환하도록 하는 조합을 보여 줍니다.  
  strFeature 
  strVersion 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary vsli:raw="Gets the node immediately preceding or following this node.">이 노드 바로 앞이나 뒤에 있는 노드를 가져옵니다.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary vsli:raw="Gets the node immediately following this node.">이 노드 바로 다음에 오는 노드를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; immediately following this node or &lt;see langword=&quot;null&quot; /&gt; if one does not exist.">이 노드 바로 뒤에 있는 <see cref="T:System.Xml.XmlNode" />이거나, 노드가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary vsli:raw="Gets the node immediately preceding this node.">이 노드 바로 앞에 있는 노드를 가져옵니다.</summary>
      <returns vsli:raw="The preceding &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if one does not exist.">앞에 있는 <see cref="T:System.Xml.XmlNode" />이거나, 노드가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary vsli:raw="Represents a collection of nodes that can be accessed by name or index.">이름이나 인덱스로 액세스할 수 있는 노드의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">
        <see langword="XmlNamedNodeMap" />의 노드 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of nodes.">노드 수입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary vsli:raw="Provides support for the &quot;foreach&quot; style iteration over the collection of nodes in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">
        <see langword="XmlNamedNodeMap" />의 노드 컬렉션에 대한 "foreach" 스타일 반복 지원을 제공합니다.</summary>
      <returns vsli:raw="An enumerator object.">열거자 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary vsli:raw="Retrieves an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; specified by name.">이름으로 지정된 <see cref="T:System.Xml.XmlNode" />를 검색합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the node to retrieve. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property of the matching node.">검색할 노드의 정규화된 이름입니다. 일치하는 노드의 <see cref="P:System.Xml.XmlNode.Name" /> 속성과 일치합니다.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNode&quot; /&gt; with the specified name or &lt;see langword=&quot;null&quot; /&gt; if a matching node is not found.">지정된 이름을 가진 <see langword="XmlNode" />이거나, 일치하는 노드가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary vsli:raw="Retrieves a node with the matching &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">일치하는 <see cref="P:System.Xml.XmlNode.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 갖고 있는 노드를 검색합니다.</summary>
      <param name="localName" vsli:raw="The local name of the node to retrieve.">검색할 노드의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the node to retrieve.">검색할 노드의 네임스페이스 URI(Uniform Resource Identifier)입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the matching local name and namespace URI or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">일치하는 로컬 이름과 네임스페이스 URI를 갖고 있는 <see cref="T:System.Xml.XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary vsli:raw="Retrieves the node at the specified index in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">
        <see langword="XmlNamedNodeMap" />의 지정된 인덱스에서 노드를 검색합니다.</summary>
      <param name="index" vsli:raw="The index position of the node to retrieve from the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;. The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is &lt;see cref=&quot;P:System.Xml.XmlNamedNodeMap.Count&quot; /&gt; -1.">
        <see langword="XmlNamedNodeMap" />에서 검색할 노드의 인덱스 위치입니다. 인덱스는 0부터 시작하므로 첫 번째 노드의 인덱스는 0이고 마지막 노드의 인덱스는 <see cref="P:System.Xml.XmlNamedNodeMap.Count" />-1입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; at the specified index. If &lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the &lt;see cref=&quot;P:System.Xml.XmlNamedNodeMap.Count&quot; /&gt; property, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 인덱스의 <see cref="T:System.Xml.XmlNode" />입니다. <paramref name="index" />가 0보다 작거나 <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> 속성보다 크거나 같을 경우에는 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary vsli:raw="Removes the node from the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">
        <see langword="XmlNamedNodeMap" />에서 노드를 제거합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the node to remove. The name is matched against the &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property of the matching node.">제거할 노드의 정규화된 이름입니다. 일치하는 노드의 <see cref="P:System.Xml.XmlNode.Name" /> 속성과 이름을 일치시킵니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; removed from this &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">이 <see langword="XmlNode" />에서 제거한 <see langword="XmlNamedNodeMap" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary vsli:raw="Removes a node with the matching &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">일치하는 <see cref="P:System.Xml.XmlNode.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 갖고 있는 노드를 제거합니다.</summary>
      <param name="localName" vsli:raw="The local name of the node to remove.">제거할 노드의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the node to remove.">제거할 노드의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; removed or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">제거한 <see cref="T:System.Xml.XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; using its &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property.">해당하는 <see cref="T:System.Xml.XmlNode" /> 속성을 사용하여 <see cref="P:System.Xml.XmlNode.Name" />를 추가합니다.</summary>
      <param name="node" vsli:raw="An &lt;see langword=&quot;XmlNode&quot; /&gt; to store in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;. If a node with that name is already present in the map, it is replaced by the new one.">
        <see langword="XmlNode" />에 저장할 <see langword="XmlNamedNodeMap" />입니다. 해당하는 이름의 노드가 이미 맵에 있을 경우에는 새 노드로 대체됩니다.</param>
      <returns vsli:raw="If the &lt;paramref name=&quot;node&quot; /&gt; replaces an existing node with the same name, the old node is returned; otherwise, &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <paramref name="node" />에서 같은 이름을 가진 기존 노드를 대체할 경우 이전 노드가 반환되고, 그렇지 않으면 <see langword="null" />이 반환됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;node&quot; /&gt; was created from a different &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; than the one that created the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;; or the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <see langword="XmlNamedNodeMap" />을 만든 문서가 아니라 다른 <see cref="T:System.Xml.XmlDocument" />에서 <paramref name="node" />를 만들었거나 <see langword="XmlNamedNodeMap" />이 읽기 전용인 경우</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary vsli:raw="Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.">컬렉션에 대한 네임스페이스를 확인, 추가 및 제거하고 이 네임스페이스에 대한 범위 관리를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use.">사용할 <see cref="T:System.Xml.XmlNameTable" />입니다.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; is passed to the constructor.">생성자에게 <see langword="null" />가 전달되는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary vsli:raw="Adds the given namespace to the collection.">지정된 네임스페이스를 컬렉션에 추가합니다.</summary>
      <param name="prefix" vsli:raw="The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.  &#xA;  &#xA; Note If the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified. If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace. For more information about XPath expressions and the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, refer to the &lt;see cref=&quot;M:System.Xml.XmlNode.SelectNodes(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)&quot; /&gt; methods.">추가할 네임스페이스와 관련된 접두사입니다. 기본 네임스페이스를 추가하려면 String.Empty를 사용합니다.  
 참고 XPath(XML Path Language) 식에서 네임스페이스를 확인하는 데 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용할 경우에는 접두사를 지정해야 합니다. XPath 식에 접두사가 없으면 네임스페이스 URI(Uniform Resource Identifier)를 빈 네임스페이스로 간주합니다. XPath 식 및 <see cref="T:System.Xml.XmlNamespaceManager" />에 대한 자세한 내용은 <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> 및 <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> 메서드를 참조하십시오.</param>
      <param name="uri" vsli:raw="The namespace to add.">추가할 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for &lt;paramref name=&quot;prefix&quot; /&gt; is &quot;xml&quot; or &quot;xmlns&quot;.">
        <paramref name="prefix" />의 값이 "xml" 또는 "xmlns"인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefix" /> 또는 <paramref name="uri" />의 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary vsli:raw="Gets the namespace URI for the default namespace.">기본 네임스페이스의 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI for the default namespace, or an empty string if there is no default namespace.">기본 네임 스페이스에 대 한 네임 스페이스 URI 이거나, 기본 네임 스페이스가 없을 경우 빈 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary vsli:raw="Returns an enumerator to use to iterate through the namespaces in the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />에서 네임스페이스를 반복하는 데 사용할 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; containing the prefixes stored by the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />가 저장하는 접두사가 포함된 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.">현재 범위 내에 있는 네임스페이스를 열거하는 데 사용할 수 있는 접두사가 붙은 네임스페이스 이름 컬렉션을 가져옵니다.</summary>
      <param name="scope" vsli:raw="An enumeration value that specifies the type of namespace nodes to return.">반환할 네임스페이스 노드의 형식을 지정하는 열거형 값입니다.</param>
      <returns vsli:raw="A collection of namespace and prefix pairs currently in scope.">현재 범위 내에 있는 네임스페이스 및 접두사 쌍 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary vsli:raw="Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.">제공한 접두사에 현재 푸시된 범위에 정의한 네임스페이스가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the namespace you want to find.">찾으려는 네임스페이스의 접두사입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a namespace defined; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">정의된 네임스페이스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI for the specified prefix.">지정된 접두사의 네임스페이스 URI를 가져옵니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.">확인할 네임스페이스 URI의 접두사입니다. 기본 네임스페이스와 일치시키려면 String.Empty를 전달합니다.</param>
      <returns vsli:raw="The namespace URI for &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if there is no mapped namespace. The returned string is atomized.  &#xA;  &#xA; For more information on atomized strings, see the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; class.">
        <paramref name="prefix" />의 네임스페이스 URI이거나, 매핑된 네임스페이스가 없을 경우에는 <see langword="null" />입니다. 반환되는 문자열은 원자화됩니다.  
원자화된 문자열에 대한 자세한 내용은 <see cref="T:System.Xml.XmlNameTable" /> 클래스를 참조하십시오.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary vsli:raw="Finds the prefix declared for the given namespace URI.">지정된 네임스페이스 URI에 대해 선언한 접두사를 찾습니다.</summary>
      <param name="uri" vsli:raw="The namespace to resolve for the prefix.">접두사에 대해 확인할 네임스페이스입니다.</param>
      <returns vsli:raw="The matching prefix. If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then &lt;see langword=&quot;null&quot; /&gt; is returned.">일치하는 접두사입니다. 매핑된 접두사가 없으면 메서드에서 String.Empty를 반환합니다. null 값이 제공되면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this object.">이 개체와 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used by this object.">이 개체에서 사용한 <see cref="T:System.Xml.XmlNameTable" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary vsli:raw="Pops a namespace scope off the stack.">스택에서 네임스페이스 범위를 팝합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are namespace scopes left on the stack; &lt;see langword=&quot;false&quot; /&gt; if there are no more namespaces to pop.">스택에 네임스페이스 범위가 남아 있으면 <see langword="true" />이고, 팝할 네임스페이스가 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary vsli:raw="Pushes a namespace scope onto the stack.">스택에 네임스페이스 범위를 푸시합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary vsli:raw="Removes the given namespace for the given prefix.">지정된 접두사의 지정된 네임스페이스를 제거합니다.</summary>
      <param name="prefix" vsli:raw="The prefix for the namespace.">네임스페이스의 접두사입니다.</param>
      <param name="uri" vsli:raw="The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.">지정된 접두사의 제거할 네임스페이스입니다. 네임스페이스는 현재 네임스페이스 범위에서 제거됩니다. 현재 범위를 벗어난 네임스페이스는 무시됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefix" /> 또는 <paramref name="uri" />의 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary vsli:raw="Defines the namespace scope.">네임스페이스 범위를 정의합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary vsli:raw="All namespaces defined in the scope of the current node. This includes the xmlns:xml namespace which is always declared implicitly. The order of the namespaces returned is not defined.">현재 노드의 범위에서 정의된 모든 네임스페이스입니다. 여기에는 항상 암시적으로 선언되는 xmlns:xml 네임스페이스가 포함됩니다. 반환되는 네임스페이스의 순서는 정의되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary vsli:raw="All namespaces defined in the scope of the current node, excluding the xmlns:xml namespace, which is always declared implicitly. The order of the namespaces returned is not defined.">항상 암시적으로 선언되는 xmlns:xml 네임스페이스를 제외하고 현재 노드의 범위에서 정의된 모든 네임스페이스입니다. 반환되는 네임스페이스의 순서는 정의되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary vsli:raw="All namespaces that are defined locally at the current node.">현재 노드에서 로컬로 정의된 모든 네임스페이스입니다.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary vsli:raw="Table of atomized string objects.">원자화된 문자열 개체의 테이블입니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, atomizes the specified string and adds it to the &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">파생 클래스에서 재정의할 경우 지정한 문자열을 원자화하여 이를 <see langword="XmlNameTable" />에 추가합니다.</summary>
      <param name="array" vsli:raw="The character array containing the name to add.">추가할 이름이 포함된 문자 배열입니다.</param>
      <param name="offset" vsli:raw="Zero-based index into the array specifying the first character of the name.">이름의 첫 번째 문자를 지정하는 인덱스이며 배열에서 0부터 시작합니다.</param>
      <param name="length" vsli:raw="The number of characters in the name.">이름에 있는 문자의 수입니다.</param>
      <returns vsli:raw="The new atomized string or the existing one if it already exists. If length is zero, String.Empty is returned.">원자화된 새 문자열이거나 이미 문자열이 존재하는 경우 기존 문자열입니다. 길이가 0이면 String.Empty가 반환됩니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;offset&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;length&quot; /&gt; =0.">0 &gt; <paramref name="offset" />  
또는 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
또는 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
위의 경우 <paramref name="length" /> =0이면 예외가 throw되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; &amp;lt; 0.">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary vsli:raw="When overridden in a derived class, atomizes the specified string and adds it to the &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">파생 클래스에서 재정의할 경우 지정한 문자열을 원자화하여 이를 <see langword="XmlNameTable" />에 추가합니다.</summary>
      <param name="array" vsli:raw="The name to add.">추가할 이름입니다.</param>
      <returns vsli:raw="The new atomized string or the existing one if it already exists.">원자화된 새 문자열이거나 이미 문자열이 존재하는 경우 기존 문자열입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.">파생 클래스에서 재정의할 경우 지정된 배열에 있는 지정된 범위의 문자와 같은 문자를 포함하는 원자화된 문자열을 가져옵니다.</summary>
      <param name="array" vsli:raw="The character array containing the name to look up.">검색할 이름이 포함된 문자 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying the first character of the name.">이름의 첫 번째 문자를 지정하는 배열의 0부터 시작하는 인덱스입니다.</param>
      <param name="length" vsli:raw="The number of characters in the name.">이름에 있는 문자의 수입니다.</param>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized. If &lt;paramref name=&quot;length&quot; /&gt; is zero, String.Empty is returned.">문자열이 이미 원자화되지 않은 경우 원자화된 문자열 또는 <see langword="null" />입니다. <paramref name="length" />가 0이면 String.Empty가 반환됩니다.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;offset&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;length&quot; /&gt; =0.">0 &gt; <paramref name="offset" />  
또는 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
또는 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
위의 경우 <paramref name="length" /> =0이면 예외가 throw되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; &amp;lt; 0.">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the atomized string containing the same value as the specified string.">파생 클래스에서 재정의할 경우 지정된 문자열과 같은 값을 포함하는 원자화된 문자열을 가져옵니다.</summary>
      <param name="array" vsli:raw="The name to look up.">검색할 이름입니다.</param>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized.">문자열이 이미 원자화되지 않은 경우 원자화된 문자열 또는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary vsli:raw="Represents a single node in the XML document.">XML 문서의 단일 노드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the end of the list of child nodes, of this node.">지정된 노드를 이 노드의 자식 노드 목록 끝에 추가합니다.</summary>
      <param name="newChild" vsli:raw="The node to add. All the contents of the node to be added are moved into the specified location.">추가할 노드입니다. 지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</param>
      <returns vsli:raw="The node added.">추가한 노드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the attributes of this node.">이 노드의 특성이 포함된 <see cref="T:System.Xml.XmlAttributeCollection" />을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlAttributeCollection&quot; /&gt; containing the attributes of the node.  &#xA;  &#xA; If the node is of type XmlNodeType.Element, the attributes of the node are returned. Otherwise, this property returns &lt;see langword=&quot;null&quot; /&gt;.">노드의 특성을 포함하는 <see langword="XmlAttributeCollection" />입니다.  
노드가 XmlNodeType.Element 형식일 경우 노드의 특성이 반환됩니다. 그렇지 않은 경우 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">현재 노드의 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="The location from which the node was loaded or String.Empty if the node has no base URI.">노드가 로드된 위치이거나 노드에 기본 URI가 없으면 String.Empty입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary vsli:raw="Gets all the child nodes of the node.">노드의 모든 자식을 가져옵니다.</summary>
      <returns vsli:raw="An object that contains all the child nodes of the node.  &#xA;  &#xA; If there are no child nodes, this property returns an empty &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt;.">노드의 모든 자식을 포함하는 개체입니다.  
자식 노드가 없으면 이 속성은 빈 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the node, when overridden in a derived class.">파생 클래스에서 재정의한 경우 노드를 복제합니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling this method on a node type that cannot be cloned.">복제할 수 없는 노드 형식에 이 메서드를 호출하는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; for navigating this object.">이 개체를 탐색하기 위해 <see cref="T:System.Xml.XPath.XPathNavigator" />를 만듭니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; object used to navigate the node. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node from which the method was called. It is not positioned on the root of the document.">노드를 탐색 하는 데 사용되는 <see langword="XPathNavigator" /> 개체입니다. <see langword="XPathNavigator" />는 메서드를 호출한 노드에 위치하며 문서의 루트에는 위치하지 않습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary vsli:raw="Gets the first child of the node.">노드의 첫 번째 자식을 가져옵니다.</summary>
      <returns vsli:raw="The first child of the node. If there is no such node, &lt;see langword=&quot;null&quot; /&gt; is returned.">노드의 첫 번째 자식입니다. 이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that iterates through the child nodes in the current node.">현재 노드에서 자식 노드를 반복하는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the child nodes in the current node.">현재 노드에서 하위 노드를 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Looks up the closest xmlns declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.">현재 노드의 범위에 있는 지정된 접두사에 대해 가장 가까운 xmlns 선언을 조회하여 선언의 네임스페이스 URI를 반환합니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to find.">찾으려는 네임스페이스 URI가 있는 접두사입니다.</param>
      <returns vsli:raw="The namespace URI of the specified prefix.">지정된 접두사의 네임스페이스 URI입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary vsli:raw="Looks up the closest xmlns declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.">현재 노드의 범위에 있는 지정된 네임스페이스 URI에 대해 가장 가까운 xmlns 선언을 조회하여 해당 선언에 정의된 접두사를 반환합니다.</summary>
      <param name="namespaceURI" vsli:raw="The namespace URI whose prefix you want to find.">찾으려는 접두사를 가진 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The prefix for the specified namespace URI.">지정된 네임스페이스 URI의 접두사입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary vsli:raw="Gets a value indicating whether this node has any child nodes.">이 노드에 자식 노드가 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node has child nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드에 자식 노드가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its child nodes.">노드와 모든 자식 노드의 연결된 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The concatenated values of the node and all its child nodes.">노드와 모든 자식 노드의 연결된 값입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing only the child nodes of this node.">이 노드의 자식 노드를 나타내는 태그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The markup of the child nodes of this node, not including default attributes.">이 노드의 자식 노드를 나타내는 태그입니다.  
 <see langword="InnerXml" />은 기본 특성을 반환하지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property on a node that cannot have child nodes.">자식 노드를 가질 수 없는 노드에 대해 이 속성을 설정하는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately after the specified reference node.">지정된 노드를 지정된 참조 노드 바로 다음에 삽입합니다.</summary>
      <param name="newChild" vsli:raw="The node to insert.">삽입할 노드입니다.</param>
      <param name="refChild" vsli:raw="The reference node. &lt;paramref name=&quot;newChild&quot; /&gt; is placed after &lt;paramref name=&quot;refChild&quot; /&gt;.">참조 노드입니다. <paramref name="newChild" />는 <paramref name="refChild" /> 뒤에 삽입됩니다.</param>
      <returns vsli:raw="The node being inserted.">삽입할 노드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
<paramref name="refChild" />가 이 노드의 자식이 아닌 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately before the specified reference node.">지정된 노드를 지정된 참조 노드 바로 앞에 삽입합니다.</summary>
      <param name="newChild" vsli:raw="The node to insert.">삽입할 노드입니다.</param>
      <param name="refChild" vsli:raw="The reference node. &lt;paramref name=&quot;newChild&quot; /&gt; is placed before this node.">참조 노드입니다. <paramref name="newChild" />는 이 노드 앞에 삽입됩니다.</param>
      <returns vsli:raw="The node being inserted.">삽입할 노드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">현재 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식인 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
<paramref name="refChild" />가 이 노드의 자식이 아닌 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />노드가 읽기 전용 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary vsli:raw="Gets the first child element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlNode.Name" />을 가진 첫 번째 자식 요소를 가져옵니다.</summary>
      <param name="name" vsli:raw="The qualified name of the element to retrieve.">검색할 요소의 정규화된 이름입니다.</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; that matches the specified name. It returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if there is no match.">지정된 이름과 일치하는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다. 일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary vsli:raw="Gets the first child element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">지정된 <see cref="P:System.Xml.XmlNode.LocalName" />과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 갖고 있는 첫 번째 자식 요소를 가져옵니다.</summary>
      <param name="localname" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the matching &lt;paramref name=&quot;localname&quot; /&gt; and &lt;paramref name=&quot;ns&quot; /&gt;. It returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if there is no match.">일치하는 <paramref name="localname" />과 <paramref name="ns" />를 갖고 있는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다. . 일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary vsli:raw="Gets the last child of the node.">노드의 마지막 자식을 가져옵니다.</summary>
      <returns vsli:raw="The last child of the node. If there is no such node, &lt;see langword=&quot;null&quot; /&gt; is returned.">노드의 마지막 자식입니다. 이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary vsli:raw="Gets the local name of the node, when overridden in a derived class.">파생 클래스에서 재정의되면 노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is book for the element &amp;lt;bk:book&amp;gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The local name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; #cdata-section&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; #comment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt; #document&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt; #document-fragment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; The local name of the element.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt; The name of the entity.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt; The notation name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; #text&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; #whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; #significant-whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; #xml-declaration&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">접두사를 제거한 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 은 요소 book &lt;예&gt;합니다.  
반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다. 
  형식 
  name 
  특성 
  특성의 로컬 이름입니다.  
  CDATA 
  #cdata-section 
  주석 
  #comment 
  문서 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  문서 형식 이름입니다.  
  요소 
  요소의 로컬 이름입니다.  
  엔터티 
  엔터티의 이름입니다.  
  EntityReference 
  참조된 엔터티의 이름입니다.  
  Notation 
  표기법 이름입니다.  
  ProcessingInstruction 
  처리 명령의 대상입니다.  
  텍스트 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary vsli:raw="Gets the qualified name of the node, when overridden in a derived class.">파생 클래스에서 재정의되면 노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the node. The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The qualified name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; #cdata-section&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; #comment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt; #document&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt; #document-fragment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; The qualified name of the element.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt; The name of the entity.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt; The notation name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; #text&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; #whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; #significant-whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; #xml-declaration&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">노드의 정규화된 이름입니다. 반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다. 
  형식 
  name 
  특성 
  특성의 정규화된 이름입니다.  
  CDATA 
  #cdata-section 
  주석 
  #comment 
  문서 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  문서 형식 이름입니다.  
  요소 
  요소의 정규화된 이름입니다.  
  엔터티 
  엔터티의 이름입니다.  
  EntityReference 
  참조된 엔터티의 이름입니다.  
  Notation 
  표기법 이름입니다.  
  ProcessingInstruction 
  처리 명령의 대상입니다.  
  텍스트 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">이 노드의 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.">이 노드의 네임스페이스 URI입니다. 네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary vsli:raw="Gets the node immediately following this node.">이 노드 바로 다음에 오는 노드를 가져옵니다.</summary>
      <returns vsli:raw="The next &lt;see langword=&quot;XmlNode&quot; /&gt;. If there is no next node, &lt;see langword=&quot;null&quot; /&gt; is returned.">다음 <see langword="XmlNode" />입니다. 다음 노드가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary vsli:raw="Gets the type of the current node, when overridden in a derived class.">파생 클래스에서 재정의되면 현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values.">
        <see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary vsli:raw="Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a &quot;normal&quot; form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.">이 XmlNode 아래 전체 수준의 하위 트리에 있는 모든 XmlText 노드를 태그(즉, 태그, 주석, 처리 명령, CDATA 섹션 및 엔터티 참조)만이 XmlText 노드를 구분하는, 인접한 XmlText 노드가 없는 "정상적인" 폼에 넣습니다.</summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary vsli:raw="Gets the markup containing this node and all its child nodes.">이 노드와 모든 자식 노드를 포함하는 태그를 가져옵니다.</summary>
      <returns vsli:raw="The markup containing this node and all its child nodes, not including default attributes.">이 노드와 모든 자식 노드를 포함하는 태그입니다.  
 <see langword="OuterXml" />은 기본 특성을 반환하지 않습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.  &#xA;  &#xA; If the node is an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; (NodeType equals XmlNodeType.Document), this property returns &lt;see langword=&quot;null&quot; /&gt;.">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />입니다.  
노드가 <see cref="T:System.Xml.XmlDocument" />(NodeType이 XmlNodeType.Document와 같음)일 경우 이 속성에서는 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; NodeType&lt;/term&gt;&lt;description&gt; Return Value of ParentNode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute, Document, DocumentFragment, Entity, Notation&lt;/term&gt;&lt;description&gt; Returns &lt;see langword=&quot;null&quot; /&gt;; these nodes do not have parents.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; Returns the element or entity reference containing the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; Returns the element, entity reference, document type, or document containing the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; Returns the document node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; Returns the element, attribute, or entity reference containing the entity reference.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; Returns the document, element, document type, or entity reference containing the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; Returns the parent element, attribute, or entity reference containing the text node.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">현재 노드의 부모인 <see langword="XmlNode" />입니다. 노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다. 다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.  
  노드 형식 
  ParentNode의 값을 반환합니다. 
  Attribute, Document, DocumentFragment, Entity, Notation 
  <see langword="null" />을 반환합니다. 이 노드에는 부모가 없습니다.  

  CDATA 
  CDATA 섹션이 포함된 요소나 엔터티 참조를 반환합니다.  

  주석 
  주석이 포함된 요소, 엔터티 참조, 문서 형식 또는 문서를 반환합니다.  

  DocumentType 
  Document 노드를 반환합니다.  

  요소 
  요소의 부모 노드를 반환합니다. 요소가 트리의 Root 노드일 경우 부모는 Document 노드입니다.  

  EntityReference 
  엔터티 참조가 포함된 요소, 특성 또는 엔터티 참조를 반환합니다.  

  ProcessingInstruction 
  처리 명령이 포함된 문서, 요소, 문서 형식 또는 엔터티 참조를 반환합니다.  

  텍스트 
  Text 노드가 포함된 부모 요소, 특성 또는 엔터티 참조를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The namespace prefix of this node. For example, &lt;see langword=&quot;Prefix&quot; /&gt; is bk for the element &amp;lt;bk:book&amp;gt;. If there is no prefix, this property returns String.Empty.">이 노드의 네임스페이스 접두사입니다. 예를 들어 <see langword="Prefix" /> 요소에는 bk &lt;예&gt;합니다. 접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">이 노드가 읽기 전용인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The specified prefix is &quot;xml&quot; and the namespaceURI of this node is different from &quot;http://www.w3.org/XML/1998/namespace&quot;.  &#xA;  &#xA; This node is an attribute and the specified prefix is &quot;xmlns&quot; and the namespaceURI of this node is different from &quot;http://www.w3.org/2000/xmlns/ &quot;.  &#xA;  &#xA; This node is an attribute and the qualifiedName of this node is &quot;xmlns&quot;.">지정된 접두사에 잘못된 문자가 포함된 경우  
 지정된 접두사의 형식이 잘못된 경우  
 지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우  
 이 노드가 특성이고, 지정된 접두사가 “xmlns”이며, 이 노드의 namespaceURI가 “http://www.w3.org/2000/xmlns/”와 다른 경우  
 이 노드가 특성이고 이 노드의 qualifiedName이 "xmlns"인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the beginning of the list of child nodes for this node.">지정된 노드를 이 노드의 자식 노드 목록 앞에 추가합니다.</summary>
      <param name="newChild" vsli:raw="The node to add. All the contents of the node to be added are moved into the specified location.">추가할 노드입니다. 지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</param>
      <returns vsli:raw="The node added.">추가한 노드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary vsli:raw="Gets the node immediately preceding this node.">이 노드 바로 앞에 있는 노드를 가져옵니다.</summary>
      <returns vsli:raw="The preceding &lt;see langword=&quot;XmlNode&quot; /&gt;. If there is no preceding node, &lt;see langword=&quot;null&quot; /&gt; is returned.">앞에 있는 <see langword="XmlNode" />입니다. 앞에 노드가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Returns <see cref="T:System.Xml.XmlNode" />를 반환하는 경우</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary vsli:raw="Removes all the child nodes and/or attributes of the current node.">현재 노드의 모든 자식 노드 및/또는 특성을 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary vsli:raw="Removes specified child node.">지정된 자식 노드를 제거합니다.</summary>
      <param name="oldChild" vsli:raw="The node being removed.">제거할 노드입니다.</param>
      <returns vsli:raw="The node removed.">제거한 노드입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node. Or this node is read-only.">
        <paramref name="oldChild" />가 이 노드의 자식이 아닌 경우 이 노드가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Replaces the child node &lt;paramref name=&quot;oldChild&quot; /&gt; with &lt;paramref name=&quot;newChild&quot; /&gt; node.">
        <paramref name="oldChild" /> 자식 노드를 <paramref name="newChild" /> 노드로 대체합니다.</summary>
      <param name="newChild" vsli:raw="The new node to put in the child list.">자식 목록에 삽입할 새 노드입니다.</param>
      <param name="oldChild" vsli:raw="The node being replaced in the list.">목록에서 대체할 노드입니다.</param>
      <returns vsli:raw="The node replaced.">대체한 노드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.  &#xA;  &#xA; The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node.">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
이 노드가 읽기 전용인 경우  
<paramref name="oldChild" />가 이 노드의 자식이 아닌 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary vsli:raw="Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.">스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the post schema validation infoset of this node.">이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary vsli:raw="Selects a list of nodes matching the XPath expression.">XPath 식과 일치하는 노드의 목록을 선택합니다.</summary>
      <param name="xpath" vsli:raw="The XPath expression.">XPath 식입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a collection of nodes matching the XPath query.">Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix. See XPath Examples.">XPath 식에 접두사가 포함되어 있는 경우 XPath 예제를 참조하세요.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Selects a list of nodes matching the XPath expression. Any prefixes found in the XPath expression are resolved using the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">XPath 식과 일치하는 노드의 목록을 선택합니다. XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">XPath 식입니다. XPath 예제를 참조하세요.</param>
      <param name="nsmgr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for resolving namespaces for prefixes in the XPath expression.">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a collection of nodes matching the XPath query.">Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix which is not defined in the &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary vsli:raw="Selects the first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath expression.">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">XPath 식입니다. XPath 예제를 참조하세요.</param>
      <returns vsli:raw="The first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath query or &lt;see langword=&quot;null&quot; /&gt; if no matching node is found.">XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix.">XPath 식에 접두사가 포함되어 있는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Selects the first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath expression. Any prefixes found in the XPath expression are resolved using the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다. XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">XPath 식입니다. XPath 예제를 참조하세요.</param>
      <param name="nsmgr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for resolving namespaces for prefixes in the XPath expression.">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</param>
      <returns vsli:raw="The first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath query or &lt;see langword=&quot;null&quot; /&gt; if no matching node is found.">XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix which is not defined in the &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary vsli:raw="Tests if the DOM implementation implements a specific feature.">DOM 구현에서 특정 기능을 구현하는지 테스트합니다.</summary>
      <param name="feature" vsli:raw="The package name of the feature to test. This name is not case-sensitive.">테스트할 기능의 패키지 이름입니다. 대/소문자를 구분하지 않습니다.</param>
      <param name="version" vsli:raw="The version number of the package name to test. If the version is not specified (null), supporting any version of the feature causes the method to return true.">테스트할 패키지 이름의 버전 번호입니다. 버전을 지정하지 않을 경우(null), 모든 버전의 기능을 지원하면 메서드에서 true를 반환합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the feature is implemented in the specified version; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The following table describes the combinations that return &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Feature&lt;/term&gt;&lt;description&gt; Version&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 1.0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 2.0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">지정된 버전에 기능이 구현되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 다음 표에서는 <see langword="true" />를 반환하는 조합을 설명합니다.  
  기능 
  버전 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlNode.GetEnumerator&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.GetEnumerator" />를 참조하세요.</summary>
      <returns vsli:raw="An enumerator for the collection.">컬렉션에 대한 열거자입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlNode.Clone&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.Clone" />를 참조하세요.</summary>
      <returns vsli:raw="A copy of the node from which it is called.">메서드를 호출한 노드의 복사본입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATASection&lt;/term&gt;&lt;description&gt; The content of the CDATA Section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;. You can use the &lt;see cref=&quot;P:System.Xml.XmlElement.InnerText&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.XmlElement.InnerXml&quot; /&gt; properties to access the value of the element node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The entire content excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; The content of the declaration (that is, everything between &amp;lt;?xml and ?&amp;gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 
  형식 
  값 
  특성 
  특성 값  
  CDATASection 
  CDATA 섹션의 콘텐츠입니다.  
  주석 
  주석의 내용입니다.  
  문서 
 <see langword="null" />.  
  DocumentFragment 
 <see langword="null" />.  
  DocumentType 
 <see langword="null" />.  
  요소 
 <see langword="null" />. <see cref="P:System.Xml.XmlElement.InnerText" /> 또는 <see cref="P:System.Xml.XmlElement.InnerXml" /> 속성을 사용하여 Element 노드의 값에 액세스할 수 있습니다.  
  엔터티 
 <see langword="null" />.  
  EntityReference 
 <see langword="null" />.  
  Notation 
 <see langword="null" />.  
  ProcessingInstruction 
  대상을 제외한 전체 콘텐츠입니다.  
  텍스트 
  텍스트 노드의 내용입니다.  
  SignificantWhitespace 
  공백 문자입니다. 공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.  
  Whitespace 
  공백 문자입니다. 공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.  
  XmlDeclaration 
  선언의 콘텐츠 (사이의 모든 것 이므로 &lt;? xml 및?&gt;).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting the value of a node that is read-only.">읽기 전용인 노드의 값을 설정하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the value of a node that is not supposed to have a value (for example, an Element node).">값이 없어야 하는 노드의 값을 설정하는 경우(예: Element 노드)</exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the child nodes of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, when overridden in a derived class.">파생 클래스에서 재정의된 경우 노드의 모든 자식 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the current node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, when overridden in a derived class.">파생 클래스에서 재정의된 경우 현재 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary vsli:raw="Specifies the type of node change.">노드 변경 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary vsli:raw="A node value is being changed.">노드 값이 변경됩니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary vsli:raw="A node is being inserted in the tree.">노드가 트리에 삽입됩니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary vsli:raw="A node is being removed from the tree.">노드가 트리에서 제거됩니다.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserted&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserting&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoved&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoving&quot; /&gt; events.">
        <see cref="E:System.Xml.XmlDocument.NodeChanged" /> , <see cref="E:System.Xml.XmlDocument.NodeChanging" /> , <see cref="E:System.Xml.XmlDocument.NodeInserted" /> , <see cref="E:System.Xml.XmlDocument.NodeInserting" /> , <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> 및 <see cref="E:System.Xml.XmlDocument.NodeRemoving" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNodeChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">이벤트를 생성한 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <param name="oldParent" vsli:raw="The old parent &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">이벤트를 생성한 <see cref="T:System.Xml.XmlNode" />의 이전 부모 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <param name="newParent" vsli:raw="The new parent &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">이벤트를 생성한 <see cref="T:System.Xml.XmlNode" />의 새 부모 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <param name="oldValue" vsli:raw="The old value of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">이벤트를 생성한 <see cref="T:System.Xml.XmlNode" />의 이전 값입니다.</param>
      <param name="newValue" vsli:raw="The new value of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">이벤트를 생성한 <see cref="T:System.Xml.XmlNode" />의 새 값입니다.</param>
      <param name="action" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeChangedAction&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNodeChangedAction" />
      </param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary vsli:raw="Gets a value indicating what type of node change event is occurring.">발생할 노드 변경 이벤트 형식을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="One of the enumeration values that describes the node change event. The &lt;see langword=&quot;Action&quot; /&gt; value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.">노드 변경 이벤트를 설명 하는 열거형 값 중 하나입니다. 이벤트가 발생한 시점(전후) 사이에 <see langword="Action" /> 값이 달라지지 않습니다. 별도의 이벤트 처리기를 만들어 두 인스턴스를 모두 처리할 수 있습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Xml.XmlNode.ParentNode&quot; /&gt; after the operation completes.">작업을 완료한 후 <see cref="P:System.Xml.XmlNode.ParentNode" />의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ParentNode&quot; /&gt; after the operation completes. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is being removed. For attribute nodes, this property returns the &lt;see cref=&quot;P:System.Xml.XmlAttribute.OwnerElement&quot; /&gt;.">작업을 완료한 후 <see langword="ParentNode" />의 값입니다. 노드를 제거할 경우 이 속성에서 <see langword="null" />을 반환합니다.  
   
 Attribute 노드의 경우, 이 속성은 <see cref="P:System.Xml.XmlAttribute.OwnerElement" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the new value of the node.">노드의 새 값을 가져옵니다.</summary>
      <returns vsli:raw="The new value of the node. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is neither an attribute nor a text node, or if the node is being removed.  &#xA;  &#xA; If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt; event, &lt;see langword=&quot;NewValue&quot; /&gt; returns the value of the node if the change is successful. If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt; event, &lt;see langword=&quot;NewValue&quot; /&gt; returns the current value of the node.">노드의 새 값 노드가 특성이나 텍스트 노드가 아니거나, 노드가 제거되고 있는 경우에 이 속성은 <see langword="null" />을 반환합니다.  
<see cref="E:System.Xml.XmlDocument.NodeChanging" /> 이벤트에서 호출되었을 경우, 변경이 성공적이면 <see langword="NewValue" />가 노드 값을 반환합니다. <see cref="E:System.Xml.XmlDocument.NodeChanged" /> 이벤트에서 호출되었을 경우에는 <see langword="NewValue" />가 노드의 현재 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is being added, removed or changed.">추가, 제거 또는 변경할 <see cref="T:System.Xml.XmlNode" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is being added, removed or changed; this property never returns &lt;see langword=&quot;null&quot; /&gt;.">추가, 제거 또는 변경할 <see langword="XmlNode" />입니다. 이 속성에서는 <see langword="null" />을 반환하지 않습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Xml.XmlNode.ParentNode&quot; /&gt; before the operation began.">작업을 시작하기 전에 <see cref="P:System.Xml.XmlNode.ParentNode" />의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ParentNode&quot; /&gt; before the operation began. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node did not have a parent. For attribute nodes, this property returns the &lt;see cref=&quot;P:System.Xml.XmlAttribute.OwnerElement&quot; /&gt;.">작업을 시작하기 전 <see langword="ParentNode" />의 값입니다. 노드에 부모가 없으면 이 속성은 <see langword="null" />을 반환합니다.  
   
 Attribute 노드의 경우, 이 속성은 <see cref="P:System.Xml.XmlAttribute.OwnerElement" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the original value of the node.">노드의 원래 값을 가져옵니다.</summary>
      <returns vsli:raw="The original value of the node. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is neither an attribute nor a text node, or if the node is being inserted.  &#xA;  &#xA; If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt; event, &lt;see langword=&quot;OldValue&quot; /&gt; returns the current value of the node that will be replaced if the change is successful. If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt; event, &lt;see langword=&quot;OldValue&quot; /&gt; returns the value of node prior to the change.">노드의 원래 값입니다. 노드가 특성이나 텍스트 노드가 아니거나, 노드가 삽입되고 있는 경우에 이 속성은 <see langword="null" />을 반환합니다.  
<see cref="E:System.Xml.XmlDocument.NodeChanging" /> 이벤트에서 호출되었을 경우, 변경이 성공적이면 <see langword="OldValue" />가 교체될 노드의 현재 값을 반환합니다. <see cref="E:System.Xml.XmlDocument.NodeChanged" /> 이벤트에서 호출되었을 경우에는 <see langword="OldValue" />가 변경 전 노드 값을 반환합니다.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary vsli:raw="Represents the method that handles &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserted&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserting&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoved&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoving&quot; /&gt; events.">
        <see cref="E:System.Xml.XmlDocument.NodeChanged" /> , <see cref="E:System.Xml.XmlDocument.NodeChanging" /> , <see cref="E:System.Xml.XmlDocument.NodeInserted" /> , <see cref="E:System.Xml.XmlDocument.NodeInserting" /> , <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> 및 <see cref="E:System.Xml.XmlDocument.NodeRemoving" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeChangedEventArgs&quot; /&gt; containing the event data.">이벤트 데이터가 포함된 <see cref="T:System.Xml.XmlNodeChangedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary vsli:raw="Represents an ordered collection of nodes.">노드의 정렬된 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlNodeList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see langword=&quot;XmlNodeList&quot; /&gt;.">
        <see langword="XmlNodeList" />의 노드 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see langword=&quot;XmlNodeList&quot; /&gt;.">
        <see langword="XmlNodeList" />의 노드 수입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that iterates through the collection of nodes.">노드의 컬렉션을 반복하는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An enumerator used to iterate through the collection of nodes.">노드의 컬렉션 전체에서 반복하는 데 사용되는 열거자입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary vsli:raw="Retrieves a node at the given index.">특정 인덱스에서 노드를 검색합니다.</summary>
      <param name="index" vsli:raw="The zero-based index into the list of nodes.">노드 목록에 대한 0부터 시작하는 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified index in the collection. If &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the number of nodes in the list, this returns &lt;see langword=&quot;null&quot; /&gt;.">컬렉션에서 지정된 인덱스의 <see cref="T:System.Xml.XmlNode" />입니다. <paramref name="index" />가 목록의 노드 수보다 크거나 같은 경우 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary vsli:raw="Gets a node at the given index.">특정 인덱스에서 노드를 가져옵니다.</summary>
      <param name="i" vsli:raw="The zero-based index into the list of nodes.">노드 목록에 대한 0부터 시작하는 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified index in the collection. If index is greater than or equal to the number of nodes in the list, this returns &lt;see langword=&quot;null&quot; /&gt;.">컬렉션에서 지정된 인덱스의 <see cref="T:System.Xml.XmlNode" />입니다. 인덱스가 목록의 노드 수보다 크거나 같은 경우 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary vsli:raw="Disposes resources in the node list privately.">노드 목록에서 개인적으로 리소스를 삭제합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlNodeList" /> 클래스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary vsli:raw="Describes the document order of a node compared to a second node.">두 번째 노드와 비교하여 노드의 문서 순서를 설명합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary vsli:raw="The current node of this navigator is after the current node of the supplied navigator.">이 검색기의 현재 노드는 제공된 검색기의 현재 노드 다음에 있습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary vsli:raw="The current node of this navigator is before the current node of the supplied navigator.">이 검색기의 현재 노드는 제공된 검색기의 현재 노드 전에 있습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary vsli:raw="The two navigators are positioned on the same node.">두 검색기가 같은 노드에 있습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary vsli:raw="The node positions cannot be determined in document order, relative to each other. This could occur if the two nodes reside in different trees.">다른 노드에 상대적인 문서 순서로 노드 위치를 확인할 수 없습니다. 두 노드가 서로 다른 트리에 상주할 경우에 이런 일이 발생할 수 있습니다.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary vsli:raw="Represents a reader that provides fast, non-cached forward only access to XML data in an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" />의 XML 데이터에 대한 빠르고 캐시되지 않은 전방 액세스만 제공하는 판독기를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlNodeReader&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlNode" />를 사용하여 <see langword="XmlNodeReader" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="node" vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; you want to read.">읽으려는 <see langword="XmlNode" />입니다.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">현재 노드의 특성 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of attributes on the current node. This number includes default attributes.">현재 노드에 포함된 특성의 수입니다. 이 수에는 기본 특성이 포함됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">현재 노드의 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="The base URI of the current node.">현재 노드의 기본 URI입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlNodeReader&quot; /&gt; implements the binary content read methods.">
        <see cref="T:System.Xml.XmlNodeReader" />가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlNodeReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">이진 콘텐츠 읽기 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see cref="T:System.Xml.XmlNodeReader" /> 클래스는 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlNodeReader&quot; /&gt; always returns &lt;see langword=&quot;true&quot; /&gt;.">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="XmlNodeReader" />는 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.ReadState&quot; /&gt; to &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlNodeReader.ReadState" />를 <see langword="Closed" />로 변경합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">XML 문서에서 현재 노드의 수준을 가져옵니다.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">XML 문서의 현재 노드 수준입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">판독기가 스트림의 맨 끝에 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">판독기가 스트림의 맨 끝에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">지정된 인덱스가 있는 특성의 값을 가져옵니다.</summary>
      <param name="attributeIndex" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">특성의 인덱스입니다. 인덱스는 0부터 시작합니다. 첫 번째 특성의 인덱스는 0입니다.</param>
      <returns vsli:raw="The value of the specified attribute.">지정된 특성의 값을 반환합니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlNodeReader.AttributeCount&quot; /&gt;.">
        <paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">지정된 이름이 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI가 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether the current node has any attributes.">현재 노드에 특성이 있는지를 나타내는 값을 얻습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드에 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlNodeReader.Value&quot; /&gt;.">현재 노드에 <see cref="P:System.Xml.XmlNodeReader.Value" />가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 판독기가 위치한 노드에 <see langword="Value" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.">현재 노드가 DTD(문서 종류 정의) 또는 스키마에서 정의한 기본값에서 생성된 특성인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <see langword="true" />이고, 특성 값이 명시적으로 설정되었으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">현재 노드가 빈 요소(예: <c>&lt;MyElement/&gt;</c>)인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) and it ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 현재 노드가 요소 이면 (<see cref="P:System.Xml.XmlNodeReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) 및 끝나는 <c>/ &gt;</c>고, 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">현재 노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns String.Empty.">접두사를 제거한 현재 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 됩니다 <see langword="book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
이름이 없는 노드 형식(예: <see langword="Text" />, <see langword="Comment" /> 등)의 경우, 이 속성은 String.Empty를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.">확인할 네임스페이스 URI의 접두사입니다. 기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다. 이 문자열은 원자화할 필요가 없습니다.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">지정된 인덱스가 있는 특성으로 이동합니다.</summary>
      <param name="attributeIndex" vsli:raw="The index of the attribute.">특성의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">
        <paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlReader.AttributeCount" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">지정된 이름이 있는 특성으로 이동합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI가 있는 특성으로 이동합니다.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">현재 특성 노드가 포함된 요소로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <see langword="true" />이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">첫 번째 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <see langword="true" />이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">다음 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">다음 특성이 있으면 <see langword="true" />이고, 더 이상 특성이 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">현재 노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">현재 노드의 정규화된 이름입니다. 예를 들어 <see langword="Name" /> 됩니다 <see langword="bk:book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNodeReader.NodeType" />에 따라 달라집니다. 다음 노드 형식은 나열된 값을 반환합니다. 기타 모든 노드 형식은 빈 문자열을 반환합니다.  
  노드 형식 
  name 
 <see langword="Attribute" /> 특성 이름입니다.  

 <see langword="DocumentType" /> 문서 형식 이름입니다.  

 <see langword="Element" /> 태그 이름입니다.  

 <see langword="EntityReference" /> 참조된 엔터티의 이름입니다.  

 <see langword="ProcessingInstruction" /> 처리 명령의 대상입니다.  

 <see langword="XmlDeclaration" /> 리터럴 문자열 <see langword="xml" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">W3C 네임스페이스 사양에서 정의된 것처럼 판독기가 있는 노드의 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <see langword="XmlNameTable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">현재 노드의 형식을 나타내는 <see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">현재 노드와 관련된 네임스페이스 접두사입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">스트림에서 다음 노드를 읽습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">다음 노드를 읽었으면 <see langword="true" />이고, 더 이상 읽을 노드가 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">특성 값을 하나 이상의 <see langword="Text" />, <see langword="EntityReference" /> 또는 <see langword="EndEntity" /> 노드로 구문 분석합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of String.Empty.">반환할 노드가 있는 경우 <see langword="true" />입니다.  
 처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <see langword="false" />입니다.  
<c>misc=""</c>와 같은 빈 특성은 <see langword="true" />를 반환하며 이것은 단일 노드가 String.Empty의 값을 갖는 것을 의미합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the BinHex decoded binary bytes.">내용을 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">요소를 읽고 Base64 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">현재 노드가 요소 노드가 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed content.">요소가 혼합된 내용을 포함합니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the BinHex content.">요소를 읽고 BinHex 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">현재 노드가 요소 노드가 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed content.">요소가 혼합된 내용을 포함합니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">판독기의 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">
        <see cref="T:System.Xml.ReadState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or text node as a string.">요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</summary>
      <returns vsli:raw="The contents of the element or text-like node (This can include CDATA, Text nodes, and so on). This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.  &#xA;  &#xA; &lt;see langword=&quot;Note:&quot; /&gt; The text node can be either an element or an attribute text node.">element나 text와 유사한 노드(CDATA, Text 노드 등)의 내용입니다. 판독기가 요소 또는 텍스트 노드 이외의 위치에 있거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 이것은 빈 문자열입니다.  
 <see langword="Note:" /> 텍스트 노드는 요소 또는 특성 텍스트 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">
        <see langword="EntityReference" /> 노드에 대해 엔터티 참조를 확인합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node.">판독기가 <see langword="EntityReference" /> 노드에 배치되지 않은 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node.">현재 노드에 할당된 스키마 정보를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the schema information for the current node.">현재 노드에 대한 스키마 정보를 포함하는 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">현재 노드의 자식을 건너뜁니다.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />를 참조하세요.</summary>
      <param name="scope" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlNamespaceScope" /> 개체</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that contains the namespaces that are in scope.">범위에 있는 네임스페이스가 포함된 <see cref="T:System.Collections.IDictionary" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />를 참조하세요.</summary>
      <param name="prefix" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">네임스페이스 접두사가 포함된 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace name.">네임스페이스 이름이 포함된 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />를 참조하세요.</summary>
      <param name="namespaceName" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; object that identifies the namespace.">네임스페이스를 식별하는 <see cref="T:System.String" />개체입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the namespace prefix.">네임스페이스 접두사가 포함된 <see cref="T:System.String" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">현재 노드의 텍스트 값을 가져옵니다.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return String.Empty.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">노드의 <see cref="P:System.Xml.XmlNodeReader.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다. 다른 모든 노드 형식은 String.Empty를 반환합니다.  
  노드 형식 
  값 
 <see langword="Attribute" /> 특성 값  

 <see langword="CDATA" /> CDATA 섹션 내용입니다.  

 <see langword="Comment" /> 주석의 내용입니다.  

 <see langword="DocumentType" /> 내부 하위 집합입니다.  

 <see langword="ProcessingInstruction" /> 대상을 제외한 전체 내용입니다.  

 <see langword="SignificantWhitespace" /> 혼합된 콘텐츠 모델의 태그 간 공백입니다.  

 <see langword="Text" /> 텍스트 노드의 내용입니다.  

 <see langword="Whitespace" /> 태그 사이의 공백입니다.  

 <see langword="XmlDeclaration" /> 선언 내용입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">현재 <see langword="xml:space" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">
        <see cref="T:System.Xml.XmlSpace" /> 값 중 하나입니다. <see langword="xml:space" /> 범위가 존재하지 않으면 이 속성은 기본적으로 <see langword="XmlSpace.None" />으로 설정됩니다.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary vsli:raw="Specifies the type of node.">노드 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary vsli:raw="An attribute (for example, &lt;c&gt;id='123'&lt;/c&gt; ).">특성입니다(예를 들어, <c>id='123'</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary vsli:raw="A CDATA section (for example, &lt;c&gt;&amp;lt;![CDATA[my escaped text]]&amp;gt;&lt;/c&gt; ).">CDATA 섹션입니다(예를 들어, <c>&lt;![CDATA[my escaped text]]&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary vsli:raw="A comment (for example, &lt;c&gt;&amp;lt;!-- my comment --&amp;gt;&lt;/c&gt; ).">주석입니다(예를 들어, <c>&lt;!-- my comment --&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary vsli:raw="A document object that, as the root of the document tree, provides access to the entire XML document.">문서 트리의 루트인 문서 개체를 사용하여 전체 XML 문서에 액세스할 수 있습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary vsli:raw="A document fragment.">문서 단편입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary vsli:raw="The document type declaration, indicated by the following tag (for example, &lt;c&gt;&amp;lt;!DOCTYPE...&amp;gt;&lt;/c&gt; ).">다음 태그를 사용한 문서 형식 선언입니다(예를 들어, <c>&lt;!DOCTYPE...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary vsli:raw="An element (for example, &lt;c&gt;&amp;lt;item&amp;gt;&lt;/c&gt; ).">요소입니다(예를 들어, <c>&lt;item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary vsli:raw="An end element tag (for example, &lt;c&gt;&amp;lt;/item&amp;gt;&lt;/c&gt; ).">끝 요소 태그입니다(예를 들어, <c>&lt;/item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary vsli:raw="Returned when &lt;see langword=&quot;XmlReader&quot; /&gt; gets to the end of the entity replacement as a result of a call to &lt;see cref=&quot;M:System.Xml.XmlReader.ResolveEntity&quot; /&gt;.">
        <see cref="M:System.Xml.XmlReader.ResolveEntity" />의 호출 결과 <see langword="XmlReader" />가 대체 엔터티 끝에 도달했을 때 반환됩니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary vsli:raw="An entity declaration (for example, &lt;c&gt;&amp;lt;!ENTITY...&amp;gt;&lt;/c&gt; ).">엔터티 선업입니다(예를 들어, <c>&lt;!ENTITY...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary vsli:raw="A reference to an entity (for example, &lt;c&gt;&amp;amp;num;&lt;/c&gt; ).">엔터티 참조입니다(예를 들어, <c>&amp;num;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary vsli:raw="This is returned by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; if a &lt;see langword=&quot;Read&quot; /&gt; method has not been called.">
        <see langword="Read" /> 메서드가 호출되지 않은 경우 <see cref="T:System.Xml.XmlReader" />에 의해 반환됩니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary vsli:raw="A notation in the document type declaration (for example, &lt;c&gt;&amp;lt;!NOTATION...&amp;gt;&lt;/c&gt; ).">문서 형식 선언 표기법입니다(예를 들어, <c>&lt;!NOTATION...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary vsli:raw="A processing instruction (for example, &lt;c&gt;&amp;lt;?pi test?&amp;gt;&lt;/c&gt; ).">처리 명령입니다(예를 들어, <c>&lt;?pi test?&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary vsli:raw="White space between markup in a mixed content model or white space within the &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; scope.">복합 콘텐츠 모델에서 태그들 사이의 공백 또는 <c>xml:space="preserve"</c> 범위 내의 공백입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary vsli:raw="&lt;para&gt;The text content of a node.&lt;/para&gt;&lt;para&gt;A &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt; node cannot have any child nodes. It can appear as the child node of the &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentFragment&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;, and &lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes.&lt;/para&gt;">노드의 텍스트 내용입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary vsli:raw="White space between markup.">태그들 사이의 공백입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary vsli:raw="&lt;para&gt;The XML declaration (for example, &lt;c&gt;&amp;lt;?xml version='1.0'?&amp;gt;&lt;/c&gt; ).&lt;/para&gt;&lt;para&gt;The &lt;see cref=&quot;F:System.Xml.XmlNodeType.XmlDeclaration&quot; /&gt; node must be the first node in the document. It cannot have children. It is a child of the &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt; node. It can have attributes that provide version and encoding information.&lt;/para&gt;">XML 선언입니다(예를 들어, <c>&lt;?xml version='1.0'?&gt;</c>).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary vsli:raw="Represents a notation declaration, such as &amp;lt;!NOTATION... &amp;gt;.">표기법 선언을 나타냅니다(예를 들어, &lt;!NOTATION... &gt;).</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node. Notation nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; object throws an exception.">이 노드의 복제본을 만듭니다. notation 노드는 복제할 수 없습니다. <see cref="T:System.Xml.XmlNotation" /> 개체에서 이 메서드를 호출하면 예외가 throw됩니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; copy of the node from which the method is called.">메서드를 호출한 노드의 <see cref="T:System.Xml.XmlNode" /> 복사본입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Notation nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; object throws an exception.">notation 노드는 복제할 수 없습니다. <see cref="T:System.Xml.XmlNotation" /> 개체에서 이 메서드를 호출하면 예외가 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary vsli:raw="Gets the markup representing the children of this node.">이 노드의 자식을 나타내는 태그를 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, String.Empty is returned.">
        <see langword="XmlNotation" /> 노드의 경우 String.Empty가 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">속성을 설정하려고 시도한 경우</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />노드가 읽기 전용 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.  
<see langword="XmlNotation" /> 노드가 읽기 전용이므로 이 속성은 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary vsli:raw="Gets the name of the current node without the namespace prefix.">네임스페이스 접두사 없이 현재 노드의 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, this property returns the name of the notation.">
        <see langword="XmlNotation" /> 노드의 경우 이 속성이 주석의 이름을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary vsli:raw="Gets the name of the current node.">현재 노드의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the notation.">주석의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, the value is XmlNodeType.Notation.">노드 형식입니다. <see langword="XmlNotation" /> 노드의 경우 이 값은 XmlNodeType.Notation입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary vsli:raw="Gets the markup representing this node and all its children.">이 노드와 이 노드의 모든 자식을 나타내는 태그를 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, String.Empty is returned.">
        <see langword="XmlNotation" /> 노드의 경우 String.Empty가 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the notation declaration.">주석 선언에 대한 공용 식별자의 값을 가져옵니다.</summary>
      <returns vsli:raw="The public identifier on the notation. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">주석에 대한 공용 식별자입니다. 공용 식별자가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the notation declaration.">주석 선언에 대한 시스템 식별자의 값을 가져옵니다.</summary>
      <returns vsli:raw="The system identifier on the notation. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">주석에 대한 시스템 식별자입니다. 시스템 식별자가 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. This method has no effect on &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 자식을 저장합니다. 이 메서드는 <see langword="XmlNotation" /> 노드에 영향을 주지 않습니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. This method has no effect on &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다. 이 메서드는 <see langword="XmlNotation" /> 노드에 영향을 주지 않습니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary vsli:raw="Specifies the method used to serialize the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; output.">
        <see cref="T:System.Xml.XmlWriter" /> 출력을 serialize하는 데 사용되는 메서드를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary vsli:raw="Use the XSLT rules to choose between the &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Xml&quot; /&gt; and &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Html&quot; /&gt; output methods at runtime.">XSLT 규칙을 사용하여 런타임에 <see cref="F:System.Xml.XmlOutputMethod.Xml" /> 및 <see cref="F:System.Xml.XmlOutputMethod.Html" /> 출력 메서드 중에서 선택합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary vsli:raw="Serialize according to the HTML rules specified by XSLT.">XSLT에 지정된 HTML 규칙에 따라 serialize합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary vsli:raw="Serialize text blocks only.">텍스트 블록만 serialize합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary vsli:raw="Serialize according to the XML 1.0 rules.">XML 1.0 규칙에 따라 serialize합니다.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary vsli:raw="Provides all the context information required by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to parse an XML fragment.">
        <see cref="T:System.Xml.XmlReader" />에서 XML 조각을 구문 분석할 때 필요한 모든 컨텍스트 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, base URI, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, and document type values.">지정된 <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, 기본 URI, <see langword="XmlParserContext" />, <see langword="xml:lang" /> 및 문서 형식 값을 사용하여 <see langword="xml:space" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">문자열을 원자화하는 데 사용할 <see cref="T:System.Xml.XmlNameTable" />입니다. <see langword="null" />인 경우 <paramref name="nsMgr" />을 생성할 때 사용한 이름 테이블이 대신 사용됩니다. 원자화된 문자열에 대한 자세한 내용은 <see cref="T:System.Xml.XmlNameTable" />을 참조하십시오.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">네임스페이스 정보를 찾는 데 사용할 <see cref="T:System.Xml.XmlNamespaceManager" /> 또는 <see langword="null" />입니다.</param>
      <param name="docTypeName" vsli:raw="The name of the document type declaration.">문서 형식 선언의 이름입니다.</param>
      <param name="pubId" vsli:raw="The public identifier.">public 식별자입니다.</param>
      <param name="sysId" vsli:raw="The system identifier.">시스템 식별자입니다.</param>
      <param name="internalSubset" vsli:raw="The internal DTD subset. The DTD subset is used for entity resolution, not for document validation.">내부 DTD 하위집합입니다. DTD 하위 집합은 개체 확인에 사용되며 문서 유효성 검사에는 사용되지 않습니다.</param>
      <param name="baseURI" vsli:raw="The base URI for the XML fragment (the location from which the fragment was loaded).">XML 조각의 기본 URI(로드된 조각이 저장된 위치)입니다.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">
        <see langword="xml:lang" /> 범위입니다.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" /> 값입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" />가 <paramref name="nsMgr" />을 만드는 데 사용한 <see langword="XmlNameTable" />과 다른 경우</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, base URI, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, encoding, and document type values.">지정된 <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, 기본 URI, <see langword="XmlParserContext" />, <see langword="xml:lang" />, 인코딩 및 문서 형식 값을 사용하여 <see langword="xml:space" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">문자열을 원자화하는 데 사용할 <see cref="T:System.Xml.XmlNameTable" />입니다. <see langword="null" />인 경우 <paramref name="nsMgr" />을 생성할 때 사용한 이름 테이블이 대신 사용됩니다. 원자화된 문자열에 대한 자세한 내용은 <see cref="T:System.Xml.XmlNameTable" />을 참조하십시오.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">네임스페이스 정보를 찾는 데 사용할 <see cref="T:System.Xml.XmlNamespaceManager" /> 또는 <see langword="null" />입니다.</param>
      <param name="docTypeName" vsli:raw="The name of the document type declaration.">문서 형식 선언의 이름입니다.</param>
      <param name="pubId" vsli:raw="The public identifier.">public 식별자입니다.</param>
      <param name="sysId" vsli:raw="The system identifier.">시스템 식별자입니다.</param>
      <param name="internalSubset" vsli:raw="The internal DTD subset. The DTD is used for entity resolution, not for document validation.">내부 DTD 하위집합입니다. DTD는 개체 확인에 사용되며 문서 유효성 검사에는 사용되지 않습니다.</param>
      <param name="baseURI" vsli:raw="The base URI for the XML fragment (the location from which the fragment was loaded).">XML 조각의 기본 URI(로드된 조각이 저장된 위치)입니다.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">
        <see langword="xml:lang" /> 범위입니다.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" /> 값입니다.</param>
      <param name="enc" vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding setting.">인코딩 설정을 표시하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" />가 <paramref name="nsMgr" />을 만드는 데 사용한 <see langword="XmlNameTable" />과 다른 경우</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, &lt;see langword=&quot;xml:lang&quot; /&gt;, and &lt;see langword=&quot;xml:space&quot; /&gt; values.">지정된 <see langword="XmlParserContext" />, <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" /> 및 <see langword="xml:lang" /> 값을 사용하여 <see langword="xml:space" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">문자열을 원자화하는 데 사용할 <see cref="T:System.Xml.XmlNameTable" />입니다. <see langword="null" />인 경우 <paramref name="nsMgr" />을 생성할 때 사용한 이름 테이블이 대신 사용됩니다. 원자화된 문자열에 대한 자세한 내용은 <see cref="T:System.Xml.XmlNameTable" />을 참조하십시오.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">네임스페이스 정보를 찾는 데 사용할 <see cref="T:System.Xml.XmlNamespaceManager" /> 또는 <see langword="null" />입니다.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">
        <see langword="xml:lang" /> 범위입니다.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" /> 값입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" />가 <paramref name="nsMgr" />을 만드는 데 사용한 <see langword="XmlNameTable" />과 다른 경우</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, and encoding.">지정된 <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="XmlParserContext" />, <see langword="xml:lang" /> 및 인코딩을 사용하여 <see langword="xml:space" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information on atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">문자열을 원자화하는 데 사용할 <see cref="T:System.Xml.XmlNameTable" />입니다. <see langword="null" />인 경우 <paramref name="nsMgr" />을 생성할 때 사용한 이름 테이블이 대신 사용됩니다. 원자화된 문자열에 대한 자세한 내용은 <see cref="T:System.Xml.XmlNameTable" />을 참조하십시오.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">네임스페이스 정보를 찾는 데 사용할 <see cref="T:System.Xml.XmlNamespaceManager" /> 또는 <see langword="null" />입니다.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">
        <see langword="xml:lang" /> 범위입니다.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" /> 값입니다.</param>
      <param name="enc" vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding setting.">인코딩 설정을 표시하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" />가 <paramref name="nsMgr" />을 만드는 데 사용한 <see langword="XmlNameTable" />과 다른 경우</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary vsli:raw="Gets or sets the base URI.">기본URI를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The base URI to use to resolve the DTD file.">DTD 파일 확인에 사용할 기본 URI입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary vsli:raw="Gets or sets the name of the document type declaration.">문서 형식 선언의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the document type declaration.">문서 형식 선언의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary vsli:raw="Gets or sets the encoding type.">인코딩 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding type.">인코딩 형식을 나타내는 <see cref="T:System.Text.Encoding" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary vsli:raw="Gets or sets the internal DTD subset.">내부 DTD 하위 집합을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The internal DTD subset. For example, this property returns everything between the square brackets &lt;c&gt;&amp;lt;!DOCTYPE doc [...]&amp;gt;&lt;/c&gt;.">내부 DTD 하위집합입니다. 예를 들어이 속성은 대괄호 사이 <c>&lt;! DOCTYPE doc [...] &gt;</c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">
        <see langword="XmlNamespaceManager" />
      </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used to atomize strings. For more information on atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">문자열을 원자화할 때 사용하는 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다. 원자화된 문자열에 대한 자세한 내용은 <see cref="T:System.Xml.XmlNameTable" />을 참조하십시오.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">
        <see langword="XmlNameTable" />
      </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary vsli:raw="Gets or sets the public identifier.">public 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The public identifier.">public 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary vsli:raw="Gets or sets the system identifier.">시스템 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The system identifier.">시스템 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary vsli:raw="Gets or sets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope. If there is no &lt;see langword=&quot;xml:lang&quot; /&gt; in scope, &lt;see langword=&quot;String.Empty&quot; /&gt; is returned.">현재 <see langword="xml:lang" /> 범위입니다. 범위에 <see langword="xml:lang" />이 없으면 <see langword="String.Empty" />가 반환됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary vsli:raw="Gets or sets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">현재 <see langword="xml:space" /> 범위를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" /> 값입니다.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary vsli:raw="Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document.">문서의 텍스트에 있는 프로세스 관련 정보를 유지하기 위해 정의된 XML 처리 명령을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlProcessingInstruction&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlProcessingInstruction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="target" vsli:raw="The target of the processing instruction; see the &lt;see cref=&quot;P:System.Xml.XmlProcessingInstruction.Target&quot; /&gt; property.">처리 명령의 대상입니다. <see cref="P:System.Xml.XmlProcessingInstruction.Target" /> 속성을 참조하십시오.</param>
      <param name="data" vsli:raw="The content of the instruction; see the &lt;see cref=&quot;P:System.Xml.XmlProcessingInstruction.Data&quot; /&gt; property.">처리 명령의 내용입니다. <see cref="P:System.Xml.XmlProcessingInstruction.Data" /> 속성을 참조하십시오.</param>
      <param name="doc" vsli:raw="The parent XML document.">부모 XML 문서입니다.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; to recursively clone the subtree under the specified node; &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The duplicate node.">복제 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the content of the processing instruction, excluding the target.">처리 명령의 내용을 가져오거나 설정합니다. 처리 명령의 대상은 제외됩니다.</summary>
      <returns vsli:raw="The content of the processing instruction, excluding the target.">처리 명령의 대상을 제외한 처리 명령의 내용입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its children.">노드와 모든 자식의 연결된 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">노드와 모든 자식의 연결된 값입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For processing instruction nodes, this property returns the target of the processing instruction.">processinginstruction 노드의 경우, 이 속성은 처리 명령의 대상을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For processing instruction nodes, this property returns the target of the processing instruction.">processinginstruction 노드의 경우, 이 속성은 처리 명령의 대상을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlProcessingInstruction&lt;/code&gt; nodes, this value is XmlNodeType.ProcessingInstruction.">
        <see langword="XmlProcessingInstruction" /> 노드인 경우 이 값은  XmlNodeType.ProcessingInstruction입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary vsli:raw="Gets the target of the processing instruction.">처리 명령의 대상을 가져옵니다.</summary>
      <returns vsli:raw="The target of the processing instruction.">처리 명령의 대상입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The entire content of the processing instruction, excluding the target.">처리 명령의 대상을 제외한 처리 명령의 전체 내용입니다.</returns>
      <exception cref="T:System.ArgumentException">노드가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Xml.XmlWriter&quot;&gt;&lt;/xref&gt;. Because ProcessingInstruction nodes do not have children, this method has no effect.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다. ProcessingInstruction 노드는 자식을 가지지 않습니다. 따라서 이 메서드에서는 아무 작업도 수행되지 않습니다.</summary>
      <param name="w" vsli:raw="The &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlWriter&lt;/code&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Xml.XmlWriter&quot;&gt;&lt;/xref&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlWriter&lt;/code&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary vsli:raw="Represents an XML qualified name.">정규화된 XML 이름을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class with the specified name.">지정된 이름을 사용하여 <see cref="T:System.Xml.XmlQualifiedName" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The local name to use as the name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 개체의 이름으로 사용할 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class with the specified name and namespace.">지정된 이름과 네임스페이스를 사용하여 <see cref="T:System.Xml.XmlQualifiedName" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The local name to use as the name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 개체의 이름으로 사용할 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace for the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 개체의 네임스페이스입니다.</param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary vsli:raw="Provides an empty &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">빈 <see cref="T:System.Xml.XmlQualifiedName" />을 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">지정된 <see cref="T:System.Xml.XmlQualifiedName" /> 개체가 현재 <see cref="T:System.Xml.XmlQualifiedName" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">비교할 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two are the same instance object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 개체가 같은 인스턴스 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary vsli:raw="Returns the hash code for the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />에 대한 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A hash code for this object.">이 개체에 대한 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; is empty.">
        <see cref="T:System.Xml.XmlQualifiedName" />가 비어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name and namespace are empty strings; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이름과 네임스페이스가 빈 문자열이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary vsli:raw="Gets a string representation of the qualified name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />의 정규화된 이름에 대한 문자열 표현을 가져옵니다.</summary>
      <returns vsli:raw="A string representation of the qualified name or String.Empty if a name is not defined for the object.">정규화된 이름의 문자열 표현이거나, 개체에 정의된 이름이 없는 경우 String.Empty입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary vsli:raw="Gets a string representation of the namespace of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />의 네임스페이스에 대한 문자열 표현을 가져옵니다.</summary>
      <returns vsli:raw="A string representation of the namespace or String.Empty if a namespace is not defined for the object.">네임스페이스의 문자열 표현이거나, 개체에 정의된 네임스페이스가 없는 경우 String.Empty입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">두 <see cref="T:System.Xml.XmlQualifiedName" /> 개체를 비교합니다.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">비교할 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">비교할 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects have the same name and namespace values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 개체의 이름과 네임스페이스 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">두 <see cref="T:System.Xml.XmlQualifiedName" /> 개체를 비교합니다.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">비교할 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">비교할 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name and namespace values for the two objects differ; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 개체의 이름과 네임스페이스 값이 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary vsli:raw="Returns the string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />의 문자열 값을 반환합니다.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; in the format of &lt;see langword=&quot;namespace:localname&quot; /&gt;. If the object does not have a namespace defined, this method returns just the local name.">
        <see langword="namespace:localname" /> 형식의 <see cref="T:System.Xml.XmlQualifiedName" /> 문자열 값입니다. 개체에 정의된 네임스페이스가 없으면 이 메서드는 로컬 이름만 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary vsli:raw="Returns the string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />의 문자열 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The name of the object.">개체의 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace of the object.">개체의 네임스페이스입니다.</param>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; in the format of &lt;see langword=&quot;namespace:localname&quot; /&gt;. If the object does not have a namespace defined, this method returns just the local name.">
        <see langword="namespace:localname" /> 형식의 <see cref="T:System.Xml.XmlQualifiedName" /> 문자열 값입니다. 개체에 정의된 네임스페이스가 없으면 이 메서드는 로컬 이름만 반환합니다.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary vsli:raw="Represents a reader that provides fast, noncached, forward-only access to XML data.">빠르고, 캐시되지 않으며 앞으로만 이동 가능한 XML 데이터 액세스를 제공하는 판독기를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlReader&quot; /&gt; class.">
        <see langword="XmlReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of attributes on the current node.">파생 클래스에서 재정의되면 현재 노드에 포함된 특성 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of attributes on the current node.">현재 노드에 포함된 특성의 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary vsli:raw="When overridden in a derived class, gets the base URI of the current node.">파생 클래스에서 재정의되면 현재 노드의 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="The base URI of the current node.">현재 노드의 기본 URI입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the binary content read methods.">
        <see cref="T:System.Xml.XmlReader" />가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이진 콘텐츠 읽기 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method.">
        <see cref="T:System.Xml.XmlReader" />가 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 메서드를 구현하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />가 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary vsli:raw="When overridden in a derived class, changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to &lt;see cref=&quot;F:System.Xml.ReadState.Closed&quot; /&gt;.">파생 클래스에서 재정의되면 <see cref="P:System.Xml.XmlReader.ReadState" />를 <see cref="F:System.Xml.ReadState.Closed" />로 변경합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream with default settings.">기본 설정의 지정된 스트림을 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">XML 데이터가 포함된 스트림입니다.  
<see cref="T:System.Xml.XmlReader" />는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다. 인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" />에는 XML 데이터 위치에 액세스할 수 있는 충분한 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance with the specified stream and settings.">지정된 스트림 및 설정을 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">XML 데이터가 포함된 스트림입니다.  
<see cref="T:System.Xml.XmlReader" />는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다. 인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream, base URI, and settings.">지정된 스트림, 기본 URI 및 설정을 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">XML 데이터가 포함된 스트림입니다.  
<see cref="T:System.Xml.XmlReader" />는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다. 인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="baseUri" vsli:raw="The base URI for the entity or document being read. This value can be &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; Security Note The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source.">읽을 엔터티 또는 문서의 기본 URI입니다. 이 값은 <see langword="null" />일 수 있습니다.  
 보안 정보 기본 URI는 XML 문서의 상대 URI를 확인하는 데 사용됩니다. 신뢰할 수 없는 소스의 기본 URI는 사용하지 않는 것이 좋습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream, settings, and context information for parsing.">구문 분석을 위해 지정한 스트림, 설정 및 컨텍스트 정보를 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">XML 데이터가 포함된 스트림입니다.  
<see cref="T:System.Xml.XmlReader" />는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다. 인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">XML 조각을 구문 분석하는 데 필요한 컨텍스트 정보입니다. 컨텍스트 정보에는 사용할 <see cref="T:System.Xml.XmlNameTable" />, 인코딩, 네임스페이스 범위, 현재 <c>xml:lang</c>과 <c>xml:space</c> 범위, 기본 URI 및 문서 종류 정의가 포함될 수 있습니다.  
이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader.">지정된 텍스트 판독기를 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.">XML 데이터를 읽어올 텍스트 판독기입니다. 텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 XML 판독기가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader and settings.">지정된 텍스트 판독기 및 설정을 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.">XML 데이터를 읽어올 텍스트 판독기입니다. 텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 XML 판독기가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" />의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader, settings, and base URI.">지정된 텍스트 판독기, 설정 및 기본 URI를 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to decode the data stream.">XML 데이터를 읽어올 텍스트 판독기입니다. 텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 <see cref="T:System.Xml.XmlReader" />가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="baseUri" vsli:raw="The base URI for the entity or document being read. This value can be &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; Security Note The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source.">읽을 엔터티 또는 문서의 기본 URI입니다. 이 값은 <see langword="null" />일 수 있습니다.  
 보안 정보 기본 URI는 XML 문서의 상대 URI를 확인하는 데 사용됩니다. 신뢰할 수 없는 소스의 기본 URI는 사용하지 않는 것이 좋습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader, settings, and context information for parsing.">지정된 텍스트 판독기, 설정 및 컨텍스트 정보를 구문 분석에 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.">XML 데이터를 읽어올 텍스트 판독기입니다. 텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 XML 판독기가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">XML 조각을 구문 분석하는 데 필요한 컨텍스트 정보입니다. 컨텍스트 정보에는 사용할 <see cref="T:System.Xml.XmlNameTable" />, 인코딩, 네임스페이스 범위, 현재 <c>xml:lang</c>과 <c>xml:space</c> 범위, 기본 URI 및 문서 종류 정의가 포함될 수 있습니다.  
이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.NameTable&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlParserContext.NameTable&quot; /&gt; properties both contain values. (Only one of these &lt;see langword=&quot;NameTable&quot; /&gt; properties can be set and used.)">
        <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 및 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 속성 둘 다에 값이 포함되어 있습니다. <see langword="NameTable" /> 속성 중 하나만 설정 및 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance with specified URI.">지정된 URI를 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="inputUri" vsli:raw="The URI for the file that contains the XML data. The &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; class is used to convert the path to a canonical data representation.">XML 데이터를 포함하는 파일의 URI입니다. <see cref="T:System.Xml.XmlUrlResolver" /> 클래스는 경로를 정규 데이터 표현으로 변환하는 데 사용됩니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" />에는 XML 데이터 위치에 액세스할 수 있는 충분한 권한이 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file identified by the URI does not exist.">URI로 식별된 파일이 없는 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">Windows 스토어 앱용 .NET 또는 이식 가능한 클래스 라이브러리에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.  


            

 URI 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified URI and settings.">지정된 URI 및 설정을 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="inputUri" vsli:raw="The URI for the file containing the XML data. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object on the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object is used to convert the path to a canonical data representation. If &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.XmlResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object is used.">XML 데이터를 포함하는 파일의 URI입니다. <see cref="T:System.Xml.XmlReaderSettings" /> 개체의 <see cref="T:System.Xml.XmlResolver" /> 개체는 경로를 정규 데이터 표현으로 변환하는 데 사용됩니다. <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" />가 <see langword="null" />이면 새 <see cref="T:System.Xml.XmlUrlResolver" /> 개체가 사용됩니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by the URI cannot be found.">URI로 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">Windows 스토어 앱용 .NET 또는 이식 가능한 클래스 라이브러리에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.  


            

 URI 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified URI, settings, and context information for parsing.">지정된 URI, 설정 및 컨텍스트 정보를 구문 분석에 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="inputUri" vsli:raw="The URI for the file containing the XML data. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object on the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object is used to convert the path to a canonical data representation. If &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.XmlResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object is used.">XML 데이터를 포함하는 파일의 URI입니다. <see cref="T:System.Xml.XmlReaderSettings" /> 개체의 <see cref="T:System.Xml.XmlResolver" /> 개체는 경로를 정규 데이터 표현으로 변환하는 데 사용됩니다. <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" />가 <see langword="null" />이면 새 <see cref="T:System.Xml.XmlUrlResolver" /> 개체가 사용됩니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">XML 조각을 구문 분석하는 데 필요한 컨텍스트 정보입니다. 컨텍스트 정보에는 사용할 <see cref="T:System.Xml.XmlNameTable" />, 인코딩, 네임스페이스 범위, 현재 <c>xml:lang</c>과 <c>xml:space</c> 범위, 기본 URI 및 문서 종류 정의가 포함될 수 있습니다.  
이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see langword=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="inputUri" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" />에는 XML 데이터 위치에 액세스할 수 있는 충분한 권한이 없습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.NameTable&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlParserContext.NameTable&quot; /&gt; properties both contain values. (Only one of these &lt;see langword=&quot;NameTable&quot; /&gt; properties can be set and used).">
        <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 및 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 속성 둘 다에 값이 포함되어 있습니다. <see langword="NameTable" /> 속성 중 하나만 설정 및 사용할 수 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by the URI cannot be found.">URI로 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.">URI 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified XML reader and settings.">지정된 XML 판독기 및 설정을 사용하여 새 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만듭니다.</summary>
      <param name="reader" vsli:raw="The object that you want to use as the underlying XML reader.">내부 XML 판독기로 사용할 개체입니다.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.&#xA;&#xA; The conformance level of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object must either match the conformance level of the underlying reader, or it must be set to &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Auto&quot; /&gt;.">새 <see cref="T:System.Xml.XmlReader" /> 인스턴스의 설정입니다.  
<see cref="T:System.Xml.XmlReaderSettings" /> 개체의 규칙 수준은 기본 판독기의 규칙 수준과 일치하거나 <see cref="F:System.Xml.ConformanceLevel.Auto" />로 설정되어야 합니다.</param>
      <returns vsli:raw="An object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">지정된 <see cref="T:System.Xml.XmlReader" /> 개체를 래핑하는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;reader&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object specifies a conformance level that is not consistent with conformance level of the underlying reader.&#xA;&#xA; -or-&#xA;&#xA; The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an &lt;see cref=&quot;F:System.Xml.ReadState.Error&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.ReadState.Closed&quot; /&gt; state.">
        <see cref="T:System.Xml.XmlReaderSettings" /> 개체가 기본 판독기의 규칙 수준과 일치하지 않는 규칙 수준을 지정하는 경우  
또는 
기본 <see cref="T:System.Xml.XmlReader" />가 <see cref="F:System.Xml.ReadState.Error" /> 또는 <see cref="F:System.Xml.ReadState.Closed" /> 상태에 있는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary vsli:raw="When overridden in a derived class, gets the depth of the current node in the XML document.">파생 클래스에서 재정의되면 XML 문서에서 현재 노드의 수준을 가져옵니다.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">XML 문서의 현재 노드 수준입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlReader" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Xml.XmlReader" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.">파생 클래스에서 재정의되면 판독기가 스트림의 끝에 배치되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">판독기가 스트림의 맨 끝에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified index.">파생 클래스에서 재정의되면 지정된 인덱스가 있는 특성의 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">특성의 인덱스입니다. 인덱스는 0부터 시작합니다. 첫 번째 특성의 인덱스는 0입니다.</param>
      <returns vsli:raw="The value of the specified attribute. This method does not move the reader.">지정된 특성의 값을 반환합니다. 이 메서드는 판독기를 이동하지 않습니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is out of range. It must be non-negative and less than the size of the attribute collection.">
        <paramref name="i" />이 범위에서 벗어난 경우. 음수가 아니어야 하며 특성 컬렉션의 크기보다 작아야합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">파생 클래스에서 재정의되면 지정된 <see cref="P:System.Xml.XmlReader.Name" />이 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found or the value is &lt;see langword=&quot;String.Empty&quot; /&gt;, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 특성의 값을 반환합니다. 지정된 특성이 없거나 값이 <see langword="String.Empty" />이면 <see langword="null" />이 반환됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">파생 클래스에서 재정의되면 지정된 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" />가 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found or the value is &lt;see langword=&quot;String.Empty&quot; /&gt;, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">지정된 특성의 값을 반환합니다. 지정된 특성이 없거나 값이 <see langword="String.Empty" />이면 <see langword="null" />이 반환됩니다. 이 메서드는 판독기를 이동하지 않습니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary vsli:raw="Asynchronously gets the value of the current node.">현재 노드의 값을 비동기적으로 가져옵니다.</summary>
      <returns vsli:raw="The value of the current node.">현재 노드의 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress&quot;.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우에 "비동기 작업이 이미 진행 중입니다." 메시지를 표시하며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether the current node has any attributes.">현재 노드에 특성이 있는지를 나타내는 값을 얻습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드에 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlReader.Value&quot; /&gt;.">파생 클래스에서 재정의되면 현재 노드에 <see cref="P:System.Xml.XmlReader.Value" />가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the node has a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">현재 판독기가 위치한 노드에 <see langword="Value" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />인 경우 노드의 값은 <see langword="String.Empty" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.">파생 클래스에서 재정의되면 현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <see langword="true" />이고, 특성 값이 명시적으로 설정되었으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">파생 클래스에서 재정의되면 현재 노드가 <c>&lt;MyElement/&gt;</c>와 같은 빈 요소인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 현재 노드가 요소 이면 (<see cref="P:System.Xml.XmlReader.NodeType" /> equals <see langword="XmlNodeType.Element" />)로 끝나는 <c>/ &gt;</c>고, 그렇지 않으면 <see langword="false" />합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary vsli:raw="Returns a value indicating whether the string argument is a valid XML name.">문자열 인수가 유효한 XML 이름인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="str" vsli:raw="The name to validate.">유효성을 확인할 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유효한 이름이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary vsli:raw="Returns a value indicating whether or not the string argument is a valid XML name token.">문자열 인수가 유효한 XML 이름 토큰인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="str" vsli:raw="The name token to validate.">유효성을 검사할 이름 토큰입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is a valid name token; otherwise &lt;see langword=&quot;false&quot; /&gt;.">유효한 이름 토큰이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag.">
        <see cref="M:System.Xml.XmlReader.MoveToContent" />를 호출하고 현재 콘텐츠 노드가 시작 태그 또는 빈 요소 태그인지 테스트합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; finds a start tag or empty element tag; &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found.">
        <see cref="M:System.Xml.XmlReader.MoveToContent" />가 시작 태그나 빈 요소 태그를 찾으면 <see langword="true" />이고, <see langword="false" /> 이외의 노드 형식을 찾으면 <see langword="XmlNodeType.Element" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">입력 스트림에 잘못된 XML이 있는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element found matches the given argument.">
        <see cref="M:System.Xml.XmlReader.MoveToContent" />를 호출하고 현재 콘텐츠 노드가 시작 태그 또는 빈 요소 태그인지 여부와 찾은 요소의 <see cref="P:System.Xml.XmlReader.Name" /> 속성이 지정된 인수와 일치하는지 여부를 테스트합니다.</summary>
      <param name="name" vsli:raw="The string matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the element found.">찾은 요소의 <see langword="Name" /> 속성과 일치하는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting node is an element and the &lt;see langword=&quot;Name&quot; /&gt; property matches the specified string. &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found or if the element &lt;see langword=&quot;Name&quot; /&gt; property does not match the specified string.">테스트한 결과 현재 노드가 요소이고 <see langword="true" /> 속성이 지정된 문자열과 일치하면 <see langword="Name" />이고, <see langword="false" /> 이외의 노드 형식을 찾거나 요소 <see langword="XmlNodeType.Element" /> 속성이 지정된 문자열과 일치하지 않으면 <see langword="Name" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">입력 스트림에 잘못된 XML이 있는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found match the given strings.">
        <see cref="M:System.Xml.XmlReader.MoveToContent" />를 호출하고 현재 콘텐츠 노드가 시작 태그 또는 빈 요소 태그인지 여부와 찾은 요소의 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 속성이 지정된 인수와 일치하는지 여부를 테스트합니다.</summary>
      <param name="localname" vsli:raw="The string to match against the &lt;see langword=&quot;LocalName&quot; /&gt; property of the element found.">찾은 요소의 <see langword="LocalName" /> 속성과 일치하는 문자열입니다.</param>
      <param name="ns" vsli:raw="The string to match against the &lt;see langword=&quot;NamespaceURI&quot; /&gt; property of the element found.">찾은 요소의 <see langword="NamespaceURI" /> 속성과 일치하는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting node is an element. &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found or if the &lt;see langword=&quot;LocalName&quot; /&gt; and &lt;see langword=&quot;NamespaceURI&quot; /&gt; properties of the element do not match the specified strings.">테스트한 결과 현재 노드가 요소이면 <see langword="true" />이고, <see langword="false" /> 이외의 노드 형식을 찾거나 요소의 <see langword="XmlNodeType.Element" /> 및 <see langword="LocalName" /> 속성이 지정된 문자열과 일치하지 않으면 <see langword="NamespaceURI" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">입력 스트림에 잘못된 XML이 있는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified index.">파생 클래스에서 재정의되면 지정된 인덱스가 있는 특성의 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the attribute.">특성의 인덱스입니다.</param>
      <returns vsli:raw="The value of the specified attribute.">지정된 특성의 값을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">파생 클래스에서 재정의되면 지정된 <see cref="P:System.Xml.XmlReader.Name" />이 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">파생 클래스에서 재정의되면 지정된 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" />가 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary vsli:raw="When overridden in a derived class, gets the local name of the current node.">파생 클래스에서 재정의되면 현재 노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.&#xA;&#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns &lt;see langword=&quot;String.Empty&quot; /&gt;.">접두사를 제거한 현재 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 됩니다 <see langword="book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
이름이 없는 노드 형식(예: <see langword="Text" />, <see langword="Comment" /> 등)의 경우 이 속성은 <see langword="String.Empty" />를 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves a namespace prefix in the current element's scope.">파생 클래스에서 재정의되면 현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string.">확인할 네임스페이스 URI의 접두사입니다. 기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified index.">파생 클래스에서 재정의되면 지정된 인덱스가 있는 특성으로 이동합니다.</summary>
      <param name="i" vsli:raw="The index of the attribute.">특성의 인덱스입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The parameter has a negative value.">매개 변수에 음수 값이 있습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">파생 클래스에서 재정의되면 지정된 <see cref="P:System.Xml.XmlReader.Name" />이 있는 특성으로 이동합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">매개 변수가 빈 문자열인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">파생 클래스에서 재정의되면 지정된 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" />가 있는 특성으로 이동합니다.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">두 매개 변수 값이 모두 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary vsli:raw="Checks whether the current node is a content (non-white space text, &lt;see langword=&quot;CDATA&quot; /&gt;, &lt;see langword=&quot;Element&quot; /&gt;, &lt;see langword=&quot;EndElement&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt;) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following type: &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;, &lt;see langword=&quot;DocumentType&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, &lt;see langword=&quot;Whitespace&quot; /&gt;, or &lt;see langword=&quot;SignificantWhitespace&quot; /&gt;.">현재 노드가 콘텐츠 노드(공백 없는 텍스트, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" /> 또는 <see langword="EndEntity" />)인지 여부를 확인합니다. 해당 노드가 콘텐츠 노드가 아니면 판독기는 다음 콘텐츠 노드나 파일의 끝으로 건너뜁니다. 판독기는 <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" /> 또는 <see langword="SignificantWhitespace" /> 같은 형식의 노드를 건너뜁니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the current node found by the method or &lt;see langword=&quot;XmlNodeType.None&quot; /&gt; if the reader has reached the end of the input stream.">메서드를 사용하여 찾은 현재 노드의 <see cref="P:System.Xml.XmlReader.NodeType" />이거나 판독기가 입력 스트림의 끝에 도달한 경우에는 <see langword="XmlNodeType.None" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML encountered in the input stream.">입력 스트림에 잘못된 XML이 있는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary vsli:raw="Asynchronously checks whether the current node is a content node. If the node is not a content node, the reader skips ahead to the next content node or end of file.">현재 노드가 콘텐츠 노드인지를 비동기적으로 확인합니다. 해당 노드가 콘텐츠 노드가 아니면 판독기는 다음 콘텐츠 노드나 파일의 끝으로 건너뜁니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the current node found by the method or &lt;see langword=&quot;XmlNodeType.None&quot; /&gt; if the reader has reached the end of the input stream.">메서드를 사용하여 찾은 현재 노드의 <see cref="P:System.Xml.XmlReader.NodeType" />이거나 판독기가 입력 스트림의 끝에 도달한 경우에는 <see langword="XmlNodeType.None" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary vsli:raw="When overridden in a derived class, moves to the element that contains the current attribute node.">파생 클래스에서 재정의되면 현재 Attribute 노드를 포함하는 요소로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <see langword="true" />이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary vsli:raw="When overridden in a derived class, moves to the first attribute.">파생 클래스에서 재정의되면 첫 번째 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <see langword="true" />이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary vsli:raw="When overridden in a derived class, moves to the next attribute.">파생 클래스에서 재정의되면 다음 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">다음 특성이 있으면 <see langword="true" />이고, 더 이상 특성이 없으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary vsli:raw="When overridden in a derived class, gets the qualified name of the current node.">파생 클래스에서 재정의되면 현재 노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.&#xA;&#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.&#xA;&#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">현재 노드의 정규화된 이름입니다. 예를 들어 <see langword="Name" /> 됩니다 <see langword="bk:book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlReader.NodeType" />에 따라 달라집니다. 다음 노드 형식은 나열된 값을 반환합니다. 기타 모든 노드 형식은 빈 문자열을 반환합니다.  
  노드 형식 
  name 
 <see langword="Attribute" /> 특성 이름입니다.  

 <see langword="DocumentType" /> 문서 형식 이름입니다.  

 <see langword="Element" /> 태그 이름입니다.  

 <see langword="EntityReference" /> 참조된 엔터티의 이름입니다.  

 <see langword="ProcessingInstruction" /> 처리 명령의 대상입니다.  

 <see langword="XmlDeclaration" /> 리터럴 문자열 <see langword="xml" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary vsli:raw="When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">파생 클래스에서 재정의되면 판독기가 배치된 노드의 네임스페이스 URI를 W3C Namespace 사양에 정의된 대로 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">파생 클래스에서 재정의되면 이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <see langword="XmlNameTable" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the current node.">파생 클래스에서 재정의되면 현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the enumeration values that specify the type of the current node.">현재 노드의 형식을 지정하는 열거형 값 중 하나입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary vsli:raw="When overridden in a derived class, gets the namespace prefix associated with the current node.">파생 클래스에서 재정의되면 현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">현재 노드와 관련된 네임스페이스 접두사입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary vsli:raw="When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.">파생 클래스에서 재정의되면 Attribute 노드의 값을 묶는 데 사용되는 따옴표 문자를 가져옵니다.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary vsli:raw="When overridden in a derived class, reads the next node from the stream.">파생 클래스에서 재정의되면 스트림에서 다음 노드를 읽습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">서명을 읽었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">XML을 구문 분석하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary vsli:raw="Asynchronously reads the next node from the stream.">스트림에서 다음 노드를 비동기적으로 읽습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">다음 노드를 읽었으면 <see langword="true" />이고, 더 이상 읽을 노드가 없으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary vsli:raw="When overridden in a derived class, parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">파생 클래스에서 재정의되면 하나 이상의 <see langword="Text" />, <see langword="EntityReference" /> 또는 <see langword="EndEntity" /> 노드로 특성 값을 구문 분석합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.&#xA;&#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">반환할 노드가 있는 경우 <see langword="true" />입니다.  
 처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <see langword="false" />입니다.  
<c>misc=""</c>와 같은 빈 특성은 <see langword="true" />를 반환하며 이것은 단일 노드가 <see langword="String.Empty" />의 값을 갖는 것을 의미합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Reads the content as an object of the type specified.">지정한 형식의 개체로 콘텐츠를 읽습니다.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">반환될 값의 형식입니다.  
 참고 .NET Framework 3.5 릴리스에서는 <paramref name="returnType" /> 매개 변수 값이 <see cref="T:System.DateTimeOffset" /> 형식이 될 수 있습니다.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다. 예를 들어, <see cref="T:System.Xml.XmlQualifiedName" /> 개체를 <c>xs:string</c>으로 변환할 때 이 개체를 사용할 수 있습니다.  
이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">요청된 형식으로 변환된 특성 값 또는 연결된 텍스트 콘텐츠입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The content is not in the correct format for the target type.">콘텐츠가 대상 형식에 맞지 않는 형식인 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;returnType&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="returnType" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not a supported node type. See the table below for details.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">현재 노드가 지원되는 노드 형식이 아닌 경우. 자세한 내용은 아래 표를 참조하십시오.
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">
        <see langword="Decimal.MaxValue" />를 읽는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Asynchronously reads the content as an object of the type specified.">지정한 형식의 개체로 콘텐츠를 비동기적으로 읽습니다.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.">반환될 값의 형식입니다.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">요청된 형식으로 변환된 특성 값 또는 연결된 텍스트 콘텐츠입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlReader" />에서 이 메서드를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the content and returns the Base64 decoded binary bytes.">콘텐츠를 비동기적으로 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">콘텐츠를 읽고 <see langword="BinHex" /> 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlReader" />에서 이 메서드를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">콘텐츠를 비동기적으로 읽고 <see langword="BinHex" /> 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see langword=&quot;Boolean&quot; /&gt;.">현재 위치의 텍스트 콘텐츠를 <see langword="Boolean" />으로 읽습니다.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">텍스트 콘텐츠에 해당하는 <see cref="T:System.Boolean" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">현재 위치의 텍스트 콘텐츠를 <see cref="T:System.DateTime" /> 개체로 읽습니다.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">텍스트 콘텐츠에 해당하는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; object.">현재 위치의 텍스트 콘텐츠를 <see cref="T:System.DateTimeOffset" /> 개체로 읽습니다.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; object.">텍스트 콘텐츠에 해당하는 <see cref="T:System.DateTimeOffset" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">현재 위치의 텍스트 콘텐츠를 <see cref="T:System.Decimal" /> 개체로 읽습니다.</summary>
      <returns vsli:raw="The text content at the current position as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">현재 위치의 텍스트 콘텐츠에 해당하는 <see cref="T:System.Decimal" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary vsli:raw="Reads the text content at the current position as a double-precision floating-point number.">현재 위치의 텍스트 콘텐츠를 배정밀도 부동 소수점 숫자로 읽습니다.</summary>
      <returns vsli:raw="The text content as a double-precision floating-point number.">텍스트 콘텐츠에 해당하는 배정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary vsli:raw="Reads the text content at the current position as a single-precision floating point number.">현재 위치의 텍스트 콘텐츠를 단정밀도 부동 소수점 숫자로 읽습니다.</summary>
      <returns vsli:raw="The text content at the current position as a single-precision floating point number.">현재 위치의 텍스트 콘텐츠에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary vsli:raw="Reads the text content at the current position as a 32-bit signed integer.">현재 위치의 텍스트 콘텐츠를 부호 있는 32비트 정수로 읽습니다.</summary>
      <returns vsli:raw="The text content as a 32-bit signed integer.">텍스트 콘텐츠에 해당하는 부호 있는 32비트 정수입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary vsli:raw="Reads the text content at the current position as a 64-bit signed integer.">현재 위치의 텍스트 콘텐츠를 부호 있는 64비트 정수로 읽습니다.</summary>
      <returns vsli:raw="The text content as a 64-bit signed integer.">텍스트 콘텐츠에 해당하는 부호 있는 64비트 정수입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary vsli:raw="Reads the text content at the current position as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 위치의 텍스트 콘텐츠를 <see cref="T:System.Object" />로 읽습니다.</summary>
      <returns vsli:raw="The text content as the most appropriate common language runtime (CLR) object.">텍스트 콘텐츠에 해당하는 가장 적절한 CLR(공용 언어 런타임) 개체입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary vsli:raw="Asynchronously reads the text content at the current position as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 위치의 텍스트 콘텐츠를 <see cref="T:System.Object" />로 비동기적으로 읽습니다.</summary>
      <returns vsli:raw="The text content as the most appropriate common language runtime (CLR) object.">텍스트 콘텐츠에 해당하는 가장 적절한 CLR(공용 언어 런타임) 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">현재 위치의 텍스트 콘텐츠를 <see cref="T:System.String" /> 개체로 읽습니다.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">텍스트 콘텐츠에 해당하는 <see cref="T:System.String" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">문자열 형식이 올바르지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary vsli:raw="Asynchronously reads the text content at the current position as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">현재 위치의 텍스트 콘텐츠를 <see cref="T:System.String" /> 개체로 읽습니다.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">텍스트 콘텐츠에 해당하는 <see cref="T:System.String" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Reads the element content as the requested type.">요소 콘텐츠를 요청된 형식으로 읽습니다.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">반환될 값의 형식입니다.  
 참고 .NET Framework 3.5 릴리스에서는 <paramref name="returnType" /> 매개 변수 값이 <see cref="T:System.DateTimeOffset" /> 형식이 될 수 있습니다.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</param>
      <returns vsli:raw="The element content converted to the requested typed object.">요청된 형식의 개체로 변환된 요소 콘텐츠입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">
        <see langword="Decimal.MaxValue" />를 읽는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 요소 콘텐츠를 요청된 형식으로 읽습니다.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">반환될 값의 형식입니다.  
 참고 .NET Framework 3.5 릴리스에서는 <paramref name="returnType" /> 매개 변수 값이 <see cref="T:System.DateTimeOffset" /> 형식이 될 수 있습니다.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</param>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content converted to the requested typed object.">요청된 형식의 개체로 변환된 요소 콘텐츠입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">
        <see langword="Decimal.MaxValue" />를 읽는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Asynchronously reads the element content as the requested type.">요소 콘텐츠를 요청된 형식으로 비동기적으로 읽습니다.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.">반환될 값의 형식입니다.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</param>
      <returns vsli:raw="The element content converted to the requested typed object.">요청된 형식의 개체로 변환된 요소 콘텐츠입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;Base64&quot; /&gt; content.">요소를 읽고 <see langword="Base64" /> 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">현재 노드가 요소 노드가 아닌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlReader" />에서 이 메서드를 지원하지 않는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">요소가 혼합 콘텐츠를 포함하는 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the element and decodes the &lt;see langword=&quot;Base64&quot; /&gt; content.">요소를 비동기적으로 읽고 <see langword="Base64" /> 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">요소를 읽고 <see langword="BinHex" /> 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">현재 노드가 요소 노드가 아닌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlReader" />에서 이 메서드를 지원하지 않는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">요소가 혼합 콘텐츠를 포함하는 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">요소를 비동기적으로 읽고 <see langword="BinHex" /> 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">현재 요소를 읽고 콘텐츠를 <see cref="T:System.Boolean" /> 개체로 반환합니다.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.Boolean" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">현재 요소에 자식 요소가 포함된 경우  
또는 
요소 콘텐츠를 <see cref="T:System.Boolean" /> 개체로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <see cref="T:System.Boolean" /> 개체로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.Boolean" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">현재 요소를 읽고 콘텐츠를 <see cref="T:System.DateTime" /> 개체로 반환합니다.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">현재 요소에 자식 요소가 포함된 경우  
또는 
요소 콘텐츠를 <see cref="T:System.DateTime" /> 개체로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <see cref="T:System.DateTime" /> 개체로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">현재 요소를 읽고 콘텐츠를 <see cref="T:System.Decimal" /> 개체로 반환합니다.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.Decimal" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">현재 요소에 자식 요소가 포함된 경우  
또는 
요소 콘텐츠를 <see cref="T:System.Decimal" />로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <see cref="T:System.Decimal" /> 개체로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.Decimal" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">현재 요소에 자식 요소가 포함된 경우  
또는 
요소 콘텐츠를 <see cref="T:System.Decimal" />로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary vsli:raw="Reads the current element and returns the contents as a double-precision floating-point number.">현재 요소를 읽고 콘텐츠를 배정밀도 부동 소수점 숫자로 반환합니다.</summary>
      <returns vsli:raw="The element content as a double-precision floating-point number.">요소 콘텐츠에 해당하는 배정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a double-precision floating-point number.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 배정밀도 부동 소수점 숫자로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 배정밀도 부동 소수점 숫자로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content as a double-precision floating-point number.">요소 콘텐츠에 해당하는 배정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary vsli:raw="Reads the current element and returns the contents as single-precision floating-point number.">현재 요소를 읽고 콘텐츠를 단정밀도 부동 소수점 숫자로 반환합니다.</summary>
      <returns vsli:raw="The element content as a single-precision floating point number.">요소 콘텐츠에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a single-precision floating-point number.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 단정밀도 부동 소수점 숫자로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 단정밀도 부동 소수점 숫자로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content as a single-precision floating point number.">요소 콘텐츠에 해당하는 단정밀도 부동 소수점 숫자입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a single-precision floating-point number.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 단정밀도 부동 소수점 숫자로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary vsli:raw="Reads the current element and returns the contents as a 32-bit signed integer.">현재 요소를 읽고 부호 있는 32비트 정수로 콘텐츠를 반환합니다.</summary>
      <returns vsli:raw="The element content as a 32-bit signed integer.">요소 콘텐츠에 해당하는 부호 있는 32비트 정수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 32-bit signed integer.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 부호 있는 32비트 정수로 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 부호 있는 32비트 정수로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content as a 32-bit signed integer.">요소 콘텐츠에 해당하는 부호 있는 32비트 정수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 32-bit signed integer.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 부호 있는 32비트 정수로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary vsli:raw="Reads the current element and returns the contents as a 64-bit signed integer.">현재 요소를 읽고 부호 있는 64비트 정수로 콘텐츠를 반환합니다.</summary>
      <returns vsli:raw="The element content as a 64-bit signed integer.">요소 콘텐츠에 해당하는 부호 있는 64비트 정수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 64-bit signed integer.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 부호 있는 64비트 정수로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.">지정된 로컬 이름 및 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음, 현재 요소를 읽고 콘텐츠를 부호 있는 64비트 정수로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content as a 64-bit signed integer.">요소 콘텐츠에 해당하는 부호 있는 64비트 정수입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 64-bit signed integer.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 부호 있는 64비트 정수로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary vsli:raw="Reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 요소를 읽고 콘텐츠를 <see cref="T:System.Object" />로 반환합니다.</summary>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">가장 적합한 형식의 boxed CLR(공용 언어 런타임) 개체입니다. 적합한 CLR 형식은 <see cref="P:System.Xml.XmlReader.ValueType" /> 속성에 따라 결정됩니다. 콘텐츠가 목록 형식이면 이 메서드는 적합한 형식의 boxed 개체 배열을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <see cref="T:System.Object" />로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">가장 적합한 형식의 boxed CLR(공용 언어 런타임) 개체입니다. 적합한 CLR 형식은 <see cref="P:System.Xml.XmlReader.ValueType" /> 속성에 따라 결정됩니다. 콘텐츠가 목록 형식이면 이 메서드는 적합한 형식의 boxed 개체 배열을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">현재 요소에 자식 요소가 포함된 경우  
 또는  
 요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary vsli:raw="Asynchronously reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 요소를 비동기적으로 읽고 콘텐츠를 <see cref="T:System.Object" />로 반환합니다.</summary>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">가장 적합한 형식의 boxed CLR(공용 언어 런타임) 개체입니다. 적합한 CLR 형식은 <see cref="P:System.Xml.XmlReader.ValueType" /> 속성에 따라 결정됩니다. 콘텐츠가 목록 형식이면 이 메서드는 적합한 형식의 boxed 개체 배열을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">현재 요소를 읽고 콘텐츠를 <see cref="T:System.String" /> 개체로 반환합니다.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.String" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">현재 요소에 자식 요소가 포함된 경우  
또는 
요소 콘텐츠를 <see cref="T:System.String" /> 개체로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <see cref="T:System.String" /> 개체로 반환합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.String" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" />가 요소에 배치되지 않은 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">현재 요소에 자식 요소가 포함된 경우  
또는 
요소 콘텐츠를 <see cref="T:System.String" /> 개체로 변환할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">메서드가 <see langword="null" /> 인수를 사용하여 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary vsli:raw="Asynchronously reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">현재 요소를 비동기적으로 읽고 콘텐츠를 <see cref="T:System.String" /> 개체로 반환합니다.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">요소 콘텐츠에 해당하는 <see cref="T:System.String" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">
        <see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary vsli:raw="Reads a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">텍스트 전용 요소를 읽습니다. 그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> 메서드를 대신 사용하는 것이 좋습니다.</summary>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">읽은 요소에 들어 있는 텍스트입니다. 요소가 비어 있으면 빈 문자열입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The next content node is not a start tag; or the element found does not contain a simple text value.">다음 콘텐츠 노드가 시작 태그가 아니거나 찾은 요소에 간단한 텍스트 값이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary vsli:raw="Checks that the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element found matches the given string before reading a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">텍스트 전용 요소를 읽기 전에 찾은 요소의 <see cref="P:System.Xml.XmlReader.Name" /> 속성이 지정된 문자열과 일치하는지 확인합니다. 그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> 메서드를 대신 사용하는 것이 좋습니다.</summary>
      <param name="name" vsli:raw="The name to check.">확인할 이름입니다.</param>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">읽은 요소에 들어 있는 텍스트입니다. 요소가 비어 있으면 빈 문자열입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="If the next content node is not a start tag; if the element &lt;see langword=&quot;Name&quot; /&gt; does not match the given argument; or if the element found does not contain a simple text value.">다음 콘텐츠 노드가 시작 태그가 아닌 경우, <see langword="Name" /> 요소가 지정된 인수와 일치하지 않는 경우 또는 찾은 요소에 간단한 텍스트 값이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary vsli:raw="Checks that the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found matches the given strings before reading a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">텍스트 전용 요소를 읽기 전에 찾은 요소의 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 속성이 지정된 문자열과 일치하는지 확인합니다. 그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> 메서드를 대신 사용하는 것이 좋습니다.</summary>
      <param name="localname" vsli:raw="The local name to check.">확인할 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to check.">확인할 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">읽은 요소에 들어 있는 텍스트입니다. 요소가 비어 있으면 빈 문자열입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="If the next content node is not a start tag; if the element &lt;see langword=&quot;LocalName&quot; /&gt; or &lt;see langword=&quot;NamespaceURI&quot; /&gt; do not match the given arguments; or if the element found does not contain a simple text value.">다음 콘텐츠 노드가 시작 태그가 아닌 경우, <see langword="LocalName" /> 또는 <see langword="NamespaceURI" /> 요소가 지정된 인수와 일치하지 않는 경우 또는 찾은 요소에 간단한 텍스트 값이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary vsli:raw="Checks that the current content node is an end tag and advances the reader to the next node.">현재 콘텐츠 노드가 끝 태그인지 확인하고 판독기를 다음 노드로 이동합니다.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current node is not an end tag or if incorrect XML is encountered in the input stream.">현재 노드가 끝 태그가 아니거나 입력 스트림에 잘못된 XML이 있는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary vsli:raw="When overridden in a derived class, reads all the content, including markup, as a string.">파생 클래스에서 재정의되면 태그를 포함한 모든 콘텐츠를 문자열로 읽습니다.</summary>
      <returns vsli:raw="All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.&#xA;&#xA; If the current node is neither an element nor attribute, an empty string is returned.">태그를 포함한 모든 현재 노드의 XML 콘텐츠입니다. 현재 노드에 자식이 없으면 빈 문자열이 반환됩니다.  
 현재 노드가 요소나 특성이 아니면 빈 문자열이 반환됩니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML was not well-formed, or an error occurred while parsing the XML.">XML의 형식이 잘못되었거나 XML을 구문 분석하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary vsli:raw="Asynchronously reads all the content, including markup, as a string.">태그를 포함한 모든 콘텐츠를 문자열로 비동기적으로 읽습니다.</summary>
      <returns vsli:raw="All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.">태그를 포함한 모든 현재 노드의 XML 콘텐츠입니다. 현재 노드에 자식이 없으면 빈 문자열이 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary vsli:raw="When overridden in a derived class, reads the content, including markup, representing this node and all its children.">파생 클래스에서 재정의되면 태그를 포함하여 이 노드 및 모든 자식 노드를 나타내는 콘텐츠를 읽습니다.</summary>
      <returns vsli:raw="If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.">판독기가 Element 또는 Attribute 노드에 배치되면 이 메서드는 태그를 포함해 현재 노드와 모든 자식 노드의 xml 콘텐츠를 모두 반환하고, 그렇지 않으면 빈 문자열을 반환합니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML was not well-formed, or an error occurred while parsing the XML.">XML의 형식이 잘못되었거나 XML을 구문 분석하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary vsli:raw="Asynchronously reads the content, including markup, representing this node and all its children.">이 노드 및 이 노드의 모든 자식을 나타내는 태그를 포함한 콘텐츠를 비동기적으로 읽습니다.</summary>
      <returns vsli:raw="If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.">판독기가 Element 또는 Attribute 노드에 배치되면 이 메서드는 태그를 포함해 현재 노드와 모든 자식 노드의 xml 콘텐츠를 모두 반환하고, 그렇지 않으면 빈 문자열을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">
        <see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary vsli:raw="Checks that the current node is an element and advances the reader to the next node.">현재 노드가 요소인지 확인하고 판독기를 다음 노드로 이동합니다.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.">입력 스트림에 잘못된 XML이 있는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary vsli:raw="Checks that the current content node is an element with the given &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; and advances the reader to the next node.">현재 콘텐츠 노드가 지정된 <see cref="P:System.Xml.XmlReader.Name" />을 가진 요소인지 확인하고 판독기를 다음 노드로 이동합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">요소의 정규화된 이름입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; of the element does not match the given &lt;paramref name=&quot;name&quot; /&gt;.">입력 스트림에 잘못된 XML이 있는 경우  
또는 
이 요소의 <see cref="P:System.Xml.XmlReader.Name" />는 주어진 <paramref name="name" />에 매치되지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary vsli:raw="Checks that the current content node is an element with the given &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; and advances the reader to the next node.">현재 콘텐츠 노드가 지정된 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" />가 있는 요소인지 확인하고 판독기를 다음 노드로 이동합니다.</summary>
      <param name="localname" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found do not match the given arguments.">입력 스트림에 잘못된 XML이 있는 경우  
또는 
검색된 요소의 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 속성은 주어진 인수와 일치하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary vsli:raw="When overridden in a derived class, gets the state of the reader.">파생 클래스에서 재정의되면 판독기의 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the state of the reader.">판독기 상태를 지정하는 열거형 값 중 하나입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary vsli:raw="When overridden in a derived class, reads the contents of an element or text node as a string. However, we recommend that you use the &lt;see cref=&quot;Overload:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">파생 클래스에서 재정의되면 요소 또는 text 노드의 내용을 문자열로 읽습니다. 그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> 메서드를 대신 사용하는 것이 좋습니다.</summary>
      <returns vsli:raw="The contents of the element or an empty string.">요소의 내용이나 빈 문자열입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">XML을 구문 분석하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary vsli:raw="Returns a new &lt;see langword=&quot;XmlReader&quot; /&gt; instance that can be used to read the current node, and all its descendants.">현재 노드와 해당 하위 노드 전체를 읽는 데 사용되는 새 <see langword="XmlReader" /> 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="A new XML reader instance set to &lt;see cref=&quot;F:System.Xml.ReadState.Initial&quot; /&gt;. Calling the &lt;see cref=&quot;M:System.Xml.XmlReader.Read&quot; /&gt; method positions the new reader on the node that was current before the call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadSubtree&quot; /&gt; method.">
        <see cref="F:System.Xml.ReadState.Initial" />로 설정된 새로운 XML 판독기 인스턴스입니다. <see cref="M:System.Xml.XmlReader.Read" /> 메서드를 호출하면 <see cref="M:System.Xml.XmlReader.ReadSubtree" /> 메서드를 호출하기 전에 현재 노드에 새 판독기가 배치됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The XML reader isn't positioned on an element when this method is called.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">XML reader가 요소에 배치되지 않은 상태에서 이 메서드를 호출한 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the next descendant element with the specified qualified name.">지정된 정규화 이름을 사용하는 다음 하위 요소로 <see cref="T:System.Xml.XmlReader" />를 이동합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the element you wish to move to.">판독기를 이동할 요소의 정규화된 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching descendant element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching descendant element is not found, the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the element.&#xA;&#xA; If the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element when &lt;see cref=&quot;M:System.Xml.XmlReader.ReadToDescendant(System.String)&quot; /&gt; was called, this method returns &lt;see langword=&quot;false&quot; /&gt; and the position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not changed.">일치하는 하위 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 일치하는 하위 요소가 없으면 요소의 끝 태그, 즉 <see cref="T:System.Xml.XmlReader" />이 <see langword="XmlNodeType.EndElement" />인 태그에 <see cref="P:System.Xml.XmlReader.NodeType" />가 배치됩니다.  
<see cref="T:System.Xml.XmlReader" />를 호출했을 때 <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />가 요소에 배치되어 있지 않으면 이 메서드가 <see langword="false" />를 반환하고 <see cref="T:System.Xml.XmlReader" />의 위치는 변경되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">매개 변수가 빈 문자열인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the next descendant element with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI를 사용하는 다음 하위 요소로 <see cref="T:System.Xml.XmlReader" />를 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element you wish to move to.">판독기를 이동할 요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element you wish to move to.">판독기를 이동할 하위 요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching descendant element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching descendant element is not found, the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the element.&#xA;&#xA; If the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element when &lt;see cref=&quot;M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)&quot; /&gt; was called, this method returns &lt;see langword=&quot;false&quot; /&gt; and the position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not changed.">일치하는 하위 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 일치하는 하위 요소가 없으면 요소의 끝 태그, 즉 <see cref="T:System.Xml.XmlReader" />이 <see langword="XmlNodeType.EndElement" />인 태그에 <see cref="P:System.Xml.XmlReader.NodeType" />가 배치됩니다.  
<see cref="T:System.Xml.XmlReader" />를 호출했을 때 <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />가 요소에 배치되어 있지 않으면 이 메서드가 <see langword="false" />를 반환하고 <see cref="T:System.Xml.XmlReader" />의 위치는 변경되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">두 매개 변수 값이 모두 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary vsli:raw="Reads until an element with the specified qualified name is found.">지정된 정규화된 이름의 요소를 찾을 때까지 읽습니다.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">요소의 정규화된 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching element is found; otherwise &lt;see langword=&quot;false&quot; /&gt; and the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an end of file state.">일치하는 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />이고 <see cref="T:System.Xml.XmlReader" />가 파일 끝에 도달합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">매개 변수가 빈 문자열인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary vsli:raw="Reads until an element with the specified local name and namespace URI is found.">지정된 로컬 이름 및 네임스페이스 URI를 사용하는 요소를 찾을 때까지 읽습니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching element is found; otherwise &lt;see langword=&quot;false&quot; /&gt; and the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an end of file state.">일치하는 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />이고 <see cref="T:System.Xml.XmlReader" />가 파일 끝에 도달합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">두 매개 변수 값이 모두 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary vsli:raw="Advances the &lt;see langword=&quot;XmlReader&quot; /&gt; to the next sibling element with the specified qualified name.">지정된 정규화 이름을 사용하는 다음 형제 요소로 <see langword="XmlReader" />를 이동합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the sibling element you wish to move to.">판독기를 이동할 형제 요소의 정규화된 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching sibling element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching sibling element is not found, the &lt;see langword=&quot;XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the parent element.">일치하는 형제 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 일치하는 형제 요소가 없으면 부모 요소의 끝 태그, 즉 <see cref="P:System.Xml.XmlReader.NodeType" />이 <see langword="XmlNodeType.EndElement" />인 태그에 <see langword="XmlReader" />가 배치됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">매개 변수가 빈 문자열인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary vsli:raw="Advances the &lt;see langword=&quot;XmlReader&quot; /&gt; to the next sibling element with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI를 사용하는 다음 형제 요소로 <see langword="XmlReader" />를 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the sibling element you wish to move to.">판독기를 이동할 형제 요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the sibling element you wish to move to.">판독기를 이동할 형제 요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching sibling element is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If a matching sibling element is not found, the &lt;see langword=&quot;XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the parent element.">일치하는 형제 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 일치하는 형제 요소가 없으면 부모 요소의 끝 태그, 즉 <see cref="P:System.Xml.XmlReader.NodeType" />이 <see langword="XmlNodeType.EndElement" />인 태그에 <see langword="XmlReader" />가 배치됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">두 매개 변수 값이 모두 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads large streams of text embedded in an XML document.">XML 문서에 포함된 큰 텍스트 스트림을 읽습니다.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">텍스트 콘텐츠를 쓸 버퍼 역할을 하는 문자 배열입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset within the buffer where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; can start to copy the results.">
        <see cref="T:System.Xml.XmlReader" />가 버퍼 내에서 결과 복사를 시작할 수 있는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.">버퍼에 복사할 최대 문자 수입니다. 이 메서드는 복사된 실제 문자 수를 반환합니다.</param>
      <returns vsli:raw="The number of characters read into the buffer. The value zero is returned when there is no more text content.">버퍼로 읽어온 문자 수입니다. 텍스트 콘텐츠가 더 이상 없으면 0이 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node does not have a value (&lt;see cref=&quot;P:System.Xml.XmlReader.HasValue&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">현재 노드에 값이 없는 경우, 즉 <see cref="P:System.Xml.XmlReader.HasValue" />가 <see langword="false" />인 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer, or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlReader" />에서 이 메서드를 지원하지 않는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML data is not well-formed.">XML 데이터가 올바른 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads large streams of text embedded in an XML document.">XML 문서에 포함된 큰 텍스트 스트림을 비동기적으로 읽습니다.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">텍스트 콘텐츠를 쓸 버퍼 역할을 하는 문자 배열입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset within the buffer where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; can start to copy the results.">
        <see cref="T:System.Xml.XmlReader" />가 버퍼 내에서 결과 복사를 시작할 수 있는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.">버퍼에 복사할 최대 문자 수입니다. 이 메서드는 복사된 실제 문자 수를 반환합니다.</param>
      <returns vsli:raw="The number of characters read into the buffer. The value zero is returned when there is no more text content.">버퍼로 읽어온 문자 수입니다. 텍스트 콘텐츠가 더 이상 없으면 0이 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary vsli:raw="When overridden in a derived class, resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">파생 클래스에서 재정의되면 <see langword="EntityReference" /> 노드에 대한 엔터티 참조를 확인합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node; this implementation of the reader cannot resolve entities (&lt;see cref=&quot;P:System.Xml.XmlReader.CanResolveEntity&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">판독기가 <see langword="EntityReference" /> 노드에 배치되지 않고 판독기의 이 구현에서 엔터티를 확인할 수 없는 경우(<see cref="P:System.Xml.XmlReader.CanResolveEntity" />가 <see langword="false" />를 반환하는 경우)
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node as a result of schema validation.">스키마 유효성 검사의 결과로 현재 노드에 할당된 스키마 정보를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the schema information for the current node. Schema information can be set on elements, attributes, or on text nodes with a non-null &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; (typed values).&#xA;&#xA; If the current node is not one of the above node types, or if the &lt;see langword=&quot;XmlReader&quot; /&gt; instance does not report schema information, this property returns &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; If this property is called from an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; or an &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; object, this property always returns &lt;see langword=&quot;null&quot; /&gt;. These &lt;see langword=&quot;XmlReader&quot; /&gt; implementations do not expose schema information through the &lt;see langword=&quot;SchemaInfo&quot; /&gt; property.">현재 노드에 대한 스키마 정보를 포함하는 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다. 스키마 정보는 <see cref="P:System.Xml.XmlReader.ValueType" />(형식화된 값)이 null이 아닌 Element, Attribute 또는 Text 노드에 설정될 수 있습니다.  
현재 노드가 이러한 노드 형식 중 하나가 아니거나, <see langword="XmlReader" /> 인스턴스에서 스키마 정보를 보고하지 않는 경우에는 이 속성이 <see langword="null" />을 반환합니다.  
<see cref="T:System.Xml.XmlTextReader" /> 또는 <see cref="T:System.Xml.XmlValidatingReader" /> 개체에서 이 속성을 호출하면 항상 <see langword="null" />이 반환됩니다. 이러한 <see langword="XmlReader" /> 구현에서는 <see langword="SchemaInfo" /> 속성을 통해 스키마 정보를 노출하지 않습니다.  
   
 요소에 대한 PSVI(스키마 유효성 검사 이후 정보 집합)을 가져와야 하는 경우 시작 태그 대신에 요소의 종료 태그에 판독기를 배치합니다. 판독기의 <see langword="SchemaInfo" /> 속성을 통해 PSVI를 가져옵니다. <see cref="Overload:System.Xml.XmlReader.Create" /> 속성을 <see cref="P:System.Xml.XmlReaderSettings.ValidationType" />로 설정하고 <see cref="F:System.Xml.ValidationType.Schema" />를 통해 만든 유효성 검사 판독기는 요소의 종료 태그에 판독기가 배치된 경우에만 요소에 대한 완전한 PSVI가 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object used to create this &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.">이 <see cref="T:System.Xml.XmlReader" /> 인스턴스를 만드는 데 사용되는 <see cref="T:System.Xml.XmlReaderSettings" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object used to create this reader instance. If this reader was not created using the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method, this property returns &lt;see langword=&quot;null&quot; /&gt;.">이 판독기 인스턴스를 만드는 데 사용되는 <see cref="T:System.Xml.XmlReaderSettings" />입니다. <see cref="Overload:System.Xml.XmlReader.Create" /> 메서드를 사용하여 판독기를 만들지 않은 경우 이 속성은 <see langword="null" />을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">현재 노드의 자식을 건너뜁니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary vsli:raw="Asynchronously skips the children of the current node.">현재 노드의 자식을 비동기적으로 건너뜁니다.</summary>
      <returns vsli:raw="The current node.">현재 노드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlReaderSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlReader" /> 비동기 메서드가 호출되었습니다. 이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary vsli:raw="When overridden in a derived class, gets the text value of the current node.">파생 클래스에서 재정의되면 현재 노드의 텍스트 값을 가져옵니다.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return &lt;see langword=&quot;String.Empty&quot; /&gt;.&#xA;&#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">노드의 <see cref="P:System.Xml.XmlReader.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다. 다른 모든 노드 형식은 <see langword="String.Empty" />를 반환합니다.  
  노드 형식 
  값 
 <see langword="Attribute" /> 특성 값  

 <see langword="CDATA" /> CDATA 섹션 내용입니다.  

 <see langword="Comment" /> 주석의 내용입니다.  

 <see langword="DocumentType" /> 내부 하위 집합입니다.  

 <see langword="ProcessingInstruction" /> 대상을 제외한 전체 내용입니다.  

 <see langword="SignificantWhitespace" /> 혼합된 콘텐츠 모델의 태그 간 공백입니다.  

 <see langword="Text" /> 텍스트 노드의 내용입니다.  

 <see langword="Whitespace" /> 태그 사이의 공백입니다.  

 <see langword="XmlDeclaration" /> 선언 내용입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary vsli:raw="Gets The Common Language Runtime (CLR) type for the current node.">현재 노드의 CLR(공용 언어 런타임) 형식을 가져옵니다.</summary>
      <returns vsli:raw="The CLR type that corresponds to the typed value of the node. The default is &lt;see langword=&quot;System.String&quot; /&gt;.">노드의 형식화된 값에 해당하는 CLR 형식입니다. 기본값은 <see langword="System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">파생 클래스에서 재정의되면 현재 <see langword="xml:lang" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">파생 클래스에서 재정의되면 현재 <see langword="xml:space" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">
        <see cref="T:System.Xml.XmlSpace" /> 값 중 하나입니다. <see langword="xml:space" /> 범위가 존재하지 않으면 이 속성은 기본적으로 <see langword="XmlSpace.None" />으로 설정됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlReader" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary vsli:raw="Specifies a set of features to support on the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object created by the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method.">
        <see cref="T:System.Xml.XmlReader" /> 메서드를 사용하여 만든 <see cref="Overload:System.Xml.XmlReader.Create" /> 개체에서 지원할 기능 집합을 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlReaderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary vsli:raw="Gets or sets whether asynchronous &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; methods can be used on a particular &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.">비동기 <see cref="T:System.Xml.XmlReader" /> 메서드를 특정 <see cref="T:System.Xml.XmlReader" /> 인스턴스에서 사용할 수 있는지 여부를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if asynchronous methods can be used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">비동기 메서드를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary vsli:raw="Gets or sets a value indicating whether to do character checking.">문자 검사를 수행할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do character checking; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">문자 검사를 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.  
   
 텍스트 데이터를 처리할 경우 <see cref="T:System.Xml.XmlReader" />는 이 속성의 설정에 상관없이 XML 이름 및 텍스트 콘텐츠의 유효성을 항상 검사합니다. <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" />를 <see langword="false" />로 설정하면 문자 엔터티 참조에 대해 문자 검사가 수행되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary vsli:raw="Creates a copy of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; instance.">
        <see cref="T:System.Xml.XmlReaderSettings" /> 인스턴스의 복사본을 만듭니다.</summary>
      <returns vsli:raw="The cloned &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object.">복제된 <see cref="T:System.Xml.XmlReaderSettings" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value indicating whether the underlying stream or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; should be closed when the reader is closed.">판독기를 닫을 때 내부 스트림 또는 <see cref="T:System.IO.TextReader" />를 함께 닫을지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the underlying stream or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; when the reader is closed; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">판독기를 닫을 때 내부 스트림 또는 <see cref="T:System.IO.TextReader" />를 함께 닫으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary vsli:raw="Gets or sets the level of conformance which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; will comply.">
        <see cref="T:System.Xml.XmlReader" />에 적용할 규칙 수준을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the level of conformance that the XML reader will enforce. The default is &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Document&quot; /&gt;.">XML 판독기를 적용할 규칙 수준을 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Xml.ConformanceLevel.Document" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary vsli:raw="Gets or sets a value that determines the processing of DTDs.">DTD 처리를 결정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that determines the processing of DTDs. The default is &lt;see cref=&quot;F:System.Xml.DtdProcessing.Prohibit&quot; /&gt;.">DTD 처리를 결정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Xml.DtdProcessing.Prohibit" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore comments.">주석을 무시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore comments; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">주석을 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore processing instructions.">처리 명령을 무시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore processing instructions; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">처리 명령을 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore insignificant white space.">유효하지 않은 공백을 무시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore white space; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">공백을 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary vsli:raw="Gets or sets line number offset of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 개체의 줄 번호 오프셋을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The line number offset. The default is 0.">줄 번호 오프셋입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary vsli:raw="Gets or sets line position offset of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 개체의 줄 위치 오프셋을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The line position offset. The default is 0.">선 위치 오프셋입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary vsli:raw="Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.">문서에서 엔터티 확장명 후의 최대 허용 문자 수를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum allowable number of characters from expanded entities. The default is 0.">확장된 엔터티의 최대 허용 문자 수입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary vsli:raw="Gets or sets a value indicating the maximum allowable number of characters in an XML document. A zero (0) value means no limits on the size of the XML document. A non-zero value specifies the maximum size, in characters.">XML 문서의 최대 허용 문자 수를 나타내는 값을 가져오거나 설정합니다. 값 0은 XML 문서 크기에 제한이 없음을 의미합니다. 0이 아닌 값은 최대 크기(문자 수)를 지정합니다.</summary>
      <returns vsli:raw="The maximum allowable number of characters in an XML document. The default is 0.">XML 문서의 최대 허용 문자 수입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used for atomized string comparisons.">원자화된 문자열을 비교하는 데 사용할 <see cref="T:System.Xml.XmlNameTable" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; that stores all the atomized strings used by all &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instances created using this &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object.  &#xA;  &#xA; The default is &lt;see langword=&quot;null&quot; /&gt;. The created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance will use a new empty &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; if this value is &lt;see langword=&quot;null&quot; /&gt;.">이 <see cref="T:System.Xml.XmlNameTable" /> 개체를 사용하여 만든 모든 <see cref="T:System.Xml.XmlReader" /> 인스턴스에서 사용하는 원자화된 문자열 전체가 저장되는 <see cref="T:System.Xml.XmlReaderSettings" />입니다.  
기본값은 <see langword="null" />입니다. 이 값이 <see langword="null" />이면 <see cref="T:System.Xml.XmlReader" /> 인스턴스는 비어 있는 새 <see cref="T:System.Xml.NameTable" />을 사용합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary vsli:raw="Gets or sets a value indicating whether to prohibit document type definition (DTD) processing. This property is obsolete. Use &lt;see cref=&quot;P:System.Xml.XmlTextReader.DtdProcessing&quot; /&gt; instead.">DTD(문서 형식 정의) 프로세스를 금지할지를 나타내는 값을 가져오거나 설정합니다. 이 속성은 사용되지 않습니다. 대신 <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />를 사용하세요.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to prohibit DTD processing; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">DTD 프로세스를 금지하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary vsli:raw="Resets the members of the settings class to their default values.">설정 클래스의 멤버를 해당 기본값으로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to use when performing schema validation.">스키마 유효성 검사를 수행할 때 사용할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to use when performing schema validation. The default is an empty &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">스키마 유효성 검사를 수행할 때 사용할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다. 기본값은 빈 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary vsli:raw="Occurs when the reader encounters validation errors.">판독기에서 유효성 검사 오류가 발견되면 발생합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary vsli:raw="Gets or sets a value indicating the schema validation settings. This setting applies to &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; objects that validate schemas (&lt;see cref=&quot;P:System.Xml.XmlReaderSettings.ValidationType&quot; /&gt; property set to &lt;see langword=&quot;ValidationType.Schema&quot; /&gt;).">스키마 유효성 검사 설정을 나타내는 값을 가져오거나 설정합니다. 이 설정은 스키마(<see langword="ValidationType.Schema" />로 설정된 <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> 속성) 유효성 검사를 하는 <see cref="T:System.Xml.XmlReader" /> 개체에 적용됩니다.</summary>
      <returns vsli:raw="A bitwise combination of enumeration values that specify validation options. &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&quot; /&gt; and &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes&quot; /&gt; are enabled by default. &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&quot; /&gt;, and &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings&quot; /&gt; are disabled by default.">유효성 검사 옵션을 지정 하는 열거형 값의 비트 조합입니다. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> 및 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />는 기본적으로 사용되고 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> 및 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />는 기본적으로 사용되지 않습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; will perform validation or type assignment when reading.">
        <see cref="T:System.Xml.XmlReader" />가 읽는 동안 유효성 검사 또는 형식 할당을 수행할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ValidationType&quot; /&gt; values that indicates whether XmlReader will perform validation or type assignment when reading. The default is &lt;see langword=&quot;ValidationType.None&quot; /&gt;.">XmlReader가 판독 시 유효성 검사나 형식 할당을 수행하는지 여부를 나타내는 <see cref="T:System.Xml.ValidationType" /> 값 중 하나입니다. 기본값은 <see langword="ValidationType.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to access external documents.">외부 문서에 액세스하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to access external documents. If set to &lt;see langword=&quot;null&quot; /&gt;, an &lt;see cref=&quot;T:System.Xml.XmlException&quot; /&gt; is thrown when the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; tries to access an external resource. The default is a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; with no credentials.  Starting with the .NET Framework 4.5.2, this setting has a default value of &lt;see langword=&quot;null&quot; /&gt;.">외부 문서에 액세스하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />입니다. 값을 <see langword="null" />로 설정하면 <see cref="T:System.Xml.XmlException" />가 외부 리소스에 액세스하려고 할 때 <see cref="T:System.Xml.XmlReader" />이 throw됩니다. 기본값은 자격 증명이 없는 새 <see cref="T:System.Xml.XmlUrlResolver" />입니다.  .NET Framework 4.5.2부터이 설정에 기본값은 <see langword="null" />합니다.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary vsli:raw="Resolves external XML resources named by a Uniform Resource Identifier (URI).">URI(Uniform Resource Identifier)로 명명된 외부 XML 리소스를 확인합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary vsli:raw="When overridden in a derived class, sets the credentials used to authenticate web requests.">파생 클래스에서 재정의되면 웹 요청을 인증하는 데 사용된 자격 증명을 설정합니다.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see langword=&quot;XmlResolver&quot; /&gt; has no user credentials.">웹 요청을 인증하는 데 사용하는 자격 증명입니다. 이 속성이 설정되지 않으면 기본적으로 값은 <see langword="null" />로 설정됩니다. 즉, <see langword="XmlResolver" />에 사용자 자격 증명이 없습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, maps a URI to an object that contains the actual resource.">파생 클래스에서 재정의되면 실제 리소스를 포함하는 개체로 URI를 매핑합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="Currently not used.">현재 사용되지 않습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns System.IO.Stream objects.">반환할 개체의 형식입니다. 현재 버전만 System.IO.Stream 개체를 반환합니다.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is not a &lt;see langword=&quot;Stream&quot; /&gt; type.">
        <paramref name="ofObjectToReturn" />이 <see langword="Stream" /> 형식이 아닌 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">지정된 URI가 절대 URI가 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a runtime error (for example, an interrupted server connection).">런타임 오류(예: 중단된 서버 연결)가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="Currently not used.">현재 사용되지 않습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">반환할 개체의 형식입니다. 현재 버전에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves the absolute URI from the base and relative URIs.">파생 클래스에서 재정의되면 기본 URI 및 상대 URI에서 절대 URI를 확인합니다.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">상대 URI를 확인하는 데 사용된 기본 URI입니다.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">확인할 URI입니다. 절대 URI나 상대 URI일 수 있습니다. 절대 URI인 경우 이 값은 <paramref name="baseUri" /> 값을 효율적으로 대체합니다. 상대 URI인 경우 <paramref name="baseUri" />와 결합하여 절대 URI를 만듭니다.</param>
      <returns vsli:raw="The absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">절대 URI이거나, 상대 URI를 확인할 수 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relativeUri" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary vsli:raw="Enables the resolver to return types other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />이 아닌 유형을 반환하기 위해 확인자를 사용합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI.">URI입니다.</param>
      <param name="type" vsli:raw="The type to return.">반환할 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" />이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary vsli:raw="Helps to secure another implementation of &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; by wrapping the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object and restricting the resources that the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; has access to.">
        <see cref="T:System.Xml.XmlResolver" /> 개체를 래핑하고 내부 <see cref="T:System.Xml.XmlResolver" />에서 액세스 가능한 리소스를 제한하여 <see cref="T:System.Xml.XmlResolver" />의 다른 구현을 보호해 줍니다.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; class with the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; and URL provided.">
        <see cref="T:System.Xml.XmlSecureResolver" /> 및 제공된 URL을 사용하여 <see cref="T:System.Xml.XmlResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver" vsli:raw="The XML resolver that is wrapped by the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt;.">
        <see cref="T:System.Xml.XmlSecureResolver" />에서 래핑된 XML 확인자입니다.</param>
      <param name="securityUrl" vsli:raw="The URL used to create the &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; that will be applied to the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; calls &lt;see cref=&quot;M:System.Security.PermissionSet.PermitOnly&quot; /&gt; on the created &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; before calling &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;.">기본 <see cref="T:System.Security.PermissionSet" />에 적용될 <see cref="T:System.Xml.XmlResolver" />를 만드는 데 사용하는 URL입니다. <see cref="T:System.Xml.XmlSecureResolver" />는 내부 <see cref="M:System.Security.PermissionSet.PermitOnly" />에 대해 <see cref="T:System.Security.PermissionSet" />를 호출하기 전에 생성된 <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />에 대해 <see cref="T:System.Xml.XmlResolver" />를 호출합니다.</param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary vsli:raw="Sets credentials used to authenticate web requests.">웹 요청을 인증하는 데 사용된 자격 증명을 설정합니다.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. The &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; sets the given credentials on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; has no user credentials.">웹 요청을 인증하는 데 사용하는 자격 증명입니다. <see cref="T:System.Xml.XmlSecureResolver" />는 내부 <see cref="T:System.Xml.XmlResolver" />에 대해 지정된 자격 증명을 설정합니다. 이 속성이 설정되지 않으면 기본적으로 값은 <see langword="null" />로 설정됩니다. 즉, <see cref="T:System.Xml.XmlSecureResolver" />에 사용자 자격 증명이 없습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource. This method temporarily sets the &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; created in the constructor by calling &lt;see cref=&quot;M:System.Security.PermissionSet.PermitOnly&quot; /&gt; before calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to open the resource.">실제 리소스가 포함된 개체로 URI를 매핑합니다. 이 메서드는 내부 <see cref="T:System.Security.PermissionSet" />에 대해 <see langword="GetEntity" />를 호출하여 리소스를 열기 전에 <see cref="M:System.Security.PermissionSet.PermitOnly" />를 호출하여 해당 생성자에서 만들어진 <see cref="T:System.Xml.XmlResolver" />을 일시적으로 설정합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI that is returned from &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="Currently not used.">현재 사용되지 않습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">반환할 개체의 형식입니다. 현재 버전에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</param>
      <returns vsli:raw="The stream returned by calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If a type other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; is specified, the method returns &lt;see langword=&quot;null&quot; /&gt;.">기본 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="GetEntity" />를 호출하여 반환된 스트림입니다. <see cref="T:System.IO.Stream" /> 이외의 형식을 지정하면 메서드가 <see langword="null" />을 반환합니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is neither &lt;see langword=&quot;null&quot; /&gt; nor a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; type.&#xA;&#xA;-or-&#xA;&#xA;.NET 7 and later versions: In all cases.">
        <paramref name="ofObjectToReturn" />이 <see langword="null" /> 또는 <see cref="T:System.IO.Stream" /> 형식이 아닌 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">지정된 URI가 절대 URI가 아닌 경우</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a run-time error (for example, an interrupted server connection).">런타임 오류(예: 중단된 서버 연결)가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="Currently not used.">현재 사용되지 않습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">반환할 개체의 형식입니다. 현재 버전에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</param>
      <returns vsli:raw="The stream returned by calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If a type other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; is specified, the method returns &lt;see langword=&quot;null&quot; /&gt;.">기본 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="GetEntity" />를 호출하여 반환된 스트림입니다. <see cref="T:System.IO.Stream" /> 이외의 형식을 지정하면 메서드가 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs by calling &lt;see langword=&quot;ResolveUri&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;.">내부 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="ResolveUri" />를 호출하여 기본 및 상대 URI에서 절대 URI를 확인합니다.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">상대 URI를 확인하는 데 사용된 기본 URI입니다.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">확인할 URI입니다. 절대 URI나 상대 URI일 수 있습니다. 절대 URI인 경우 이 값은 <paramref name="baseUri" /> 값을 효율적으로 대체합니다. 상대 URI인 경우 <paramref name="baseUri" />와 결합하여 절대 URI를 만듭니다.</param>
      <returns vsli:raw="The absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved (returned by calling &lt;see langword=&quot;ResolveUri&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;).">절대 URI이거나, 기본 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="ResolveUri" />를 호출하여 반환된 상대 URI를 확인할 수 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relativeUri" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary vsli:raw="Represents white space between markup in a mixed content node or white space within an xml:space= 'preserve' scope. This is also referred to as significant white space.">혼합된 내용 노드의 태그 사이에 있는 공백이나 xml:space= 'preserve' 범위 내에 있는 공백을 나타냅니다. 이러한 공백을 유효 공백이라고도 합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlSignificantWhitespace" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="strData" vsli:raw="The white space characters of the node.">노드의 공백 문자입니다.</param>
      <param name="doc" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlDocument" /> 개체</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For significant white space nodes, the cloned node always includes the data value, regardless of the parameter setting.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다. 유효 공백 노드의 경우 복제된 노드에는 항상 매개 변수 설정과 상관 없이 데이터 값이 포함됩니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#significant-whitespace&quot; /&gt;.">
        <see langword="XmlSignificantWhitespace" /> 노드의 경우 이 속성은 <see langword="#significant-whitespace" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#significant-whitespace&quot; /&gt;.">
        <see langword="XmlSignificantWhitespace" /> 노드의 경우 이 속성은 <see langword="#significant-whitespace" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this value is XmlNodeType.SignificantWhitespace.">
        <see langword="XmlSignificantWhitespace" /> 노드의 경우 이 값은 XmlNodeType.SignificantWhitespace입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary vsli:raw="Gets the parent of the current node.">현재 노드의 부모를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; parent node of the current node.">현재 노드의 <see cref="T:System.Xml.XmlNode" /> 부모 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The white space characters found in the node.">노드에 있는 공백 문자입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting &lt;see langword=&quot;Value&quot; /&gt; to invalid white space characters.">
        <see langword="Value" />를 잘못된 공백 문자로 설정하는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary vsli:raw="Specifies the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">현재 <see langword="xml:space" /> 범위를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; scope equals &lt;see langword=&quot;default&quot; /&gt;.">
        <see langword="xml:space" /> 범위가 <see langword="default" />입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary vsli:raw="No &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see langword="xml:space" /> 범위가 없습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; scope equals &lt;see langword=&quot;preserve&quot; /&gt;.">
        <see langword="xml:space" /> 범위가 <see langword="preserve" />입니다.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary vsli:raw="Represents the text content of an element or attribute.">요소나 특성의 텍스트 내용을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlText" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="strData" vsli:raw="The content of the node; see the &lt;see cref=&quot;P:System.Xml.XmlText.Value&quot; /&gt; property.">노드의 내용입니다. <see cref="P:System.Xml.XmlText.Value" /> 속성을 참조하십시오.</param>
      <param name="doc" vsli:raw="The parent XML document.">부모 XML 문서입니다.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For text nodes, this property returns &lt;see langword=&quot;#text&quot; /&gt;.">text 노드의 경우 이 속성은 <see langword="#text" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For text nodes, this property returns &lt;see langword=&quot;#text&quot; /&gt;.">text 노드의 경우 이 속성은 <see langword="#text" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For text nodes, this value is XmlNodeType.Text.">text 노드의 경우 이 값은 XmlNodeType.Text입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">현재 노드의 부모인 <see langword="XmlNode" />입니다. 노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다. 다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary vsli:raw="Splits the node into two nodes at the specified offset, keeping both in the tree as siblings.">지정된 오프셋으로 하나의 노드를 두 개의 노드로 분할합니다. 트리에 있는 이 두 노드는 형제 노드로 유지됩니다.</summary>
      <param name="offset" vsli:raw="The offset at which to split the node.">노드를 분할하는 오프셋입니다.</param>
      <returns vsli:raw="The new node.">새 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The content of the text node.">텍스트 노드의 내용입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. &lt;see langword=&quot;XmlText&quot; /&gt; nodes do not have children, so this method has no effect.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다. <see langword="XmlText" /> 노드는 자식이 없으므로 이 메서드는 어떠한 영향도 끼치지 않습니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see langword="XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary vsli:raw="Represents a reader that provides fast, non-cached, forward-only access to XML data.  &#xA;  &#xA; Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class instead.">빠르고, 캐시되지 않으며 앞으로만 이동 가능한 XML 데이터 액세스를 제공하는 판독기를 나타냅니다.  
.NET Framework 2.0부터 <see cref="T:System.Xml.XmlReader" /> 클래스를 대신 사용하는 것이 좋습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlTextReader&quot; /&gt;.">
        <see langword="XmlTextReader" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream.">지정된 스트림을 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="input" vsli:raw="The stream containing the XML data to read.">읽을 XML 데이터를 포함하고 있는 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 스트림, <see cref="T:System.Xml.XmlNameTable" />를 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="input" vsli:raw="The stream containing the XML data to read.">읽을 XML 데이터를 포함하고 있는 스트림입니다.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="nt" /> 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream, &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">지정된 스트림, <see cref="T:System.Xml.XmlNodeType" />, <see cref="T:System.Xml.XmlParserContext" />를 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="xmlFragment" vsli:raw="The stream containing the XML fragment to parse.">구문 분석할 XML 조각을 포함하는 스트림입니다.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment can contain. (See table below.)">XML 조각의 <see cref="T:System.Xml.XmlNodeType" />입니다. 또한 조각에 포함되는 사항을 결정합니다. 아래 표를 참조하세요.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the &lt;paramref name=&quot;xmlFragment&quot; /&gt; is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt;, and the &lt;c&gt;xml:space&lt;/c&gt; scope.">
        <paramref name="xmlFragment" />가 구문 분석될 <see cref="T:System.Xml.XmlParserContext" />입니다. 사용할 <see cref="T:System.Xml.XmlNameTable" />, 인코딩, 네임스페이스 범위, 현재 <c>xml:lang</c> 및 <c>xml:space</c> 범위가 포함됩니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not an Element, Attribute, or Document &lt;see langword=&quot;XmlNodeType&quot; /&gt;.">
        <paramref name="fragType" />이 Element, Attribute 또는 Document <see langword="XmlNodeType" />이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlFragment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlFragment" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlTextReader" />를 사용하여 <see cref="T:System.IO.TextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">읽을 XML 데이터를 포함하는 <see langword="TextReader" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlTextReader" /> 및 <see cref="T:System.IO.TextReader" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">읽을 XML 데이터를 포함하는 <see langword="TextReader" />입니다.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nt" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified file.">지정된 파일을 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url" vsli:raw="The URL for the file containing the XML data. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">XML 데이터를 포함하는 파일의 URL입니다. <see cref="P:System.Xml.XmlTextReader.BaseURI" />는 이 값으로 설정됩니다.</param>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="Part of the filename or directory cannot be found.">파일 이름 또는 디렉터리 부분을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is an empty string.">
        <paramref name="url" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The remote filename cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">원격 파일 이름을 확인할 수 없는 경우  
 또는  
 이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is not a valid URI.">
        <paramref name="url" /> 경로는 유효한 URI가 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL and stream.">지정된 URL과 스트림을 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">외부 리소스를 확인하는 데 사용할 URL입니다. <see cref="P:System.Xml.XmlTextReader.BaseURI" />는 이 값으로 설정됩니다.</param>
      <param name="input" vsli:raw="The stream containing the XML data to read.">읽을 XML 데이터를 포함하고 있는 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL, stream and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 URL, 스트림 및 <see cref="T:System.Xml.XmlNameTable" />을 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value. If &lt;paramref name=&quot;url&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;BaseURI&quot; /&gt; is set to &lt;see langword=&quot;String.Empty&quot; /&gt;.">외부 리소스를 확인하는 데 사용할 URL입니다. <see cref="P:System.Xml.XmlTextReader.BaseURI" />는 이 값으로 설정됩니다. <paramref name="url" />이<see langword="null" />이면 <see langword="BaseURI" />가 <see langword="String.Empty" />로 설정됩니다.</param>
      <param name="input" vsli:raw="The stream containing the XML data to read.">읽을 XML 데이터를 포함하고 있는 스트림입니다.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="nt" /> 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 URL과 <see cref="T:System.IO.TextReader" />를 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">외부 리소스를 확인하는 데 사용할 URL입니다. <see cref="P:System.Xml.XmlTextReader.BaseURI" />는 이 값으로 설정됩니다.</param>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">읽을 XML 데이터를 포함하는 <see langword="TextReader" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL, &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 URL과 <see cref="T:System.IO.TextReader" /><see cref="T:System.Xml.XmlNameTable" />를 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value. If &lt;paramref name=&quot;url&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;BaseURI&quot; /&gt; is set to &lt;see langword=&quot;String.Empty&quot; /&gt;.">외부 리소스를 확인하는 데 사용할 URL입니다. <see cref="P:System.Xml.XmlTextReader.BaseURI" />는 이 값으로 설정됩니다. <paramref name="url" />이<see langword="null" />이면 <see langword="BaseURI" />가 <see langword="String.Empty" />로 설정됩니다.</param>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">읽을 XML 데이터를 포함하는 <see langword="TextReader" />입니다.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nt" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified file and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 파일과 <see cref="T:System.Xml.XmlNameTable" />을 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url" vsli:raw="The URL for the file containing the XML data to read.">읽을 XML 데이터를 포함하는 파일의 URL입니다.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nt" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="Part of the filename or directory cannot be found.">파일 이름 또는 디렉터리 부분을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is an empty string.">
        <paramref name="url" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The remote filename cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">원격 파일 이름을 확인할 수 없는 경우  
 또는  
 이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is not a valid URI.">
        <paramref name="url" /> 경로는 유효한 URI가 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified string, &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">지정된 문자열, <see cref="T:System.Xml.XmlNodeType" />, <see cref="T:System.Xml.XmlParserContext" />를 사용하여 <see cref="T:System.Xml.XmlTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="xmlFragment" vsli:raw="The string containing the XML fragment to parse.">구문 분석할 XML 조각을 포함하는 문자열입니다.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment string can contain. (See table below.)">XML 조각의 <see cref="T:System.Xml.XmlNodeType" />입니다. 또한 조각 문자열에 포함되는 사항을 결정합니다. 아래 표를 참조하세요.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the &lt;paramref name=&quot;xmlFragment&quot; /&gt; is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt;, and the &lt;c&gt;xml:space&lt;/c&gt; scope.">
        <paramref name="xmlFragment" />가 구문 분석될 <see cref="T:System.Xml.XmlParserContext" />입니다. 사용할 <see cref="T:System.Xml.XmlNameTable" />, 인코딩, 네임스페이스 범위, 현재 <c>xml:lang</c> 및 <c>xml:space</c> 범위가 포함됩니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not an &lt;see langword=&quot;Element&quot; /&gt;, &lt;see langword=&quot;Attribute&quot; /&gt;, or &lt;see langword=&quot;Document&quot; /&gt;&lt;see langword=&quot;XmlNodeType&quot; /&gt;.">
        <paramref name="fragType" />은 <see langword="Element" />, <see langword="Attribute" /> 또는 <see langword="Document" /><see langword="XmlNodeType" />이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlFragment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlFragment" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlTextReader" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">사용할 <see langword="XmlNameTable" />입니다.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">현재 노드의 특성 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of attributes on the current node.">현재 노드에 포함된 특성의 수입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">현재 노드의 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="The base URI of the current node.">현재 노드의 기본 URI입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the binary content read methods.">
        <see cref="T:System.Xml.XmlTextReader" />가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">이진 콘텐츠 읽기 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see cref="T:System.Xml.XmlTextReader" /> 클래스는 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method.">
        <see cref="T:System.Xml.XmlTextReader" />가 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 메서드를 구현하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlTextReader" />가 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see cref="T:System.Xml.XmlTextReader" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The &lt;see langword=&quot;XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="XmlTextReader" /> 클래스는 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlReader.ReadState" />를 <see langword="Closed" />로 변경합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">XML 문서에서 현재 노드의 수준을 가져옵니다.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">XML 문서의 현재 노드 수준입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration.">
        <see cref="T:System.Xml.DtdProcessing" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration.">
        <see cref="T:System.Xml.DtdProcessing" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary vsli:raw="Gets the encoding of the document.">문서의 인코딩을 가져옵니다.</summary>
      <returns vsli:raw="The encoding value. If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.">인코딩 값입니다. 인코딩 특성이 없는 경우 바이트 순서 표시가 없으면 기본값은 UTF-8로 설정됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary vsli:raw="Gets or sets a value that specifies how the reader handles entities.">판독기가 엔터티를 처리하는 방법을 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.EntityHandling&quot; /&gt; values. If no &lt;see langword=&quot;EntityHandling&quot; /&gt; is specified, it defaults to &lt;see langword=&quot;EntityHandling.ExpandCharEntities&quot; /&gt;.">
        <see cref="T:System.Xml.EntityHandling" /> 값 중 하나입니다. <see langword="EntityHandling" />을 지정하지 않으면 기본값이 <see langword="EntityHandling.ExpandCharEntities" />로 설정됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">판독기가 스트림의 맨 끝에 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">판독기가 스트림의 맨 끝에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">지정된 인덱스가 있는 특성의 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">특성의 인덱스입니다. 인덱스는 0부터 시작합니다. 첫 번째 특성의 인덱스는 0입니다.</param>
      <returns vsli:raw="The value of the specified attribute.">지정된 특성의 값을 반환합니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlTextReader.AttributeCount&quot; /&gt;.">
        <paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlTextReader.AttributeCount" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">지정된 이름이 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI가 있는 특성의 값을 가져옵니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다. 이 메서드는 판독기를 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection that contains all namespaces currently in-scope.">현재 범위 내에 있는 모든 네임스페이스가 포함된 컬렉션을 가져옵니다.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">반환할 네임스페이스 노드의 형식을 지정하는 <see cref="T:System.Xml.XmlNamespaceScope" /> 값입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that contains all the current in-scope namespaces. If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.">현재 범위 내에 있는 모든 네임스페이스가 포함된 <see cref="T:System.Collections.IDictionary" /> 개체입니다. 판독기가 요소에 배치되지 않은 경우에는 네임스페이스가 없는 빈 사전이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary vsli:raw="Gets the remainder of the buffered XML.">버퍼링된 XML의 나머지 부분을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; containing the remainder of the buffered XML.">버퍼링된 XML 의 나머지 부분을 포함하는 <see cref="T:System.IO.TextReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">클래스에서 줄 정보를 반환할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class can return line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">클래스에서 줄 정보를 반환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlTextReader.Value&quot; /&gt; other than &lt;see langword=&quot;String.Empty&quot; /&gt;.">현재 노드에 <see langword="String.Empty" /> 이외의 <see cref="P:System.Xml.XmlTextReader.Value" />를 사용할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 판독기가 위치한 노드에 <see langword="Value" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.">현재 노드가 DTD 또는 스키마에 정의된 기본값에서 생성된 특성인지를 나타내는 값을 얻습니다.</summary>
      <returns vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. (&lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; does not expand default attributes.)">이 속성은 항상 <see langword="false" />를 반환합니다. <see cref="T:System.Xml.XmlTextReader" />는 기본 특성을 확장하지 않습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">현재 노드가 빈 요소(예: <c>&lt;MyElement/&gt;</c>)인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 현재 노드가 요소 이면 (<see cref="P:System.Xml.XmlTextReader.NodeType" /> equals <see langword="XmlNodeType.Element" />)로 끝나는 <c>/ &gt;</c>고, 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary vsli:raw="Gets the current line number.">현재 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The current line number.">현재 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary vsli:raw="Gets the current line position.">현재 줄 위치를 가져옵니다.</summary>
      <returns vsli:raw="The current line position.">현재 줄 위치입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">현재 노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns &lt;see langword=&quot;String.Empty&quot; /&gt;.">접두사를 제거한 현재 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 됩니다 <see langword="book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
이름이 없는 노드 형식(예: <see langword="Text" />, <see langword="Comment" /> 등)의 경우 이 속성은 <see langword="String.Empty" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.">확인할 네임스페이스 URI의 접두사입니다. 기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다. 이 문자열은 원자화할 필요가 없습니다.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextReader.Namespaces&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt; and the &lt;paramref name=&quot;prefix&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextReader.Namespaces" /> 속성이 <see langword="true" />로 설정되어 있고 <paramref name="prefix" /> 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">지정된 인덱스가 있는 특성으로 이동합니다.</summary>
      <param name="i" vsli:raw="The index of the attribute.">특성의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">
        <paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlReader.AttributeCount" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">지정된 이름이 있는 특성으로 이동합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI가 있는 특성으로 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면, 판독기의 위치는 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">현재 특성 노드가 포함된 요소로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <see langword="true" />이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">첫 번째 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <see langword="true" />이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">다음 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">다음 특성이 있으면 <see langword="true" />이고, 더 이상 특성이 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">현재 노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">현재 노드의 정규화된 이름입니다. 예를 들어 <see langword="Name" /> 됩니다 <see langword="bk:book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlTextReader.NodeType" />에 따라 달라집니다. 다음 노드 형식은 나열된 값을 반환합니다. 기타 모든 노드 형식은 빈 문자열을 반환합니다.  
  노드 형식 
  name 
 <see langword="Attribute" /> 특성 이름입니다.  

 <see langword="DocumentType" /> 문서 형식 이름입니다.  

 <see langword="Element" /> 태그 이름입니다.  

 <see langword="EntityReference" /> 참조된 엔터티의 이름입니다.  

 <see langword="ProcessingInstruction" /> 처리 명령의 대상입니다.  

 <see langword="XmlDeclaration" /> 리터럴 문자열 <see langword="xml" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">네임스페이스 지원 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do namespace support; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">네임스페이스를 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property after a read operation has occurred (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is not &lt;see langword=&quot;ReadState.Initial&quot; /&gt;).">읽기 작업이 발생한 후 이 속성을 설정하는 경우(<see cref="P:System.Xml.XmlTextReader.ReadState" />가 <see langword="ReadState.Initial" />이 아닌 경우)</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">W3C 네임스페이스 사양에서 정의된 것처럼 판독기가 있는 노드의 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <see langword="XmlNameTable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">현재 노드의 형식을 나타내는 <see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary vsli:raw="Gets or sets a value indicating whether to normalize white space and attribute values.">공백과 특성 값을 정규화할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to normalize; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">정규화하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property when the reader is closed (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is &lt;see langword=&quot;ReadState.Closed&quot; /&gt;).">판독기를 닫은 상태에서 이 속성을 설정하는 경우(<see cref="P:System.Xml.XmlTextReader.ReadState" />가 <see langword="ReadState.Closed" />인 경우)</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">현재 노드와 관련된 네임스페이스 접두사입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary vsli:raw="Gets or sets a value indicating whether to allow DTD processing. This property is obsolete. Use &lt;see cref=&quot;P:System.Xml.XmlTextReader.DtdProcessing&quot; /&gt; instead.">DTD 처리를 허용할지를 나타내는 값을 가져오거나 설정합니다. 이 속성은 사용되지 않습니다. 대신 <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />를 사용하세요.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to disallow DTD processing; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">DTD 처리를 허용하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary vsli:raw="Gets the quotation mark character used to enclose the value of an attribute node.">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자를 가져옵니다.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">스트림에서 다음 노드를 읽습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">다음 노드를 읽었으면 <see langword="true" />이고, 더 이상 읽을 노드가 없으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">XML을 구문 분석하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">특성 값을 하나 이상의 <see langword="Text" />, <see langword="EntityReference" /> 또는 <see langword="EndEntity" /> 노드로 구문 분석합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">반환할 노드가 있는 경우 <see langword="true" />입니다.  
 처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <see langword="false" />입니다.  
<c>misc=""</c>와 같은 빈 특성은 <see langword="true" />를 반환하며 이것은 단일 노드가 <see langword="String.Empty" />의 값을 갖는 것을 의미합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes Base64 and returns the decoded binary bytes.">Base64를 디코딩하고 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="array" vsli:raw="The array of characters that serves as the buffer to which the text contents are written.">텍스트 콘텐츠를 쓸 버퍼 역할을 하는 문자 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying where the method can begin to write to the buffer.">메서드가 버퍼에 쓰기를 시작할 수 있는 위치를 지정하는 배열의 0부터 시작하는 인덱스입니다.</param>
      <param name="len" vsli:raw="The number of bytes to write into the buffer.">버퍼에 쓸 바이트 수입니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The Base64 sequence is not valid.">Base64 시퀀스가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length- &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> &lt; 0, <paramref name="len" /> &lt; 0, <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />인 경우.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes &lt;see langword=&quot;BinHex&quot; /&gt; and returns the decoded binary bytes.">
        <see langword="BinHex" />를 디코딩하고 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="array" vsli:raw="The byte array that serves as the buffer to which the decoded binary bytes are written.">디코딩된 이진 바이트를 쓸 버퍼 역할을 하는 바이트 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying where the method can begin to write to the buffer.">메서드가 버퍼에 쓰기를 시작할 수 있는 위치를 지정하는 배열의 0부터 시작하는 인덱스입니다.</param>
      <param name="len" vsli:raw="The number of bytes to write into the buffer.">버퍼에 쓸 바이트 수입니다.</param>
      <returns vsli:raw="The number of bytes written to your buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;see langword=&quot;BinHex&quot; /&gt; sequence is not valid.">
        <see langword="BinHex" /> 시퀀스가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length- &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> &lt; 0, <paramref name="len" /> &lt; 0, <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />인 경우.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the text contents of an element into a character buffer. This method is designed to read large streams of embedded text by calling it successively.">요소의 텍스트 콘텐츠를 문자 버퍼로 읽습니다. 이 메서드는 뒤이어 호출하면 포함된 텍스트의 큰 스트림을 읽도록 디자인되었습니다.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written.">텍스트 콘텐츠를 쓸 버퍼 역할을 하는 문자 배열입니다.</param>
      <param name="index" vsli:raw="The position within &lt;paramref name=&quot;buffer&quot; /&gt; where the method can begin writing text contents.">메서드가 텍스트 콘텐츠 쓰기를 시작할 수 있는 <paramref name="buffer" /> 내 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to write into &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" />로 쓸 문자 수입니다.</param>
      <returns vsli:raw="The number of characters read. This can be &lt;see langword=&quot;0&quot; /&gt; if the reader is not positioned on an element or if there is no more text content to return in the current context.">읽을 문자 수입니다. 판독기가 요소에 배치되지 않았거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 반환 값은 <see langword="0" />이 될 수 있습니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the space specified in the &lt;paramref name=&quot;buffer&quot; /&gt; (buffer size - &lt;paramref name=&quot;index&quot; /&gt;).">
        <paramref name="count" />가 <paramref name="buffer" />에 지정된 공간(버퍼 크기 - <paramref name="index" />)보다 큽니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt;&lt;see langword=&quot;&amp;lt; 0&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt;&lt;see langword=&quot;&amp;lt; 0&quot; /&gt;.">
        <paramref name="index" />
        <see langword="&lt; 0" /> 또는 <paramref name="count" /><see langword="&lt; 0" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;Base64&quot; /&gt; decoded binary bytes.">콘텐츠를 읽고 <see langword="Base64" /> 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported in the current node.">현재 노드에서 <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />를 지원하지 않는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">콘텐츠를 읽고 <see langword="BinHex" /> 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlTextReader" />에서 이 메서드를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">요소를 읽고 Base64 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">현재 노드가 요소 노드가 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlTextReader" />에서 이 메서드를 지원하지 않는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">요소가 혼합 콘텐츠를 포함하는 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">요소를 읽고 <see langword="BinHex" /> 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">현재 노드가 요소 노드가 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlReader" />에서 이 메서드를 지원하지 않는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">요소가 혼합 콘텐츠를 포함하는 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">판독기의 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">
        <see cref="T:System.Xml.ReadState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or a text node as a string.">요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</summary>
      <returns vsli:raw="The contents of the element or text node. This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.  &#xA;  &#xA; &lt;see langword=&quot;Note:&quot; /&gt; The text node can be either an element or an attribute text node.">요소 또는 텍스트 노드의 내용입니다. 판독기가 요소 또는 텍스트 노드 이외의 위치에 있거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 이것은 빈 문자열입니다.  
 <see langword="Note:" /> 텍스트 노드는 요소 또는 특성 텍스트 노드입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">XML을 구문 분석하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An invalid operation was attempted.">잘못된 작업을 시도한 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary vsli:raw="Resets the state of the reader to ReadState.Initial.">판독기의 상태를 ReadState.Initial로 다시 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling &lt;see langword=&quot;ResetState&quot; /&gt; if the reader was constructed using an &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">
        <see cref="T:System.Xml.XmlParserContext" />를 사용하여 판독기를 생성한 상태에서 <see langword="ResetState" />를 호출하는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Documents in a single stream do not share the same encoding.">단일 스트림의 여러 문서가 동일한 인코딩을 사용하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">
        <see langword="EntityReference" /> 노드에 대해 엔터티 참조를 확인합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">현재 노드의 자식을 건너뜁니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />를 참조하세요.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">반환할 네임스페이스 노드의 형식을 지정하는 <see cref="T:System.Xml.XmlNamespaceScope" /> 값입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the current in-scope namespaces.">현재 범위 내의 네임스페이스가 포함된 <see cref="T:System.Collections.IDictionary" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />를 참조하십시오.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you wish to find.">찾을 네임스페이스 URI의 접두사입니다.</param>
      <returns vsli:raw="The namespace URI that is mapped to the prefix; &lt;see langword=&quot;null&quot; /&gt; if the prefix is not mapped to a namespace URI.">접두사에 매핑된 네임스페이스 URI이거나, 접두사가 네임스페이스 URI에 매핑되지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />를 참조하십시오.</summary>
      <param name="namespaceName" vsli:raw="The namespace URI whose prefix you wish to find.">찾을 접두사의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The prefix that is mapped to the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if the namespace URI is not mapped to a prefix.">네임스페이스 URI에 매핑된 접두사이거나, 네임스페이스 URI가 접두사에 매핑되지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">현재 노드의 텍스트 값을 가져옵니다.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space within an &lt;see langword=&quot;xml:space&quot; /&gt;= 'preserve' scope.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">노드의 <see cref="P:System.Xml.XmlTextReader.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다. 다른 모든 노드 형식은 <see langword="String.Empty" />를 반환합니다.  
  노드 형식 
  값 
 <see langword="Attribute" /> 특성 값  

 <see langword="CDATA" /> CDATA 섹션 내용입니다.  

 <see langword="Comment" /> 주석의 내용입니다.  

 <see langword="DocumentType" /> 내부 하위 집합입니다.  

 <see langword="ProcessingInstruction" /> 대상을 제외한 전체 내용입니다.  

 <see langword="SignificantWhitespace" /><see langword="xml:space" />= 'preserve' 범위 내의 공백입니다.  

 <see langword="Text" /> 텍스트 노드의 내용입니다.  

 <see langword="Whitespace" /> 태그 사이의 공백입니다.  

 <see langword="XmlDeclaration" /> 선언 내용입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary vsli:raw="Gets or sets a value that specifies how white space is handled.">공백이 처리되는 방법을 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; values. The default is &lt;see langword=&quot;WhitespaceHandling.All&quot; /&gt; (returns &lt;see langword=&quot;Whitespace&quot; /&gt; and &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes).">
        <see cref="T:System.Xml.WhitespaceHandling" /> 값 중 하나입니다. 기본값은 <see langword="WhitespaceHandling.All" />이고 <see langword="Whitespace" /><see langword="SignificantWhitespace" /> 노드를 반환합니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Invalid value specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property when the reader is closed (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is &lt;see langword=&quot;ReadState.Closed&quot; /&gt;).">판독기를 닫은 상태에서 이 속성을 설정하는 경우(<see cref="P:System.Xml.XmlTextReader.ReadState" />가 <see langword="ReadState.Closed" />인 경우)</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used for resolving DTD references.">DTD 참조를 확인하는 데 사용된 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use. If set to &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; In version 1.1 of the .NET Framework, the caller must be fully trusted in order to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">사용할 <see langword="XmlResolver" />입니다. <see langword="null" />로 설정되면 외부 리소스는 확인되지 않습니다.  
.NET Framework 버전 1.1에서는 완전히 신뢰할 수 있는 호출자만 <see langword="XmlResolver" />를 지정할 수 있습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">현재 <see langword="xml:space" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">
        <see cref="T:System.Xml.XmlSpace" /> 값 중 하나입니다. <see langword="xml:space" /> 범위가 존재하지 않으면 이 속성은 기본적으로 <see langword="XmlSpace.None" />으로 설정됩니다.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary vsli:raw="Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.  &#xA;  &#xA; Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class instead.">W3C XML(Extensible Markup Language) 1.0 및 Namespaces in XML 권장 사항을 따르는 XML 데이터를 포함하는 스트림이나 파일을 생성하는 빠르고, 캐시되지 않으며, 앞으로만 이동 가능한 방법을 제공하는 작성기를 나타냅니다.  
.NET Framework 2.0부터 <see cref="T:System.Xml.XmlWriter" /> 클래스를 대신 사용하는 것이 좋습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; class using the specified stream and encoding.">지정된 스트림 및 인코딩을 사용하여 <see langword="XmlTextWriter" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="w" vsli:raw="The stream to which you want to write.">작성하려는 스트림입니다.</param>
      <param name="encoding" vsli:raw="The encoding to generate. If encoding is &lt;see langword=&quot;null&quot; /&gt; it writes out the stream as UTF-8 and omits the encoding attribute from the &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;.">생성할 인코딩입니다. 인코딩이 <see langword="null" />이면 스트림이 UTF-8로 작성되고 <see langword="ProcessingInstruction" />의 인코딩 특성이 생략됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The encoding is not supported or the stream cannot be written to.">인코딩이 지원되지 않거나 스트림을 작성할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;w&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="w" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 <see langword="XmlTextWriter" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;TextWriter&quot; /&gt; to write to. It is assumed that the &lt;see langword=&quot;TextWriter&quot; /&gt; is already set to the correct encoding.">쓸 <see langword="TextWriter" />입니다. <see langword="TextWriter" />가 이미 올바른 인코딩으로 설정된 것으로 가정합니다.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of the &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt; class using the specified file.">지정된 파일을 사용하여 <see cref="T:System.Xml.XmlTextWriter" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="filename" vsli:raw="The filename to write to. If the file exists, it truncates it and overwrites it with the new content.">작성할 파일 이름입니다. 파일이 있으면 해당 파일이 잘리고 새 콘텐츠로 덮어써집니다.</param>
      <param name="encoding" vsli:raw="The encoding to generate. If encoding is &lt;see langword=&quot;null&quot; /&gt; it writes the file out as UTF-8, and omits the encoding attribute from the &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;.">생성할 인코딩입니다. 인코딩이 <see langword="null" />이면 파일이 UTF-8로 작성되고 <see langword="ProcessingInstruction" />의 인코딩 특성이 생략됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.">인코딩이 지원되지 않는 경우 또는 파일 이름이 비어 있거나 공백 또는 잘못된 문자가 포함되어 있는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access is denied.">액세스가 거부되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The filename is &lt;see langword=&quot;null&quot; /&gt;.">파일 이름이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to write to is not found.">쓸 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.">파일 이름에 정확하지 않거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블 구문이 있는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary vsli:raw="Gets the underlying stream object.">내부 스트림 개체를 가져옵니다.</summary>
      <returns vsli:raw="The stream to which the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; is writing or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; was constructed using a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that does not inherit from the &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; class.">
        <see langword="XmlTextWriter" />가 작성 중인 스트림이거나, <see cref="T:System.IO.TextWriter" /> 클래스에서 상속되지 않은 <see cref="T:System.IO.StreamWriter" />를 사용하여 <see langword="null" />가 생성된 경우에는 <see langword="XmlTextWriter" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary vsli:raw="Closes this stream and the underlying stream.">이 스트림과 내부 스트림을 닫습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary vsli:raw="Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">버퍼에 있는 모든 내용을 내부 스트림으로 플러시하고 내부 스트림도 플러시합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary vsli:raw="Indicates how the output is formatted.">출력의 형식이 지정되는 방법을 나타냅니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Formatting&quot; /&gt; values. The default is &lt;see langword=&quot;Formatting.None&quot; /&gt; (no special formatting).">
        <see cref="T:System.Xml.Formatting" /> 값 중 하나입니다. 기본값은 <see langword="Formatting.None" />(특별한 형식 지정 없음)입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary vsli:raw="Gets or sets how many IndentChars to write for each level in the hierarchy when &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Formatting&quot; /&gt; is set to &lt;see langword=&quot;Formatting.Indented&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.Formatting" />이 <see langword="Formatting.Indented" />로 설정될 때 계층구조의 각 수준에 작성할 IndentChars 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Number of &lt;see langword=&quot;IndentChars&quot; /&gt; for each level. The default is 2.">각 수준의 <see langword="IndentChars" /> 수입니다. 기본값은 2입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting this property to a negative value.">이 속성을 음의 값으로 설정하는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary vsli:raw="Gets or sets which character to use for indenting when &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Formatting&quot; /&gt; is set to &lt;see langword=&quot;Formatting.Indented&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.Formatting" />이 <see langword="Formatting.Indented" />로 설정된 경우 들여쓰기에 사용할 문자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The character to use for indenting. The default is space.">들여쓰기에 사용할 문자입니다. 기본값은 공백입니다.  
   
 <see langword="XmlTextWriter" />를 사용하면 이 속성을 모든 문자로 설정할 수 있습니다. 유효한 XML을 확인하려면 유효한 공백 문자 0x9, 0x10, 0x13 또는 0x20을 지정해야 합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the closest prefix defined in the current namespace scope for the namespace URI.">네임스페이스 URI의 현재 네임스페이스 범위에 정의된 가장 비슷한 접두사를 반환합니다.</summary>
      <param name="ns" vsli:raw="Namespace URI whose prefix you want to find.">찾으려는 접두사를 가진 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The matching prefix. Or &lt;see langword=&quot;null&quot; /&gt; if no matching namespace URI is found in the current scope.">일치하는 접두사입니다. 또는 현재 범위에 일치하는 네임스페이스 URI가 없는 경우에는 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ns&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="ns" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">네임스페이스 지원 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support namespaces; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; The default is &lt;see langword=&quot;true&quot; /&gt;.">네임스페이스를 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.  
기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You can only change this property when in the &lt;see langword=&quot;WriteState.Start&quot; /&gt; state.">
        <see langword="WriteState.Start" /> 상태일 때만 이 속성을 변경할 수 있는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary vsli:raw="Gets or sets which character to use to quote attribute values.">특성 값을 인용하는 데 사용할 문자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The character to use to quote attribute values. This must be a single quote (&amp;amp;#39;) or a double quote (&amp;amp;#34;). The default is a double quote.">특성 값을 인용하는 데 사용할 문자입니다. 작은따옴표를 이어야 합니다 (&amp;#39;) 또는 큰따옴표 (&amp;#34;) (&amp;#34;). 기본값은 큰따옴표입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting this property to something other than either a single or double quote.">이 속성을 작은따옴표 또는 큰따옴표 이외의 값으로 설정하는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Encodes the specified binary bytes as base64 and writes out the resulting text.">지정된 바이너리 바이트를 base64로 인코딩하고 결과 텍스트를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">인코딩할 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the bytes to write.">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of bytes to write.">쓸 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Encodes the specified binary bytes as binhex and writes out the resulting text.">지정된 바이너리 바이트를 Binhex로 인코딩하고 결과 텍스트를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">인코딩할 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of bytes to write.">쓸 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is Closed.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" />가 Closed인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary vsli:raw="Writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">지정된 텍스트를 포함하는 &lt;![CDATA[...]]&gt; 블록을 작성합니다.</summary>
      <param name="text" vsli:raw="Text to place inside the CDATA block.">CDATA 블록 내에 배치할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary vsli:raw="Forces the generation of a character entity for the specified Unicode character value.">지정된 유니코드 문자 값에 대한 문자 엔터티가 생성되도록 합니다.</summary>
      <param name="ch" vsli:raw="Unicode character for which to generate a character entity.">문자 엔터티를 생성할 유니코드 문자입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The character is in the surrogate pair character range, &lt;see langword=&quot;0xd800&quot; /&gt; - &lt;see langword=&quot;0xdfff&quot; /&gt;; or the text would result in a non-well formed XML document.">문자가 서로게이트 쌍 문자 범위 <see langword="0xd800" /> - <see langword="0xdfff" />에 있거나 텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes text one buffer at a time.">한 번에 한 버퍼씩 텍스트를 씁니다.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">쓸 텍스트가 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to write.">쓸 문자 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;; the call results in surrogate pair characters being split or an invalid surrogate pair being written.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.  
또는 
버퍼 길이에서 <paramref name="index" />를 뺀 값이 <paramref name="count" />보다 작고, 호출한 결과 서로게이트 쌍 문자가 분할되거나 잘못된 서로게이트 쌍이 작성되는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is Closed.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" />가 Closed인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary vsli:raw="Writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">지정된 텍스트를 포함하는 주석 &lt;!--...--&gt;을 작성합니다.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">주석 내에 배치할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes the DOCTYPE declaration with the specified name and optional attributes.">지정된 이름과 선택적 특성을 사용하여 DOCTYPE 선언을 작성합니다.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">DOCTYPE의 이름입니다. 이 이름은 비어 있지 않아야 합니다.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <paramref name="pubid" />와 <paramref name="sysid" />는 지정된 인수 값으로 바뀝니다.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is null and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">
        <paramref name="pubid" />가 null이고 <paramref name="sysid" />가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <paramref name="sysid" />는 이 인수 값으로 바뀝니다.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called outside the prolog (after the root element).">이 메서드가 루트 요소 다음의 프롤로그 외부에서 호출된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; the value for &lt;paramref name=&quot;name&quot; /&gt; would result in invalid XML.">
        <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우  
또는 
<paramref name="name" />의 값이 잘못된 XML이 되는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary vsli:raw="Closes the previous &lt;see cref=&quot;M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)&quot; /&gt; call.">이전 <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> 호출을 닫습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary vsli:raw="Closes any open elements or attributes and puts the writer back in the Start state.">열려 있는 모든 요소나 특성을 닫고 작성기를 시작 상태로 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The XML document is invalid.">XML 문서가 잘못된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary vsli:raw="Closes one element and pops the corresponding namespace scope.">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary vsli:raw="Writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">엔터티 참조를 <see langword="&amp;name;" />처럼 작성합니다.</summary>
      <param name="name" vsli:raw="Name of the entity reference.">엔터티 참조의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">텍스트로 인해 XML 문서가 제대로 구성되지 않거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary vsli:raw="Closes one element and pops the corresponding namespace scope.">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary vsli:raw="Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation.">W3C XML 1.0 권장 사항에 따라 유효한 이름이 되도록 지정된 이름을 작성합니다.</summary>
      <param name="name" vsli:raw="Name to write.">작성할 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" />이 올바른 XML 이름이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary vsli:raw="Writes out the specified name, ensuring it is a valid &lt;see langword=&quot;NmToken&quot; /&gt; according to the W3C XML 1.0 recommendation.">W3C XML 1.0 권장 사항에 따라 유효한 <see langword="NmToken" />이 되도록 지정된 이름을 작성합니다.</summary>
      <param name="name" vsli:raw="Name to write.">작성할 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid &lt;see langword=&quot;NmToken&quot; /&gt;; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" />이 올바른 <see langword="NmToken" />이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="Writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">이름과 텍스트 사이의 공백을 사용하여 처리 명령을 작성합니다(예: &lt;?name text?&gt;).</summary>
      <param name="name" vsli:raw="Name of the processing instruction.">처리 명령의 이름입니다.</param>
      <param name="text" vsli:raw="Text to include in the processing instruction.">처리 명령에 포함할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; This method is being used to create an XML declaration after &lt;see cref=&quot;M:System.Xml.XmlTextWriter.WriteStartDocument&quot; /&gt; has already been called.">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우  
 <paramref name="name" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.  
<see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />가 이미 호출된 후 이 메서드를 사용하여 XML 선언을 만드는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">네임스페이스로 한정된 이름을 작성합니다. 이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</summary>
      <param name="localName" vsli:raw="The local name to write.">작성할 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the name.">이름과 연결할 네임스페이스 URI 입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;localName&quot; /&gt; is not a valid name according to the W3C Namespaces spec.">
        <paramref name="localName" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.  
 <paramref name="localName" />이 W3C Namespaces 사양에 따르는 유효한 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes raw markup manually from a character buffer.">문자 버퍼에서 직접 원시 태그를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">쓸 텍스트가 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to write.">쓸 문자 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.  
또는 
버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary vsli:raw="Writes raw markup manually from a string.">문자열에서 직접 원시 태그를 작성합니다.</summary>
      <param name="data" vsli:raw="String containing the text to write.">작성할 텍스트를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes the start of an attribute.">특성의 시작을 작성합니다.</summary>
      <param name="prefix" vsli:raw="&lt;see langword=&quot;Namespace&quot; /&gt; prefix of the attribute.">특성의 <see langword="Namespace" /> 접두사입니다.</param>
      <param name="localName" vsli:raw="&lt;see langword=&quot;LocalName&quot; /&gt; of the attribute.">특성의 <see langword="LocalName" />입니다.</param>
      <param name="ns" vsli:raw="&lt;see langword=&quot;NamespaceURI&quot; /&gt; of the attribute.">특성의 <see langword="NamespaceURI" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="localName" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration with the version &quot;1.0&quot;.">버전 "1.0"을 사용하여 XML 선언을 작성합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary vsli:raw="Writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">버전 "1.0"과 독립형 특성을 사용하여 XML 선언을 작성합니다.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">
        <see langword="true" />이면 "standalone=yes"로 작성하고, <see langword="false" />이면 "standalone=no"로 작성합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">지정된 시작 태그를 작성하고 주어진 네임스페이스 및 접두사와 연결합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">요소의 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.">요소와 연결할 네임스페이스 URI입니다. 이 네임스페이스가 이미 범위에 있고 관련된 접두사가 있는 경우 작성기는 해당 접두사도 자동으로 작성합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">작성기가 닫힌 경우</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary vsli:raw="Gets the state of the writer.">작성기의 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WriteState&quot; /&gt; values.">
        <see cref="T:System.Xml.WriteState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary vsli:raw="Writes the given text content.">주어진 텍스트 콘텐츠를 작성합니다.</summary>
      <param name="text" vsli:raw="Text to write.">작성할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text string contains an invalid surrogate pair.">텍스트 문자열에 잘못된 서로게이트 쌍이 포함된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary vsli:raw="Generates and writes the surrogate character entity for the surrogate character pair.">서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 생성하고 작성합니다.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between &lt;see langword=&quot;0xDC00&quot; /&gt; and &lt;see langword=&quot;0xDFFF&quot; /&gt;.">하위 서로게이트입니다. 이 값은 <see langword="0xDC00" />에서 <see langword="0xDFFF" /> 사이에 있어야 합니다.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between &lt;see langword=&quot;0xD800&quot; /&gt; and &lt;see langword=&quot;0xDBFF&quot; /&gt;.">상위 서로게이트입니다. 이 값은 <see langword="0xD800" />에서 <see langword="0xDBFF" /> 사이에 있어야 합니다.</param>
      <exception cref="T:System.Exception" vsli:raw="An invalid surrogate character pair was passed.">잘못된 서로게이트 문자 쌍이 전달된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary vsli:raw="Writes out the given white space.">주어진 공백을 작성합니다.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">공백 문자의 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The string contains non-white space characters.">문자열에 공백이 아닌 문자가 포함된 경우</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;xml:lang&quot; /&gt; in the current scope.">현재 <see langword="xml:lang" />이거나, 현재 범위에 <see langword="null" />이 없으면 <see langword="xml:lang" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">현재 <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; None&lt;/term&gt;&lt;description&gt; This is the default if no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Default&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;default&quot;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Preserve&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;preserve&quot;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">현재 <see langword="XmlSpace" /> 범위를 나타내는 <see langword="xml:space" />입니다.  
  값 
  의미 
  없음 
  <see langword="xml:space" /> 범위가 없는 경우 기본값입니다.  

  기본값 
  현재 범위가 <see langword="xml:space" />="default"입니다.  

  Preserve 
  현재 범위가 <see langword="xml:space" />="preserve"입니다.</returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary vsli:raw="Represents the XML type for the string. This allows the string to be read as a particular XML type, for example a CDATA section type.">문자열의 XML 형식을 나타냅니다. 이 클래스를 사용하면 CDATA 섹션 형식과 같은 특정 XML 형식으로 문자열을 읽을 수 있습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary vsli:raw="CDATA type.">CDATA 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary vsli:raw="ENTITIES type.">ENTITIES 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary vsli:raw="ENTITY type.">ENTITY 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary vsli:raw="ENUMERATION type.">ENUMERATION 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary vsli:raw="ID type.">ID 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary vsli:raw="IDREF type.">IDREF 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary vsli:raw="IDREFS type.">IDREFS 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary vsli:raw="NCName type.">NCName 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary vsli:raw="NMTOKEN type.">NMTOKEN 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary vsli:raw="NMTOKENS type.">NMTOKENS 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary vsli:raw="No type.">형식이 없습니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary vsli:raw="NOTATION type.">NOTATION 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary vsli:raw="QName type.">QName 형식입니다.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary vsli:raw="Resolves external XML resources named by a Uniform Resource Identifier (URI).">URI(Uniform Resource Identifier)로 명명된 외부 XML 리소스를 확인합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlUrlResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary vsli:raw="Gets or sets the cache policy for the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; object.">내부 <see cref="T:System.Net.WebRequest" /> 개체에 대한 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The cache policy for the underlying web request.">내부 웹 요청에 대한 캐시 정책입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary vsli:raw="Sets credentials used to authenticate web requests.">웹 요청을 인증하는 데 사용된 자격 증명을 설정합니다.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see langword=&quot;XmlUrlResolver&quot; /&gt; has no user credentials.">웹 요청을 인증하는 데 사용하는 자격 증명입니다. 이 속성이 설정되지 않으면 기본적으로 값은 <see langword="null" />로 설정됩니다. 즉, <see langword="XmlUrlResolver" />에 사용자 자격 증명이 없습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource.">실제 리소스가 포함된 개체로 URI를 매핑합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="Currently not used.">현재 사용되지 않습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current implementation only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">반환할 개체의 형식입니다. 현재 구현에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is neither &lt;see langword=&quot;null&quot; /&gt; nor a &lt;see langword=&quot;Stream&quot; /&gt; type.">
        <paramref name="ofObjectToReturn" />이 <see langword="null" /> 또는 <see langword="Stream" /> 형식이 아닌 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">지정된 URI가 절대 URI가 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a runtime error (for example, an interrupted server connection).">런타임 오류(예: 중단된 서버 연결)가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">
        <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
      <param name="role" vsli:raw="Currently not used.">현재 사용되지 않습니다.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current implementation only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">반환할 개체의 형식입니다. 현재 구현에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">스트림 개체이거나, 스트림 외의 다른 형식이 지정된 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary vsli:raw="Gets or sets the network proxy for the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; object.">기본 <see cref="T:System.Net.WebRequest" /> 개체에 대한 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; to use to access the Internet resource.">인터넷 리소스에 액세스하기 위해 사용할 <see cref="T:System.Net.IWebProxy" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs.">기본 및 상대 URI에서 절대 URI를 확인합니다.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">상대 URI를 확인하는 데 사용된 기본 URI입니다.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">확인할 URI입니다. 절대 URI나 상대 URI일 수 있습니다. 절대 URI인 경우 이 값은 <paramref name="baseUri" /> 값을 효율적으로 대체합니다. 상대 URI인 경우 <paramref name="baseUri" />와 결합하여 절대 URI를 만듭니다.</param>
      <returns vsli:raw="The absolute URI, or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">절대 URI이거나, 상대 URI를 확인할 수 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;baseUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="baseUri" />가 <see langword="null" />이거나 <paramref name="relativeUri" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary vsli:raw="Represents a reader that provides document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) validation.  &#xA;  &#xA; This class is obsolete. Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class and the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method to create a validating XML reader.">DTD(문서 종류 정의), XDR(XML-Data Reduced) 스키마 및 XSD(XML 스키마 정의 언어)의 유효성 검사를 제공하는 판독기를 나타냅니다.  
이 클래스는 사용되지 않습니다. .NET Framework 2.0으로 시작하여 유효성 검사 XML 판독기를 만들려면 <see cref="T:System.Xml.XmlReaderSettings" /> 클래스 및 <see cref="Overload:System.Xml.XmlReader.Create" /> 메서드를 사용하는 것이 좋습니다.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class with the specified values.">지정된 값을 사용하여 <see langword="XmlValidatingReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="xmlFragment" vsli:raw="The stream containing the XML fragment to parse.">구문 분석할 XML 조각을 포함하는 스트림입니다.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This determines what the fragment can contain (see table below).">XML 조각의 <see cref="T:System.Xml.XmlNodeType" />입니다. 이 매개 변수는 조각에 포함되는 내용을 결정합니다(아래 표 참조).</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the XML fragment is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, current &lt;see langword=&quot;xml:lang&quot; /&gt;, and &lt;see langword=&quot;xml:space&quot; /&gt; scope.">XML 조각을 구문 분석할 <see cref="T:System.Xml.XmlParserContext" />입니다. 사용할 <see cref="T:System.Xml.XmlNameTable" />, 인코딩, 네임스페이스 범위, 현재 <see langword="xml:lang" /> 및 <see langword="xml:space" /> 범위가 포함됩니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not one of the node types listed in the table below.">
        <paramref name="fragType" />가 아래 표에 나열된 노드 형식 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class with the specified values.">지정된 값을 사용하여 <see langword="XmlValidatingReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="xmlFragment" vsli:raw="The string containing the XML fragment to parse.">구문 분석할 XML 조각을 포함하는 문자열입니다.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment string can contain (see table below).">XML 조각의 <see cref="T:System.Xml.XmlNodeType" />입니다. 이 매개 변수는 조각에 포함되는 내용도 결정합니다(아래 표 참조).</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the XML fragment is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; to use, encoding, namespace scope, current xml:lang, and xml:space scope.">XML 조각을 구문 분석할 <see cref="T:System.Xml.XmlParserContext" />입니다. 사용할 <see cref="T:System.Xml.NameTable" />, 인코딩, 네임스페이스 범위, 현재 xml:lang 및 xml:space 범위가 포함됩니다.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not one of the node types listed in the table below.">
        <paramref name="fragType" />가 아래 표에 나열된 노드 형식 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class that validates the content returned from the given &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">주어진 <see cref="T:System.Xml.XmlReader" />에서 반환된 콘텐츠의 유효성을 검사하는 <see langword="XmlValidatingReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; to read from while validating. The current implementation supports only &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">유효성을 검사하는 동안 읽을 <see langword="XmlReader" />입니다. 현재 구현은 <see cref="T:System.Xml.XmlTextReader" />만 지원합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The reader specified is not an &lt;see langword=&quot;XmlTextReader&quot; /&gt;.">지정된 판독기가 <see langword="XmlTextReader" />가 아닌 경우</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">현재 노드의 특성 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of attributes on the current node. This number includes default attributes.">현재 노드에 포함된 특성의 수입니다. 이 수에는 기본 특성이 포함됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">현재 노드의 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="The base URI of the current node.">현재 노드의 기본 URI입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implements the binary content read methods.">
        <see cref="T:System.Xml.XmlValidatingReader" />가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class returns &lt;see langword=&quot;true&quot; /&gt;.">이진 콘텐츠 읽기 메서드를 구현하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see cref="T:System.Xml.XmlValidatingReader" /> 클래스는 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; always returns &lt;see langword=&quot;true&quot; /&gt;.">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="XmlValidatingReader" />는 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to Closed.">
        <see cref="P:System.Xml.XmlReader.ReadState" />를 Closed로 변경합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">XML 문서에서 현재 노드의 수준을 가져옵니다.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">XML 문서의 현재 노드 수준입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary vsli:raw="Gets the encoding attribute for the document.">문서의 인코딩 특성을 가져옵니다.</summary>
      <returns vsli:raw="The encoding value. If no encoding attribute exists, and there is not byte-order mark, this defaults to UTF-8.">인코딩 값입니다. 인코딩 특성이 없는 경우 바이트 순서 표시가 없으면 기본값은 UTF-8로 설정됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary vsli:raw="Gets or sets a value that specifies how the reader handles entities.">판독기가 엔터티를 처리하는 방법을 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.EntityHandling&quot; /&gt; values. If no &lt;see langword=&quot;EntityHandling&quot; /&gt; is specified, it defaults to EntityHandling.ExpandEntities.">
        <see cref="T:System.Xml.EntityHandling" /> 값 중 하나입니다. <see langword="EntityHandling" />이 지정되지 않으면 기본값은 EntityHandling.ExpandEntities로 지정됩니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Invalid value was specified.">잘못된 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">판독기가 스트림의 맨 끝에 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">판독기가 스트림의 맨 끝에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">지정된 인덱스가 있는 특성의 값을 가져옵니다.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">특성의 인덱스입니다. 인덱스는 0부터 시작합니다. 첫 번째 특성의 인덱스는 0입니다.</param>
      <returns vsli:raw="The value of the specified attribute.">지정된 특성의 값을 반환합니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.AttributeCount&quot; /&gt;.">
        <paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">지정된 이름이 있는 특성의 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성의 이름을 가져옵니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">지정된 특성의 값을 반환합니다. 특성이 없으면 <see langword="null" />이 반환됩니다. 이 메서드는 판독기를 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">클래스에서 줄 정보를 반환할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class can return line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">클래스에서 줄 정보를 반환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.Value&quot; /&gt; other than String.Empty.">현재 노드에 String.Empty 이외의 <see cref="P:System.Xml.XmlValidatingReader.Value" />가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 판독기가 위치한 노드에 <see langword="Value" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.">현재 노드가 DTD(문서 종류 정의) 또는 스키마에서 정의한 기본값에서 생성된 특성인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <see langword="true" />이고, 특성 값이 명시적으로 설정되었으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">현재 노드가 빈 요소(예: <c>&lt;MyElement/&gt;</c>)인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 현재 노드가 요소 이면 (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> equals <see langword="XmlNodeType.Element" />)로 끝나는 <c>/ &gt;</c>고, 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary vsli:raw="Gets the current line number.">현재 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The current line number. The starting value for this property is 1.">현재 줄 번호입니다. 이 속성의 시작 값은 1입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary vsli:raw="Gets the current line position.">현재 줄 위치를 가져옵니다.</summary>
      <returns vsli:raw="The current line position. The starting value for this property is 1.">현재 줄 위치입니다. 이 속성의 시작 값은 1입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">현재 노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns String.Empty.">접두사를 제거한 현재 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 됩니다 <see langword="book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
이름이 없는 노드 형식(예: <see langword="Text" />, <see langword="Comment" /> 등)의 경우, 이 속성은 String.Empty를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace Uniform Resource Identifier (URI) you want to resolve. To match the default namespace, pass an empty string.">확인하려는 네임스페이스 URI(Uniform Resource Identifier)의 접두사입니다. 기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">지정된 인덱스가 있는 특성으로 이동합니다.</summary>
      <param name="i" vsli:raw="The index of the attribute.">특성의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">
        <paramref name="i" /> 매개 변수가 0보다 작거나 <see cref="P:System.Xml.XmlReader.AttributeCount" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">지정된 이름이 있는 특성으로 이동합니다.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">특성의 정규화된 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the reader does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면 판독기 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성으로 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the reader does not change.">특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면 판독기 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">현재 특성 노드가 포함된 요소로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <see langword="true" />이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">첫 번째 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <see langword="true" />이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">다음 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">다음 특성이 있으면 <see langword="true" />이고, 더 이상 특성이 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">현재 노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">현재 노드의 정규화된 이름입니다. 예를 들어 <see langword="Name" /> 됩니다 <see langword="bk:book" /> 요소에 대 한 <c>&lt;예&gt;</c>합니다.  
반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlValidatingReader.NodeType" />에 따라 달라집니다. 다음 노드 형식은 나열된 값을 반환합니다. 기타 모든 노드 형식은 빈 문자열을 반환합니다.  
  노드 형식 
  name 
 <see langword="Attribute" /> 특성 이름입니다.  

 <see langword="DocumentType" /> 문서 형식 이름입니다.  

 <see langword="Element" /> 태그 이름입니다.  

 <see langword="EntityReference" /> 참조된 엔터티의 이름입니다.  

 <see langword="ProcessingInstruction" /> 처리 명령의 대상입니다.  

 <see langword="XmlDeclaration" /> 리터럴 문자열 <see langword="xml" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">네임스페이스 지원 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do namespace support; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">네임스페이스를 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace Uniform Resource Identifier (URI) (as defined in the World Wide Web Consortium (W3C) Namespace specification) of the node on which the reader is positioned.">W3C(World Wide Web 컨소시엄) 네임스페이스 사양에서 정의된 것처럼 판독기가 있는 노드의 네임스페이스 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;XmlNameTable&quot; /&gt; that enables you to get the atomized version of a string within the node.">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <see langword="XmlNameTable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">현재 노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">현재 노드의 형식을 나타내는 <see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">현재 노드와 관련된 네임스페이스 접두사입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary vsli:raw="Gets the quotation mark character used to enclose the value of an attribute node.">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자를 가져옵니다.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">스트림에서 다음 노드를 읽습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">다음 노드를 읽었으면 <see langword="true" />이고, 더 이상 읽을 노드가 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">특성 값을 하나 이상의 <see langword="Text" />, <see langword="EntityReference" /> 또는 <see langword="EndEntity" /> 노드로 구문 분석합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of String.Empty.">반환할 노드가 있는 경우 <see langword="true" />입니다.  
 처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <see langword="false" />입니다.  
<c>misc=""</c>와 같은 빈 특성은 <see langword="true" />를 반환하며 이것은 단일 노드가 String.Empty의 값을 갖는 것을 의미합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the BinHex decoded binary bytes.">내용을 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />가 현재 노드에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlValidatingReader" />에서 이 메서드를 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">요소를 읽고 Base64 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">현재 노드가 요소 노드가 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlValidatingReader" />에서 이 메서드를 지원하지 않는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">요소가 혼합 콘텐츠를 포함하는 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the BinHex content.">요소를 읽고 BinHex 콘텐츠를 디코딩합니다.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">결과 텍스트를 복사해 넣을 버퍼입니다. 이 값은 <see langword="null" />일 수 없습니다.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">버퍼에 복사할 최대 바이트 수입니다. 복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">버퍼에 쓴 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">현재 노드가 요소 노드가 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">구현된 <see cref="T:System.Xml.XmlValidatingReader" />에서 이 메서드를 지원하지 않는 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">요소가 혼합 콘텐츠를 포함하는 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">요소를 요청한 형식으로 변환할 수 없는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to construct this &lt;see langword=&quot;XmlValidatingReader&quot; /&gt;.">이 <see langword="XmlValidatingReader" />를 생성하는 데 사용된 <see cref="T:System.Xml.XmlReader" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; specified in the constructor.">생성자에 지정된 <see langword="XmlReader" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">판독기의 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">
        <see cref="T:System.Xml.ReadState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or text node as a string.">요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</summary>
      <returns vsli:raw="The contents of the element or text node. This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.">요소 또는 텍스트 노드의 내용입니다. 판독기가 요소 또는 텍스트 노드 이외의 위치에 있거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 이것은 빈 문자열입니다.  
   
 텍스트 노드는 요소 또는 특성 텍스트 노드입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary vsli:raw="Gets the common language runtime type for the specified XML Schema definition language (XSD) type.">지정된 XSD(XML 스키마 정의 언어) 형식의 공용 언어 런타임 형식을 가져옵니다.</summary>
      <returns vsli:raw="The common language runtime type for the specified XML Schema type.">지정된 XML 스키마 형식의 공용 언어 런타임 형식입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">
        <see langword="EntityReference" /> 노드에 대해 엔터티 참조를 확인합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node.">판독기가 <see langword="EntityReference" /> 노드에 배치되지 않은 경우</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCollection&quot; /&gt; to use for validation.">유효성 검사에 사용할 <see cref="T:System.Xml.Schema.XmlSchemaCollection" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; to use for validation.">유효성 검사에 사용할 <see langword="XmlSchemaCollection" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary vsli:raw="Gets a schema type object.">스키마 형식 개체를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; depending whether the node value is a built in XML Schema definition language (XSD) type or a user defined simpleType or complexType; &lt;see langword=&quot;null&quot; /&gt; if the current node has no schema type.">노드 값이 내장 XSD(XML스키마 정의 언어) 형식인지 사용자 정의 simpleType 또는 complexType인지 여부에 따라 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />입니다. 현재 노드에 스키마 형식이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />를 참조하세요.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; object that identifies the scope of the reader.">판독기의 범위를 식별하는 <see cref="T:System.Xml.XmlNamespaceScope" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that identifies the namespaces in scope.">범위에서 네임스페이스를 식별하는 T:System.Collections.IDictionary 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />를 참조하십시오.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">네임스페이스 접두사입니다.</param>
      <returns vsli:raw="A string value that contains the namespace Uri that is associated with the prefix.">접두사와 관련된 네임스페이스 URI가 포함된 문자열 값입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />를 참조하십시오.</summary>
      <param name="namespaceName" vsli:raw="The namespace that is associated with the prefix.">접두사와 관련된 네임스페이스입니다.</param>
      <returns vsli:raw="A string value that contains the namespace prefix that is associated with the &lt;paramref name=&quot;namespaceName&quot; /&gt;.">
        <paramref name="namespaceName" />과 관련된 네임스페이스 접두사가 포함된 문자열 값입니다.</returns>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary vsli:raw="Sets an event handler for receiving information about document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema validation errors.">DTD(언어 종류 정의), XDR(XML-Data Reduced) 스키마 및 XSD(XML 스키마 정의 언어) 스키마 유효성 검사 오류에 대한 정보를 받는 이벤트 처리기를 설정합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary vsli:raw="Gets or sets a value indicating the type of validation to perform.">수행할 유효성 검사의 형식을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ValidationType&quot; /&gt; values. If this property is not set, it defaults to ValidationType.Auto.">
        <see cref="T:System.Xml.ValidationType" /> 값 중 하나입니다. 이 속성이 설정되지 않으면 기본값은 ValidationType.Auto로 설정됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the property after a Read has been called.">Read를 호출한 후 속성을 설정하는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">현재 노드의 텍스트 값을 가져옵니다.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return String.Empty.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">노드의 <see cref="P:System.Xml.XmlValidatingReader.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다. 다른 모든 노드 형식은 String.Empty를 반환합니다.  
  노드 형식 
  값 
 <see langword="Attribute" /> 특성 값  

 <see langword="CDATA" /> CDATA 섹션 내용입니다.  

 <see langword="Comment" /> 주석의 내용입니다.  

 <see langword="DocumentType" /> 내부 하위 집합입니다.  

 <see langword="ProcessingInstruction" /> 대상을 제외한 전체 내용입니다.  

 <see langword="SignificantWhitespace" /> 혼합된 콘텐츠 모델의 태그 간 공백입니다.  

 <see langword="Text" /> 텍스트 노드의 내용입니다.  

 <see langword="Whitespace" /> 태그 사이의 공백입니다.  

 <see langword="XmlDeclaration" /> 선언 내용입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used for resolving external document type definition (DTD) and schema location references. The &lt;see langword=&quot;XmlResolver&quot; /&gt; is also used to handle any import or include elements found in XML Schema definition language (XSD) schemas.">외부 DTD(Document Type Definition) 및 스키마 위치 참조를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />를 설정합니다. 또한 <see langword="XmlResolver" />는 XSD(XML 스키마 정의 언어) 스키마에 있는 포함 요소 또는 가져오기 요소를 처리하는 데도 사용됩니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use. If set to &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; In version 1.1 of the .NET Framework, the caller must be fully trusted to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">사용할 <see langword="XmlResolver" />입니다. <see langword="null" />로 설정되면 외부 리소스는 확인되지 않습니다.  
.NET Framework 버전 1.1에서는 완전히 신뢰할 수 있는 호출자만 <see langword="XmlResolver" />를 지정할 수 있습니다.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">현재 <see langword="xml:space" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">
        <see cref="T:System.Xml.XmlSpace" /> 값 중 하나입니다. <see langword="xml:space" /> 범위가 존재하지 않으면 이 속성은 기본적으로 <see langword="XmlSpace.None" />으로 설정됩니다.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary vsli:raw="Represents white space in element content.">요소 내용에 있는 공백을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlWhitespace" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="strData" vsli:raw="The white space characters of the node.">노드의 공백 문자입니다.</param>
      <param name="doc" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlDocument" /> 개체</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">이 노드의 복제본을 만듭니다.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For white space nodes, the cloned node always includes the data value, regardless of the parameter setting.">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다. 문서 형식 노드의 경우 복제된 노드에는 항상 매개 변수 설정과 상관없이 하위 트리가 포함됩니다.</param>
      <returns vsli:raw="The cloned node.">복제된 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary vsli:raw="Gets the local name of the node.">노드의 로컬 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#whitespace&quot; /&gt;.">
        <see langword="XmlWhitespace" /> 노드의 경우 이 속성은 <see langword="#whitespace" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary vsli:raw="Gets the qualified name of the node.">노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#whitespace&quot; /&gt;.">
        <see langword="XmlWhitespace" /> 노드의 경우 이 속성은 <see langword="#whitespace" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary vsli:raw="Gets the type of the node.">노드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, the value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;.">
        <see langword="XmlWhitespace" /> 노드의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.Whitespace" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary vsli:raw="Gets the parent of the current node.">현재 노드의 부모를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; parent node of the current node.">현재 노드의 <see cref="T:System.Xml.XmlNode" /> 부모 노드입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary vsli:raw="Gets or sets the value of the node.">노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The white space characters found in the node.">노드에 있는 공백 문자입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting &lt;see cref=&quot;P:System.Xml.XmlWhitespace.Value&quot; /&gt; to invalid white space characters.">
        <see cref="P:System.Xml.XmlWhitespace.Value" />를 잘못된 공백 문자로 설정하는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드를 저장합니다.</summary>
      <param name="w" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to save.">저장할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary vsli:raw="Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.">XML 데이터가 포함된 스트림 또는 파일을 생성할 수 있도록 빠르고, 앞으로만 이동 가능하고, 캐시되지 않은 방법을 제공하는 작성기를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary vsli:raw="When overridden in a derived class, closes this stream and the underlying stream.">파생 클래스에서 재정의되면 이 스트림 및 내부 스트림을 닫습니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A call is made to write more output after &lt;see langword=&quot;Close&quot; /&gt; has been called or the result of this call is an invalid XML document.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see langword="Close" />가 호출된 후 호출하여 더 많은 출력을 작성하거나 이 호출 결과가 잘못된 XML 문서인 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified stream.">지정된 스트림을 사용하여 새 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The stream to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified stream.">작성하려는 스트림입니다. <see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 스트림에 추가합니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the stream and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">스트림과 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The stream to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified stream.">작성하려는 스트림입니다. <see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 스트림에 추가합니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다. 값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.  
<see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다. 이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 새 <see cref="T:System.IO.TextWriter" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다. <see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 <see cref="T:System.IO.TextWriter" />에 추가합니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;text&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="text" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">
        <see cref="T:System.Xml.XmlWriter" /> 및 <see cref="T:System.IO.TextWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">쓰기에 사용할 <see cref="T:System.IO.TextWriter" />입니다. <see cref="T:System.Xml.XmlWriter" />는 XML 1.0 텍스트 구문을 작성한 후 지정된 <see cref="T:System.IO.TextWriter" />에 추가합니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다. 값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.  
<see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다. 이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;text&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="text" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified filename.">지정된 파일 이름을 사용하여 새 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만듭니다.</summary>
      <param name="outputFileName" vsli:raw="The file to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; creates a file at the specified path and writes to it in XML 1.0 text syntax. The &lt;paramref name=&quot;outputFileName&quot; /&gt; must be a file system path.">쓰기에 사용할 파일입니다. <see cref="T:System.Xml.XmlWriter" />는 지정된 경로에 파일을 만들어 XML 1.0 텍스트 구문으로 해당 파일에 씁니다. <paramref name="outputFileName" />은 파일 시스템 경로여야 합니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="url" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the filename and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">파일 이름과 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</summary>
      <param name="outputFileName" vsli:raw="The file to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; creates a file at the specified path and writes to it in XML 1.0 text syntax. The &lt;paramref name=&quot;outputFileName&quot; /&gt; must be a file system path.">쓰기에 사용할 파일입니다. <see cref="T:System.Xml.XmlWriter" />는 지정된 경로에 파일을 만들어 XML 1.0 텍스트 구문으로 해당 파일에 씁니다. <paramref name="outputFileName" />은 파일 시스템 경로여야 합니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다. 값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.  
<see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다. 이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="url" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 새 <see cref="T:System.Text.StringBuilder" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to write to. Content written by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is appended to the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">쓰기에 사용할 <see cref="T:System.Text.StringBuilder" />입니다. <see cref="T:System.Xml.XmlWriter" />가 쓰는 콘텐츠는 <see cref="T:System.Text.StringBuilder" />에 추가됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;builder&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="builder" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">
        <see cref="T:System.Xml.XmlWriter" /> 및 <see cref="T:System.Text.StringBuilder" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to write to. Content written by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is appended to the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">쓰기에 사용할 <see cref="T:System.Text.StringBuilder" />입니다. <see cref="T:System.Xml.XmlWriter" />가 쓰는 콘텐츠는 <see cref="T:System.Text.StringBuilder" />에 추가됩니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다. 값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.  
<see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다. 이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlWriter" /> 개체</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;builder&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="builder" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">지정된 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that you want to use as the underlying writer.">내부 작성기로 사용할 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">지정된 <see cref="T:System.Xml.XmlWriter" /> 개체를 래핑하는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">지정된 <see cref="T:System.Xml.XmlWriter" /> 및 <see cref="T:System.Xml.XmlWriter" /> 개체를 사용하여 새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 만듭니다.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that you want to use as the underlying writer.">내부 작성기로 사용할 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">새 <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스를 구성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다. 값이 <see langword="null" />이면 기본 설정이 지정된 <see cref="T:System.Xml.XmlWriterSettings" />이 사용됩니다.  
<see cref="T:System.Xml.XmlWriter" />가 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 메서드와 함께 사용되는 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성을 사용하여 올바른 설정을 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져와야 합니다. 이에 따라 만들어진 <see cref="T:System.Xml.XmlWriter" /> 개체가 올바른 출력 설정을 갖게 됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">지정된 <see cref="T:System.Xml.XmlWriter" /> 개체를 래핑하는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlWriter" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Xml.XmlWriter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary vsli:raw="When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">파생 클래스에서 재정의되면 버퍼에 있는 항목을 내부 스트림으로 플러시하고 내부 스트림도 플러시합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary vsli:raw="Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">버퍼에 있는 모든 내용을 내부 스트림으로 비동기적으로 플러시하고 내부 스트림도 플러시합니다.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;Flush&quot; /&gt; operation.">비동기 <see langword="Flush" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary vsli:raw="When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.">파생 클래스에서 재정의되면 네임스페이스 URI의 현재 네임스페이스 범위에 정의된 가장 비슷한 접두사를 반환합니다.</summary>
      <param name="ns" vsli:raw="The namespace URI whose prefix you want to find.">찾으려는 접두사를 가진 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The matching prefix or &lt;see langword=&quot;null&quot; /&gt; if no matching namespace URI is found in the current scope.">일치하는 접두사이거나 현재 범위에 일치하는 네임스페이스 URI가 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ns&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="ns" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to create this &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance.">이 <see cref="T:System.Xml.XmlWriter" /> 인스턴스를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to create this writer instance. If this writer was not created using the &lt;see cref=&quot;Overload:System.Xml.XmlWriter.Create&quot; /&gt; method, this property returns &lt;see langword=&quot;null&quot; /&gt;.">이 작성기 인스턴스를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriterSettings" />입니다. <see cref="Overload:System.Xml.XmlWriter.Create" /> 메서드를 사용하여 작성기를 만들지 않은 경우 이 속성은 <see langword="null" />을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, writes out all the attributes found at the current position in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XmlReader" />의 현재 위치에 있는 모든 특성을 작성합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; from which to copy the attributes.">특성을 복사할 원본 <see langword="XmlReader" />입니다.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;element&quot; /&gt;, &lt;see langword=&quot;attribute&quot; /&gt; or &lt;see langword=&quot;XmlDeclaration&quot; /&gt; node.">판독기가 <see langword="element" />, <see langword="attribute" /> 또는 <see langword="XmlDeclaration" /> 노드에 배치되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Asynchronously writes out all the attributes found at the current position in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 현재 위치에서 찾은 모든 특성을 비동기적으로 작성합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; from which to copy the attributes.">특성을 복사할 원본 <see langword="XmlReader" />입니다.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteAttributes&quot; /&gt; operation.">비동기 <see langword="WriteAttributes" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the attribute with the specified local name and value.">파생 클래스에서 재정의되면 지정된 로컬 이름 및 값이 있는 특성을 작성합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The value of the attribute.">특성 값</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">판독기 상태가 <see langword="WriteState.Element" />가 아니거나 판독기가 닫힌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">
        <see langword="xml:space" /> 또는 <see langword="xml:lang" /> 특성 값이 잘못된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.">파생 클래스에서 재정의되면 지정된 로컬 이름, 네임스페이스 URI 및 값을 갖는 특성을 작성합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the attribute.">특성에 연결할 네임스페이스 URI입니다.</param>
      <param name="value" vsli:raw="The value of the attribute.">특성 값</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;        &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">판독기 상태가 <see langword="WriteState.Element" />가 아니거나 판독기가 닫힌 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">
        <see langword="xml:space" /> 또는 <see langword="xml:lang" /> 특성 값이 잘못된 경우</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.">파생 클래스에서 재정의되면 지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 갖는 특성을 작성합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">특성의 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <param name="value" vsli:raw="The value of the attribute.">특성 값</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;        &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">판독기 상태가 <see langword="WriteState.Element" />가 아니거나 판독기가 닫힌 경우
또는 
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">
        <see langword="xml:space" /> 또는 <see langword="xml:lang" /> 특성 값이 잘못된 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; or &lt;paramref name=&quot;ns&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> 또는 <paramref name="ns" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 특성을 비동기적으로 작성합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">특성의 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <param name="value" vsli:raw="The value of the attribute.">특성 값</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteAttributeString&quot; /&gt; operation.">비동기 <see langword="WriteAttributeString" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;    &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는 
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.">파생 클래스에서 재정의되면 지정된 이진 바이트를 Base64로 인코딩하고 결과 텍스트를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">인코딩할 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of bytes to write.">쓸 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.  
또는 
버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">지정된 바이너리 바이트를 Base64로 비동기적으로 인코딩하고 결과 텍스트를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">인코딩할 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of bytes to write.">쓸 바이트 수입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">비동기 <see langword="WriteBase64" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, encodes the specified binary bytes as &lt;see langword=&quot;BinHex&quot; /&gt; and writes out the resulting text.">파생 클래스에서 재정의되면 지정된 이진 바이트를 <see langword="BinHex" />로 인코딩하고 결과 텍스트를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">인코딩할 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of bytes to write.">쓸 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed or in error state.&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">작성기가 닫혀 있거나 오류가 발생한 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.  
또는 
버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as &lt;see langword=&quot;BinHex&quot; /&gt; and writes out the resulting text.">지정된 바이너리 바이트를 <see langword="BinHex" />로 비동기적으로 인코딩하고 결과 텍스트를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">인코딩할 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of bytes to write.">쓸 바이트 수입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBinHex&quot; /&gt; operation.">비동기 <see langword="WriteBinHex" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">파생 클래스에서 재정의되면 지정된 텍스트가 포함된 &lt;![CDATA[...]]&gt; 블록을 작성합니다.</summary>
      <param name="text" vsli:raw="The text to place inside the CDATA block.">CDATA 블록 내부에 배치할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">지정된 텍스트를 포함하는 &lt;![CDATA[...]]&gt; 블록을 비동기적으로 작성합니다.</summary>
      <param name="text" vsli:raw="The text to place inside the CDATA block.">CDATA 블록 내부에 배치할 텍스트입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteCData&quot; /&gt; operation.">비동기 <see langword="WriteCData" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary vsli:raw="When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.">파생 클래스에서 재정의되면 지정된 유니코드 문자 값의 문자 엔터티를 생성하게 합니다.</summary>
      <param name="ch" vsli:raw="The Unicode character for which to generate a character entity.">문자 엔터티를 생성할 유니코드 문자입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The character is in the surrogate pair character range, &lt;see langword=&quot;0xd800&quot; /&gt; - &lt;see langword=&quot;0xdfff&quot; /&gt;.">문자가 서로게이트 쌍 문자 범위 <see langword="0xd800" /> - <see langword="0xdfff" />에 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary vsli:raw="Asynchronously forces the generation of a character entity for the specified Unicode character value.">지정된 유니코드 문자 값에 대한 문자 엔터티가 비동기적으로 생성되도록 합니다.</summary>
      <param name="ch" vsli:raw="The Unicode character for which to generate a character entity.">문자 엔터티를 생성할 유니코드 문자입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteCharEntity&quot; /&gt; operation.">비동기 <see langword="WriteCharEntity" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, writes text one buffer at a time.">파생 클래스에서 재정의되면 한 번에 한 버퍼씩 텍스트를 작성합니다.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">쓸 텍스트가 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to write.">쓸 문자 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;; the call results in surrogate pair characters being split or an invalid surrogate pair being written.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.  
또는 
버퍼 길이에서 <paramref name="index" />를 뺀 값이 <paramref name="count" />보다 작고, 호출한 결과 서로게이트 쌍 문자가 분할되거나 잘못된 서로게이트 쌍이 작성되는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter value is not valid.">
        <paramref name="buffer" /> 매개 변수 값이 잘못된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously writes text one buffer at a time.">한 번에 한 버퍼씩 텍스트를 비동기적으로 씁니다.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">쓸 텍스트가 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to write.">쓸 문자 수입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteChars&quot; /&gt; operation.">비동기 <see langword="WriteChars" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">파생 클래스에서 재정의되면 지정된 텍스트가 포함된 주석 &lt;!--...--&gt;을 작성합니다.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">주석 내에 배치할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well-formed XML document.">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">지정된 텍스트를 포함하는 주석 &lt;!--...--&gt;을 비동기적으로 작성합니다.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">주석 내에 배치할 텍스트입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteComment&quot; /&gt; operation.">비동기 <see langword="WriteComment" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.">파생 클래스에서 재정의되면 지정된 이름 및 선택적 특성이 있는 DOCTYPE 선언을 작성합니다.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">DOCTYPE의 이름입니다. 이 이름은 비어 있지 않아야 합니다.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <paramref name="pubid" />와 <paramref name="sysid" />는 지정된 인수 값으로 바뀝니다.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">
        <paramref name="pubid" />가 <see langword="null" />이고 <paramref name="sysid" />가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <paramref name="sysid" />는 이 인수 값으로 바뀝니다.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called outside the prolog (after the root element).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이 메서드가 루트 요소 다음의 프롤로그 외부에서 호출된 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for &lt;paramref name=&quot;name&quot; /&gt; would result in invalid XML.">
        <paramref name="name" />의 값이 잘못된 XML이 되는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.">지정된 이름과 선택적 특성을 사용하여 DOCTYPE 선언을 비동기적으로 작성합니다.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">DOCTYPE의 이름입니다. 이 이름은 비어 있지 않아야 합니다.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <paramref name="pubid" />와 <paramref name="sysid" />는 지정된 인수 값으로 바뀝니다.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">
        <paramref name="pubid" />가 <see langword="null" />이고 <paramref name="sysid" />가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <paramref name="sysid" />는 이 인수 값으로 바뀝니다.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteDocType&quot; /&gt; operation.">비동기 <see langword="WriteDocType" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified local name and value.">지정된 로컬 이름 및 값을 사용하여 요소를 작성합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="value" vsli:raw="The value of the element.">요소의 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">
        <paramref name="localName" /> 값이 <see langword="null" /> 또는 빈 문자열인 경우  
또는 
매개 변수 값이 잘못된 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified local name, namespace URI, and value.">지정된 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 작성합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">요소와 연결할 네임스페이스 URI입니다.</param>
      <param name="value" vsli:raw="The value of the element.">요소의 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">
        <paramref name="localName" /> 값이 <see langword="null" /> 또는 빈 문자열인 경우  
또는 
매개 변수 값이 잘못된 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified prefix, local name, namespace URI, and value.">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 씁니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">요소의 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <param name="value" vsli:raw="The value of the element.">요소의 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">
        <paramref name="localName" /> 값이 <see langword="null" /> 또는 빈 문자열인 경우  
또는 
매개 변수 값이 잘못된 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 비동기적으로 작성합니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">요소의 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <param name="value" vsli:raw="The value of the element.">요소의 값입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteElementString&quot; /&gt; operation.">비동기 <see langword="WriteElementString" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary vsli:raw="When overridden in a derived class, closes the previous &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)&quot; /&gt; call.">파생 클래스에서 재정의되면 이전 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 호출을 닫습니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary vsli:raw="Asynchronously closes the previous &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)&quot; /&gt; call.">이전 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 호출을 비동기적으로 닫습니다.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndAttribute&quot; /&gt; operation.">비동기 <see langword="WriteEndAttribute" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary vsli:raw="When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.">파생 클래스에서 재정의되면 열려 있는 모든 요소나 특성을 닫고 작성기를 다시 시작 상태로 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The XML document is invalid.">XML 문서가 잘못된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary vsli:raw="Asynchronously closes any open elements or attributes and puts the writer back in the Start state.">열려 있는 모든 요소나 특성을 비동기적으로 닫고 작성기를 시작 상태로 설정합니다.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndDocument&quot; /&gt; operation.">비동기 <see langword="WriteEndDocument" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary vsli:raw="When overridden in a derived class, closes one element and pops the corresponding namespace scope.">파생 클래스에서 재정의되면 한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This results in an invalid XML document.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이로 인해 XML 문서가 잘못되는 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary vsli:raw="Asynchronously closes one element and pops the corresponding namespace scope.">한 요소를 비동기적으로 닫고 해당 네임스페이스 범위를 팝합니다.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndElement&quot; /&gt; operation.">비동기 <see langword="WriteEndElement" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">파생 클래스에서 재정의되면 <see langword="&amp;name;" /> 같이 엔터티 참조를 작성합니다.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">엔터티 참조의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">엔터티 참조를 <see langword="&amp;name;" />으로 비동기적으로 작성합니다.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">엔터티 참조의 이름입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEntityRef&quot; /&gt; operation.">비동기 <see langword="WriteEntityRef" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary vsli:raw="When overridden in a derived class, closes one element and pops the corresponding namespace scope.">파생 클래스에서 재정의되면 한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary vsli:raw="Asynchronously closes one element and pops the corresponding namespace scope.">한 요소를 비동기적으로 닫고 해당 네임스페이스 범위를 팝합니다.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteFullEndElement&quot; /&gt; operation.">비동기 <see langword="WriteFullEndElement" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">파생 클래스에서 재정의되면 W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 이름이 되도록 지정된 이름을 작성합니다.</summary>
      <param name="name" vsli:raw="The name to write.">작성할 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" />이 올바른 XML 이름이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 이름이 되도록 지정된 이름을 비동기적으로 작성합니다.</summary>
      <param name="name" vsli:raw="The name to write.">작성할 이름입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteName&quot; /&gt; operation.">비동기 <see langword="WriteName" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">파생 클래스에서 재정의되면 W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 NmToken이 되도록 지정된 이름을 작성합니다.</summary>
      <param name="name" vsli:raw="The name to write.">작성할 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid NmToken; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" />이 올바른 NmToken이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">W3C XML 1.0 권장 사항(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 NmToken이 되도록 지정된 이름을 비동기적으로 작성합니다.</summary>
      <param name="name" vsli:raw="The name to write.">작성할 이름입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNmToken&quot; /&gt; operation.">비동기 <see langword="WriteNmToken" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.">파생 클래스에서 재정의되면 판독기에서 작성기로 모든 항목을 복사하고 판독기를 다음 형제 노드의 시작 부분으로 이동합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read from.">읽을 소스 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; contains invalid characters.">
        <paramref name="reader" />에 잘못된 문자가 들어 있는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary vsli:raw="Copies everything from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object to the writer. The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; remains unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 전체를 작성기에 복사합니다. <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치는 변경되지 않습니다.</summary>
      <param name="navigator" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to copy from.">복사할 원본 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">기본 특성을 복사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;navigator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="navigator" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.">파생 클래스에서 재정의되면 판독기에서 작성기로 모든 항목을 비동기적으로 복사하고 판독기를 다음 형제 노드의 시작 부분으로 이동합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read from.">읽을 소스 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에서 기본 특성을 복사하려면 <see langword="XmlReader" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNode&quot; /&gt; operation.">비동기 <see langword="WriteNode" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary vsli:raw="Asynchronously copies everything from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object to the writer. The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; remains unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 모든 항목을 작성기에 비동기적으로 복사합니다. <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치는 변경되지 않습니다.</summary>
      <param name="navigator" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to copy from.">복사할 원본 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">기본 특성을 복사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNode&quot; /&gt; operation.">비동기 <see langword="WriteNode" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">파생 클래스에서 재정의되면 &lt;?name text?&gt; 같이 이름과 텍스트 사이에 공백이 있는 처리 명령을 작성합니다.</summary>
      <param name="name" vsli:raw="The name of the processing instruction.">처리 명령의 이름입니다.</param>
      <param name="text" vsli:raw="The text to include in the processing instruction.">처리 명령에 포함할 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; This method is being used to create an XML declaration after &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartDocument&quot; /&gt; has already been called.">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우  
 <paramref name="name" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.  
<see cref="M:System.Xml.XmlWriter.WriteStartDocument" />가 이미 호출된 후 이 메서드를 사용하여 XML 선언을 만드는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">이름과 텍스트 사이의 공백을 사용하여 처리 명령을 비동기적으로 씁니다(예: &lt;?name text?&gt;).</summary>
      <param name="name" vsli:raw="The name of the processing instruction.">처리 명령의 이름입니다.</param>
      <param name="text" vsli:raw="The text to include in the processing instruction.">처리 명령에 포함할 텍스트입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteProcessingInstruction&quot; /&gt; operation.">비동기 <see langword="WriteProcessingInstruction" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">파생 클래스에서 재정의되면 네임스페이스로 한정된 이름을 작성합니다. 이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</summary>
      <param name="localName" vsli:raw="The local name to write.">작성할 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI for the name.">이름의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;localName&quot; /&gt; is not a valid name.">
        <paramref name="localName" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.  
 <paramref name="localName" />이 올바른 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">네임스페이스로 한정된 이름을 비동기적으로 작성합니다. 이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</summary>
      <param name="localName" vsli:raw="The local name to write.">작성할 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI for the name.">이름의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteQualifiedName&quot; /&gt; operation.">비동기 <see langword="WriteQualifiedName" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, writes raw markup manually from a character buffer.">파생 클래스에서 재정의되면 문자 버퍼에서 원시 태그를 직접 작성합니다.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">쓸 텍스트가 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to write.">쓸 문자 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.  
또는 
버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes raw markup manually from a string.">파생 클래스에서 재정의되면 문자열에서 원시 태그를 직접 작성합니다.</summary>
      <param name="data" vsli:raw="String containing the text to write.">작성할 텍스트를 포함하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="data" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously writes raw markup manually from a character buffer.">문자 버퍼에서 직접 원시 태그를 비동기적으로 작성합니다.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">쓸 텍스트가 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</param>
      <param name="count" vsli:raw="The number of characters to write.">쓸 문자 수입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteRaw&quot; /&gt; operation.">비동기 <see langword="WriteRaw" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary vsli:raw="Asynchronously writes raw markup manually from a string.">문자열에서 직접 원시 태그를 비동기적으로 작성합니다.</summary>
      <param name="data" vsli:raw="String containing the text to write.">작성할 텍스트를 포함하는 문자열입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteRaw&quot; /&gt; operation.">비동기 <see langword="WriteRaw" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name.">지정된 로컬 이름을 사용하여 특성의 시작 부분을 작성합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">작성기가 닫힌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.">파생 클래스에서 재정의되면 지정된 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">특성의 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI for the attribute.">특성의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.">지정된 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 특성의 시작 부분을 비동기적으로 작성합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">특성의 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI for the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartAttribute&quot; /&gt; operation.">비동기 <see langword="WriteStartAttribute" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary vsli:raw="When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot;.">파생 클래스에서 재정의되면 버전이 "1.0"인 XML 선언을 작성합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">파생 클래스에서 재정의되면 버전이 "1.0"이고 독립형 특성이 포함된 XML 선언을 작성합니다.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">
        <see langword="true" />이면 "standalone=yes"로 작성하고, <see langword="false" />이면 "standalone=no"로 작성합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary vsli:raw="Asynchronously writes the XML declaration with the version &quot;1.0&quot;.">버전 "1.0"을 사용하여 XML 선언을 비동기적으로 작성합니다.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartDocument&quot; /&gt; operation.">비동기 <see langword="WriteStartDocument" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary vsli:raw="Asynchronously writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">버전 "1.0"과 독립형 특성을 사용하여 XML 선언을 비동기적으로 작성합니다.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">
        <see langword="true" />이면 "standalone=yes"로 작성하고, <see langword="false" />이면 "standalone=no"로 작성합니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartDocument&quot; /&gt; operation.">비동기 <see langword="WriteStartDocument" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a start tag with the specified local name.">파생 클래스에서 재정의되면 지정된 로컬 이름을 사용하여 시작 태그를 작성합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">작성기가 닫힌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the specified start tag and associates it with the given namespace.">파생된 클래스에서 재정의되면 지정된 시작 태그를 작성하고 지정된 네임스페이스에 연결합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.">요소와 연결할 네임스페이스 URI입니다. 이 네임스페이스가 이미 범위에 있고 관련된 접두사가 있는 경우 작성기는 해당 접두사도 자동으로 작성합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">작성기가 닫힌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.">파생 클래스에서 재정의되면 지정된 시작 태그를 작성하고 지정된 네임스페이스 및 접두사에 연결합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">요소의 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">요소와 연결할 네임스페이스 URI입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">작성기가 닫힌 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다. 예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다. 유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다. 이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다. 그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the specified start tag and associates it with the given namespace and prefix.">지정된 시작 태그를 비동기적으로 작성하고 주어진 네임스페이스 및 접두사와 연결합니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">요소의 네임스페이스 접두사입니다.</param>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">요소와 연결할 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartElement&quot; /&gt; operation.">비동기 <see langword="WriteStartElement" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary vsli:raw="When overridden in a derived class, gets the state of the writer.">파생 클래스에서 재정의되면 작성기의 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WriteState&quot; /&gt; values.">
        <see cref="T:System.Xml.WriteState" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the given text content.">파생 클래스에서 재정의되면 지정된 텍스트 콘텐츠를 작성합니다.</summary>
      <param name="text" vsli:raw="The text to write.">쓸 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text string contains an invalid surrogate pair.">텍스트 문자열에 잘못된 서로게이트 쌍이 포함된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary vsli:raw="Asynchronously writes the given text content.">주어진 텍스트 콘텐츠를 비동기적으로 작성합니다.</summary>
      <param name="text" vsli:raw="The text to write.">쓸 텍스트입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteString&quot; /&gt; operation.">비동기 <see langword="WriteString" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary vsli:raw="When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.">파생 클래스에서 재정의되면 서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 생성하고 작성합니다.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between 0xDC00 and 0xDFFF.">하위 서로게이트입니다. 이 값은 0xDC00에서 0xDFFF 사이에 있어야 합니다.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between 0xD800 and 0xDBFF.">상위 서로게이트입니다. 이 값은 0xD800에서 0xDBFF 사이에 있어야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid surrogate character pair was passed.">잘못된 서로게이트 문자 쌍이 전달된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary vsli:raw="Asynchronously generates and writes the surrogate character entity for the surrogate character pair.">서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 비동기적으로 생성하고 작성합니다.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between 0xDC00 and 0xDFFF.">하위 서로게이트입니다. 이 값은 0xDC00에서 0xDFFF 사이에 있어야 합니다.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between 0xD800 and 0xDBFF.">상위 서로게이트입니다. 이 값은 0xD800에서 0xDBFF 사이에 있어야 합니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteSurrogateCharEntity&quot; /&gt; operation.">비동기 <see langword="WriteSurrogateCharEntity" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">
        <see cref="T:System.Boolean" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to write.">쓸 <see cref="T:System.Boolean" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">
        <see cref="T:System.DateTime" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to write.">쓸 <see cref="T:System.DateTime" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">
        <see cref="T:System.DateTimeOffset" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value to write.">쓸 <see cref="T:System.DateTimeOffset" /> 값입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">
        <see cref="T:System.Decimal" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to write.">쓸 <see cref="T:System.Decimal" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see cref="T:System.Double" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to write.">쓸 <see cref="T:System.Double" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int32&quot; /&gt; value to write.">쓸 <see cref="T:System.Int32" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; value to write.">쓸 <see cref="T:System.Int64" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes the object value.">개체 값을 씁니다.</summary>
      <param name="value" vsli:raw="The object value to write.  &#xA;  &#xA; Note With the release of the .NET Framework 3.5, this method accepts &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a parameter.">쓸 개체 값입니다.  
 참고 .NET Framework 3.5 릴리스에서 이 메서드는 <see cref="T:System.DateTimeOffset" />을 매개 변수로 받습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed or in error state.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">작성기가 닫혀 있거나 오류가 발생한 경우
또는
이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary vsli:raw="Writes a single-precision floating-point number.">단정밀도 부동 소수점 숫자를 씁니다.</summary>
      <param name="value" vsli:raw="The single-precision floating-point number to write.">쓸 단정밀도 부동 소수점 숫자입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.String" /> 값을 작성합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; value to write.">쓸 <see cref="T:System.String" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">잘못된 값이 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the given white space.">파생 클래스에서 재정의되면 지정된 공백을 작성합니다.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">공백 문자의 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The string contains non-white space characters.">문자열에 공백이 아닌 문자가 포함된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the given white space.">주어진 공백을 비동기적으로 작성합니다.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">공백 문자의 문자열입니다.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteWhitespace&quot; /&gt; operation.">비동기 <see langword="WriteWhitespace" /> 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.
또는
<see cref="P:System.Xml.XmlWriterSettings.Async" /> 플래그를 <see langword="true" />로 설정하지 않고 <see cref="T:System.Xml.XmlWriter" /> 비동기 메서드가 호출되었습니다. 이 경우 <see cref="T:System.InvalidOperationException" />은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">파생 클래스에서 재정의되면 현재 <see langword="xml:lang" /> 범위를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">현재 <see langword="xml:lang" /> 범위입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary vsli:raw="When overridden in a derived class, gets an &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">파생 클래스에서 재정의되면 현재 <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;None&quot; /&gt;&lt;/term&gt;&lt;description&gt; This is the default if no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Default&quot; /&gt;&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;default&quot;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Preserve&quot; /&gt;&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;preserve&quot;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">현재 <see langword="XmlSpace" /> 범위를 나타내는 <see langword="xml:space" />입니다.  
  값 
  의미 
 <see langword="None" /><see langword="xml:space" /> 범위가 없는 경우 기본값입니다.  

 <see langword="Default" /> 현재 범위가 <see langword="xml:space" />="default"입니다.  

 <see langword="Preserve" /> 현재 범위가 <see langword="xml:space" />="preserve"입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">이전 비동기 작업이 완료되기 전에 <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출되었습니다. 이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</exception>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary vsli:raw="Specifies a set of features to support on the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object created by the &lt;see cref=&quot;Overload:System.Xml.XmlWriter.Create&quot; /&gt; method.">
        <see cref="T:System.Xml.XmlWriter" /> 메서드를 사용하여 만든 <see cref="Overload:System.Xml.XmlWriter.Create" /> 개체에서 지원할 기능 집합을 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlWriterSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary vsli:raw="Gets or sets a value that indicates whether asynchronous &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; methods can be used on a particular &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance.">비동기 <see cref="T:System.Xml.XmlWriter" /> 메서드를 특정 <see cref="T:System.Xml.XmlWriter" /> 인스턴스에서 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if asynchronous methods can be used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">비동기 메서드를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the &quot;2.2 Characters&quot; section of the W3C XML 1.0 Recommendation.">XML 작성기가 문서의 모든 문자가 W3C XML 1.0 권장 사항의 "2.2 문자" 섹션을 따르는지 확인해야 하는지 표시하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do character checking; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">문자를 검사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary vsli:raw="Creates a copy of the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; instance.">
        <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스의 복사본을 만듭니다.</summary>
      <returns vsli:raw="The cloned &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">복제된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; should also close the underlying stream or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; when the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method is called.">
        <see cref="T:System.Xml.XmlWriter" /> 메서드를 호출한 경우 <see cref="T:System.IO.TextWriter" />가 내부 스트림 또는 <see cref="M:System.Xml.XmlWriter.Close" />도 함께 닫을지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to also close the underlying stream or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">내부 스트림 또는 <see cref="T:System.IO.TextWriter" />를 함께 닫으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary vsli:raw="Gets or sets the level of conformance that the XML writer checks the XML output for.">XML 작성기가 XML 출력을 확인하는 규칙 수준을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection). The default is &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Document&quot; /&gt;.">규칙 수준(문서, 조각 또는 자동 검색)을 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Xml.ConformanceLevel.Document" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; does not escape URI attributes.">
        <see cref="T:System.Xml.XmlWriter" />에서 URI 특성을 이스케이프하는 않는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; does not escape URI attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 경우는 <see cref="T:System.Xml.XmlWriter" /> URI 특성을 이스케이프 하지 않으면이 고, 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary vsli:raw="Gets or sets the type of text encoding to use.">사용할 텍스트 인코딩의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The text encoding to use. The default is &lt;see langword=&quot;Encoding.UTF8&quot; /&gt;.">사용할 텍스트 인코딩입니다. 기본값은 <see langword="Encoding.UTF8" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary vsli:raw="Gets or sets a value indicating whether to indent elements.">요소의 들여쓰기 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write individual elements on new lines and indent; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">새 줄에 개별 요소를 들여 쓰면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary vsli:raw="Gets or sets the character string to use when indenting. This setting is used when the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Indent&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">들여쓰기에 사용할 문자열을 가져오거나 설정합니다. 이 설정은 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 속성이 <see langword="true" />로 설정된 경우에 사용됩니다.</summary>
      <returns vsli:raw="The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.">들여쓰기에 사용할 문자열입니다. 이 속성에 설정할 수 있는 문자열 값에는 제한이 없습니다. 그러나 XML을 올바르게 유지하려면 공백 문자, 탭, 캐리지 리턴 또는 줄 바꿈 같은 유효한 공백 문자만 지정해야 합니다. 기본값은 공백 두 개입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.IndentChars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Xml.XmlWriterSettings.IndentChars" />에 할당된 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; should remove duplicate namespace declarations when writing XML content. The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.">XML 콘텐츠를 쓸 때 <see cref="T:System.Xml.XmlWriter" />에서 중복된 네임스페이스 선언을 제거할지 여부를 표시하는 값을 가져오거나 설정합니다. 기본 동작은 작성기에서 작성기의 네임스페이스 확인자에 있는 모든 네임스페이스 선언을 출력하는 것입니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.NamespaceHandling&quot; /&gt; enumeration used to specify whether to remove duplicate namespace declarations in the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.NamespaceHandling" />에서 중복된 네임스페이스 선언을 제거할지 여부를 지정하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary vsli:raw="Gets or sets the character string to use for line breaks.">줄 바꿈에 사용할 문자열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The character string to use for line breaks. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is &lt;c&gt;\r\n&lt;/c&gt; (carriage return, new line) for non-Unix platforms, and &lt;c&gt;\n&lt;/c&gt; (new line) for Unix platforms.">줄 바꿈에 사용할 문자열입니다. 이 속성에 설정할 수 있는 문자열 값에는 제한이 없습니다. 그러나 XML을 올바르게 유지하려면 공백 문자, 탭, 캐리지 리턴 또는 줄 바꿈 같은 유효한 공백 문자만 지정해야 합니다. 기본값은 <c>\r\n</c> (캐리지 리턴, 줄 바꿈).</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.NewLineChars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />에 할당된 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary vsli:raw="Gets or sets a value indicating whether to normalize line breaks in the output.">줄 바꿈을 출력에 정규화할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.NewLineHandling&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.NewLineHandling.Replace&quot; /&gt;.">
        <see cref="T:System.Xml.NewLineHandling" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Xml.NewLineHandling.Replace" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary vsli:raw="Gets or sets a value indicating whether to write attributes on a new line.">특성을 새 줄에 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write attributes on individual lines; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">특성을 개별 줄에 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.  
   
 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 속성 값이 <see langword="false" />인 경우에는 이 설정을 적용해도 효과가 없습니다.  

  

 <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />를 <see langword="true" />로 설정하면 각 특성 앞에 줄 바꿈과 한 수준 들여쓰기가 추가됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary vsli:raw="Gets or sets a value indicating whether to omit an XML declaration.">XML 선언을 생략할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the XML declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;, an XML declaration is written.">XML 선언을 생략하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />로, XML 선언이 작성됩니다.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary vsli:raw="Gets the method used to serialize the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; output.">
        <see cref="T:System.Xml.XmlWriter" /> 출력을 serialize하는 데 사용되는 메서드를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlOutputMethod&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Xml&quot; /&gt;.">
        <see cref="T:System.Xml.XmlOutputMethod" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Xml.XmlOutputMethod.Xml" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary vsli:raw="Resets the members of the settings class to their default values.">설정 클래스의 멤버를 해당 기본값으로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; will add closing tags to all unclosed element tags when the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method is called.">
        <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출될 때 <see cref="M:System.Xml.XmlWriter.Close" />가 닫히지 않은 모든 요소 태그에 닫는 태그를 추가할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all unclosed element tags will be closed out; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">닫히지 않은 모든 요소 태그가 닫히면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary vsli:raw="Provides an accessor to the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 클래스에 대한 접근자를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">새 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary vsli:raw="Specifies the sort order for uppercase and lowercase letters.">대문자와 소문자에 대한 정렬 순서를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary vsli:raw="Lowercase letters are sorted before uppercase letters.">소문자가 대문자보다 앞에 정렬됩니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary vsli:raw="Ignore the case.">대/소문자를 무시합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary vsli:raw="Uppercase letters are sorted before lowercase letters.">대문자가 소문자보다 앞에 정렬됩니다.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary vsli:raw="Specifies the data type used to determine sort order.">정렬 순서를 결정하는 데 사용되는 데이터 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary vsli:raw="Values are sorted numerically.">값은 숫자 순으로 정렬됩니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary vsli:raw="Values are sorted alphabetically.">값은 알파벳 순으로 정렬됩니다.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary vsli:raw="Specifies the sort order.">정렬 순서를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary vsli:raw="Nodes are sorted in ascending order. For example, if the numbers 1,2,3, and 4 are sorted in ascending order, they appear as 1,2,3,4.">노드가 오름차순으로 정렬됩니다. 예를 들어, 숫자 1, 2, 3, 4를 오름차순으로 정렬하면 1, 2, 3, 4가 됩니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary vsli:raw="Nodes are sorted in descending order. For example, if the numbers 1,2,3, and 4 are sorted in descending order, they appear as, 4,3,2,1.">노드가 내림차순으로 정렬됩니다. 예를 들어, 숫자 1, 2, 3, 4를 내림차순으로 정렬하면 4, 3, 2, 1이 됩니다.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary vsli:raw="Provides a typed class that represents a compiled XPath expression.">컴파일된 XPath 식을 나타내는 형식화된 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary vsli:raw="When overridden in a derived class, sorts the nodes selected by the XPath expression according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; object.">파생 클래스에서 재정의된 경우 XPath 식에서 선택한 노드를 지정된 <see cref="T:System.Collections.IComparer" /> 개체에 따라 정렬합니다.</summary>
      <param name="expr" vsli:raw="An object representing the sort key. This can be the &lt;see langword=&quot;string&quot; /&gt; value of the node or an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object with a compiled XPath expression.">정렬 키를 나타내는 개체입니다. 이 개체는 노드의 <see langword="string" /> 값 또는 컴파일된 XPath 식을 가진 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체가 될 수 있습니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; object that provides the specific data type comparisons for comparing two objects for equivalence.">두 개체가 서로 같은지 비교하는 데 사용할 특정 데이터 형식 비교를 제공하는 <see cref="T:System.Collections.IComparer" /> 개체입니다.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; or sort key includes a prefix and either an &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; is not provided, or the prefix cannot be found in the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> 또는 정렬 키가 접두사를 포함한 상황에서 <see cref="T:System.Xml.XmlNamespaceManager" />가 제공되지 않았거나 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />에서 접두사를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary vsli:raw="When overridden in a derived class, sorts the nodes selected by the XPath expression according to the supplied parameters.">파생 클래스에서 재정의된 경우 XPath 식에서 선택한 노드를 전달된 매개 변수에 따라 정렬합니다.</summary>
      <param name="expr" vsli:raw="An object representing the sort key. This can be the &lt;see langword=&quot;string&quot; /&gt; value of the node or an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object with a compiled XPath expression.">정렬 키를 나타내는 개체입니다. 이 개체는 노드의 <see langword="string" /> 값 또는 컴파일된 XPath 식을 가진 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체가 될 수 있습니다.</param>
      <param name="order" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlSortOrder&quot; /&gt; value indicating the sort order.">정렬 순서를 나타내는 <see cref="T:System.Xml.XPath.XmlSortOrder" /> 값입니다.</param>
      <param name="caseOrder" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlCaseOrder&quot; /&gt; value indicating how to sort uppercase and lowercase letters.">대/소문자 정렬 방법을 나타내는 <see cref="T:System.Xml.XPath.XmlCaseOrder" /> 값입니다.</param>
      <param name="lang" vsli:raw="The language to use for comparison. Uses the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; class that can be passed to the &lt;see cref=&quot;Overload:System.String.Compare&quot; /&gt; method for the language types, for example, &quot;us-en&quot; for U.S. English. If an empty string is specified, the system environment is used to determine the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">비교에 사용되는 언어입니다. 언어 형식(미국 영어의 경우 “us-en”)에 대한 <see cref="T:System.Globalization.CultureInfo" /> 메서드에 전달할 수 있는 <see cref="Overload:System.String.Compare" /> 클래스를 사용합니다. 빈 문자열을 지정하면 시스템 환경을 사용하여 <see cref="T:System.Globalization.CultureInfo" />를 결정합니다.</param>
      <param name="dataType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlDataType&quot; /&gt; value indicating the sort order for the data type.">데이터 형식에 대한 정렬 순서를 나타내는 <see cref="T:System.Xml.XPath.XmlDataType" /> 값입니다.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; or sort key includes a prefix and either an &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; is not provided, or the prefix cannot be found in the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> 또는 정렬 키가 접두사를 포함한 상황에서 <see cref="T:System.Xml.XmlNamespaceManager" />가 제공되지 않았거나 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />에서 접두사를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary vsli:raw="When overridden in a derived class, returns a clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">파생 클래스에서 재정의된 경우 이 <see cref="T:System.Xml.XPath.XPathExpression" />의 복제를 반환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">새 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary vsli:raw="Compiles the XPath expression specified and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object representing the XPath expression.">지정된 XPath 식을 컴파일하고 XPath 식을 나타내는 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체를 반환합니다.</summary>
      <param name="xpath" vsli:raw="An XPath expression.">XPath 식입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> 개체</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression parameter is not a valid XPath expression.">XPath 식 매개 변수가 올바른 XPath 식이 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Compiles the specified XPath expression, with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified for namespace resolution, and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object that represents the XPath expression.">네임스페이스 확인을 위해 지정된 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체를 사용하여 XPath 식을 컴파일하고 XPath 식을 나타내는 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체를 반환합니다.</summary>
      <param name="xpath" vsli:raw="An XPath expression.">XPath 식입니다.</param>
      <param name="nsResolver" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; interface for namespace resolution.">네임스페이스 확인을 위한 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 인터페이스를 구현하는 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> 개체</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression parameter is not a valid XPath expression.">XPath 식 매개 변수가 올바른 XPath 식이 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary vsli:raw="When overridden in a derived class, gets a &lt;see langword=&quot;string&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">파생 클래스에서 재정의된 경우 <see cref="T:System.Xml.XPath.XPathExpression" />의 <see langword="string" /> 표현을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">
        <see langword="string" />의 <see cref="T:System.Xml.XPath.XPathExpression" /> 표현입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary vsli:raw="When overridden in a derived class, gets the result type of the XPath expression.">파생 클래스에서 재정의된 경우 XPath 식의 결과 형식을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; value representing the result type of the XPath expression.">XPath 식의 결과 형식을 나타내는 <see cref="T:System.Xml.XPath.XPathResultType" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, specifies the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object to use for namespace resolution.">파생 클래스에서 재정의된 경우 네임스페이스 확인에 사용할 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체를 지정합니다.</summary>
      <param name="nsResolver" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; interface to use for namespace resolution.">네임스페이스 확인에 사용할 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 인터페이스를 구현하는 개체입니다.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object parameter is not derived from &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt;.">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체 매개 변수가 <see cref="T:System.Xml.IXmlNamespaceResolver" />에서 파생되지 않았습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="When overridden in a derived class, specifies the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object to use for namespace resolution.">파생 클래스에서 재정의된 경우 네임스페이스 확인에 사용할 <see cref="T:System.Xml.XmlNamespaceManager" /> 개체를 지정합니다.</summary>
      <param name="nsManager" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object to use for namespace resolution.">네임스페이스 확인에 사용할 <see cref="T:System.Xml.XmlNamespaceManager" /> 개체입니다.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object parameter is not derived from the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> 개체 매개 변수가 <see cref="T:System.Xml.XmlNamespaceManager" />에서 파생되지 않았습니다.</exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary vsli:raw="Represents an item in the XQuery 1.0 and XPath 2.0 Data Model.">XQuery 1.0 및 XPath 2.0 Data Model의 항목을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathItem&quot; /&gt; class.">
        <see cref="T:System.Xml.XPath.XPathItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the item represents an XPath node or an atomic value.">파생 클래스에서 재정의된 경우 항목이 XPath 노드를 나타내는지 또는 atomic 값을 나타내는지를 가리키는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item represents an XPath node; &lt;see langword=&quot;false&quot; /&gt; if the item represents an atomic value.">항목이 XPath 노드를 나타내면 <see langword="true" />이고 atomic 값을 나타내면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary vsli:raw="When overridden in a derived class, gets the current item as a boxed object of the most appropriate .NET Framework 2.0 type according to its schema type.">파생 클래스에서 재정의된 경우 현재 항목을 스키마 형식에 따라 가장 적합한 .NET Framework 2.0 형식의 boxed 개체로 가져옵니다.</summary>
      <returns vsli:raw="The current item as a boxed object of the most appropriate .NET Framework type.">가장 적합한 .NET Framework 형식의 boxed 개체로서의 현재 항목입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see langword=&quot;string&quot; /&gt; value of the item.">파생 클래스에서 재정의된 경우 항목의 <see langword="string" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the item.">항목의 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary vsli:raw="Returns the item's value as the specified type.">항목의 값을 지정된 형식으로 반환합니다.</summary>
      <param name="returnType" vsli:raw="The type to return the item value as.">항목 값을 반환할 때 적용되는 형식입니다.</param>
      <returns vsli:raw="The value of the item as the type requested.">요청한 형식으로 나타낸 항목의 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the target type.">항목의 값 형식이 대상 형식에 맞지 않습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, returns the item's value as the type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">파생 클래스에서 재정의된 경우 네임스페이스 접두사 확인을 위해 지정된 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체를 사용하여 항목의 값을 지정된 형식으로 반환합니다.</summary>
      <param name="returnType" vsli:raw="The type to return the item's value as.">항목 값을 반환하는 데 사용할 형식입니다.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체는 네임스페이스 접두사를 확인하는 데 사용됩니다.</param>
      <returns vsli:raw="The value of the item as the type requested.">요청한 형식으로 나타낸 항목의 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the target type.">항목의 값 형식이 대상 형식에 맞지 않습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">파생 클래스에서 재정의된 경우 항목의 값을 <see cref="T:System.Boolean" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> 형식의 항목 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; type.">항목의 값 형식이 <see cref="T:System.Boolean" /> 형식과 맞지 않습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">
        <see cref="T:System.Boolean" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">파생 클래스에서 재정의된 경우 항목의 값을 <see cref="T:System.DateTime" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.DateTime" /> 형식의 항목 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; type.">항목의 값 형식이 <see cref="T:System.DateTime" /> 형식과 맞지 않습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">
        <see cref="T:System.DateTime" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">파생 클래스에서 재정의된 경우 항목의 값을 <see cref="T:System.Double" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Double" /> 형식의 항목 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Double&quot; /&gt; type.">항목의 값 형식이 <see cref="T:System.Double" /> 형식과 맞지 않습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">
        <see cref="T:System.Double" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">파생 클래스에서 재정의된 경우 항목의 값을 <see cref="T:System.Int32" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The item's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> 형식의 항목 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">항목의 값 형식이 <see cref="T:System.Int32" /> 형식과 맞지 않습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">
        <see cref="T:System.Int32" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">파생 클래스에서 재정의된 경우 항목의 값을 <see cref="T:System.Int64" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="The item's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Int64" /> 형식의 항목 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; type.">항목의 값 형식이 <see cref="T:System.Int64" /> 형식과 맞지 않습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">
        <see cref="T:System.Int64" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">시도된 캐스팅에서 오버플로가 발생했습니다.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary vsli:raw="When overridden in a derived class, gets the .NET Framework 2.0 type of the item.">파생된 클래스에서 재정의되는 경우 항목의 .NET Framework 2.0 형식을 가져옵니다.</summary>
      <returns vsli:raw="The .NET Framework type of the item. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">항목의 .NET Framework형식입니다. 기본값은 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the item.">파생 클래스에서 재정의된 경우 항목의 <see cref="T:System.Xml.Schema.XmlSchemaType" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the item.">항목의 <see cref="T:System.Xml.Schema.XmlSchemaType" />입니다.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary vsli:raw="Defines the namespace scope.">네임스페이스 범위를 정의합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary vsli:raw="Returns all namespaces defined in the scope of the current node. This includes the &lt;c&gt;xmlns:xml&lt;/c&gt; namespace which is always declared implicitly. The order of the namespaces returned is not defined.">현재 노드의 범위에서 정의된 모든 네임스페이스를 반환합니다. 여기에는 항상 암시적으로 선언되는 <c>xmlns:xml</c> 네임스페이스가 포함됩니다. 반환되는 네임스페이스의 순서는 정의되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary vsli:raw="Returns all namespaces defined in the scope of the current node, excluding the &lt;c&gt;xmlns:xml&lt;/c&gt; namespace. The &lt;c&gt;xmlns:xml&lt;/c&gt; namespace is always declared implicitly. The order of the namespaces returned is not defined.">
        <c>xmlns:xml</c> 네임스페이스를 제외하고 현재 노드의 범위에 정의된 모든 네임스페이스를 반환합니다. <c>xmlns:xml</c> 네임스페이스는 항상 암시적으로 선언됩니다. 반환되는 네임스페이스의 순서는 정의되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary vsli:raw="Returns all namespaces that are defined locally at the current node.">현재 노드에서 로컬로 정의된 네임스페이스를 모두 반환합니다.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary vsli:raw="Provides a cursor model for navigating and editing XML data.">XML 데이터를 탐색하고 편집하기 위한 커서 모델을 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create one or more new child nodes at the end of the list of child nodes of the current node.">현재 노드의 자식 노드 목록 끝에 새 자식 노드를 하나 이상 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new child nodes at the end of the list of child nodes of the current node.">현재 노드의 자식 노드 목록 끝에 새 자식 노드를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드가 요소 노드 또는 루트 노드가 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the XML data string specified.">지정된 XML 데이터 문자열을 사용하여 현재 노드의 자식 노드 목록 끝에 새 자식 노드를 만듭니다.</summary>
      <param name="newChild" vsli:raw="The XML data string for the new child node.">새 자식 노드에 대한 XML 데이터 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML data string parameter is &lt;see langword=&quot;null&quot; /&gt;.">XML 데이터 문자열 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드가 요소 노드 또는 루트 노드가 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML data string parameter is not well-formed.">XML 데이터 문자열 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">지정된 <see cref="T:System.Xml.XmlReader" /> 개체의 XML 콘텐츠를 사용하여 현재 노드의 자식 노드 목록 끝에 새 자식 노드를 만듭니다.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new child node.">새 자식 노드에 대한 XML 데이터에 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">
        <see cref="T:System.Xml.XmlReader" /> 개체가 오류 상태이거나 닫혀 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드가 요소 노드 또는 루트 노드가 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수의 XML 콘텐츠 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />에 있는 노드를 사용하여 현재 노드의 자식 노드 목록 끝에 새 자식 노드를 만듭니다.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new child node.">새 자식 노드로 추가할 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드가 요소 노드 또는 루트 노드가 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new child element node at the end of the list of child nodes of the current node using the namespace prefix, local name and namespace URI specified with the value specified.">지정된 값과 함께 지정된 네임스페이스 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 현재 노드의 자식 노드 목록 끝에 새 자식 요소 노드를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element node (if any).">새 자식 요소 노드의 네임스페이스 접두사입니다(있는 경우).</param>
      <param name="localName" vsli:raw="The local name of the new child element node (if any).">새 자식 요소 노드의 로컬 이름입니다(있는 경우).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element node (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">새 자식 요소 노드의 네임스페이스 URI입니다(있는 경우). <see cref="F:System.String.Empty" /> 및 <see langword="null" />는 동일합니다.</param>
      <param name="value" vsli:raw="The value of the new child element node. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">새 자식 요소 노드의 값입니다. <see cref="F:System.String.Empty" /> 또는 <see langword="null" />을 전달하면 빈 요소가 생성됩니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드가 요소 노드 또는 루트 노드가 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary vsli:raw="When overridden in a derived class, gets the base URI for the current node.">파생 클래스에서 재정의되면 현재 노드에 대한 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="The location from which the node was loaded, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if there is no value.">노드가 로드된 위치이거나, 값이 없으면 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; can edit the underlying XML data.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서 기본 XML 데이터를 편집할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; can edit the underlying XML data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에서 <see cref="T:System.Xml.XPath.XPathNavigator" /> 기본 XML 데이터를 편집할 수 있으면이 고, <see langword="false" />그렇지 않으면입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Verifies that the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; conforms to the XML Schema definition language (XSD) schema provided.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에 있는 XML 데이터가 제공된 XSD(XML 스키마 정의 언어) 스키마를 준수하는지 확인합니다.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; containing the schemas used to validate the XML data contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />에 포함된 XML 데이터의 유효성을 검사하는 데 사용할 스키마를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that receives information about schema validation warnings and errors.">스키마 유효성 검사 경고 및 오류에 대한 정보를 받는 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if no schema validation errors occurred; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스키마 유효성 검사 오류가 발생하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation error occurred, and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; was specified to handle validation errors.">스키마 유효성 검사 오류가 발생했지만 유효성 검사 오류를 처리할 <see cref="T:System.Xml.Schema.ValidationEventHandler" />가 지정되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on a node that is not an element, attribute, or the root node or there is not type information to perform validation.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 요소, 특성 또는 루트 이외의 노드에 있거나, 유효성 검사를 수행할 형식 정보가 없는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)&quot; /&gt; method was called with an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; parameter when the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; was not positioned on the root node of the XML data.">
        <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />가 XML 데이터의 루트 노드에 없는 상태에서 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 매개 변수를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" /> 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary vsli:raw="When overridden in a derived class, creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned at the same node as this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">파생 클래스에서 재정의할 때 이 <see cref="T:System.Xml.XPath.XPathNavigator" />와 같은 노드에 새 <see cref="T:System.Xml.XPath.XPathNavigator" />를 만듭니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned at the same node as this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">이 <see cref="T:System.Xml.XPath.XPathNavigator" />와 같은 노드에 있는 새 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Compares the position of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; with the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">현재 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치를 지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치와 비교합니다.</summary>
      <param name="nav" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare against.">비교할 대상인 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeOrder&quot; /&gt; value representing the comparative position of the two &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">두 <see cref="T:System.Xml.XmlNodeOrder" /> 개체의 비교 위치를 나타내는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary vsli:raw="Compiles a string representing an XPath expression and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">XPath 식을 나타내는 문자열을 컴파일하고 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체를 반환합니다.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression.">XPath 식을 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object representing the XPath expression.">XPath 식을 나타내는 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;xpath&quot; /&gt; parameter contains an XPath expression that is not valid.">
        <paramref name="xpath" /> 매개 변수에 유효하지 않은 XPath 식이 포함된 경우</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an attribute node on the current element node using the namespace prefix, local name and namespace URI specified with the value specified.">지정된 값과 함께 지정된 네임스페이스 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 현재 요소 노드에 특성 노드를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new attribute node (if any).">새 특성 노드의 네임스페이스 접두사입니다(있는 경우).</param>
      <param name="localName" vsli:raw="The local name of the new attribute node which cannot &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">새 특성 노드의 로컬 이름으로, <see cref="F:System.String.Empty" /> 또는 <see langword="null" />일 수 없습니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI for the new attribute node (if any).">새 특성 노드의 네임스페이스 URI입니다(있는 경우).</param>
      <param name="value" vsli:raw="The value of the new attribute node. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty attribute node is created.">새 특성 노드의 값입니다. <see cref="F:System.String.Empty" /> 또는 <see langword="null" />을 전달하면 빈 특성 노드가 만들어집니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">요소 노드에 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 지정되지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new attributes on the current element.">현재 요소에 새 특성을 만드는 데 사용된 <see cref="T:System.Xml.XmlWriter" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new attributes on the current element.">현재 요소에 새 특성을 만드는 데 사용된 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">요소 노드에 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 지정되지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary vsli:raw="Returns a copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />의 복사본을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; copy of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">이 <see cref="T:System.Xml.XPath.XPathNavigator" />의 <see cref="T:System.Xml.XPath.XPathNavigator" /> 복사본입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Deletes a range of sibling nodes from the current node to the node specified.">현재 노드부터 지정된 노드까지의 형제 노드 범위를 삭제합니다.</summary>
      <param name="lastSiblingToDelete" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the last sibling node in the range to delete.">삭제할 범위의 마지막 형제 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified is &lt;see langword=&quot;null&quot; /&gt;.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The last node to delete specified is not a valid sibling node of the current node.">지정된 삭제할 마지막 노드는 현재 노드의 유효한 형제 노드가 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary vsli:raw="Deletes the current node and its child nodes.">현재 노드와 해당 자식 노드를 삭제합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on a node that cannot be deleted such as the root node or a namespace node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 삭제할 수 없는 노드(예: 루트 노드 또는 네임스페이스 노드)에 있습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary vsli:raw="Evaluates the specified XPath expression and returns the typed result.">지정된 XPath 식을 계산하고 형식화된 결과를 반환합니다.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression that can be evaluated.">계산할 수 있는 XPath 식을 나타내는 문자열입니다.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">식의 결과(부울, 숫자, 문자열 또는 노드 집합)입니다. 각각 <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> 또는 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체에 매핑됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">XPath 식의 반환 형식은 노드 집합입니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Evaluates the specified XPath expression and returns the typed result, using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes in the XPath expression.">XPath 식에 있는 네임스페이스 접두사를 확인하기 위해 지정된 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체를 사용하여 XPath 식을 계산한 후 형식화된 결과를 반환합니다.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression that can be evaluated.">계산할 수 있는 XPath 식을 나타내는 문자열입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes in the XPath expression.">XPath 식에 있는 네임스페이스 접두사를 확인하는 데 사용되는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">식의 결과(부울, 숫자, 문자열 또는 노드 집합)입니다. 각각 <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> 또는 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체에 매핑됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">XPath 식의 반환 형식은 노드 집합입니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Evaluates the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; and returns the typed result.">
        <see cref="T:System.Xml.XPath.XPathExpression" />을 계산하고 형식화된 결과를 반환합니다.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; that can be evaluated.">계산할 수 있는 <see cref="T:System.Xml.XPath.XPathExpression" />입니다.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">식의 결과(부울, 숫자, 문자열 또는 노드 집합)입니다. 각각 <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> 또는 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체에 매핑됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">XPath 식의 반환 형식은 노드 집합입니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary vsli:raw="Uses the supplied context to evaluate the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;, and returns the typed result.">제공된 컨텍스트를 사용하여 <see cref="T:System.Xml.XPath.XPathExpression" />을 계산한 후 형식화된 결과를 반환합니다.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; that can be evaluated.">계산할 수 있는 <see cref="T:System.Xml.XPath.XPathExpression" />입니다.</param>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set that the evaluation is to be performed on.">계산이 수행될 선택된 노드 집합을 가리키는 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">식의 결과(부울, 숫자, 문자열 또는 노드 집합)입니다. 각각 <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> 또는 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체에 매핑됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">XPath 식의 반환 형식은 노드 집합입니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI가 있는 특성의 값을 가져옵니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute. &lt;paramref name=&quot;localName&quot; /&gt; is case-sensitive.">특성의 로컬 이름입니다. <paramref name="localName" />은 대/소문자를 구분합니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">특성의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the specified attribute; &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if a matching attribute is not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">지정된 특성의 값을 포함하는 <see cref="T:System.String" />입니다. 일치하는 특성이 없거나 <see cref="F:System.String.Empty" />가 요소 노드에 없으면 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary vsli:raw="Returns the value of the namespace node corresponding to the specified local name.">지정된 로컬 이름에 해당하는 네임스페이스 노드의 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The local name of the namespace node.">네임스페이스 노드의 로컬 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the namespace node; &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if a matching namespace node is not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">네임스페이스 노드의 값을 포함하는 <see cref="T:System.String" />입니다. 일치하는 네임스페이스 노드가 없거나 <see cref="F:System.String.Empty" />가 요소 노드에 없으면 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Returns the in-scope namespaces of the current node.">현재 노드의 범위 내 네임스페이스를 반환합니다.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value specifying the namespaces to return.">반환할 네임스페이스를 지정하는 <see cref="T:System.Xml.XmlNamespaceScope" /> 값입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; collection of namespace names keyed by prefix.">접두사를 키로 사용하는 네임스페이스 이름의 <see cref="T:System.Collections.Generic.IDictionary`2" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary vsli:raw="Gets a value that indicates whether the current node has any attributes.">현재 노드에 특성이 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; returns &lt;see langword=&quot;false&quot; /&gt; if the current node has no attributes, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">
        <see langword="true" />현재 노드에 특성이 있으면이 고, 그렇지 않으면입니다. 현재 <see langword="false" /> 노드에 특성이 <see cref="T:System.Xml.XPath.XPathNavigator" /> 없거나가 요소 노드에 없으면를 반환 합니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary vsli:raw="Gets a value that indicates whether the current node has any child nodes.">현재 노드에 자식 노드가 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has any child nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드에 자식 노드가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the child nodes of the current node.">현재 노드의 자식 노드를 나타내는 태그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the markup of the child nodes of the current node.">현재 노드에 있는 하위 노드의 태그를 포함하는 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.InnerXml&quot; /&gt; property cannot be set.">
        <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> 속성을 설정할 수 없습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node after the currently selected node.">현재 선택된 노드 뒤에 새 형제 노드를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node after the currently selected node.">현재 선택된 노드 뒤에 새 형제 노드를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 뒤에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the XML string specified.">지정된 XML 문자열을 사용하여 현재 선택된 노드 뒤에 새 형제 노드를 만듭니다.</summary>
      <param name="newSibling" vsli:raw="The XML data string for the new sibling node.">새 형제 노드에 대한 XML 데이터 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">XML 문자열 매개 변수는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 뒤에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">XML 문자열 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">지정된 <see cref="T:System.Xml.XmlReader" /> 개체의 XML 콘텐츠를 사용하여 현재 선택된 노드 뒤에 새 형제 노드를 만듭니다.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new sibling node.">새 형제 노드에 대한 XML 데이터에 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">
        <see cref="T:System.Xml.XmlReader" /> 개체가 오류 상태이거나 닫혀 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 뒤에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수의 XML 콘텐츠 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 노드를 사용하여 현재 선택된 노드 뒤에 새 형제 노드를 만듭니다.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new sibling node.">새 형제 노드로 추가할 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 뒤에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node before the currently selected node.">현재 선택된 노드 앞에 새 형제 노드를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node before the currently selected node.">현재 선택된 노드 앞에 새 형제 노드를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 앞에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the XML string specified.">지정된 XML 문자열을 사용하여 현재 선택된 노드 앞에 새 형제 노드를 만듭니다.</summary>
      <param name="newSibling" vsli:raw="The XML data string for the new sibling node.">새 형제 노드에 대한 XML 데이터 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">XML 문자열 매개 변수는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 앞에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">XML 문자열 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">지정된 <see cref="T:System.Xml.XmlReader" /> 개체의 XML 콘텐츠를 사용하여 현재 선택된 노드 앞에 새 형제 노드를 만듭니다.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new sibling node.">새 형제 노드에 대한 XML 데이터에 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">
        <see cref="T:System.Xml.XmlReader" /> 개체가 오류 상태이거나 닫혀 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 앞에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수의 XML 콘텐츠 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />의 노드를 사용하여 현재 선택된 노드 앞에 새 형제 노드를 만듭니다.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new sibling node.">새 형제 노드로 추가할 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 앞에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new sibling element after the current node using the namespace prefix, local name and namespace URI specified, with the value specified.">지정된 값과 함께 네임스페이스 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 현재 노드 뒤에 새 형제 요소를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">새 자식 요소의 네임스페이스 접두사입니다(있는 경우).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">새 자식 요소의 로컬 이름입니다(있는 경우).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">새 자식 요소의 네임스페이스 URI입니다(있는 경우). <see cref="F:System.String.Empty" /> 및 <see langword="null" />는 동일합니다.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">새 자식 요소의 값입니다. <see cref="F:System.String.Empty" /> 또는 <see langword="null" />을 전달하면 빈 요소가 생성됩니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 뒤에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new sibling element before the current node using the namespace prefix, local name, and namespace URI specified, with the value specified.">지정된 값과 함께 네임스페이스 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 현재 노드 앞에 새 형제 요소를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">새 자식 요소의 네임스페이스 접두사입니다(있는 경우).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">새 자식 요소의 로컬 이름입니다(있는 경우).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">새 자식 요소의 네임스페이스 URI입니다(있는 경우). <see cref="F:System.String.Empty" /> 및 <see langword="null" />는 동일합니다.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">새 자식 요소의 값입니다. <see cref="F:System.String.Empty" /> 또는 <see langword="null" />을 전달하면 빈 요소가 생성됩니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 위치에서는 현재 노드 앞에 새로운 형제 노드를 삽입할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is a descendant of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 <see cref="T:System.Xml.XPath.XPathNavigator" />의 하위 항목인지 여부를 확인합니다.</summary>
      <param name="nav" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare to this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">이 <see cref="T:System.Xml.XPath.XPathNavigator" />와 비교할 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is a descendant of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 <see cref="T:System.Xml.XPath.XPathNavigator" />의 하위 항목이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the current node is an empty element without an end element tag.">파생 클래스에서 재정의되면 현재 노드가 끝 요소 태그가 없는 빈 요소인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an empty element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드가 빈 요소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary vsli:raw="Gets a value that indicates if the current node represents an XPath node.">현재 노드가 XPath 노드를 나타내는지를 표시하는 값을 가져옵니다.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, determines whether the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is at the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">파생 클래스에서 재정의되면 현재 <see cref="T:System.Xml.XPath.XPathNavigator" />가 지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />와 같은 위치에 있는지 확인합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare to this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">이 <see cref="T:System.Xml.XPath.XPathNavigator" />와 비교할 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects have the same position; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 위치가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.Name&quot; /&gt; of the current node without any namespace prefix.">파생 클래스에서 재정의되면 현재 노드의<see cref="P:System.Xml.XPath.XPathNavigator.Name" />을 네임스페이스 접두사 없이 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node does not have a name (for example, text or comment nodes).">현재 노드의 로컬 이름을 포함하는 <see cref="T:System.String" />이거나 현재 노드에 이름이 없으면(예: 텍스트 또는 주석 노드) <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI for the specified prefix.">지정된 접두사의 네임스페이스 URI를 가져옵니다.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">확인할 네임스페이스 URI의 접두사입니다. <see cref="F:System.String.Empty" />를 전달하면 기본 네임스페이스가 사용됩니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI assigned to the namespace prefix specified; &lt;see langword=&quot;null&quot; /&gt; if no namespace URI is assigned to the prefix specified. The &lt;see cref=&quot;T:System.String&quot; /&gt; returned is atomized.">지정된 네임스페이스 접두사에 할당된 네임스페이스 URI를 포함하는 <see cref="T:System.String" />이거나, 지정된 접두사에 할당된 네임스페이스 URI가 없으면 <see langword="null" />입니다. <see cref="T:System.String" />은 원자화됩니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary vsli:raw="Gets the prefix declared for the specified namespace URI.">지정된 네임스페이스 URI에 대해 선언된 접두사를 가져옵니다.</summary>
      <param name="namespaceURI" vsli:raw="The namespace URI to resolve for the prefix.">접두사를 확인할 네임스페이스 URI입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix assigned to the namespace URI specified; otherwise, &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no prefix is assigned to the namespace URI specified. The &lt;see cref=&quot;T:System.String&quot; /&gt; returned is atomized.">지정된 네임스페이스 URI에 할당된 네임스페이스 접두사를 포함하는 <see cref="T:System.String" />이거나, 지정된 네임스페이스 URI에 할당된 접두사가 없으면 <see cref="F:System.String.Empty" />입니다. <see cref="T:System.String" />은 원자화됩니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary vsli:raw="Determines whether the current node matches the specified XPath expression.">현재 노드가 지정된 XPath 식과 일치하는지를 확인합니다.</summary>
      <param name="xpath" vsli:raw="The XPath expression.">XPath 식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node matches the specified XPath expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드가 지정된 XPath 식과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression cannot be evaluated.">XPath 식은 평가할 수 없습니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Determines whether the current node matches the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">현재 노드가 지정된 <see cref="T:System.Xml.XPath.XPathExpression" />과 일치하는지 확인합니다.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath expression.">컴파일된 XPath 식을 포함하는 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 노드가 <see cref="T:System.Xml.XPath.XPathExpression" />과 일치하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression cannot be evaluated.">XPath 식은 평가할 수 없습니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />와 같은 위치로 이동합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the node that you want to move to.">이동하려는 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />와 같은 위치로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the attribute with the matching local name and namespace URI.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 로컬 이름 및 네임스페이스 URI가 일치하는 특성으로 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">특성의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute; &lt;see langword=&quot;null&quot; /&gt; for an empty namespace.">특성의 네임스페이스 URI입니다. 빈 네임스페이스인 경우에는 <see langword="null" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 특성으로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the child node with the local name and namespace URI specified.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 로컬 이름 및 네임스페이스 URI를 사용하는 자식 노드로 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the child node to move to.">이동하려는 대상 자식 노드의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the child node to move to.">이동하려는 대상 자식 노드의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the child node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 자식 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the child node of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 <see cref="T:System.Xml.XPath.XPathNodeType" />의 자식 노드로 이동합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the child node to move to.">이동하려는 대상 자식 노드의 <see cref="T:System.Xml.XPath.XPathNodeType" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the child node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 자식 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first sibling node of the current node.">현재 노드의 첫 번째 형제 노드로 <see cref="T:System.Xml.XPath.XPathNavigator" />를 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first sibling node of the current node; &lt;see langword=&quot;false&quot; /&gt; if there is no first sibling, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is already positioned on the first sibling, &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will return &lt;see langword=&quot;true&quot; /&gt; and will not move its position.  &#xA;  &#xA; If &lt;see cref=&quot;M:System.Xml.XPath.XPathNavigator.MoveToFirst&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; because there is no first sibling, or if &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 노드의 첫 번째 형제 노드로 성공적으로 이동하면 <see langword="true" />이고, 첫 번째 형제 노드가 없거나 <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 특성 노드에 있으면 <see langword="false" />입니다. <see cref="T:System.Xml.XPath.XPathNavigator" />가 이미 첫 번째 형제에 배치되어 있으면, <see cref="T:System.Xml.XPath.XPathNavigator" />는 <see langword="true" />를 반환하며 해당 위치를 이동하지 않습니다.  
첫 번째 형제가 없어 <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />가 <see langword="false" />를 반환하거나 <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 특성에 배치되어 있는 경우 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치는 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first attribute of the current node.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드의 첫 번째 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first attribute of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 노드의 첫 번째 특성으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first child node of the current node.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드의 첫 번째 자식 노드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first child node of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 노드의 첫 번째 자식 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to first namespace node of the current node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드의 첫 번째 네임스페이스 노드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 첫 번째 네임스페이스 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first namespace node that matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; specified.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 <see cref="T:System.Xml.XPath.XPathNamespaceScope" />와 일치하는 첫 번째 네임스페이스 노드로 이동합니다.</summary>
      <param name="namespaceScope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; value describing the namespace scope.">네임스페이스 범위를 설명하는 <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 첫 번째 네임스페이스 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the element with the local name and namespace URI specified in document order.">문서 순서에 따라 <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 로컬 이름 및 네임스페이스 URI를 사용하는 요소로 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the element with the local name and namespace URI specified, to the boundary specified, in document order.">지정된 경계 내에서 문서 순서에 따라 <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 로컬 이름 및 네임스페이스 URI를 사용하는 요소로 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the element.">요소의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">요소의 네임스페이스 URI입니다.</param>
      <param name="end" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the element boundary which the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will not move past while searching for the following element.">다음 요소를 검색하는 동안 현재 <see cref="T:System.Xml.XPath.XPathNavigator" />가 벗어나지 않을 요소 경계에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the following element of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified in document order.">문서 순서에 따라 지정된 <see cref="T:System.Xml.XPath.XPathNodeType" />의 다음 요소로 <see cref="T:System.Xml.XPath.XPathNavigator" />를 이동합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the element. The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; cannot be &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Namespace&quot; /&gt;.">요소의 <see cref="T:System.Xml.XPath.XPathNodeType" />입니다. <see cref="T:System.Xml.XPath.XPathNodeType" />은 <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> 또는 <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />일 수 없습니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the following element of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified, to the boundary specified, in document order.">지정된 경계 내에서 문서 순서에 따라 <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 <see cref="T:System.Xml.XPath.XPathNodeType" />의 다음 요소로 이동합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the element. The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; cannot be &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Namespace&quot; /&gt;.">요소의 <see cref="T:System.Xml.XPath.XPathNodeType" />입니다. <see cref="T:System.Xml.XPath.XPathNodeType" />은 <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> 또는 <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />일 수 없습니다.</param>
      <param name="end" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the element boundary which the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will not move past while searching for the following element.">다음 요소를 검색하는 동안 현재 <see cref="T:System.Xml.XPath.XPathNavigator" />가 벗어나지 않을 요소 경계에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the node that has an attribute of type &lt;c&gt;ID&lt;/c&gt; whose value matches the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">파생 클래스에서 재정의되면 지정된 <see cref="T:System.String" />과 <c>ID</c> 형식의 값이 일치하는 특성을 포함하는 노드로 이동합니다.</summary>
      <param name="id" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;c&gt;ID&lt;/c&gt; value of the node to which you want to move.">이동하려는 대상 노드의 <c>ID</c> 값을 나타내는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the navigator is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 성공적으로 이동하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="false" />이면 탐색기의 위치는 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the namespace node with the specified namespace prefix.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 네임스페이스 접두사를 사용하는 네임스페이스 노드로 이동합니다.</summary>
      <param name="name" vsli:raw="The namespace prefix of the namespace node.">네임스페이스 노드의 네임스페이스 접두사입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the specified namespace; &lt;see langword=&quot;false&quot; /&gt; if a matching namespace node was not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 지정된 네임스페이스로 성공적으로 이동하면 <see langword="true" />이고, 일치하는 네임스페이스 노드가 없거나 <see cref="T:System.Xml.XPath.XPathNavigator" />가 요소 노드에 없으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node of the current node.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드의 다음 형제 노드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 다음 형제 노드로 성공적으로 이동하면 <see langword="true" />이고 더 이상 현재 노드가 없거나 <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 특성 노드에 있으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node with the local name and namespace URI specified.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 로컬 이름 및 네임스페이스 URI를 사용하는 다음 형제 노드로 이동합니다.</summary>
      <param name="localName" vsli:raw="The local name of the next sibling node to move to.">이동하려는 다음 형제 노드의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the next sibling node to move to.">이동하려는 다음 형제 노드의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 다음 형제 노드로 성공적으로 이동하면 <see langword="true" />이고, 더 이상 형제 노드가 없거나 현재 <see cref="T:System.Xml.XPath.XPathNavigator" />가 특성 노드에 있으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node of the current node that matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드에서 지정된 <see cref="T:System.Xml.XPath.XPathNodeType" />과 일치하는 다음 형제 노드로 이동합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the sibling node to move to.">이동하려는 대상 형제 노드의 <see cref="T:System.Xml.XPath.XPathNodeType" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 다음 형제 노드로 성공적으로 이동하면 <see langword="true" />이고 더 이상 현재 노드가 없거나 <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 특성 노드에 있으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next attribute.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 다음 특성으로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 다음 특성으로 이동하면 <see langword="true" />이고, 더 이상 특성이 없으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next namespace node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 다음 네임스페이스 노드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 다음 네임스페이스 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next namespace node matching the &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; specified.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 지정된 <see cref="T:System.Xml.XPath.XPathNamespaceScope" />와 일치하는 다음 네임스페이스 노드로 이동합니다.</summary>
      <param name="namespaceScope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; value describing the namespace scope.">네임스페이스 범위를 설명하는 <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 다음 네임스페이스 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the parent node of the current node.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드의 부모 노드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the parent node of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 현재 노드의 부모 노드로 성공적으로 이동하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the previous sibling node of the current node.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드의 이전 형제 노드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the previous sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there is no previous sibling node or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 이전 형제 노드로 성공적으로 이동하면 <see langword="true" />이고, 이전 형제 노드가 없거나 현재 <see cref="T:System.Xml.XPath.XPathNavigator" />가 특성 노드에 있으면 <see langword="false" />입니다. <see langword="false" />이면 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 변경되지 않습니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the root node that the current node belongs to.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />를 현재 노드가 속해 있는 루트 노드로 이동합니다.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary vsli:raw="When overridden in a derived class, gets the qualified name of the current node.">파생 클래스에서 재정의되면 현재 노드의 정규화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.Name&quot; /&gt; of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node does not have a name (for example, text or comment nodes).">현재 노드의 정규화된 <see cref="P:System.Xml.XPath.XPathNavigator.Name" />를 포함하는 <see cref="T:System.String" />이거나, 현재 노드에 이름이 없으면(예: 텍스트 또는 주석 노드) <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary vsli:raw="When overridden in a derived class, gets the namespace URI of the current node.">파생 클래스에서 재정의되면 현재 노드의 네임스페이스 URI를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node has no namespace URI.">현재 노드의 네임스페이스 URI를 포함하는 <see cref="T:System.String" /> 이거나, 현재 노드에 네임스페이스 URI가 없으면 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">파생 클래스에서 재정의되면 <see cref="T:System.Xml.XmlNameTable" />의 <see cref="T:System.Xml.XPath.XPathNavigator" />을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object enabling you to get the atomized version of a &lt;see cref=&quot;T:System.String&quot; /&gt; within the XML document.">XML 문서 내에서 원자화된 버전의 <see cref="T:System.Xml.XmlNameTable" />을 가져올 수 있게 해주는 <see cref="T:System.String" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; used for equality comparison of &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 같음 비교에 사용되는 <see cref="T:System.Collections.IEqualityComparer" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; used for equality comparison of &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 같음 비교에 사용되는 <see cref="T:System.Collections.IEqualityComparer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the current node.">파생 클래스에서 재정의할 때 현재 노드의 <see cref="T:System.Xml.XPath.XPathNodeType" />을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; values representing the current node.">현재 노드를 나타내는 <see cref="T:System.Xml.XPath.XPathNodeType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary vsli:raw="Gets or sets the markup representing the opening and closing tags of the current node and its child nodes.">현재 노드와 해당 자식 노드의 여는 태그 및 닫는 태그를 나타내는 태그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the markup representing the opening and closing tags of the current node and its child nodes.">현재 노드와 해당 자식 노드의 여는 태그 및 닫는 태그를 나타내는 태그가 포함된 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary vsli:raw="When overridden in a derived class, gets the namespace prefix associated with the current node.">파생 클래스에서 재정의되면 현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix associated with the current node.">현재 노드에 연결된 네임스페이스 접두사를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new child node at the beginning of the list of child nodes of the current node.">현재 노드의 자식 노드 목록 맨 앞에 새 자식 노드를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new child node at the beginning of the list of child nodes of the current node.">현재 노드의 자식 노드 목록 맨 앞에 새 자식 노드를 만드는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드 앞에 새 자식 노드를 추가할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the XML string specified.">지정된 XML 문자열을 사용하여 현재 노드의 자식 노드 목록 맨 앞에 새 자식 노드를 만듭니다.</summary>
      <param name="newChild" vsli:raw="The XML data string for the new child node.">새 자식 노드에 대한 XML 데이터 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">XML 문자열 매개 변수는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드 앞에 새 자식 노드를 추가할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">XML 문자열 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">지정된 <see cref="T:System.Xml.XmlReader" /> 개체의 XML 콘텐츠를 사용하여 현재 노드의 자식 노드 목록 맨 앞에 새 자식 노드를 만듭니다.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new child node.">새 자식 노드에 대한 XML 데이터에 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">
        <see cref="T:System.Xml.XmlReader" /> 개체가 오류 상태이거나 닫혀 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드 앞에 새 자식 노드를 추가할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수의 XML 콘텐츠 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체에 있는 노드를 사용하여 현재 노드의 자식 노드 목록 맨 앞에 새 자식 노드를 만듭니다.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new child node.">새 자식 노드로 추가할 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드 앞에 새 자식 노드를 추가할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new child element at the beginning of the list of child nodes of the current node using the namespace prefix, local name, and namespace URI specified with the value specified.">지정된 값과 함께 네임스페이스 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 현재 노드의 자식 노드 목록 맨 앞에 새 자식 요소 노드를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">새 자식 요소의 네임스페이스 접두사입니다(있는 경우).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">새 자식 요소의 로컬 이름입니다(있는 경우).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">새 자식 요소의 네임스페이스 URI입니다(있는 경우). <see cref="F:System.String.Empty" /> 및 <see langword="null" />는 동일합니다.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">새 자식 요소의 값입니다. <see cref="F:System.String.Empty" /> 또는 <see langword="null" />을 전달하면 빈 요소가 생성됩니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 있는 현재 노드 앞에 새 자식 노드를 추가할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the current node and its child nodes.">현재 노드와 해당 자식 노드를 포함하는 <see cref="T:System.Xml.XmlReader" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the current node and its child nodes.">현재 노드와 해당 자식 노드를 포함하는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node or the root node.">요소 노드나 루트 노드에 <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 지정되지 않았습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Replaces a range of sibling nodes from the current node to the node specified.">현재 노드부터 지정된 노드까지의 형제 노드 범위를 바꿉니다.</summary>
      <param name="lastSiblingToReplace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the last sibling node in the range to replace.">바꿀 범위의 마지막 형제 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to specify the replacement range.">바꾸기 범위를 지정하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified is &lt;see langword=&quot;null&quot; /&gt;.">지정된 <see cref="T:System.Xml.XPath.XPathNavigator" />는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The last node to replace specified is not a valid sibling node of the current node.">지정된 바꿀 마지막 노드는 현재 노드의 유효한 형제 노드가 아닙니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary vsli:raw="Replaces the current node with the content of the string specified.">현재 노드를 지정된 문자열의 콘텐츠로 바꿉니다.</summary>
      <param name="newNode" vsli:raw="The XML data string for the new node.">새 노드에 대한 XML 데이터 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">XML 문자열 매개 변수는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 요소, 텍스트, 처리 명령 또는 주석 노드에 배치되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">XML 문자열 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary vsli:raw="Replaces the current node with the contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">현재 노드를 지정된 <see cref="T:System.Xml.XmlReader" /> 개체의 콘텐츠로 바꿉니다.</summary>
      <param name="newNode" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new node.">새 노드에 대한 XML 데이터에 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">
        <see cref="T:System.Xml.XmlReader" /> 개체가 오류 상태이거나 닫혀 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 요소, 텍스트, 처리 명령 또는 주석 노드에 배치되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">
        <see cref="T:System.Xml.XmlReader" /> 개체 매개 변수의 XML 콘텐츠 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Replaces the current node with the contents of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">현재 노드를 지정된 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 콘텐츠로 바꿉니다.</summary>
      <param name="newNode" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the new node.">새 노드에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 요소, 텍스트, 처리 명령 또는 주석 노드에 배치되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is not well-formed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체 매개 변수의 XML 콘텐츠 형식이 잘못되었습니다.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node as a result of schema validation.">스키마 유효성 검사의 결과로 현재 노드에 할당된 스키마 정보를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object that contains the schema information for the current node.">현재 노드에 대한 스키마 정보를 포함하는 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary vsli:raw="Selects a node set, using the specified XPath expression.">지정된 XPath 식을 사용하여 노드 집합을 선택합니다.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">XPath 식을 나타내는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; pointing to the selected node set.">선택한 노드 집합을 가리키는 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">XPath 식에 오류가 포함되어 있거나 해당 반환 형식이 노드 집합이 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Selects a node set using the specified XPath expression with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">네임스페이스 접두사를 확인하기 위해 지정된 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체와 함께 XPath 식을 사용하여 노드 집합을 선택합니다.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">XPath 식을 나타내는 <see cref="T:System.String" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체는 네임스페이스 접두사를 확인하는 데 사용됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set.">선택된 노드 집합을 가리키는 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">XPath 식에 오류가 포함되어 있거나 해당 반환 형식이 노드 집합이 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Selects a node set using the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">지정된 <see cref="T:System.Xml.XPath.XPathExpression" />을 사용하여 노드 집합을 선택합니다.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath query.">컴파일된 XPath 쿼리를 포함하는 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set.">선택된 노드 집합을 가리키는 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">XPath 식에 오류가 포함되어 있거나 해당 반환 형식이 노드 집합이 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">XPath 식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Selects all the ancestor nodes of the current node that have the specified local name and namespace URI.">지정된 로컬 이름과 네임스페이스 URI를 사용하는 현재 노드의 상위 노드를 모두 선택합니다.</summary>
      <param name="name" vsli:raw="The local name of the ancestor nodes.">상위 노드의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the ancestor nodes.">상위 노드의 네임스페이스 URI입니다.</param>
      <param name="matchSelf" vsli:raw="To include the context node in the selection, &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">선택할 때 컨텍스트 노드를 포함하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes. The returned nodes are in reverse document order.">선택된 노드가 포함된 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다. 반환되는 노드는 문서 순서와 반대로 배치됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" />을 매개 변수로 전달할 수 없습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary vsli:raw="Selects all the ancestor nodes of the current node that have a matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNodeType" />이 일치하는 현재 노드의 상위 노드를 모두 선택합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the ancestor nodes.">상위 노드의 <see cref="T:System.Xml.XPath.XPathNodeType" />입니다.</param>
      <param name="matchSelf" vsli:raw="To include the context node in the selection, &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">선택할 때 컨텍스트 노드를 포함하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes. The returned nodes are in reverse document order.">선택된 노드가 포함된 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다. 반환되는 노드는 문서 순서와 반대로 배치됩니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary vsli:raw="Selects all the child nodes of the current node that have the local name and namespace URI specified.">지정된 로컬 이름과 네임스페이스 URI를 사용하는 현재 노드의 자식 노드를 모두 선택합니다.</summary>
      <param name="name" vsli:raw="The local name of the child nodes.">자식 노드의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the child nodes.">자식 노드의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">선택된 노드가 포함된 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" />을 매개 변수로 전달할 수 없습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Selects all the child nodes of the current node that have the matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNodeType" />이 일치하는 현재 노드의 자식 노드를 모두 선택합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the child nodes.">자식 노드의 <see cref="T:System.Xml.XPath.XPathNodeType" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">선택된 노드가 포함된 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Selects all the descendant nodes of the current node with the local name and namespace URI specified.">지정된 로컬 이름과 네임스페이스 URI를 사용하는 현재 노드의 하위 노드를 모두 선택합니다.</summary>
      <param name="name" vsli:raw="The local name of the descendant nodes.">하위 노드의 로컬 이름입니다.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the descendant nodes.">하위 노드의 네임스페이스 URI입니다.</param>
      <param name="matchSelf" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the context node in the selection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">선택할 때 컨텍스트 노드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">선택된 노드가 포함된 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" />을 매개 변수로 전달할 수 없습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary vsli:raw="Selects all the descendant nodes of the current node that have a matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNodeType" />이 일치하는 현재 노드의 하위 노드를 모두 선택합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the descendant nodes.">하위 노드의 <see cref="T:System.Xml.XPath.XPathNodeType" />입니다.</param>
      <param name="matchSelf" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the context node in the selection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">선택할 때 컨텍스트 노드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">선택된 노드가 포함된 <see cref="T:System.Xml.XPath.XPathNodeIterator" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified XPath query.">지정된 XPath 쿼리를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />에서 단일 노드를 선택합니다.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">XPath 식을 나타내는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">지정된 XPath 쿼리와 일치하는 첫 번째 노드를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체이거나, 쿼리 결과가 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">XPath 쿼리에서 오류가 발생했거나 XPath 식의 반환 형식이 노드가 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">XPath 쿼리가 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object using the specified XPath query with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">네임스페이스 접두사를 확인하기 위해 지정된 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체와 함께 지정된 XPath 쿼리를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체에서 단일 노드를 선택합니다.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">XPath 식을 나타내는 <see cref="T:System.String" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes in the XPath query.">XPath 쿼리에 있는 네임스페이스 접두사를 확인하는 데 사용되는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">지정된 XPath 쿼리와 일치하는 첫 번째 노드를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체이거나, 쿼리 결과가 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">XPath 쿼리에서 오류가 발생했거나 XPath 식의 반환 형식이 노드가 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">XPath 쿼리가 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">지정된 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />에서 단일 노드를 선택합니다.</summary>
      <param name="expression" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath query.">컴파일된 XPath 쿼리를 포함하는 <see cref="T:System.Xml.XPath.XPathExpression" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">지정된 XPath 쿼리와 일치하는 첫 번째 노드를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체이거나, 쿼리 결과가 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">XPath 쿼리에서 오류가 발생했거나 XPath 식의 반환 형식이 노드가 아닙니다.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">XPath 쿼리가 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary vsli:raw="Sets the typed value of the current node.">현재 노드의 형식화된 값을 설정합니다.</summary>
      <param name="typedValue" vsli:raw="The new typed value of the node.">노드의 형식화된 새 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support the type of the object specified.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서 지정된 개체의 형식을 지원하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified cannot be &lt;see langword=&quot;null&quot; /&gt;.">지정된 값은 <see langword="null" />이 아니어야 합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element or attribute node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />의 위치가 요소 또는 특성 노드에 지정되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary vsli:raw="Sets the value of the current node.">현재 노드의 값을 설정합니다.</summary>
      <param name="value" vsli:raw="The new value of the node.">노드의 새 값</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value parameter is &lt;see langword=&quot;null&quot; /&gt;.">value 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on the root node, a namespace node, or the specified value is invalid.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />가 루트 노드 또는 네임스페이스 노드에 있거나 지정된 값이 잘못되었습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에서는 편집을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 새 복사본을 만듭니다.</summary>
      <returns vsli:raw="A new copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체의 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary vsli:raw="Gets the text value of the current node.">현재 노드의 텍스트 값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that contains the text value of the current node.">현재 노드의 텍스트 값을 포함하는 <see langword="string" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary vsli:raw="Gets the current node as a boxed object of the most appropriate .NET type.">가장 적합한 .NET Framework 형식 중 현재 노드에 해당하는 boxed 개체를 가져옵니다.</summary>
      <returns vsli:raw="The current node as a boxed object of the most appropriate .NET type.">가장 적합한 .NET Framework 형식 중 현재 노드에 해당하는 boxed 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary vsli:raw="Used by &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; implementations which provide a &quot;virtualized&quot; XML view over a store, to provide access to underlying objects.">내부 개체에 액세스할 수 있도록 저장소에 대한 "가상" XML 뷰를 제공하기 위해 구현된 <see cref="T:System.Xml.XPath.XPathNavigator" />에 사용됩니다.</summary>
      <returns vsli:raw="The default is &lt;see langword=&quot;null&quot; /&gt;.">기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Gets the current node's value as the &lt;see cref=&quot;T:System.Type&quot; /&gt; specified, using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">네임스페이스 접두사를 확인하기 위해 지정된 <see cref="T:System.Type" /> 개체를 사용하여 현재 노드의 값을 지정된 <see cref="T:System.Xml.IXmlNamespaceResolver" />으로 가져옵니다.</summary>
      <param name="returnType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to return the current node's value as.">현재 노드의 값을 반환할 <see cref="T:System.Type" />입니다.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체는 네임스페이스 접두사를 확인하는 데 사용됩니다.</param>
      <returns vsli:raw="The value of the current node as the &lt;see cref=&quot;T:System.Type&quot; /&gt; requested.">현재 노드의 값에 해당하는 요청된 <see cref="T:System.Type" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's value is not in the correct format for the target type.">현재 노드의 값 형식이 대상 형식에 맞지 않는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">현재 노드의 값을 <see cref="T:System.Boolean" />으로 가져옵니다.</summary>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">현재 노드의 값에 해당하는 <see cref="T:System.Boolean" /> 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">현재 노드의 문자열 값을 <see cref="T:System.Boolean" />으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">
        <see cref="T:System.Boolean" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">현재 노드의 값을 <see cref="T:System.DateTime" />으로 가져옵니다.</summary>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">현재 노드의 값에 해당하는 <see cref="T:System.DateTime" /> 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">현재 노드의 문자열 값을 <see cref="T:System.DateTime" />으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">
        <see cref="T:System.DateTime" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">현재 노드의 값을 <see cref="T:System.Double" />으로 가져옵니다.</summary>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">현재 노드의 값에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">현재 노드의 문자열 값을 <see cref="T:System.Double" />으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">
        <see cref="T:System.Double" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary vsli:raw="Gets the current node's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">현재 노드의 값을 <see cref="T:System.Int32" />로 가져옵니다.</summary>
      <returns vsli:raw="The current node's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">현재 노드의 값에 해당하는 <see cref="T:System.Int32" /> 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">현재 노드의 문자열 값을 <see cref="T:System.Int32" />으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">
        <see cref="T:System.Int32" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary vsli:raw="Gets the current node's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">현재 노드의 값을 <see cref="T:System.Int64" />로 가져옵니다.</summary>
      <returns vsli:raw="The current node's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">현재 노드의 값에 해당하는 <see cref="T:System.Int64" /> 값입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">현재 노드의 문자열 값을 <see cref="T:System.Int64" />으로 변환할 수 없는 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">
        <see cref="T:System.Int64" />에 대해 시도된 캐스팅이 잘못된 경우</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary vsli:raw="Gets the .NET &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current node.">현재 노드의 .NET Framework <see cref="T:System.Type" />를 가져옵니다.</summary>
      <returns vsli:raw="The .NET &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current node. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">현재 노드의 .NET Framework <see cref="T:System.Type" />입니다. 기본값은 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary vsli:raw="Streams the current node and its child nodes to the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object specified.">현재 노드와 해당 자식 노드를 지정된 <see cref="T:System.Xml.XmlWriter" /> 개체로 스트리밍합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to stream to.">스트리밍할 대상 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary vsli:raw="Gets the &lt;c&gt;xml:lang&lt;/c&gt; scope for the current node.">현재 노드에 대한 <c>xml:lang</c> 범위를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;c&gt;xml:lang&lt;/c&gt; scope, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node has no &lt;c&gt;xml:lang&lt;/c&gt; scope value to return.">
        <see cref="T:System.String" /> 의 값을 포함 하는 <c>xml: lang</c> 범위 또는 <see cref="F:System.String.Empty" /> 가 없으면 현재 노드가 <c>xml: lang</c> 반환할 값의 범위.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; information for the current node.">현재 노드에 대한 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 정보를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object; default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary vsli:raw="Provides an iterator over a selected set of nodes.">선택된 노드 집합에 대한 반복기를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; class.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary vsli:raw="When overridden in a derived class, returns a clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object.">파생 클래스에서 재정의된 경우 이 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체의 복제를 반환합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object.">이 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체의 새로운 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체 복제입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary vsli:raw="Gets the index of the last node in the selected set of nodes.">선택된 노드 집합에 포함된 마지막 노드의 인덱스를 가져옵니다.</summary>
      <returns vsli:raw="The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.">선택된 노드 집합에 포함된 마지막 노드의 인덱스이며, 선택된 노드가 없는 경우에는 0입니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt;, positioned on the current context node.">파생 클래스에서 재정의된 경우 현재 컨텍스트 노드에 위치한 이 <see cref="T:System.Xml.XPath.XPathNavigator" />에 대한 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the context node from which the node set was selected. The &lt;see cref=&quot;M:System.Xml.XPath.XPathNodeIterator.MoveNext&quot; /&gt; method must be called to move the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; to the first node in the selected set.">노드 집합을 선택한 컨텍스트 노드로 위치가 지정된 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다. <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> 메서드를 호출하여 <see cref="T:System.Xml.XPath.XPathNodeIterator" />를 선택된 집합의 첫 번째 노드로 이동해야 합니다.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary vsli:raw="When overridden in a derived class, gets the index of the current position in the selected set of nodes.">파생 클래스에서 재정의할 때 선택된 노드 집합에서 현재 위치의 인덱스를 가져옵니다.</summary>
      <returns vsli:raw="The index of the current position.">현재 위치의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object to iterate through the selected node set.">선택된 노드 집합을 반복하는 <see cref="T:System.Collections.IEnumerator" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object to iterate through the selected node set.">선택된 노드 집합을 반복하는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object returned by the &lt;see cref=&quot;P:System.Xml.XPath.XPathNodeIterator.Current&quot; /&gt; property to the next node in the selected node set.">파생 클래스에서 재정의하는 경우 <see cref="T:System.Xml.XPath.XPathNavigator" /> 속성에서 반환된 <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> 개체를 선택된 노드 집합의 다음 노드로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object moved to the next node; &lt;see langword=&quot;false&quot; /&gt; if there are no more selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체가 다음 노드로 이동되었으면 <see langword="true" />이고 선택된 노드가 더 이상 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">현재 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">이 인스턴스의 복사본인 새 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary vsli:raw="Defines the XPath node types that can be returned from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> 클래스에서 반환할 수 있는 XPath 노드 형식을 정의합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary vsli:raw="Any of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; node types.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> 노드 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary vsli:raw="An attribute, such as &lt;c&gt;id='123'&lt;/c&gt;.">
        <c>id='123'</c>과 같은 특성입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary vsli:raw="A comment, such as &lt;c&gt;&amp;lt;!-- my comment --&amp;gt;&lt;/c&gt;.">
        <c>&lt;!-- my comment --&gt;</c>와 같은 주석입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary vsli:raw="An element, such as &lt;c&gt;&amp;lt;element&amp;gt;&lt;/c&gt;.">
        <c>&lt;element&gt;</c>와 같은 요소입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary vsli:raw="A namespace, such as &lt;c&gt;xmlns=&quot;namespace&quot;&lt;/c&gt;.">
        <c>xmlns="namespace"</c>와 같은 네임스페이스입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary vsli:raw="A processing instruction, such as &lt;c&gt;&amp;lt;?pi test?&amp;gt;&lt;/c&gt;. This does not include XML declarations, which are not visible to the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">
        <c>&lt;?pi test?&gt;</c>와 같은 처리 명령입니다. <see cref="T:System.Xml.XPath.XPathNavigator" /> 클래스에게 보이지 않는 XML 선언은 여기에 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary vsli:raw="The root node of the XML document or node tree.">XML 문서 또는 노드 트리의 루트 노드입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary vsli:raw="A node with white space characters and &lt;c&gt;xml:space&lt;/c&gt; set to &lt;c&gt;preserve&lt;/c&gt;.">공백 문자를 포함하며 <c>xml:space</c>가 <c>preserve</c>로 설정된 노드입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary vsli:raw="The text content of a node. Equivalent to the Document Object Model (DOM) Text and CDATA node types. Contains at least one character.">노드의 텍스트 내용입니다. DOM(문서 개체 모델) Text 및 CDATA 노드 형식에 해당합니다. 문자가 하나 이상 있어야 합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary vsli:raw="A node with only white space characters and no significant white space. White space characters are &lt;c&gt;#x20&lt;/c&gt;, &lt;c&gt;#x9&lt;/c&gt;, &lt;c&gt;#xD&lt;/c&gt;, or &lt;c&gt;#xA&lt;/c&gt;.">공백 문자만 포함하고 중요 공백은 포함하지 않는 노드입니다. 공백 문자는 <c>#x20</c>, <c>#x9</c>, <c>#xD</c> 또는 <c>#xA</c>입니다.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary vsli:raw="Specifies the return type of the XPath expression.">XPath 식의 반환 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary vsli:raw="Any of the XPath node types.">XPath 노드 형식입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; value.">
        <see cref="T:System.Boolean" />
        <see langword="true" /> 또는 <see langword="false" /> 값입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary vsli:raw="The expression does not evaluate to the correct XPath type.">식이 올바른 XPath 형식으로 계산되지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary vsli:raw="A tree fragment.">트리 단편입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary vsli:raw="A node collection.">노드 컬렉션입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary vsli:raw="A numeric value.">숫자 값입니다.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.String" /> 값입니다.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary vsli:raw="Provides an interface to a given function defined in the Extensible Stylesheet Language for Transformations (XSLT) style sheet during runtime execution.">런타임에 실행하는 동안 XSLT(Extensible Stylesheet Language for Transformations) 스타일시트에 정의된 함수에 대한 인터페이스를 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary vsli:raw="Gets the supplied XML Path Language (XPath) types for the function's argument list. This information can be used to discover the signature of the function which allows you to differentiate between overloaded functions.">함수의 인수 목록에 대한 제공된 XPath(XML Path Language) 형식을 가져옵니다. 이 정보를 사용하면 오버로드 함수를 구별할 수 있도록 하는 함수의 서명을 검색할 수 있습니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the types for the function's argument list.">함수의 인수 목록에 대한 형식을 나타내는 <see cref="T:System.Xml.XPath.XPathResultType" />의 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Provides the method to invoke the function with the given arguments in the given context.">지정된 컨텍스트에서 지정된 인수가 있는 함수를 호출할 수 있는 메서드를 제공합니다.</summary>
      <param name="xsltContext" vsli:raw="The XSLT context for the function call.">함수 호출에 대한 XSLT 컨텍스트입니다.</param>
      <param name="args" vsli:raw="The arguments of the function call. Each argument is an element in the array.">함수 호출의 인수로, 각 인수는 배열에 있는 요소입니다.</param>
      <param name="docContext" vsli:raw="The context node for the function call.">함수 호출에 대한 컨텍스트 노드입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the return value of the function.">함수의 반환 값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary vsli:raw="Gets the maximum number of arguments for the function. This enables the user to differentiate between overloaded functions.">함수의 최대 인수 수를 가져옵니다. 이 정보를 사용하면 오버로드된 함수를 구별할 수 있습니다.</summary>
      <returns vsli:raw="The maximum number of arguments for the function.">함수의 최대 인수 수입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary vsli:raw="Gets the minimum number of arguments for the function. This enables the user to differentiate between overloaded functions.">함수의 최소 인수 수를 가져옵니다. 이 정보를 사용하면 오버로드된 함수를 구별할 수 있습니다.</summary>
      <returns vsli:raw="The minimum number of arguments for the function.">함수의 최소 인수 수입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type returned by the function.">함수에서 반환한 XPath 형식을 나타내는 <see cref="T:System.Xml.XPath.XPathResultType" />을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type returned by the function.">함수에서 반환한 XPath 형식을 나타내는 <see cref="T:System.Xml.XPath.XPathResultType" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary vsli:raw="Provides an interface to a given variable that is defined in the style sheet during runtime execution.">런타임에 실행하는 동안 스타일시트에 정의된 변수에 대한 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary vsli:raw="Evaluates the variable at runtime and returns an object that represents the value of the variable.">런타임에 변수를 계산한 다음 이 변수 값을 나타내는 개체를 반환합니다.</summary>
      <param name="xsltContext" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; representing the execution context of the variable.">변수의 실행 컨텍스트를 나타내는 <see cref="T:System.Xml.Xsl.XsltContext" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the value of the variable. Possible return types include number, string, Boolean, document fragment, or node set.">변수 값을 나타내는 <see cref="T:System.Object" />입니다. 가능한 반환 형식에는 숫자, 문자열, 부울, 문서 단편 또는 노드 집합이 있습니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary vsli:raw="Gets a value indicating whether the variable is local.">변수가 지역 변수인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the variable is a local variable in the current context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">변수가 현재 컨텍스트의 지역 변수이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary vsli:raw="Gets a value indicating whether the variable is an Extensible Stylesheet Language Transformations (XSLT) parameter. This can be a parameter to a style sheet or a template.">변수가 XSLT(Extensible Stylesheet Language Transformation) 매개 변수인지 여부를 나타내는 값을 가져옵니다. 이 값은 스타일시트 또는 템플릿에 대한 매개 변수일 수 있습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the variable is an XSLT parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">변수가 XSLT 매개 변수이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XML Path Language (XPath) type of the variable.">변수의 XPath(XML Path Language) 형식을 나타내는 <see cref="T:System.Xml.XPath.XPathResultType" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type of the variable.">변수의 XPath 형식을 나타내는 <see cref="T:System.Xml.XPath.XPathResultType" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary vsli:raw="Transforms XML data using an XSLT style sheet.">XSLT 스타일시트를 사용하여 XML 데이터를 변환합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslCompiledTransform&quot; /&gt; class.">
        <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslCompiledTransform&quot; /&gt; class with the specified debug setting.">지정된 디버그 설정을 사용하여 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="enableDebug" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to generate debug information; otherwise &lt;see langword=&quot;false&quot; /&gt;. Setting this to &lt;see langword=&quot;true&quot; /&gt; enables you to debug the style sheet with the Microsoft Visual Studio Debugger.">디버그 정보를 생성하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 값을 <see langword="true" />로 설정하면 Microsoft Visual Studio Debugger를 사용하여 스타일시트를 디버깅할 수 있습니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary vsli:raw="Loads a method from a style sheet compiled using the &lt;see langword=&quot;XSLTC.exe&quot; /&gt; utility.">
        <see langword="XSLTC.exe" /> 유틸리티를 사용하여 컴파일된 스타일시트에서 메서드를 로드합니다.</summary>
      <param name="executeMethod" vsli:raw="A &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object representing the compiler-generated &lt;c&gt;execute&lt;/c&gt; method of the compiled style sheet.">컴파일러에서 생성된 컴파일된 스타일시트의 <c>execute</c> 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" /> 개체입니다.</param>
      <param name="queryData" vsli:raw="A byte array of serialized data structures in the &lt;c&gt;staticData&lt;/c&gt; field of the compiled style sheet as generated by the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)&quot; /&gt; method.">
        <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> 메서드에서 생성된 컴파일된 스타일시트의 <c>staticData</c> 필드에 있는 serialize된 데이터 구조의 바이트 배열입니다.</param>
      <param name="earlyBoundTypes" vsli:raw="An array of types stored in the compiler-generated &lt;c&gt;ebTypes&lt;/c&gt; field of the compiled style sheet.">컴파일러에서 생성된 컴파일된 스타일시트의 <c>ebTypes</c> 필드에 저장된 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary vsli:raw="Loads and compiles the style sheet located at the specified URI.">지정된 URI에 있는 스타일시트를 로드하고 컴파일합니다.</summary>
      <param name="stylesheetUri" vsli:raw="The URI of the style sheet.">스타일시트의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheetUri" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">스타일시트에 오류가 있는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The style sheet cannot be found.">스타일시트를 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value includes a filename or directory that cannot be found.">
        <paramref name="stylesheetUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">
        <paramref name="stylesheetUri" /> 값을 확인할 수 없는 경우  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;stylesheetUri&quot; /&gt; is not a valid URI.">
        <paramref name="stylesheetUri" /> 경로는 유효한 URI가 아닙니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the style sheet.">스타일시트를 로드하는 동안 구문 분석 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads and compiles the XSLT style sheet specified by the URI. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">URI로 지정된 XSLT 스타일시트를 로드하고 컴파일합니다. <see cref="T:System.Xml.XmlResolver" />는 XSLT <c>import</c> 또는 <c>include</c> 요소를 모두 확인하고 XSLT 설정은 스타일시트에 대한 사용 권한을 결정합니다.</summary>
      <param name="stylesheetUri" vsli:raw="The URI of the style sheet.">스타일시트의 URI입니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">스타일시트에 적용할 <see cref="T:System.Xml.Xsl.XsltSettings" />입니다. 이 값이 <see langword="null" />이면 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 설정이 적용됩니다.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the style sheet URI and any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements.">스타일시트 URI 및 XSLT <c>import</c> 및 <c>include</c> 요소에서 참조하는 모든 스타일시트를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; or &lt;paramref name=&quot;stylesheetResolver&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheetUri" /> 또는 <paramref name="stylesheetResolver" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">스타일시트에 오류가 있는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The style sheet cannot be found.">스타일시트를 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value includes a filename or directory that cannot be found.">
        <paramref name="stylesheetUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">
        <paramref name="stylesheetUri" /> 값을 확인할 수 없는 경우  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;stylesheetUri&quot; /&gt; is not a valid URI.">
        <paramref name="stylesheetUri" /> 경로는 유효한 URI가 아닙니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the style sheet.">스타일시트를 로드하는 동안 구문 분석 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary vsli:raw="Loads the compiled style sheet that was created using the XSLT Compiler (xsltc.exe).">XSLT Compiler (xsltc.exe)를 사용하여 만든 컴파일된 스타일시트를 로드합니다.</summary>
      <param name="compiledStylesheet" vsli:raw="The name of the class that contains the compiled style sheet.  &#xA;  &#xA; This is usually the name of the style sheet. Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.">컴파일된 스타일시트가 들어 있는 클래스의 이름입니다.  
 일반적으로 스타일시트 이름입니다. 이름이 지정되지 않은 경우 xsltc.exe 도구는 클래스 및 어셈블리 이름으로 스타일시트 이름을 사용합니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Compiles the style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />에 포함된 스타일시트를 컴파일합니다.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the style sheet.">스타일시트가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">스타일시트에 오류가 있는 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">
        <see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 컴파일합니다. <see cref="T:System.Xml.XmlResolver" />는 XSLT <c>import</c> 또는 <c>include</c> 요소를 모두 확인하고 XSLT 설정은 스타일시트에 대한 사용 권한을 결정합니다.</summary>
      <param name="stylesheet" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the style sheet.">스타일시트가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">스타일시트에 적용할 <see cref="T:System.Xml.Xsl.XsltSettings" />입니다. 이 값이 <see langword="null" />이면 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 설정이 적용됩니다.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.">XSLT <c>import</c> 및 <c>include</c> 요소에서 참조하는 모든 스타일시트를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">스타일시트에 오류가 있는 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary vsli:raw="Compiles the style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 포함된 스타일시트를 컴파일합니다.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the style sheet.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. Microsoft .NET Framework에서 이 개체는 스타일시트를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">스타일시트에 오류가 있는 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 컴파일합니다. <see cref="T:System.Xml.XmlResolver" />는 XSLT <c>import</c> 또는 <c>include</c> 요소를 모두 확인하고 XSLT 설정은 스타일시트에 대한 사용 권한을 결정합니다.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the style sheet.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. Microsoft .NET Framework에서 이 개체는 스타일시트를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">스타일시트에 적용할 <see cref="T:System.Xml.Xsl.XsltSettings" />입니다. 이 값이 <see langword="null" />이면 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 설정이 적용됩니다.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.">XSLT <c>import</c> 및 <c>include</c> 요소에서 참조하는 모든 스타일시트를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">스타일시트에 오류가 있는 경우</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that contains the output information derived from the &lt;c&gt;xsl:output&lt;/c&gt; element of the style sheet.">스타일시트의 <c>xsl:output</c> 요소에서 파생된 출력 정보를 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A read-only &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that contains the output information derived from the &lt;c&gt;xsl:output&lt;/c&gt; element of the style sheet. This value can be &lt;see langword=&quot;null&quot; /&gt;.">읽기 전용 <see cref="T:System.Xml.XmlWriterSettings" /> 에서 파생 된 출력 정보를 포함 하는 개체를 <c>xsl: output</c> 스타일 시트의 요소입니다. 이 값은 <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to a file.">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 파일로 결과를 출력합니다.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">입력 문서의 URI입니다.</param>
      <param name="resultsFile" vsli:raw="The URI of the output file.">출력 파일의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> 또는 <paramref name="resultsFile" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The input document cannot be found.">입력 문서를 찾을 수 없는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value includes a filename or directory cannot be found.">
        <paramref name="inputUri" /> 또는 <paramref name="resultsFile" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">
        <paramref name="inputUri" /> 또는 <paramref name="resultsFile" /> 값을 확인할 수 없는 경우  
또는 
요청을 처리하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> 또는 <paramref name="resultsFile" />이 올바른 URI가 아닌 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">입력 문서의 URI입니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">
        <paramref name="inputUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">
        <paramref name="inputUri" /> 값을 확인할 수 없는 경우  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 스트림에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">입력 문서의 URI입니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">출력할 대상 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">
        <paramref name="inputUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">
        <paramref name="inputUri" /> 값을 확인할 수 없는 경우  
또는 
요청을 처리하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.IO.TextWriter" />에 결과를 출력합니다.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">입력 문서의 URI입니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">
        <paramref name="inputUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">
        <paramref name="inputUri" /> 값을 확인할 수 없는 경우  
또는 
요청을 처리하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">입력 문서의 URI입니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputtUri&quot; /&gt; value includes a filename or directory cannot be found.">
        <paramref name="inputtUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">
        <paramref name="inputUri" /> 값을 확인할 수 없는 경우  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</summary>
      <param name="input" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to a stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">
        <see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 스트림에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">출력할 대상 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">
        <see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.IO.TextWriter" />에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">
        <see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments and the XmlResolver resolves the XSLT &lt;c&gt;document()&lt;/c&gt; function.">
        <see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공하고 XmlResolver는 XSLT <c>document()</c> 함수를 확인합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <param name="documentResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to a stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional runtime arguments.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 스트림에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">출력할 대상 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.IO.TextWriter" />에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">XSLT 변환을 실행하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Executes the transform by using the input document that is specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments and the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves the XSLT &lt;see langword=&quot;document()&quot; /&gt; function.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공하고 <see cref="T:System.Xml.XmlResolver" />는 XSLT <see langword="document()" /> 함수를 확인합니다.</summary>
      <param name="input" vsli:raw="The document to transform that is specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에서 지정되는 변환할 문서입니다.</param>
      <param name="arguments" vsli:raw="Argument list as &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" />로 표시되는 인수 목록입니다.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;see langword=&quot;xsl:output&quot; /&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; by using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that is returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.  
스타일시트에 <see langword="xsl:output" /> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환되는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다. 이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</param>
      <param name="documentResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;see langword=&quot;document()&quot; /&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see langword=&quot;document()&quot; /&gt; function is not resolved.">XSLT <see langword="document()" /> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <see langword="document()" /> 함수가 확인되지 않습니다.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary vsli:raw="Contains a variable number of arguments which are either XSLT parameters or extension objects.">XSLT 매개 변수이거나 확장 개체인 여러 가지 인수를 포함합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary vsli:raw="Implements a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" />의 새 인스턴스를 구현합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary vsli:raw="Adds a new object to the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; and associates it with the namespace URI.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" />에 새 개체를 추가하고 이를 네임스페이스 URI와 연결합니다.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI to associate with the object. To use the default namespace, specify an empty string.">개체에 연결할 네임스페이스 URI입니다. 기본 네임스페이스를 사용하려면 빈 문자열을 지정합니다.</param>
      <param name="extension" vsli:raw="The object to add to the list.">목록에 추가할 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;namespaceUri&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or http://www.w3.org/1999/XSL/Transform  &#xA;  &#xA; The &lt;paramref name=&quot;namespaceUri&quot; /&gt; already has an extension object associated with it.">
        <paramref name="namespaceUri" />가 <see langword="null" /> 또는 http://www.w3.org/1999/XSL/Transform인 경우 
<paramref name="namespaceUri" />에 이미 연결된 확장 개체가 있는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have sufficient permissions to call this method.">호출자에게 이 메서드를 호출할 수 있는 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary vsli:raw="Adds a parameter to the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; and associates it with the namespace qualified name.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" />에 매개 변수를 추가하고 이를 네임스페이스 정규화 이름과 연결합니다.</summary>
      <param name="name" vsli:raw="The name to associate with the parameter.">매개 변수에 연결할 이름입니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI to associate with the parameter. To use the default namespace, specify an empty string.">매개 변수에 연결할 네임스페이스 URI입니다. 기본 네임스페이스를 사용하려면 빈 문자열을 지정합니다.</param>
      <param name="parameter" vsli:raw="The parameter value or object to add to the list.">목록에 추가할 매개 변수 값 또는 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;namespaceUri&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or http://www.w3.org/1999/XSL/Transform.  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; is not a valid name according to the W3C XML specification.  &#xA;  &#xA; The &lt;paramref name=&quot;namespaceUri&quot; /&gt; already has a parameter associated with it.">
        <paramref name="namespaceUri" />가 <see langword="null" /> 또는 http://www.w3.org/1999/XSL/Transform인 경우  
<paramref name="name" />이 W3C XML 사양에 따른 올바른 이름이 아닌 경우  
<paramref name="namespaceUri" />에 이미 연결된 매개 변수가 있는 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary vsli:raw="Removes all parameters and extension objects from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" />에서 모든 매개 변수와 확장 개체를 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary vsli:raw="Gets the object associated with the given namespace.">지정한 네임스페이스에 연결된 개체를 가져옵니다.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI of the object.">개체의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The namespace URI object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">네임스페이스 URI 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary vsli:raw="Gets the parameter associated with the namespace qualified name.">네임스페이스 정규화 이름에 연결된 매개 변수를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the parameter. &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; does not check to ensure the name passed is a valid local name; however, the name cannot be &lt;see langword=&quot;null&quot; /&gt;.">매개 변수의 이름입니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 전달된 이름이 올바른 로컬 이름인지 검사하지 않지만 이 이름은 <see langword="null" />이 될 수 없습니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI associated with the parameter.">매개 변수에 연결된 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The parameter object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">매개 변수 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary vsli:raw="Removes the object with the namespace URI from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" />에서 네임스페이스 URI가 있는 개체를 제거합니다.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI associated with the object to remove.">제거할 개체에 연결된 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The object with the namespace URI or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">네임스페이스 URI가 있는 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary vsli:raw="Removes the parameter from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" />에서 매개 변수를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the parameter to remove. &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; does not check to ensure the name passed is a valid local name; however, the name cannot be &lt;see langword=&quot;null&quot; /&gt;.">제거할 매개 변수의 이름입니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 전달된 이름이 올바른 로컬 이름인지 검사하지 않지만 이 이름은 <see langword="null" />이 될 수 없습니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the parameter to remove.">제거할 매개 변수의 네임스페이스 URI입니다.</param>
      <returns vsli:raw="The parameter object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">매개 변수 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary vsli:raw="Occurs when a message is specified in the style sheet by the &lt;c&gt;xsl:message&lt;/c&gt; element.">스타일시트에 <c>xsl:message</c> 요소를 사용하여 지정된 메시지가 있는 경우 발생합니다.</summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary vsli:raw="The exception that is thrown by the Load method when an error is found in the XSLT style sheet.">XSLT 스타일시트에서 오류가 발생했을 때 Load 메서드에서 throw하는 예외입니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class.">
        <see cref="T:System.Xml.Xsl.XsltCompileException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltCompileException&quot; /&gt; class.">
        <see langword="XsltCompileException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="inner" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that threw the &lt;see langword=&quot;XsltCompileException&quot; /&gt;.">
        <see langword="XsltCompileException" />을 throw한 <see cref="T:System.Exception" />입니다.</param>
      <param name="sourceUri" vsli:raw="The location path of the style sheet.">스타일시트의 위치 경로입니다.</param>
      <param name="lineNumber" vsli:raw="The line number indicating where the error occurred in the style sheet.">스타일시트에서 오류가 발생한 위치를 나타내는 줄 번호입니다.</param>
      <param name="linePosition" vsli:raw="The line position indicating where the error occurred in the style sheet.">스타일시트에서 오류가 발생한 위치를 나타내는 줄 위치입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltCompileException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 및 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체의 정보를 사용하여 <see langword="XsltCompileException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XsltCompileException&quot; /&gt;.">
        <see langword="SerializationInfo" />의 모든 속성이 포함된 <see langword="XsltCompileException" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object containing the context information.">컨텍스트 정보가 포함된 <see langword="StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Xml.Xsl.XsltCompileException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the error.">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Xml.Xsl.XsltCompileException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the error.">오류를 설명하는 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or &lt;see langword=&quot;null&quot; /&gt; if no inner exception is specified.">현재 예외의 원인이 되는 예외이거나, 내부 예외를 지정하지 않았으면 <see langword="null" />입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XsltCompileException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">모든 <see langword="XsltCompileException" /> 속성을 지정한 <see cref="T:System.Runtime.Serialization.SerializationInfo" />의 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스로 스트리밍합니다.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">
        <see langword="SerializationInfo" /> 개체</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">
        <see langword="StreamingContext" /> 개체</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary vsli:raw="Encapsulates the current execution context of the Extensible Stylesheet Language for Transformations (XSLT) processor allowing XML Path Language (XPath) to resolve functions, parameters, and namespaces within XPath expressions.">XPath(XML Path Language)가 XPath 식 내의 함수, 매개 변수 및 네임스페이스를 확인할 수 있도록 하는 XSLT(Extensible Stylesheet Language for Transformations) 프로세서의 현재 실행 컨텍스트를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; class.">
        <see cref="T:System.Xml.Xsl.XsltContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt;.">지정된 <see cref="T:System.Xml.Xsl.XsltContext" />를 사용하여 <see cref="T:System.Xml.NameTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; to use.">사용할 <see cref="T:System.Xml.NameTable" />입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, compares the base Uniform Resource Identifiers (URIs) of two documents based upon the order the documents were loaded by the XSLT processor (that is, the &lt;see cref=&quot;T:System.Xml.Xsl.XslTransform&quot; /&gt; class).">파생 클래스에서 재정의될 때 <see cref="T:System.Xml.Xsl.XslTransform" /> 클래스인 XSLT 프로세서에 의해 문서가 로드된 순서를 기반으로 하여 두 문서의 기본 URI(Uniform Resource Identifier)를 비교합니다.</summary>
      <param name="baseUri" vsli:raw="The base URI of the first document to compare.">비교할 첫째 문서의 기본 URI입니다.</param>
      <param name="nextbaseUri" vsli:raw="The base URI of the second document to compare.">비교할 둘째 문서의 기본 URI입니다.</param>
      <returns vsli:raw="An integer value describing the relative order of the two base URIs: -1 if &lt;paramref name=&quot;baseUri&quot; /&gt; occurs before &lt;paramref name=&quot;nextbaseUri&quot; /&gt;; 0 if the two base URIs are identical; and 1 if &lt;paramref name=&quot;baseUri&quot; /&gt; occurs after &lt;paramref name=&quot;nextbaseUri&quot; /&gt;.">두 기본 URI의 상대 순서를 나타내는 정수 값입니다. <paramref name="baseUri" />가 <paramref name="nextbaseUri" /> 전에 발생하면 -1, 두 기본 URI가 동일하게 발생하면 0, <paramref name="baseUri" />가 <paramref name="nextbaseUri" /> 후에 발생하면 1입니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, evaluates whether to preserve white space nodes or strip them for the given context.">파생 클래스에서 재정의되면 지정된 컨텍스트에서 공백 노드를 유지할지 또는 제거할지를 확인합니다.</summary>
      <param name="node" vsli:raw="The white space node that is to be preserved or stripped in the current context.">현재 컨텍스트에서 유지해야 하거나 제거해야 할 공백 노드입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the white space is to be preserved; &lt;see langword=&quot;false&quot; /&gt; if the white space is to be stripped.">공백을 유지해야 하면 <see langword="true" />이고, 공백을 제거해야 하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary vsli:raw="When overridden in a derived class, resolves a function reference and returns an &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; representing the function. The &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; is used at execution time to get the return value of the function.">파생 클래스에서 재정의되면 함수 참조를 확인한 다음 이 함수를 나타내는 <see cref="T:System.Xml.Xsl.IXsltContextFunction" />을 반환합니다. <see cref="T:System.Xml.Xsl.IXsltContextFunction" />은 실행 시 함수의 반환 값을 가져오는 데 사용됩니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the function as it appears in the XPath expression.">XPath 식에 표시되는 함수의 접두사입니다.</param>
      <param name="name" vsli:raw="The name of the function.">함수의 이름.</param>
      <param name="ArgTypes" vsli:raw="An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods).">확인하고 있는 함수에 대한 인수 형식의 배열입니다. 이 배열을 사용하면 오버로드된 메서드 같이 동일한 이름의 메서드를 구분할 수 있습니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; representing the function.">함수를 나타내는 <see cref="T:System.Xml.Xsl.IXsltContextFunction" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves a variable reference and returns an &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextVariable&quot; /&gt; representing the variable.">파생 클래스에서 재정의되면 변수 참조를 확인한 다음 이 변수를 나타내는 <see cref="T:System.Xml.Xsl.IXsltContextVariable" />을 반환합니다.</summary>
      <param name="prefix" vsli:raw="The prefix of the variable as it appears in the XPath expression.">XPath 식에 표시되는 변수의 접두사입니다.</param>
      <param name="name" vsli:raw="The name of the variable.">변수 이름입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextVariable&quot; /&gt; representing the variable at runtime.">런타임에 변수를 나타내는 <see cref="T:System.Xml.Xsl.IXsltContextVariable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether to include white space nodes in the output.">파생 클래스에 재정의될 때 공백 노드를 출력에 포함할지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check white space nodes in the source document for inclusion in the output; &lt;see langword=&quot;false&quot; /&gt; to not evaluate white space nodes. The default is &lt;see langword=&quot;true&quot; /&gt;.">소스 문서의 공백 노드가 출력에 포함되는지 확인하면 <see langword="true" />이고, 공백 노드를 확인하지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary vsli:raw="The exception that is thrown when an error occurs while processing an XSLT transformation.">XSLT 변환을 처리하는 동안 오류가 발생하면 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; class.">
        <see cref="T:System.Xml.Xsl.XsltException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 및 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체의 정보를 사용하여 <see langword="XsltException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XsltException&quot; /&gt;.">
        <see langword="SerializationInfo" />의 모든 속성이 포함된 <see langword="XsltException" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">
        <see langword="StreamingContext" /> 개체</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Xml.Xsl.XsltException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the error.">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltException&quot; /&gt; class.">
        <see langword="XsltException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The description of the error condition.">오류 조건에 대한 설명입니다.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; which threw the &lt;see langword=&quot;XsltException&quot; /&gt;, if any. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="XsltException" />을 throw한 <see cref="T:System.Exception" />입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XsltException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">모든 <see langword="XsltException" /> 속성을 지정한 <see cref="T:System.Runtime.Serialization.SerializationInfo" />의 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스로 스트리밍합니다.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">
        <see langword="SerializationInfo" /> 개체</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">
        <see langword="StreamingContext" /> 개체</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred in the style sheet.">스타일시트에서 오류가 발생한 위치를 나타내는 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number indicating where the error occurred in the style sheet.">스타일시트에서 오류가 발생한 위치를 나타내는 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred in the style sheet.">스타일시트에서 오류가 발생한 위치를 나타내는 줄 위치를 가져옵니다.</summary>
      <returns vsli:raw="The line position indicating where the error occurred in the style sheet.">스타일시트에서 오류가 발생한 위치를 나타내는 줄 위치입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary vsli:raw="Gets the formatted error message describing the current exception.">현재 예외를 설명하는 서식이 지정된 오류 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The formatted error message describing the current exception.">현재 예외를 설명하는 서식이 지정된 오류 메시지입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary vsli:raw="Gets the location path of the style sheet.">스타일시트의 위치 경로를 가져옵니다.</summary>
      <returns vsli:raw="The location path of the style sheet.">스타일시트의 위치 경로입니다.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered&quot; /&gt; event.">
        <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltMessageEncounteredEventArgs&quot; /&gt; class.">
        <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary vsli:raw="Gets the contents of the &lt;c&gt;xsl:message&lt;/c&gt; element.">
        <c>xsl:message</c> 요소의 내용을 가져옵니다.</summary>
      <returns vsli:raw="The contents of the &lt;c&gt;xsl:message&lt;/c&gt; element.">콘텐츠를 <c>xsl: message</c> 요소입니다.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered&quot; /&gt; event.">
        <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltMessageEncounteredEventArgs&quot; /&gt; containing the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary vsli:raw="Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.">XSLT(Extensible Stylesheet Language for Transformations) 스타일시트를 사용하여 XML 데이터를 변환합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslTransform&quot; /&gt; class.">
        <see cref="T:System.Xml.Xsl.XslTransform" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary vsli:raw="Loads the XSLT style sheet specified by a URL.">URL로 지정된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="url" vsli:raw="The URL that specifies the XSLT style sheet to load.">로드할 XSLT 스타일시트를 지정하는 URL입니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">로드된 리소스가 올바른 스타일시트가 아닙니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded script, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet specified by a URL.">URL로 지정된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="url" vsli:raw="The URL that specifies the XSLT style sheet to load.">로드할 XSLT 스타일시트를 지정하는 URL입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use to load the style sheet and any style sheet(s) referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements.  &#xA;  &#xA; If this is &lt;see langword=&quot;null&quot; /&gt;, a default &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; with no user credentials is used to open the style sheet. The default &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; is not used to resolve any external resources in the style sheet, so &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)&quot; /&gt; method completes.">스타일시트와 <c>xsl:import</c> 및 <c>xsl:include</c> 요소에 참조된 모든 스타일시트를 로드하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />입니다.  
이 값이 <see langword="null" />이면 사용자 자격 증명 없는 기본 <see cref="T:System.Xml.XmlUrlResolver" />를 사용하여 스타일시트를 엽니다. 스타일시트의 외부 리소스를 확인하는 데 기본 <see cref="T:System.Xml.XmlUrlResolver" />가 사용되지 않으므로 <c>xsl:import</c> 및 <c>xsl:include</c> 요소는 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">로드된 리소스가 올바른 스타일시트가 아닙니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded script, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the XSLT style sheet.">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">현재 노드가 올바른 스타일시트에 맞지 않습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the XSLT style sheet.">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">현재 노드가 올바른 스타일시트에 맞지 않습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the XSLT style sheet.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">로드된 리소스가 올바른 스타일시트가 아닙니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the XSLT style sheet.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Load&quot; /&gt; method completes.">
        <c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">로드된 리소스가 올바른 스타일시트가 아닙니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the XSLT style sheet.">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">현재 노드가 올바른 스타일시트에 맞지 않습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the XSLT style sheet.">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Load&quot; /&gt; method completes.">
        <c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">현재 노드가 올바른 스타일시트에 맞지 않습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary vsli:raw="Transforms the XML data in the input file and outputs the result to an output file.">입력 파일의 XML 데이터를 변환하고 그 결과를 출력 파일로 출력합니다.</summary>
      <param name="inputfile" vsli:raw="The URL of the source document to be transformed.">변환할 소스 문서의 URL입니다.</param>
      <param name="outputfile" vsli:raw="The URL of the output file.">출력 파일의 URL입니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the input file and outputs the result to an output file.">입력 파일의 XML 데이터를 변환하고 그 결과를 출력 파일로 출력합니다.</summary>
      <param name="inputfile" vsli:raw="The URL of the source document to be transformed.">변환할 소스 문서의 URL입니다.</param>
      <param name="outputfile" vsli:raw="The URL of the output file.">출력 파일의 URL입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />가 캐시되지 않습니다.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">출력할 대상 스트림입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">출력할 대상 스트림입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다. .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">출력할 대상 스트림입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">출력할 대상 스트림입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified args and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 인수를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified args and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">지정된 인수를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다. 이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.  
<see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">XSLT 변환을 처리하는 동안 오류가 발생한 경우  
참고: 이전 버전에서 업그레이드되면서 변경된 동작입니다. Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve external resources when the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method is called.">
        <see cref="T:System.Xml.XmlResolver" /> 메서드를 호출할 때 외부 리소스를 확인하기 위해 사용하는 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />를 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use during transformation. If set to &lt;see langword=&quot;null&quot; /&gt;, the XSLT &lt;c&gt;document()&lt;/c&gt; function is not resolved.">변환을 수행하는 동안 사용할 <see cref="T:System.Xml.XmlResolver" />입니다. 경우 설정 <see langword="null" />, XSLT <c>document ()</c> 함수가 확인 되지 않습니다.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary vsli:raw="Specifies the XSLT features to support during execution of the XSLT style sheet.">XSLT 스타일시트를 실행하는 동안 지원할 XSLT 기능을 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; class with default settings.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> 클래스의 새 인스턴스를 기본 설정으로 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; class with the specified settings.">지정된 설정을 사용하여 <see cref="T:System.Xml.Xsl.XsltSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="enableDocumentFunction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable support for the XSLT &lt;c&gt;document()&lt;/c&gt; function; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XSLT <c>document()</c> 함수를 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="enableScript" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable support for embedded scripts blocks; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">포함된 스크립트 블록을 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with default settings. Support for the XSLT &lt;c&gt;document()&lt;/c&gt; function and embedded script blocks is disabled.">기본 설정을 사용하는 <see cref="T:System.Xml.Xsl.XsltSettings" /> 개체를 가져옵니다. XSLT <c>document()</c> 함수와 포함된 스크립트 블록은 지원되지 않습니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableScript&quot; /&gt; properties set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> 및 <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> 속성이 <see langword="false" />로 설정된 <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary vsli:raw="Gets or sets a value indicating whether to enable support for the XSLT &lt;c&gt;document()&lt;/c&gt; function.">XSLT <c>document()</c> 함수를 지원할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support the XSLT &lt;c&gt;document()&lt;/c&gt; function; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> XSLT를 지 원하는 데 <c>document ()</c> 함수를 고, 그렇지 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary vsli:raw="Gets or sets a value indicating whether to enable support for embedded script blocks.">포함된 스크립트 블록을 지원할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support script blocks in XSLT style sheets; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">XSLT 스타일시트에 있는 스크립트 블록을 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object that enables support for the XSLT &lt;c&gt;document()&lt;/c&gt; function and embedded script blocks.">XSLT <c>document()</c> 함수 및 포함된 스크립트 블록을 지원하는 <see cref="T:System.Xml.Xsl.XsltSettings" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableScript&quot; /&gt; properties set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> 및 <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> 개체입니다.</returns>
    </member>
  </members>
</doc>