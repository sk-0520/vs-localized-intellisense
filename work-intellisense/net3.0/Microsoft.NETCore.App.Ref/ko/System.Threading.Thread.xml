<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Thread</name>
  </assembly>
  <members>
    <member name="T:System.LocalDataStoreSlot">
      <summary vsli:raw="Encapsulates a memory slot to store local data. This class cannot be inherited.">메모리 슬롯을 캡슐화하여 로컬 데이터를 저장합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.LocalDataStoreSlot.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; object.">가비지 컬렉션기에서 <see cref="T:System.LocalDataStoreSlot" /> 개체를 회수할 때 리소스가 해제되고 다른 정리 작업이 수행되도록 합니다.</summary>
    </member>
    <member name="T:System.Threading.ApartmentState">
      <summary vsli:raw="Specifies the apartment state of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">
        <see cref="T:System.Threading.Thread" />의 아파트 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.MTA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a multithreaded apartment.">
        <see cref="T:System.Threading.Thread" />는 다중 스레드 아파트를 만들고 해당 아파트에 들어갑니다.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.STA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a single-threaded apartment.">
        <see cref="T:System.Threading.Thread" />는 단일 스레드 아파트를 만들고 해당 아파트에 들어갑니다.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.Unknown">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Threading.Thread.ApartmentState&quot; /&gt; property has not been set.">
        <see cref="P:System.Threading.Thread.ApartmentState" /> 속성이 설정되어 있지 않은 경우</summary>
    </member>
    <member name="T:System.Threading.CompressedStack">
      <summary vsli:raw="Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.">현재 스레드에서 압축된 스택을 설정 및 캡처하기 위한 메서드를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Threading.CompressedStack.Capture">
      <summary vsli:raw="Captures the compressed stack from the current thread.">현재 스레드에서 압축된 스택을 캡처합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object.">
        <see cref="T:System.Threading.CompressedStack" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.CreateCopy">
      <summary vsli:raw="Creates a copy of the current compressed stack.">현재 압축 스택의 복사본을 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object representing the current compressed stack.">현재 압축 스택을 나타내는 <see cref="T:System.Threading.CompressedStack" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetCompressedStack">
      <summary vsli:raw="Gets the compressed stack for the current thread.">현재 스레드의 압축된 스택을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; for the current thread.">현재 스레드의 <see cref="T:System.Threading.CompressedStack" />입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call chain does not have permission to access unmanaged code.  &#xA;  &#xA; -or-  &#xA;  &#xA; The request for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; failed.">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우  
또는 
<see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />에 대한 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the logical context information needed to recreate an instance of this execution context.">이 실행 컨텍스트의 인스턴스를 다시 만드는 데 필요한 논리 컨텍스트 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object to be populated with serialization information.">serialization 정보로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure representing the destination context of the serialization.">serialization의 대상 컨텍스트를 나타내는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <summary vsli:raw="Runs a method in the specified compressed stack on the current thread.">현재 스레드의 지정된 압축 스택에서 메서드를 실행합니다.</summary>
      <param name="compressedStack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to set.">설정할 <see cref="T:System.Threading.CompressedStack" />입니다.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ContextCallback&quot; /&gt; that represents the method to be run in the specified security context.">지정한 보안 컨텍스트에서 실행할 메서드를 나타내는 <see cref="T:System.Threading.ContextCallback" />입니다.</param>
      <param name="state" vsli:raw="The object to be passed to the callback method.">콜백 메서드로 전달할 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;compressedStack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="compressedStack" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Threading.ParameterizedThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">
        <see cref="T:System.Threading.Thread" />에서 실행되는 메서드를 나타냅니다.</summary>
      <param name="obj" vsli:raw="An object that contains data for the thread procedure.">스레드 프로시저의 데이터가 들어 있는 개체입니다.</param>
    </member>
    <member name="T:System.Threading.Thread">
      <summary vsli:raw="Creates and controls a thread, sets its priority, and gets its status.">스레드를 만들고 제어하며, 해당 속성을 설정하고, 상태를 가져옵니다.</summary>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started.">스레드가 시작될 때 개체가 스레드로 전달될 수 있도록 하는 대리자를 지정하여 <see cref="T:System.Threading.Thread" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="start" vsli:raw="A delegate that represents the methods to be invoked when this thread begins executing.">이 스레드의 실행이 시작될 때 호출될 메서드를 나타내는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.">스레드가 시작될 때 스레드로 개체가 전달될 수 있도록 하는 대리자를 지정하고 스레드의 최대 스택 크기를 지정하여 <see cref="T:System.Threading.Thread" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">이 스레드의 실행이 시작될 때 호출될 메서드를 나타내는 <see cref="T:System.Threading.ParameterizedThreadStart" /> 대리자입니다.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">스레드에서 사용할 최대 스택 크기(바이트)입니다. 실행 파일의 헤더에 지정된 기본 최대 스택 크기를 사용하려면 0을 지정합니다.  
중요: 부분적으로 신뢰할 수 있는 코드의 경우 <paramref name="maxStackSize" />가 기본 스택 크기보다 크면 무시됩니다. 예외가 throw되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class.">
        <see cref="T:System.Threading.Thread" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">이 스레드의 실행이 시작될 때 호출될 메서드를 나타내는 <see cref="T:System.Threading.ThreadStart" /> 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;start&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying the maximum stack size for the thread.">스레드의 최대 스택 크기를 지정하여 <see cref="T:System.Threading.Thread" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">이 스레드의 실행이 시작될 때 호출될 메서드를 나타내는 <see cref="T:System.Threading.ThreadStart" /> 대리자입니다.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">스레드에서 사용할 최대 스택 크기(바이트)입니다. 실행 파일의 헤더에 지정된 기본 최대 스택 크기를 사용하려면 0을 지정합니다.  
중요: 부분적으로 신뢰할 수 있는 코드의 경우 <paramref name="maxStackSize" />가 기본 스택 크기보다 크면 무시됩니다. 예외가 throw되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.">이 메서드가 호출되는 스레드에서 <see cref="T:System.Threading.ThreadAbortException" />을 발생시켜 스레드 종료 프로세스를 시작합니다. 이 메서드를 호출하면 대개 스레드가 종료됩니다.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">중단 중인 스레드가 현재 일시 중단됩니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort(System.Object)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination. Calling this method usually terminates the thread.">이 메서드가 호출되는 스레드에서 <see cref="T:System.Threading.ThreadAbortException" />을 발생시켜 스레드 종료 프로세스를 시작하고, 스레드 종료에 대한 예외 정보를 제공합니다. 이 메서드를 호출하면 대개 스레드가 종료됩니다.</summary>
      <param name="stateInfo" vsli:raw="An object that contains application-specific information, such as state, which can be used by the thread being aborted.">상태와 같이 중단 중인 스레드에서 사용할 수 있는 애플리케이션 관련 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">중단 중인 스레드가 현재 일시 중단됩니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.AllocateDataSlot">
      <summary vsli:raw="Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">모든 스레드에 명명되지 않은 데이터 슬롯을 할당합니다. 성능을 향상시키려면 <see cref="T:System.ThreadStaticAttribute" /> 특성으로 표시된 필드를 대신 사용합니다.</summary>
      <returns vsli:raw="The allocated named data slot on all threads.">모든 스레드에 할당된 명명된 데이터 슬롯입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <summary vsli:raw="Allocates a named data slot on all threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">모든 스레드에 명명된 데이터 슬롯을 할당합니다. 성능을 향상시키려면 <see cref="T:System.ThreadStaticAttribute" /> 특성으로 표시된 필드를 대신 사용합니다.</summary>
      <param name="name" vsli:raw="The name of the data slot to be allocated.">할당할 데이터 슬롯의 이름입니다.</param>
      <returns vsli:raw="The allocated named data slot on all threads.">모든 스레드에 할당된 명명된 데이터 슬롯입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A named data slot with the specified name already exists.">지정한 이름의 명명된 데이터 슬롯이 이미 있습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.ApartmentState">
      <summary vsli:raw="Gets or sets the apartment state of this thread.">이 스레드의 아파트 상태를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values. The initial value is &lt;see langword=&quot;Unknown&quot; /&gt;.">
        <see cref="T:System.Threading.ApartmentState" /> 값 중 하나입니다. 초기 값은 <see langword="Unknown" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (&lt;see langword=&quot;STA&quot; /&gt;) or multithreaded apartment (&lt;see langword=&quot;MTA&quot; /&gt;)).">이 속성을 올바르지 않은 아파트 상태[단일 스레드 아파트(<see langword="STA" />) 또는 다중 스레드 아파트(<see langword="MTA" />) 이외의 상태]로 설정하려고 했습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.BeginCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.">스레드 중단 또는 처리되지 않은 예외로 인해 애플리케이션 도메인의 다른 작업이 손상될 수 있는 코드 영역이 실행될 수 있다는 사실을 호스트에 알립니다.</summary>
    </member>
    <member name="M:System.Threading.Thread.BeginThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.">관리되는 코드가 현재 실제 운영 체제 스레드의 ID에 종속되는 명령을 실행하려고 한다는 사실을 호스트에 알립니다.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentCulture">
      <summary vsli:raw="Gets or sets the culture for the current thread.">현재 스레드에 대한 문화권을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that represents the culture for the current thread.">현재 스레드에 대한 문화권을 나타내는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">속성이 <see langword="null" />로 설정됩니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">.NET Core만 해당: 다른 스레드의 스레드 문화권을 읽거나 쓰는 기능은 지원되지 않습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentPrincipal">
      <summary vsli:raw="Gets or sets the thread's current principal (for role-based security).">스레드의 현재 보안 주체(역할 기반 보안용)를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; value representing the security context.">보안 컨텍스트를 나타내는 <see cref="T:System.Security.Principal.IPrincipal" /> 값입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the permission required to set the principal.">호출자에게 보안 주체를 설정하는 데 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentThread">
      <summary vsli:raw="Gets the currently running thread.">현재 실행 중인 스레드를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; that is the representation of the currently running thread.">현재 실행 중인 스레드를 나타내는 <see cref="T:System.Threading.Thread" />입니다.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentUICulture">
      <summary vsli:raw="Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.">리소스 관리자가 런타임에 문화권 관련 리소스를 찾기 위해 사용하는 현재 문화권을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that represents the current culture.">현재 문화를 나타내는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">속성이 <see langword="null" />로 설정됩니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to a culture name that cannot be used to locate a resource file. Resource filenames must include only letters, numbers, hyphens or underscores.">속성이 리소스 파일을 찾는 데 사용할 수 없는 문화권 이름으로 설정되어 있습니다. 리소스 파일 이름에는 문자, 숫자, 하이픈 또는 밑줄만 포함해야 합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">.NET Core만 해당: 다른 스레드의 스레드 문화권을 읽거나 쓰는 기능은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <summary vsli:raw="Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.">현재 스레드에 대해 RCW(런타임 호출 가능 래퍼)의 자동 정리를 해제합니다.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.">스레드 중단 또는 처리되지 않은 예외가 현재 작업에만 영향을 주는 코드 영역이 실행될 것임을 호스트에 알립니다.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.">관리되는 코드가 현재 실제 운영 체제 스레드의 ID에 종속되는 명령의 실행을 완료했음을 호스트에 알립니다.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Threading.Thread.ExecutionContext">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that contains information about the various contexts of the current thread.">현재 스레드의 다양한 컨텍스트 정보를 포함하는 <see cref="T:System.Threading.ExecutionContext" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that consolidates context information for the current thread.">현재 스레드의 컨텍스트 정보를 통합하는 <see cref="T:System.Threading.ExecutionContext" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; object.">가비지 컬렉션기에서 <see cref="T:System.Threading.Thread" /> 개체를 회수할 때 리소스가 해제되고 다른 정리 작업이 수행되도록 합니다.</summary>
    </member>
    <member name="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <summary vsli:raw="Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">프로세스의 모든 스레드에 대해 이름과 슬롯 간의 연관을 없앱니다. 성능을 향상시키려면 <see cref="T:System.ThreadStaticAttribute" /> 특성으로 표시된 필드를 대신 사용합니다.</summary>
      <param name="name" vsli:raw="The name of the data slot to be freed.">해제할 데이터 슬롯의 이름입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.GetApartmentState">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; value indicating the apartment state.">아파트 상태를 나타내는 <see cref="T:System.Threading.ApartmentState" /> 값을 반환합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values indicating the apartment state of the managed thread. The default is &lt;see cref=&quot;F:System.Threading.ApartmentState.Unknown&quot; /&gt;.">관리되는 스레드의 아파트 상태를 나타내는 <see cref="T:System.Threading.ApartmentState" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Threading.ApartmentState.Unknown" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCompressedStack">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object that can be used to capture the stack for the current thread.">현재 스레드 스택을 캡처하는 데 사용할 수 있는 <see cref="T:System.Threading.CompressedStack" /> 개체를 반환합니다.</summary>
      <returns>없음</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">모든 경우</exception>
    </member>
    <member name="M:System.Threading.Thread.GetCurrentProcessorId" />
    <member name="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <summary vsli:raw="Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">현재 스레드의 도메인 내에서 현재 스레드의 지정된 슬롯에서 값을 검색합니다. 성능을 향상시키려면 <see cref="T:System.ThreadStaticAttribute" /> 특성으로 표시된 필드를 대신 사용합니다.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; from which to get the value.">값을 검색할 원본 <see cref="T:System.LocalDataStoreSlot" />입니다.</param>
      <returns vsli:raw="The retrieved value.">검색된 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomain">
      <summary vsli:raw="Returns the current domain in which the current thread is running.">현재 스레드가 실행 중인 현재 도메인을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; representing the current application domain of the running thread.">실행 중인 스레드의 현재 애플리케이션 도메인을 나타내는 <see cref="T:System.AppDomain" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomainID">
      <summary vsli:raw="Returns a unique application domain identifier.">고유한 애플리케이션 도메인 식별자를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer uniquely identifying the application domain.">애플리케이션 도메인을 고유하게 식별하는 부호 있는 32비트 정수입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current thread.">현재 스레드의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="An integer hash code value.">정수 해시 코드 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <summary vsli:raw="Looks up a named data slot. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">명명된 데이터 슬롯을 찾습니다. 성능을 향상시키려면 <see cref="T:System.ThreadStaticAttribute" /> 특성으로 표시된 필드를 대신 사용합니다.</summary>
      <param name="name" vsli:raw="The name of the local data slot.">로컬 데이터 슬롯의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; allocated for this thread.">이 스레드에 대해 할당된 <see cref="T:System.LocalDataStoreSlot" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.Interrupt">
      <summary vsli:raw="Interrupts a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.WaitSleepJoin&quot; /&gt; thread state.">
        <see cref="F:System.Threading.ThreadState.WaitSleepJoin" /> 스레드 상태에 있는 스레드를 중단합니다.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">호출자에게 해당 <see cref="T:System.Security.Permissions.SecurityPermission" />이 없습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.IsAlive">
      <summary vsli:raw="Gets a value indicating the execution status of the current thread.">현재 스레드의 실행 상태를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread has been started and has not terminated normally or aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 스레드가 시작되었으며 정상적으로 종료 또는 중단되지 않았으면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsBackground">
      <summary vsli:raw="Gets or sets a value indicating whether or not a thread is a background thread.">스레드가 배경 스레드인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread is or is to become a background thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 스레드가 백그라운드 스레드이거나 백그라운드 스레드가 될 예정이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread is dead.">스레드가 중지되었습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.IsThreadPoolThread">
      <summary vsli:raw="Gets a value indicating whether or not a thread belongs to the managed thread pool.">스레드가 관리되는 스레드 풀에 속하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread belongs to the managed thread pool; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 스레드가 관리되는 스레드 풀에 속하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.Join">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and &lt;see langword=&quot;SendMessage&quot; /&gt; pumping.">표준 COM 및 <see langword="SendMessage" /> 펌프를 계속 수행하면서 이 인스턴스가 나타내는 스레드가 종료될 때까지 호출 스레드를 차단합니다.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">호출자가 <see cref="F:System.Threading.ThreadState.Unstarted" /> 상태의 스레드에 연결하려고 했습니다.</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread is interrupted while waiting.">스레드가 대기하는 동안 중단되었습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.Int32)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">표준 COM 및 SendMessage 펌프를 계속 수행하면서 이 인스턴스가 나타내는 스레드가 종료되거나 지정된 시간이 경과할 때까지 호출 스레드를 차단합니다.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the thread to terminate.">스레드가 종료되기를 기다릴 밀리초 수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread has terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; parameter has elapsed.">스레드가 종료되면 <see langword="true" />이고, <see langword="false" /> 매개 변수에서 지정한 기간이 경과된 후에도 스레드가 종료되지 않으면 <paramref name="millisecondsTimeout" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds.">
        <paramref name="millisecondsTimeout" /> 값이 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />(밀리초)와 같지 않습니다.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started.">스레드가 시작되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is less than -1 (Timeout.Infinite).">
        <paramref name="millisecondsTimeout" />이 -1보다 작습니다(Timeout.Infinite).</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread was interrupted while waiting.">스레드가 대기하는 동안 중단되었습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.TimeSpan)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">표준 COM 및 SendMessage 펌프를 계속 수행하면서 이 인스턴스가 나타내는 스레드가 종료되거나 지정된 시간이 경과할 때까지 호출 스레드를 차단합니다.</summary>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; set to the amount of time to wait for the thread to terminate.">스레드가 종료되기를 기다리는 시간으로 설정된 <see cref="T:System.TimeSpan" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;timeout&quot; /&gt; parameter has elapsed.">스레드가 종료되면 <see langword="true" />이고, <see langword="false" /> 매개 변수에서 지정한 기간이 경과된 후에도 스레드가 종료되지 않으면 <paramref name="timeout" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="timeout" /> 값이 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />(밀리초)와 같지 않거나 <see cref="F:System.Int32.MaxValue" />(밀리초)보다 큽니다.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">호출자가 <see cref="F:System.Threading.ThreadState.Unstarted" /> 상태의 스레드에 연결하려고 했습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.ManagedThreadId">
      <summary vsli:raw="Gets a unique identifier for the current managed thread.">현재 관리되는 스레드의 고유 식별자를 가져옵니다.</summary>
      <returns vsli:raw="An integer that represents a unique identifier for this managed thread.">이 관리되는 스레드의 고유 식별자를 나타내는 정수입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.MemoryBarrier">
      <summary vsli:raw="Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt; execute after memory accesses that follow the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt;.">다음과 같이 메모리 액세스를 동기화합니다. 현재 스레드를 실행 중인 프로세서는 <see cref="M:System.Threading.Thread.MemoryBarrier" />에 대한 호출 이전의 메모리 액세스가 <see cref="M:System.Threading.Thread.MemoryBarrier" />에 대한 호출 이후의 메모리 액세스 뒤에 실행되는 방식으로 명령을 다시 정렬할 수 없습니다.</summary>
    </member>
    <member name="P:System.Threading.Thread.Name">
      <summary vsli:raw="Gets or sets the name of the thread.">스레드의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A string containing the name of the thread, or &lt;see langword=&quot;null&quot; /&gt; if no name was set.">스레드의 이름을 포함하는 문자열이며 설정된 이름이 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A set operation was requested, but the &lt;see langword=&quot;Name&quot; /&gt; property has already been set.">집합 작업이 요청되었으나 <see langword="Name" /> 속성이 이미 설정되어 있습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.Priority">
      <summary vsli:raw="Gets or sets a value indicating the scheduling priority of a thread.">스레드의 예약 우선 순위를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; values. The default value is &lt;see cref=&quot;F:System.Threading.ThreadPriority.Normal&quot; /&gt;.">
        <see cref="T:System.Threading.ThreadPriority" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Threading.ThreadPriority.Normal" />입니다.</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has reached a final state, such as &lt;see cref=&quot;F:System.Threading.ThreadState.Aborted&quot; /&gt;.">스레드가 <see cref="F:System.Threading.ThreadState.Aborted" /> 같은 최종 상태에 도달했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for a set operation is not a valid &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; value.">Set 작업에 대해 지정된 값이 올바른 <see cref="T:System.Threading.ThreadPriority" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.ResetAbort">
      <summary vsli:raw="Cancels an &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; requested for the current thread.">현재 스레드에 대해 요청된 <see cref="M:System.Threading.Thread.Abort(System.Object)" />를 취소합니다.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="&lt;see langword=&quot;Abort&quot; /&gt; was not invoked on the current thread.">
        <see langword="Abort" />가 현재 스레드에서 호출되지 않았습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required security permission for the current thread.">호출자에게 현재 스레드에 대한 필수 보안 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.Resume">
      <summary vsli:raw="Resumes a thread that has been suspended.">일시 중단된 스레드를 다시 시작합니다.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started, is dead, or is not in the suspended state.">스레드가 시작되지 않았거나, 중지되었거나, 일시 중단된 상태가 아닙니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">호출자에게 해당 <see cref="T:System.Security.Permissions.SecurityPermission" />이 없습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">스레드를 시작하기 전에 스레드의 아파트 상태를 설정합니다.</summary>
      <param name="state" vsli:raw="The new apartment state.">새 아파트 상태입니다.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET Core만 해당: 이 멤버는 macOS 및 Linux 플랫폼에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" />가 잘못된 아파트 상태가 아닙니다.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">스레드가 이미 시작되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The apartment state has already been initialized.">아파트 상태가 이미 초기화되었습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <summary vsli:raw="Applies a captured &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to the current thread.">캡처한 <see cref="T:System.Threading.CompressedStack" />을 현재 스레드에 적용합니다.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object to be applied to the current thread.">현재 스레드에 적용할 <see cref="T:System.Threading.CompressedStack" /> 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">모든 경우</exception>
    </member>
    <member name="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <summary vsli:raw="Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">해당 스레드의 현재 도메인에 대해 현재 실행 중인 스레드의 지정된 슬롯에서 데이터를 설정합니다. 성능을 향상시키려면 <see cref="T:System.ThreadStaticAttribute" /> 특성으로 표시된 필드를 대신 사용합니다.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; in which to set the value.">값을 설정할 <see cref="T:System.LocalDataStoreSlot" />입니다.</param>
      <param name="data" vsli:raw="The value to be set.">설정하려는 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.Int32)">
      <summary vsli:raw="Suspends the current thread for the specified number of milliseconds.">지정된 시간(밀리초) 동안 현재 스레드를 일시 중단합니다.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds for which the thread is suspended. If the value of the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">스레드가 일시 중단되는 밀리초 수입니다. <paramref name="millisecondsTimeout" /> 인수의 값이 0이면 스레드는 실행할 준비가 된 우선 순위가 같은 스레드에 나머지 시간 간격을 내어 줍니다. 실행할 준비가 된 우선 순위가 같은 스레드가 없으면 현재 스레드의 실행이 일시 중단되지 않습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The time-out value is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">시간 제한 값이 음수이며 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <summary vsli:raw="Suspends the current thread for the specified amount of time.">지정된 시간 동안 현재 스레드를 일시 중단합니다.</summary>
      <param name="timeout" vsli:raw="The amount of time for which the thread is suspended. If the value of the &lt;paramref name=&quot;timeout&quot; /&gt; argument is &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt;, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">스레드가 일시 중단되는 시간입니다. <paramref name="millisecondsTimeout" /> 인수의 값이 <see cref="F:System.TimeSpan.Zero" />이면 스레드는 실행할 준비가 된 우선 순위가 같은 스레드에 나머지 시간 간격을 내어 줍니다. 실행할 준비가 된 우선 순위가 같은 스레드가 없으면 현재 스레드의 실행이 일시 중단되지 않습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="timeout" /> 값이 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />(밀리초)와 같지 않거나 <see cref="F:System.Int32.MaxValue" />(밀리초)보다 큽니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.SpinWait(System.Int32)">
      <summary vsli:raw="Causes a thread to wait the number of times defined by the &lt;paramref name=&quot;iterations&quot; /&gt; parameter.">스레드가 <paramref name="iterations" /> 매개 변수에서 정의하는 시간 동안 대기하도록 합니다.</summary>
      <param name="iterations" vsli:raw="A 32-bit signed integer that defines how long a thread is to wait.">스레드 대기 시간을 정의하는 부호 있는 32비트 정수입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.Start">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;.">운영 체제에서 현재 인스턴스의 상태를 <see cref="F:System.Threading.ThreadState.Running" />으로 변경하도록 합니다.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">스레드가 이미 시작되었습니다.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">이 스레드를 시작하기 위한 메모리가 부족합니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.Start(System.Object)">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;, and optionally supplies an object containing data to be used by the method the thread executes.">운영 체제에서 현재 인스턴스의 상태를 <see cref="F:System.Threading.ThreadState.Running" />으로 변경하도록 하며 경우에 따라 스레드가 실행하는 메서드에 사용될 데이터가 포함된 개체를 제공합니다.</summary>
      <param name="parameter" vsli:raw="An object that contains data to be used by the method the thread executes.">스레드가 실행하는 메서드에 사용될 데이터가 포함된 개체입니다.</param>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">스레드가 이미 시작되었습니다.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">이 스레드를 시작하기 위한 메모리가 부족합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This thread was created using a &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate instead of a &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate.">이 스레드는 <see cref="T:System.Threading.ParameterizedThreadStart" /> 대리자 대신 <see cref="T:System.Threading.ThreadStart" /> 대리자를 사용하여 만들었습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.Suspend">
      <summary vsli:raw="Either suspends the thread, or if the thread is already suspended, has no effect.">스레드를 일시 중단하며 스레드가 이미 일시 중단된 경우에는 아무런 효과도 나타나지 않습니다.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started or is dead.">스레드가 시작 또는 중단되지 않았습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">호출자에게 해당 <see cref="T:System.Security.Permissions.SecurityPermission" />이 없습니다.</exception>
    </member>
    <member name="P:System.Threading.Thread.ThreadState">
      <summary vsli:raw="Gets a value containing the states of the current thread.">현재 스레드의 상태를 포함하는 값을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadState&quot; /&gt; values indicating the state of the current thread. The initial value is &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt;.">현재 스레드의 상태를 나타내는 <see cref="T:System.Threading.ThreadState" /> 값 중 하나입니다. 초기 값은 <see cref="F:System.Threading.ThreadState.Unstarted" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">스레드를 시작하기 전에 스레드의 아파트 상태를 설정합니다.</summary>
      <param name="state" vsli:raw="The new apartment state.">새 아파트 상태입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the apartment state is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">아파트 상태가 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET Core만 해당: 이 멤버는 macOS 및 Linux 플랫폼에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" />가 잘못된 아파트 상태가 아닙니다.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread was started and has terminated, or the call is not being made from the thread's context while the thread is running.">스레드가 시작되어 종료되었거나 스레드가 실행 중인 동안 스레드의 컨덱스트에서 호출이 수행되지 않습니다.</exception>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">필드의 값을 읽습니다. 이 값은 프로세서 수나 프로세서 캐시의 상태와 관계없이 컴퓨터의 특정 프로세서에서 마지막으로 쓴 값입니다.</summary>
      <param name="address" vsli:raw="The field to be read.">읽을 필드입니다.</param>
      <returns vsli:raw="The value that was read.">프로세서에서 해당 필드에 쓴 마지막 값입니다.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">이 컴퓨터의 모든 프로세서에서 값을 볼 수 있도록 값을 필드에 즉시 씁니다.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">값이 쓰여질 필드입니다.</param>
      <param name="value" vsli:raw="The value to be written.">쓸 값입니다.</param>
    </member>
    <member name="M:System.Threading.Thread.Yield">
      <summary vsli:raw="Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.">호출 스레드가 현재 프로세서에서 실행할 준비가 되어 있는 다른 스레드에 실행 명령을 내리도록 합니다. 운영 체제에서 실행 명령을 내릴 스레드를 선택합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system switched execution to another thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">응용 프로그램에서 다른 스레드로 실행을 전환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Threading.ThreadAbortException">
      <summary vsli:raw="The exception that is thrown when a call is made to the &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method. This class cannot be inherited.">
        <see cref="M:System.Threading.Thread.Abort(System.Object)" /> 메서드를 호출할 때 throw되는 예외입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Threading.ThreadAbortException.ExceptionState">
      <summary vsli:raw="Gets an object that contains application-specific information related to the thread abort.">스레드 중단에 관련된 애플리케이션 관련 정보가 포함된 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object containing application-specific information.">애플리케이션 관련 정보가 포함된 개체입니다.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Application.ThreadException" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; class.">
        <see cref="T:System.Threading.ThreadExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">발생한 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">발생한 <see cref="T:System.Exception" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">발생한 <see cref="T:System.Exception" />입니다.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event of an &lt;see cref=&quot;T:System.Windows.Forms.Application&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Application" />의 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Threading.ThreadExceptionEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Threading.ThreadInterruptedException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is interrupted while it is in a waiting state.">
        <see cref="T:System.Threading.Thread" />가 대기 상태에서 중단되었을 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with default properties.">기본 속성을 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">현재 예외의 원인인 예외입니다. <paramref name="innerException" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Threading.ThreadPriority">
      <summary vsli:raw="Specifies the scheduling priority of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">
        <see cref="T:System.Threading.Thread" />의 예약 우선 순위를 지정합니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.AboveNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Highest&quot; /&gt; priority and before those with &lt;see langword=&quot;Normal&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" />는 우선 순위가 <see langword="Highest" />인 스레드 뒤와 우선 순위가 <see langword="Normal" />인 스레드 앞에 예약할 수 있습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.BelowNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Normal&quot; /&gt; priority and before those with &lt;see langword=&quot;Lowest&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" />는 우선 순위가 <see langword="Normal" />인 스레드 뒤와 우선 순위가 <see langword="Lowest" />인 스레드 앞에 예약할 수 있습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Highest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled before threads with any other priority.">
        <see cref="T:System.Threading.Thread" />는 다른 우선 순위가 할당된 스레드 앞에 예약할 수 있습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Lowest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with any other priority.">
        <see cref="T:System.Threading.Thread" />는 다른 우선 순위가 할당된 스레드 뒤에 예약할 수 있습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Normal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;AboveNormal&quot; /&gt; priority and before those with &lt;see langword=&quot;BelowNormal&quot; /&gt; priority. Threads have &lt;see langword=&quot;Normal&quot; /&gt; priority by default.">
        <see cref="T:System.Threading.Thread" />는 우선 순위가 <see langword="AboveNormal" />인 스레드 뒤와 우선 순위가 <see langword="BelowNormal" />인 스레드 앞에 예약할 수 있습니다. 스레드에는 기본적으로 <see langword="Normal" /> 우선 순위가 할당됩니다.</summary>
    </member>
    <member name="T:System.Threading.ThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">
        <see cref="T:System.Threading.Thread" />에서 실행되는 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Threading.ThreadStartException">
      <summary vsli:raw="The exception that is thrown when a failure occurs in a managed thread after the underlying operating system thread has been started, but before the thread is ready to execute user code.">내부 운영 체제 스레드가 사용자 코드를 실행할 수 없는 상태로 시작된 후 관리되는 스레드에서 실패가 발생한 경우에 throw되는 예외입니다.</summary>
    </member>
    <member name="T:System.Threading.ThreadState">
      <summary vsli:raw="Specifies the execution states of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">
        <see cref="T:System.Threading.Thread" />의 실행 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Aborted">
      <summary vsli:raw="The thread state includes &lt;see cref=&quot;F:System.Threading.ThreadState.AbortRequested&quot; /&gt; and the thread is now dead, but its state has not yet changed to &lt;see cref=&quot;F:System.Threading.ThreadState.Stopped&quot; /&gt;.">스레드 상태에 <see cref="F:System.Threading.ThreadState.AbortRequested" />가 포함되어 있고 스레드가 작동하지 않지만 상태가 아직 <see cref="F:System.Threading.ThreadState.Stopped" />로 변경되지 않았습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.AbortRequested">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method has been invoked on the thread, but the thread has not yet received the pending &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; that will attempt to terminate it.">스레드에 <see cref="M:System.Threading.Thread.Abort(System.Object)" /> 메서드가 호출되었지만 해당 스레드는 자신을 종결시키려는 보류된 <see cref="T:System.Threading.ThreadAbortException" />을 받지 못했습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Background">
      <summary vsli:raw="The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the &lt;see cref=&quot;P:System.Threading.Thread.IsBackground&quot; /&gt; property.">해당 스레드는 전경 스레드와 반대인 배경 스레드로 실행됩니다. 이 상태는 <see cref="P:System.Threading.Thread.IsBackground" /> 속성을 설정하여 제어합니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Running">
      <summary vsli:raw="The thread has been started and not yet stopped.">스레드가 시작되었고 아직 중지되지 않았습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Stopped">
      <summary vsli:raw="The thread has stopped.">스레드가 중지되었습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.StopRequested">
      <summary vsli:raw="The thread is being requested to stop. This is for internal use only.">스레드를 중지하도록 요청했습니다. 이는 내부 전용입니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Suspended">
      <summary vsli:raw="The thread has been suspended.">스레드가 일시 중단되었습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.SuspendRequested">
      <summary vsli:raw="The thread is being requested to suspend.">스레드를 일시 중단하도록 요청하고 있습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Unstarted">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Start&quot; /&gt; method has not been invoked on the thread.">스레드에 <see cref="M:System.Threading.Thread.Start" /> 메서드가 호출되지 않았습니다.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.WaitSleepJoin">
      <summary vsli:raw="The thread is blocked. This could be the result of calling &lt;see cref=&quot;M:System.Threading.Thread.Sleep(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Thread.Join&quot; /&gt;, of requesting a lock - for example, by calling &lt;see cref=&quot;M:System.Threading.Monitor.Enter(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)&quot; /&gt; - or of waiting on a thread synchronization object such as &lt;see cref=&quot;T:System.Threading.ManualResetEvent&quot; /&gt;.">스레드가 차단되었습니다. <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> 또는 <see cref="M:System.Threading.Thread.Join" />를 호출하거나, <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> 또는 <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />를 호출하여 잠금을 허용하거나, <see cref="T:System.Threading.ManualResetEvent" />와 같은 스레드 동기화 개체에서 대기하는 결과가 발생할 수 있습니다.</summary>
    </member>
    <member name="T:System.Threading.ThreadStateException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is in an invalid &lt;see cref=&quot;P:System.Threading.Thread.ThreadState&quot; /&gt; for the method call.">
        <see cref="T:System.Threading.Thread" />가 메서드 호출에 대한 잘못된 <see cref="P:System.Threading.Thread.ThreadState" />인 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with default properties.">기본 속성을 사용하여 <see cref="T:System.Threading.ThreadStateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Threading.ThreadStateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Threading.ThreadStateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Threading.ThreadStateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">현재 예외의 원인인 예외입니다. <paramref name="innerException" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
    </member>
  </members>
</doc>