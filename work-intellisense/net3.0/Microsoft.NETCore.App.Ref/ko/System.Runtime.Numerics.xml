<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.BigInteger">
      <summary vsli:raw="Represents an arbitrarily large signed integer.">부호 있는 임의의 큰 정수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using the values in a byte array.">바이트 배열의 값을 사용하여 <see cref="T:System.Numerics.BigInteger" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="An array of byte values in little-endian order.">little-endian 순서로 된 바이트 값의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 사용하여 <see cref="T:System.Decimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A decimal number.">10진수입니다.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a double-precision floating-point value.">배정밀도 부동 소수점 값을 사용하여 <see cref="T:System.Numerics.BigInteger" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A double-precision floating-point value.">배정밀도 부동 소수점 값입니다.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" />가 <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> 또는 <see cref="F:System.Double.PositiveInfinity" />입니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 32-bit signed integer value.">부호 있는 32비트 정수 값을 사용하여 <see cref="T:System.Numerics.BigInteger" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A 32-bit signed integer.">32비트 부호 있는 정수입니다.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 64-bit signed integer value.">부호 있는 64비트 정수 값을 사용하여 <see cref="T:System.Numerics.BigInteger" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A 64-bit signed integer.">64비트 부호 있는 정수입니다.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)">
      <param name="value" vsli:raw="A read-only span of bytes representing the big integer." />
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; uses unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt; (the default value)." />
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; is in big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;  (the default value)." />
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a single-precision floating-point value.">단정밀도 부동 소수점 값을 사용하여 <see cref="T:System.Numerics.BigInteger" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A single-precision floating-point value.">단정밀도 부동 소수점 값입니다.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" />가 <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> 또는 <see cref="F:System.Single.PositiveInfinity" />입니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using an unsigned 32-bit integer value.">부호 없는 32비트 정수 값을 사용하여 <see cref="T:System.Numerics.BigInteger" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="An unsigned 32-bit integer value.">부호 없는 32비트 정수 값입니다.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure with an unsigned 64-bit integer value.">부호 없는 64비트 정수 값을 사용하여 <see cref="T:System.Numerics.BigInteger" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="An unsigned 64-bit integer.">부호 없는 64비트 정수입니다.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
      <summary vsli:raw="Gets the absolute value of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">
        <see cref="T:System.Numerics.BigInteger" /> 개체의 절대 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="A number.">숫자입니다.</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 절대값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the result.">두 개의 <see cref="T:System.Numerics.BigInteger" /> 값을 더한 다음 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to add.">더할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to add.">더할 두 번째 값입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 합입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.">두 <see cref="T:System.Numerics.BigInteger" /> 값을 비교하고 첫 번째 값이 두 번째 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; equals &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 표와 같이 <paramref name="left" /> 및 <paramref name="right" />의 상대 값을 나타내는 부호 있는 정수입니다.  
  값 
  조건 
  0보다 작음 
 <paramref name="left" />가 <paramref name="right" />보다 작은 경우  

  0 
 <paramref name="left" />가 <paramref name="right" />와 같습니다.  

  0보다 큼 
 <paramref name="left" />가 <paramref name="right" />보다 큰 경우</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
      <summary vsli:raw="Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.">이 인스턴스를 부호 있는 64비트 정수와 비교하고 이 인스턴스의 값이 부호 있는 64비트 정수 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <param name="other" vsli:raw="The signed 64-bit integer to compare.">비교할 부호 있는 64비트 정수입니다.</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 표와 같이 이 인스턴스와 <paramref name="other" /> 사이의 관계를 나타내는 부호 있는 정수 값입니다.  
  반환 값 
  설명 
  0보다 작음 
  현재 인스턴스가 <paramref name="other" />보다 작습니다.  

  0 
  현재 인스턴스가 <paramref name="other" />와 같습니다.  

  0보다 큼 
  현재 인스턴스가 <paramref name="other" />보다 큽니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
      <summary vsli:raw="Compares this instance to a second &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">이 인스턴스를 두 번째 <see cref="T:System.Numerics.BigInteger" />와 비교하고 이 인스턴스의 값이 지정된 개체의 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <param name="other" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 표와 같이 이 인스턴스와 <paramref name="other" /> 사이의 관계를 나타내는 부호 있는 정수 값입니다.  
  반환 값 
  설명 
  0보다 작음 
  현재 인스턴스가 <paramref name="other" />보다 작습니다.  

  0 
  현재 인스턴스가 <paramref name="other" />와 같습니다.  

  0보다 큼 
  현재 인스턴스가 <paramref name="other" />보다 큽니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">이 인스턴스를 지정된 개체와 비교하고 이 인스턴스의 값이 지정된 개체의 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="A signed integer that indicates the relationship of the current instance to the &lt;paramref name=&quot;obj&quot; /&gt; parameter, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;obj&quot; /&gt;, or the &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 표와 같이 현재 인스턴스와 <paramref name="obj" /> 매개 변수 사이의 관계를 나타내는 부호 있는 정수입니다.  
  반환 값 
  설명 
  0보다 작음 
  현재 인스턴스가 <paramref name="obj" />보다 작습니다.  

  0 
  현재 인스턴스가 <paramref name="obj" />와 같습니다.  

  0보다 큼 
  현재 인스턴스가 <paramref name="obj" />보다 크거나 <paramref name="obj" /> 매개 변수가 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <paramref name="obj" />가 <see cref="T:System.Numerics.BigInteger" />가 아닌 경우</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
      <summary vsli:raw="Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.">이 인스턴스를 부호 없는 64비트 정수와 비교하고 이 인스턴스의 값이 부호 없는 64비트 정수 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">비교할 부호 없는 64비트 정수입니다.</param>
      <returns vsli:raw="A signed integer that indicates the relative value of this instance and &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Return value&lt;/term&gt;&lt;description&gt;Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;Less than zero&lt;/term&gt;&lt;description&gt;The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Zero&lt;/term&gt;&lt;description&gt;The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Greater than zero&lt;/term&gt;&lt;description&gt;The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 표와 같이 이 인스턴스와 <paramref name="other" />의 상대 값을 나타내는 부호 있는 정수입니다.  
  반환 값 
  설명 
  0보다 작음 
  현재 인스턴스가 <paramref name="other" />보다 작습니다.  

  0 
  현재 인스턴스가 <paramref name="other" />와 같습니다.  

  0보다 큼 
  현재 인스턴스가 <paramref name="other" />보다 큽니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another and returns the result.">하나의 <see cref="T:System.Numerics.BigInteger" /> 값을 다른 값으로 나눈 후 결과를 반환합니다.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">나눌 대상 값입니다.</param>
      <param name="divisor" vsli:raw="The value to divide by.">나눌 값입니다.</param>
      <returns vsli:raw="The quotient of the division.">나누기의 몫입니다.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" />가 0인 경우</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another, returns the result, and returns the remainder in an output parameter.">하나의 <see cref="T:System.Numerics.BigInteger" /> 값을 다른 값으로 나눈 후 결과를 반환하고 출력 매개 변수에 나머지를 반환합니다.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">나눌 대상 값입니다.</param>
      <param name="divisor" vsli:raw="The value to divide by.">나눌 값입니다.</param>
      <param name="remainder" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value that represents the remainder from the division. This parameter is passed uninitialized.">이 메서드가 반환되면 나누기의 나머지를 나타내는 <see cref="T:System.Numerics.BigInteger" /> 값을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <returns vsli:raw="The quotient of the division.">나누기의 몫입니다.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" />가 0인 경우</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.">현재 인스턴스와 부호 있는 64비트 정수의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The signed 64-bit integer value to compare.">비교할 부호 있는 64비트 정수 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the signed 64-bit integer and the current instance have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">부호 있는 64비트 정수와 현재 인스턴스의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object have the same value.">현재 인스턴스와 지정된 <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object and &lt;paramref name=&quot;other&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Numerics.BigInteger" /> 개체와 <paramref name="other" />의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">현재 인스턴스와 지정된 개체의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; argument is a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, and its value is equal to the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" /> 인수가 <see cref="T:System.Numerics.BigInteger" /> 개체이고 값이 현재 <see cref="T:System.Numerics.BigInteger" /> 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.">현재 인스턴스와 부호 없는 64비트 정수의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">비교할 부호 없는 64비트 정수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and the unsigned 64-bit integer have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 인스턴스와 부호 없는 64비트 정수의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)">
      <summary vsli:raw="Gets the number of bytes that will be output by &lt;see cref=&quot;M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)&quot; /&gt; and &lt;see cref=&quot;M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)&quot; /&gt;.">
        <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> 및 <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />에 의해 출력될 바이트 수를 가져옵니다.</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">서명되지 않은 인코딩을 사용하려면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The number of bytes.">바이트 수입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Finds the greatest common divisor of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">두 <see cref="T:System.Numerics.BigInteger" /> 값의 최대 공약수를 구합니다.</summary>
      <param name="left" vsli:raw="The first value.">첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value.">두 번째 값입니다.</param>
      <returns vsli:raw="The greatest common divisor of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 최대 공약수입니다.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsEven">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 짝수인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 짝수이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsOne">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 <see cref="P:System.Numerics.BigInteger.One" />인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 <see cref="P:System.Numerics.BigInteger.One" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsPowerOfTwo">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 2의 거듭제곱인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 2의 거듭제곱이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsZero">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 <see cref="P:System.Numerics.BigInteger.Zero" />인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 <see cref="P:System.Numerics.BigInteger.Zero" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified number.">지정된 숫자의 자연(밑 <see langword="e" />) 로그를 반환합니다.</summary>
      <param name="value" vsli:raw="The number whose logarithm is to be found.">로그가 있는 숫자입니다.</param>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">설명 단원의 표와 같이 <paramref name="value" />의 자연(밑 <see langword="e" />) 로그입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The natural log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">
        <paramref name="value" />의 자연 로그가 <see cref="T:System.Double" /> 데이터 형식의 범위를 벗어납니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified number in a specified base.">지정된 밑을 사용하여 지정된 숫자의 로그를 반환합니다.</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">로그가 있는 숫자입니다.</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">로그의 밑입니다.</param>
      <returns vsli:raw="The base &lt;paramref name=&quot;baseValue&quot; /&gt; logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">설명 단원의 표와 같이 밑이 <paramref name="baseValue" />인 <paramref name="value" />의 로그입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">
        <paramref name="value" />의 로그가 <see cref="T:System.Double" /> 데이터 형식의 범위를 벗어납니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the base 10 logarithm of a specified number.">밑을 10으로 사용하여 지정된 숫자의 로그를 반환합니다.</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">로그가 있는 숫자입니다.</param>
      <returns vsli:raw="The base 10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">설명 단원의 표와 같이 밑이 10인 <paramref name="value" />의 로그입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The base 10 log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">
        <paramref name="value" />의 기본 10 로그가 <see cref="T:System.Double" /> 데이터 형식의 범위를 벗어납니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the larger of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">두 <see cref="T:System.Numerics.BigInteger" /> 값 중 더 큰 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is larger.">
        <paramref name="left" /> 또는 <paramref name="right" /> 매개 변수 중 더 큰 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the smaller of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">두 <see cref="T:System.Numerics.BigInteger" /> 값 중 더 작은 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is smaller.">
        <paramref name="left" /> 또는 <paramref name="right" /> 매개 변수 중 더 작은 값입니다.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.MinusOne">
      <summary vsli:raw="Gets a value that represents the number negative one (-1).">숫자 -1을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An integer whose value is negative one (-1).">값이 -1인 정수입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs modulus division on a number raised to the power of another number.">다른 숫자의 승수로 거듭제곱한 숫자에 대해 모듈러스 나누기를 수행합니다.</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">
        <paramref name="exponent" /> 지수로 사용할 숫자입니다.</param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">
        <paramref name="value" />를 거듭제곱할 지수입니다.</param>
      <param name="modulus" vsli:raw="The number by which to divide &lt;paramref name=&quot;value&quot; /&gt; raised to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">
        <paramref name="value" />의 <paramref name="exponent" />승을 나눌 숫자입니다.</param>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;value&quot; /&gt;exponent by &lt;paramref name=&quot;modulus&quot; /&gt;.">
        <paramref name="value" />지수를 <paramref name="modulus" />로 나눈 나머지입니다.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;modulus&quot; /&gt; is zero.">
        <paramref name="modulus" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" />가 음수입니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the product of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">두 <see cref="T:System.Numerics.BigInteger" /> 값의 곱을 반환합니다.</summary>
      <param name="left" vsli:raw="The first number to multiply.">곱할 첫 번째 숫자입니다.</param>
      <param name="right" vsli:raw="The second number to multiply.">곱할 두 번째 숫자입니다.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">지정된 <see cref="T:System.Numerics.BigInteger" /> 값을 부정합니다.</summary>
      <param name="value" vsli:raw="The value to negate.">부정할 값입니다.</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">
        <paramref name="value" /> 매개 변수에 -1을 곱한 결과입니다.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.One">
      <summary vsli:raw="Gets a value that represents the number one (1).">숫자 1을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An object whose value is one (1).">값이 1인 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds the values of two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects.">지정한 두 <see cref="T:System.Numerics.BigInteger" />의 값을 더합니다.</summary>
      <param name="left" vsli:raw="The first value to add.">더할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to add.">더할 두 번째 값입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 합입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">두 <see cref="T:System.Numerics.BigInteger" /> 값에 대해 비트 <see langword="And" /> 연산을 수행합니다.</summary>
      <param name="left" vsli:raw="The first value.">첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value.">두 번째 값입니다.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">비트 <see langword="And" /> 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">두 <see cref="T:System.Numerics.BigInteger" /> 값에 대해 비트 <see langword="Or" /> 연산을 수행합니다.</summary>
      <param name="left" vsli:raw="The first value.">첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value.">두 번째 값입니다.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">비트 <see langword="Or" /> 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
      <summary vsli:raw="Decrements a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 1씩 감소합니다.</summary>
      <param name="value" vsli:raw="The value to decrement.">감소시킬 값입니다.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter decremented by 1.">1씩 감소하는 <paramref name="value" /> 매개 변수의 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by using integer division.">정수 나누기를 사용하여 지정된 <see cref="T:System.Numerics.BigInteger" /> 값을 지정된 다른 <see cref="T:System.Numerics.BigInteger" /> 값으로 나눕니다.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">나눌 대상 값입니다.</param>
      <param name="divisor" vsli:raw="The value to divide by.">나눌 값입니다.</param>
      <returns vsli:raw="The integral result of the division.">나누기의 정수 계열 결과입니다.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" />가 0인 경우</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a signed long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">부호 있는 정수(Long) 값과 <see cref="T:System.Numerics.BigInteger" /> 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a signed long integer value are equal.">
        <see cref="T:System.Numerics.BigInteger" /> 값과 부호 있는 정수(Long) 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the values of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects are equal.">두 <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and an unsigned long integer value are equal.">
        <see cref="T:System.Numerics.BigInteger" /> 값과 부호 없는 정수(Long) 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether an unsigned long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">부호 없는 정수(Long) 값과 <see cref="T:System.Numerics.BigInteger" /> 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise exclusive &lt;see langword=&quot;Or&quot; /&gt; (&lt;see langword=&quot;XOr&quot; /&gt;) operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">두 <see cref="T:System.Numerics.BigInteger" /> 값에 대해 비트 배타적 <see langword="Or" />(<see langword="XOr" />) 연산을 수행합니다.</summary>
      <param name="left" vsli:raw="The first value.">첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value.">두 번째 값입니다.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">비트 <see langword="Or" /> 연산의 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Decimal" /> 개체를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Double" /> 값을 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" />가 <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> 또는 <see cref="F:System.Double.NegativeInfinity" />입니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned byte value.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 없는 바이트 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">
        <see cref="T:System.Byte" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Byte.MinValue&quot;&gt;Byte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Byte.MaxValue&quot;&gt;Byte.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.Byte.MinValue" />보다 작거나 <see cref="F:System.Byte.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 <see cref="T:System.Decimal" /> 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Decimal.MinValue&quot;&gt;Decimal.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 <see cref="T:System.Double" /> 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Double" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 16-bit signed integer value.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 있는 16비트 정수 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a 16-bit signed integer.">부호 있는 16비트 정수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int16.MinValue&quot;&gt;Int16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int16.MaxValue&quot;&gt;Int16.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 32-bit signed integer value.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 있는 32비트 정수 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a 32-bit signed integer.">부호 있는 32비트 정수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 64-bit signed integer value.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 있는 64비트 정수 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a 64-bit signed integer.">부호 있는 64비트 정수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.Int64.MinValue" />보다 작거나 <see cref="F:System.Int64.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a signed 8-bit value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 있는 8비트 값으로 변환하는 명시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="T:System.Int16" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to a signed 8-bit value.">부호 있는 8비트 값으로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.SByte.MinValue&quot;&gt;SByte.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.SByte.MaxValue&quot;&gt;SByte.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a single-precision floating-point value.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 단정밀도 부동 소수점 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a single-precision floating-point value.">단정밀도 부동 소수점 값으로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the closest possible representation of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 가능한 가장 가까운 표현을 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 16-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 없는 16비트 정수 값으로 변환하는 명시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="T:System.Int32" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 16-bit integer.">부호 없는 16비트 정수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt16.MinValue&quot;&gt;UInt16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.UInt16.MinValue" />보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 32-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 없는 32비트 정수 값으로 변환하는 명시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="T:System.Int64" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 32-bit integer.">부호 없는 32비트 정수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.UInt32.MinValue" />보다 작거나 <see cref="F:System.UInt32.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 64-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" /> 개체를 부호 없는 64비트 정수 값으로 변환하는 명시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="T:System.Double" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 64-bit integer.">부호 없는 64비트 정수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;.">
        <paramref name="value" />가 <see cref="F:System.UInt64.MinValue" />보다 작거나 <see cref="F:System.UInt64.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Single" /> 값을 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" />가 <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> 또는 <see cref="F:System.Single.NegativeInfinity" />입니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 있는 64비트 정수가 <see cref="T:System.Numerics.BigInteger" /> 값보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; is greater than a 64-bit signed integer value.">
        <see cref="T:System.Numerics.BigInteger" />가 부호 있는 64 정수 값보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 다른 <see cref="T:System.Numerics.BigInteger" /> 값보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 없는 64비트 정수보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 없는 64비트 정수보다 큰지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 있는 64비트 정수가 <see cref="T:System.Numerics.BigInteger" /> 값보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit signed integer value.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 있는 64비트 정수 값보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 다른 <see cref="T:System.Numerics.BigInteger" /> 값보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit unsigned integer value.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 없는 64비트 정수 값보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 없는 64비트 정수가 <see cref="T:System.Numerics.BigInteger" /> 값보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 <paramref name="left" />보다 크면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 없는 바이트를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 16-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 있는 16비트 정수를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 32-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 있는 32비트 정수를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 64-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 있는 64비트 정수를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an 8-bit signed integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.#ctor(System.Int32)&quot; /&gt;.">부호 있는 8비트 정수를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger&quot; /&gt;.">부호 없는 16비트 정수를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger&quot; /&gt;.">부호 없는 32비트 정수를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">부호 없는 64비트 정수를 <see cref="T:System.Numerics.BigInteger" /> 값으로 변환하는 암시적 변환을 정의합니다.  
이 API는 CLS 규격이 아닙니다. 규격 대체 항목은 <see cref="T:System.Double" />입니다.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <see cref="T:System.Numerics.BigInteger" />로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
      <summary vsli:raw="Increments a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 1씩 증가합니다.</summary>
      <param name="value" vsli:raw="The value to increment.">증가시킬 값입니다.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter incremented by 1.">1씩 증가하는 <paramref name="value" /> 매개 변수의 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">부호 있는 64비트 정수와 <see cref="T:System.Numerics.BigInteger" /> 값이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit signed integer are not equal.">
        <see cref="T:System.Numerics.BigInteger" /> 값과 부호 있는 64비트 정수가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects have different values.">두 <see cref="T:System.Numerics.BigInteger" /> 개체의 값이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit unsigned integer are not equal.">
        <see cref="T:System.Numerics.BigInteger" /> 값과 부호 없는 64비트 정수가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">부호 없는 64비트 정수와 <see cref="T:System.Numerics.BigInteger" /> 값이 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the left.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 지정된 비트 수만큼 왼쪽으로 이동합니다.</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">비트를 이동할 값입니다.</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the left.">
        <paramref name="value" />를 왼쪽으로 이동할 비트 수입니다.</param>
      <returns vsli:raw="A value that has been shifted to the left by the specified number of bits.">지정된 비트 수만큼 왼쪽으로 이동한 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 있는 64비트 정수가 <see cref="T:System.Numerics.BigInteger" /> 값보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit signed integer.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 있는 64비트 정수보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 다른 <see cref="T:System.Numerics.BigInteger" /> 값보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit unsigned integer.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 없는 64비트 정수보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 없는 64비트 정수가 <see cref="T:System.Numerics.BigInteger" /> 값보다 작은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 있는 64비트 정수가 <see cref="T:System.Numerics.BigInteger" /> 값보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit signed integer.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 있는 64비트 정수보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 다른 <see cref="T:System.Numerics.BigInteger" /> 값보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit unsigned integer.">
        <see cref="T:System.Numerics.BigInteger" /> 값이 부호 없는 64비트 정수보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">부호 없는 64비트 정수가 <see cref="T:System.Numerics.BigInteger" /> 값보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />가 <paramref name="right" />보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the remainder that results from division with two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">지정된 두 <see cref="T:System.Numerics.BigInteger" /> 값을 나눈 나머지를 반환합니다.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">나눌 대상 값입니다.</param>
      <param name="divisor" vsli:raw="The value to divide by.">나눌 값입니다.</param>
      <returns vsli:raw="The remainder that results from the division.">나눈 나머지입니다.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" />가 0인 경우</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Multiplies two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">지정된 두 <see cref="T:System.Numerics.BigInteger" /> 값을 곱합니다.</summary>
      <param name="left" vsli:raw="The first value to multiply.">곱할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to multiply.">곱할 두 번째 값입니다.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the bitwise one's complement of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">
        <see cref="T:System.Numerics.BigInteger" /> 값에 대한 비트 1의 보수를 반환합니다.</summary>
      <param name="value" vsli:raw="An integer value.">정수 값입니다.</param>
      <returns vsli:raw="The bitwise one's complement of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 대한 비트 1의 보수입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the right.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 지정된 비트 수만큼 오른쪽으로 이동합니다.</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">비트를 이동할 값입니다.</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the right.">
        <paramref name="value" />를 오른쪽으로 이동할 비트 수입니다.</param>
      <returns vsli:raw="A value that has been shifted to the right by the specified number of bits.">지정된 비트 수만큼 오른쪽으로 이동한 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">다른 <see cref="T:System.Numerics.BigInteger" /> 값에서 <see cref="T:System.Numerics.BigInteger" /> 값을 뺍니다.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">뺄 대상 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">뺄 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified BigInteger value.">지정된 BigInteger 값을 부정합니다.</summary>
      <param name="value" vsli:raw="The value to negate.">부정할 값입니다.</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">
        <paramref name="value" /> 매개 변수에 -1을 곱한 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; operand. (The sign of the operand is unchanged.)">
        <see cref="T:System.Numerics.BigInteger" /> 피연산자의 값을 반환합니다. 피연산자의 부호는 변경되지 않습니다.</summary>
      <param name="value" vsli:raw="An integer value.">정수 값입니다.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; operand.">
        <paramref name="value" /> 피연산자의 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)">
      <param name="value" vsli:raw="A read-only span of characters that contains the number to convert." />
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;." />
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;." />
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String)">
      <summary vsli:raw="Converts the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">숫자의 문자열 표현을 해당하는 <see cref="T:System.Numerics.BigInteger" />로 변환합니다.</summary>
      <param name="value" vsli:raw="A string that contains the number to convert.">변환할 숫자가 포함된 문자열입니다.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수에 지정된 숫자에 해당하는 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">
        <paramref name="value" />가 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
      <summary vsli:raw="Converts the string representation of a number in a specified style to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">숫자를 지정된 스타일로 나타낸 문자열 표현을 해당 <see cref="T:System.Numerics.BigInteger" />로 변환합니다.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">변환할 숫자가 포함된 문자열입니다.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 사용할 수 있는 서식을 지정하는 열거형 값의 비트 조합입니다.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수에 지정된 숫자에 해당하는 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.  
또는 
 <paramref name="style" />에는 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 또는 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 플래그가 다른 값과 함께 포함됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt;.">
        <paramref name="value" />는 <see cref="T:System.Globalization.NumberStyles" />에 의해 지정된 입력 패턴에 맞지 않습니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 <see cref="T:System.Numerics.BigInteger" />로 변환합니다.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">변환할 숫자가 포함된 문자열입니다.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 사용할 수 있는 서식을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 대한 문화권별 서식 정보를 제공하는 개체입니다.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수에 지정된 숫자에 해당하는 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.  
또는 
 <paramref name="style" />에는 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 또는 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 플래그가 다른 값과 함께 포함됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;paramref name=&quot;style&quot; /&gt;.">
        <paramref name="value" />는 <paramref name="style" />에 의해 지정된 입력 패턴에 맞지 않습니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">숫자를 지정된 문화권별 형식으로 나타낸 문자열 표현을 해당 <see cref="T:System.Numerics.BigInteger" />로 변환합니다.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">변환할 숫자가 포함된 문자열입니다.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 대한 문화권별 서식 정보를 제공하는 개체입니다.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수에 지정된 숫자에 해당하는 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">
        <paramref name="value" />가 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to the power of a specified value.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 지정된 값의 거듭제곱으로 변환합니다.</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">
        <paramref name="exponent" /> 지수로 사용할 숫자입니다.</param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">
        <paramref name="value" />를 거듭제곱할 지수입니다.</param>
      <returns vsli:raw="The result of raising &lt;paramref name=&quot;value&quot; /&gt; to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">
        <paramref name="value" />를 <paramref name="exponent" />번 거듭제곱한 결과입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" />가 음수입니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs integer division on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the remainder.">두 <see cref="T:System.Numerics.BigInteger" /> 값에 대해 정수 나누기를 수행합니다.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">나눌 대상 값입니다.</param>
      <param name="divisor" vsli:raw="The value to divide by.">나눌 값입니다.</param>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;dividend&quot; /&gt; by &lt;paramref name=&quot;divisor&quot; /&gt;.">
        <paramref name="dividend" />를 <paramref name="divisor" />로 나눈 나머지입니다.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" />가 0인 경우</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Sign">
      <summary vsli:raw="Gets a number that indicates the sign (negative, positive, or zero) of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 부호(음수, 양수 또는 0)를 나타내는 숫자를 가져옵니다.</summary>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Number&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt; The value of this object is negative.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; The value of this object is 0 (zero).&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; The value of this object is positive.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 표와 같이 <see cref="T:System.Numerics.BigInteger" /> 개체의 부호를 나타내는 숫자입니다.  
  수 
  설명 
  -1 
  이 개체의 값이 음수입니다.  

  0 
  이 개체의 값이 0입니다.  

  1 
  이 개체의 값이 양수입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another and returns the result.">다른 값에서 하나의 <see cref="T:System.Numerics.BigInteger" /> 값을 뺀 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">뺄 대상 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">뺄 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a byte array.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 바이트 배열로 변환합니다.</summary>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체를 바이트 배열로 변환한 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as a byte array using the fewest number of bytes possible. If the value is zero, returns an array of one byte whose element is 0x00.">가능한 최소 바이트 수를 사용하여 이 <see cref="T:System.Numerics.BigInteger" />의 값을 바이트 배열로 반환합니다. 값이 0이면 해당 요소가0x00인 1바이트 배열을 반환합니다.</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">서명되지 않은 인코딩을 사용하려면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Big endian 바이트 순서로 바이트를 쓰려면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체를 바이트 배열로 변환한 값입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="If &lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">
        <paramref name="isUnsigned" />가 <see langword="true" />이고 <see cref="P:System.Numerics.BigInteger.Sign" />이 음수인 경우:</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation.">현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">현재 <see cref="T:System.Numerics.BigInteger" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified culture-specific formatting information.">지정된 문화권별 서식 지정 정보를 사용하여 현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;provider&quot; /&gt; parameter.">
        <paramref name="provider" /> 매개 변수로 지정된 서식에 따른 현재 <see cref="T:System.Numerics.BigInteger" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format.">지정된 서식을 사용하여 현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;format&quot; /&gt; parameter.">
        <paramref name="format" /> 매개 변수로 지정된 서식에 따른 현재 <see cref="T:System.Numerics.BigInteger" /> 값의 문자열 표현입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" />은 유효한 서식 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format and culture-specific format information.">지정된 형식 및 문화권별 형식 정보를 사용하여 현재 <see cref="T:System.Numerics.BigInteger" /> 개체의 숫자 값을 해당 문자열 표현으로 변환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value as specified by the &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt; parameters.">
        <paramref name="format" /> 및 <paramref name="provider" /> 매개 변수로 지정된 현재 <see cref="T:System.Numerics.BigInteger" /> 값의 문자열 표현입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" />은 유효한 서식 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
      <param name="destination" vsli:raw="The span of characters into which this instance will be written." />
      <param name="charsWritten" vsli:raw="When the method returns, contains the length of the span in number of characters." />
      <param name="format" vsli:raw="A read-only span of characters that specifies the format for the formatting operation." />
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;." />
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters." />
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;." />
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;." />
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)">
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters." />
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not of the correct format. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">지정된 문화권별 형식과 지정된 스타일을 사용한 숫자의 문자열 표현을 해당 <see cref="T:System.Numerics.BigInteger" />로 변환해 보고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="The string representation of a number. The string is interpreted using the style specified by &lt;paramref name=&quot;style&quot; /&gt;.">숫자의 문자열 표현입니다. 이 문자열은 <paramref name="style" />이 지정하는 스타일을 사용하여 해석됩니다.</param>
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;.">
        <paramref name="value" />에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다. 지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized.">이 메서드가 반환되면 <paramref name="value" />에 포함된 숫자 또는 변환에 실패한 경우 <see cref="T:System.Numerics.BigInteger" />에 해당하는 <see cref="P:System.Numerics.BigInteger.Zero" />를 포함합니다. <paramref name="value" /> 매개 변수가 <see langword="null" />이거나 <paramref name="style" />과 호환되지 않는 서식으로 되어 있으면 변환에 실패합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; parameter was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 매개 변수가 변환되었으면 <paramref name="value" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.  
또는 
 <paramref name="style" />에는 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 또는 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 플래그가 다른 값과 함께 포함됩니다.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">숫자의 문자열 표현을 해당 <see cref="T:System.Numerics.BigInteger" />로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="The string representation of a number.">숫자의 문자열 표현입니다.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not of the correct format. This parameter is passed uninitialized.">이 메서드가 반환되면 <paramref name="value" />에 포함된 숫자 또는 변환에 실패한 경우 0에 해당하는 <see cref="T:System.Numerics.BigInteger" />를 포함합니다. <paramref name="value" /> 매개 변수가 <see langword="null" />이거나 올바른 서식이 아니면 변환에 실패합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 성공적으로 변환되었으면 <paramref name="value" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)">
      <summary vsli:raw="Copies the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as little-endian twos-complement bytes, using the fewest number of bytes possible. If the value is zero, outputs one byte whose element is 0x00.">가능한 최소 바이트 수를 사용하여 이 <see cref="T:System.Numerics.BigInteger" />의 값을 little-endian twos-complement 바이트로 복사합니다. 값이 0이면 해당 요소가 0x00인 1바이트를 출력합니다.</summary>
      <param name="destination" vsli:raw="The destination span to which the resulting bytes should be written.">결과 바이트를 쓸 대상 범위입니다.</param>
      <param name="bytesWritten" vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="destination" />에 쓰인 바이트 수입니다.</param>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">서명되지 않은 인코딩을 사용하려면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Big endian 바이트 순서로 바이트를 쓰려면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the bytes fit in &lt;paramref name=&quot;destination&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if not all bytes could be written due to lack of space.">바이트가 <paramref name="destination" />에 맞는 경우 <see langword="true" />, 공간이 부족하여 쓰여지지 않는 바이트도 있는 경우 <see langword="false" />입니다.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">
        <paramref name="isUnsigned" />가 <see langword="true" />이고 <see cref="P:System.Numerics.BigInteger.Sign" />이 음수입니다.</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Zero">
      <summary vsli:raw="Gets a value that represents the number 0 (zero).">숫자 0을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An integer whose value is 0 (zero).">값이 0인 정수입니다.</returns>
    </member>
    <member name="T:System.Numerics.Complex">
      <summary vsli:raw="Represents a complex number.">복소수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; structure using the specified real and imaginary values.">지정된 실수 값과 허수 값을 사용하여 <see cref="T:System.Numerics.Complex" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="real" vsli:raw="The real part of the complex number.">복소수의 실수 부분입니다.</param>
      <param name="imaginary" vsli:raw="The imaginary part of the complex number.">복소수의 허수 부분입니다.</param>
    </member>
    <member name="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
      <summary vsli:raw="Gets the absolute value (or magnitude) of a complex number.">복소수의 절대 값 또는 크기를 가져옵니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 절대값입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc cosine of the specified complex number.">지정된 복소수의 아크코사인인 각도를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number that represents a cosine.">코사인을 나타내는 복소수입니다.</param>
      <returns vsli:raw="The angle, measured in radians, which is the arc cosine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 아크코사인인 각도인, 라디안 단위로 측정됩니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number and returns the result.">복소수에 배정밀도 실수를 더하고 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">더할 배정밀도 실수 값입니다.</param>
      <param name="right" vsli:raw="The complex value to add.">더할 복소수 값입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 합입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number and returns the result.">배정밀도 실수에 복소수를 더하고 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The complex value to add.">더할 복소수 값입니다.</param>
      <param name="right" vsli:raw="The double-precision real value to add.">더할 배정밀도 실수 값입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 합입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers and returns the result.">두 개의 복소수를 더한 후 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The first complex number to add.">더할 첫 번째 복소수입니다.</param>
      <param name="right" vsli:raw="The second complex number to add.">더할 두 번째 복소수입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 합입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc sine of the specified complex number.">지정된 복소수의 아크사인인 각도를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The angle which is the arc sine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 아크사인인 각도입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc tangent of the specified complex number.">지정된 복소수의 아크탄젠트인 각도를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The angle that is the arc tangent of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 아크탄젠트인 각도입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
      <summary vsli:raw="Computes the conjugate of a complex number and returns the result.">복소수의 켤레 복소수를 계산한 후 결과를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The conjugate of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 켤레 복소수입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the cosine of the specified complex number.">지정된 복소수의 코사인을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The cosine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 코사인입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic cosine of the specified complex number.">지정된 복소수의 하이퍼볼릭 코사인을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The hyperbolic cosine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 쌍곡선 코사인입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides one double-precision real number by a complex number and returns the result.">하나의 배정밀도 실수를 복소수로 나누고 결과를 반환합니다.</summary>
      <param name="dividend" vsli:raw="The double-precision real number to be divided.">값을 나눌 배정밀도 실수입니다.</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">값을 나눌 복소수입니다.</param>
      <returns vsli:raw="The quotient of the division.">나누기의 몫입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides one complex number by a double-precision real number and returns the result.">하나의 복소수를 배정밀도 실수로 나누고 결과를 반환합니다.</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">나눌 복소수입니다.</param>
      <param name="divisor" vsli:raw="The double-precision real number to divide by.">나눌 배정밀도 실수입니다.</param>
      <returns vsli:raw="The quotient of the division.">나누기의 몫입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides one complex number by another and returns the result.">한 복소수를 다른 복소수로 나눈 후 결과를 반환합니다.</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">나눌 복소수입니다.</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">값을 나눌 복소수입니다.</param>
      <returns vsli:raw="The quotient of the division.">나누기의 몫입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified complex number have the same value.">현재 인스턴스와 지정된 복소수의 값이 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="The complex number to compare.">비교할 복소수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this complex number and &lt;paramref name=&quot;value&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 복소수와 <paramref name="value" />가 동일한 값을 가지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">현재 인스턴스와 지정된 개체의 값이 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; parameter is a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object or a type capable of implicit conversion to a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object, and its value is equal to the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" /> 매개 변수가 <see cref="T:System.Numerics.Complex" /> 개체이거나 <see cref="T:System.Numerics.Complex" /> 개체로 암시적 변환이 가능한 형식이고 해당 값이 현재 <see cref="T:System.Numerics.Complex" /> 개체의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
      <summary vsli:raw="Returns &lt;see langword=&quot;e&quot; /&gt; raised to the power specified by a complex number.">
        <see langword="e" />를 복소수로 지정된 지수만큼 거듭제곱하여 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number that specifies a power.">지수를 지정하는 복소수입니다.</param>
      <returns vsli:raw="The number &lt;see langword=&quot;e&quot; /&gt; raised to the power &lt;paramref name=&quot;value&quot; /&gt;.">
        <see langword="e" />의 <paramref name="value" />승입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
      <summary vsli:raw="Creates a complex number from a point's polar coordinates.">점의 극좌표를 사용하여 복소수를 만듭니다.</summary>
      <param name="magnitude" vsli:raw="The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.">원점(x축과 y축의 교차점)에서 숫자까지의 거리인 크기입니다.</param>
      <param name="phase" vsli:raw="The phase, which is the angle from the line to the horizontal axis, measured in radians.">선에서 가로 축까지의 각도인 위상으로서, 라디안 단위로 측정됩니다.</param>
      <returns vsli:raw="A complex number.">복소수입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">현재 <see cref="T:System.Numerics.Complex" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Imaginary">
      <summary vsli:raw="Gets the imaginary component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">현재 <see cref="T:System.Numerics.Complex" /> 개체의 허수 구성 요소를 가져옵니다.</summary>
      <returns vsli:raw="The imaginary component of a complex number.">복소수의 허수 구성 요소입니다.</returns>
    </member>
    <member name="F:System.Numerics.Complex.ImaginaryOne">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to one.">0과 같은 실수와 1과 같은 허수를 포함하는 새 <see cref="T:System.Numerics.Complex" /> 인스턴스를 반환합니다.</summary>
    </member>
    <member name="F:System.Numerics.Complex.Infinity">
      <summary vsli:raw="Represents infinity as a complex number.">무한대를 복소수로 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Complex.IsFinite(System.Numerics.Complex)">
      <summary vsli:raw="Determines whether the specified complex number is finite.">지정된 복소수가 유한한지 확인합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both, the real and imaginary parts are finite (zero, subnormal or normal); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">실수와 허수 부분이 모두 유한(0, subnormal 또는 normal)이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsInfinity(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value indicating whether the specified complex number evaluates to infinity.">지정된 복소수가 무한대로 계산되는지를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if either, the real or imaginary part are &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt; or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">실수 또는 허수 부분이 <see cref="F:System.Double.PositiveInfinity" /> 또는 <see cref="F:System.Double.NegativeInfinity" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsNaN(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the specified complex instance is not a number (NaN).">지정된 복합 인스턴스가 숫자가 아닌지(NaN) 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is not finite or infinite; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 값이 유한도 무한도 아니면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified complex number.">지정된 복소수의 자연(밑 <see langword="e" />) 로그를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 자연(밑 <see langword="e" />) 로그입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified complex number in a specified base.">지정된 밑을 사용하여 지정된 복소수의 로그를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">로그의 밑입니다.</param>
      <returns vsli:raw="The logarithm of &lt;paramref name=&quot;value&quot; /&gt; in base &lt;paramref name=&quot;baseValue&quot; /&gt;.">밑이 <paramref name="value" />인 <paramref name="baseValue" />의 로그입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
      <summary vsli:raw="Returns the base-10 logarithm of a specified complex number.">밑이 10인 지정된 복소수의 로그를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The base-10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">밑이 10인 <paramref name="value" />의 로그입니다.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Magnitude">
      <summary vsli:raw="Gets the magnitude (or absolute value) of a complex number.">복소수의 크기 또는 절대 값을 가져옵니다.</summary>
      <returns vsli:raw="The magnitude of the current instance.">현재 인스턴스의 크기입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of a double-precision real number and a complex number.">배정밀도 실수와 복소수의 곱을 반환합니다.</summary>
      <param name="left" vsli:raw="The double-precision real number to multiply.">곱할 배정밀도 실수입니다.</param>
      <param name="right" vsli:raw="The complex number to multiply.">곱할 복소수입니다.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the product of a complex number and a double-precision real number.">복소수의 곱과 배정밀도 실수 수를 반환합니다.</summary>
      <param name="left" vsli:raw="The complex number to multiply.">곱할 복소수입니다.</param>
      <param name="right" vsli:raw="The double-precision real number to multiply.">곱할 배정밀도 실수입니다.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of two complex numbers.">두 복소수의 곱을 반환합니다.</summary>
      <param name="left" vsli:raw="The first complex number to multiply.">곱할 첫 번째 복소수입니다.</param>
      <param name="right" vsli:raw="The second complex number to multiply.">곱할 두 번째 복소수입니다.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 곱입니다.</returns>
    </member>
    <member name="F:System.Numerics.Complex.NaN">
      <summary vsli:raw="Represents a complex instance that is not a number (NaN).">NaN(숫자가 아님)인 복합 인스턴스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">지정된 복소수의 덧셈 역원을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">
        <paramref name="value" /> 매개 변수의 <see cref="P:System.Numerics.Complex.Real" /> 및 <see cref="P:System.Numerics.Complex.Imaginary" /> 구성 요소에 -1을 곱한 결과입니다.</returns>
    </member>
    <member name="F:System.Numerics.Complex.One">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to one and an imaginary number equal to zero.">1과 같은 실수와 0과 같은 허수를 포함하는 새 <see cref="T:System.Numerics.Complex" /> 인스턴스를 반환합니다.</summary>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number.">복소수에 배정밀도 실수를 더합니다.</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">더할 배정밀도 실수 값입니다.</param>
      <param name="right" vsli:raw="The complex value to add.">더할 복소수 값입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">
        <paramref name="left" /> 및<paramref name="right" />의 합을 복소수로 표시합니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number.">배정밀도 실수에 복소수를 더합니다.</summary>
      <param name="left" vsli:raw="The complex value to add.">더할 복소수 값입니다.</param>
      <param name="right" vsli:raw="The double-precision real value to add.">더할 배정밀도 실수 값입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">
        <paramref name="left" /> 및<paramref name="right" />의 합을 복소수로 표시합니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers.">두 복소수를 더합니다.</summary>
      <param name="left" vsli:raw="The first complex value to add.">더할 첫 번째 복소수 값입니다.</param>
      <param name="right" vsli:raw="The second complex value to add.">더할 두 번째 복소수 값입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 합입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified double-precision real number by a specified complex number.">지정된 배정밀도 실수를 지정된 복소수로 나눕니다.</summary>
      <param name="left" vsli:raw="The double-precision real value to be divided.">나눌 배정밀도 실수 값입니다.</param>
      <param name="right" vsli:raw="The complex value to divide by.">값을 나눌 복소수 값입니다.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" />를 <paramref name="right" />로 나눈 결과(복소수)입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides a specified complex number by a specified double-precision real number.">지정된 복소수를 지정된 배정밀도 실수로 나눕니다.</summary>
      <param name="left" vsli:raw="The complex value to be divided.">나눌 복소수 값입니다.</param>
      <param name="right" vsli:raw="The double-precision real value to divide by.">나눌 배정밀도 실수 값입니다.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" />를 <paramref name="right" />로 나눈 결과(복소수)입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified complex number by another specified complex number.">지정된 복소수를 다른 지정된 복소수로 나눕니다.</summary>
      <param name="left" vsli:raw="The complex value to be divided.">나눌 복소수 값입니다.</param>
      <param name="right" vsli:raw="The complex value to divide by.">값을 나눌 복소수 값입니다.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />를 <paramref name="right" />로 나눈 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are equal.">두 복소수가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first complex number to compare.">비교할 첫 번째 복소수입니다.</param>
      <param name="right" vsli:raw="The second complex number to compare.">비교할 두 번째 복소수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 및 <paramref name="right" /> 매개 변수의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a complex number.">
        <see cref="T:System.Decimal" /> 값을 복소수로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">
        <paramref name="value" />와 일치하는 실수 구성 요소와 0과 일치하는 허수 구성 요소가 있는 복소수입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a complex number.">
        <see cref="T:System.Numerics.BigInteger" /> 값을 복소수로 변환하는 명시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">
        <paramref name="value" />와 일치하는 실수 구성 요소와 0과 일치하는 허수 구성 요소가 있는 복소수입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a complex number.">부호 없는 바이트를 복소수로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a double-precision floating-point number to a complex number.">배정밀도 부동 소수점 숫자를 복소수로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit signed integer to a complex number.">부호 있는 16비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit signed integer to a complex number.">부호 있는 32비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit signed integer to a complex number.">부호 있는 64비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a signed byte to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">부호 있는 바이트를 복소수로 변환하는 암시적 변환을 정의합니다.   
이 API는 CLS 규격이 아닙니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a single-precision floating-point number to a complex number.">단정밀도 부동 소수점 숫자를 복소수로 변환하는 암시적 변환을 정의합니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">부호 없는 16비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.   
이 API는 CLS 규격이 아닙니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">부호 없는 32비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.   
이 API는 CLS 규격이 아닙니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">부호 없는 64비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.   
이 API는 CLS 규격이 아닙니다.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">복소수로 변환할 값입니다.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">
        <paramref name="value" /> 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are not equal.">두 복소수가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies a specified double-precision real number by a specified complex number.">지정된 배정밀도 실수를 지정된 복소수로 곱합니다.</summary>
      <param name="left" vsli:raw="The double-precision real value to multiply.">곱할 배정밀도 실수 값입니다.</param>
      <param name="right" vsli:raw="The complex value to multiply.">곱할 복소수 값입니다.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" />와 <paramref name="right" />의 곱을 복소수로 표시합니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Multiplies the specified complex number by a specified double-precision real number.">지정된 복소수를 지정된 배정밀도 실수로 곱합니다.</summary>
      <param name="left" vsli:raw="The complex value to multiply.">곱할 복소수 값입니다.</param>
      <param name="right" vsli:raw="The double-precision real value to multiply.">곱할 배정밀도 실수 값입니다.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" />와 <paramref name="right" />의 곱을 복소수로 표시합니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies two specified complex numbers.">지정된 두 복소수를 곱합니다.</summary>
      <param name="left" vsli:raw="The first complex value to multiply.">곱할 첫 번째 복소수 값입니다.</param>
      <param name="right" vsli:raw="The second complex value to multiply.">곱할 두 번째 복소수 값입니다.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />의 곱입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from a double-precision real number.">배정밀도 실수에서 복소수를 뺍니다.</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">뺄 배정밀도 실수 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">뺄 복소수 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과(복소수)입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts a double-precision real number from a complex number.">복소수에서 배정밀도 실수를 뺍니다.</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">뺄 대상 복소수 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">뺄 배정밀도 실수 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과(복소수)입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from another complex number.">한 복소수에서 다른 복소수를 뺍니다.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">뺄 대상 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">뺄 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">지정된 복소수의 덧셈 역원을 반환합니다.</summary>
      <param name="value" vsli:raw="The value to negate.">부정할 값입니다.</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">
        <paramref name="value" /> 매개 변수의 <see cref="P:System.Numerics.Complex.Real" /> 및 <see cref="P:System.Numerics.Complex.Imaginary" /> 구성 요소에 -1을 곱한 결과입니다.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Phase">
      <summary vsli:raw="Gets the phase of a complex number.">복소수의 위상을 가져옵니다.</summary>
      <returns vsli:raw="The phase of a complex number, in radians.">복소수의 위상(라디안 단위)입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a double-precision floating-point number.">지정된 복소수를 배정밀도 부동 소수점 숫자로 지정된 지수만큼 거듭제곱하여 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">지수만큼 거듭제곱할 복소수입니다.</param>
      <param name="power" vsli:raw="A double-precision floating-point number that specifies a power.">거듭제곱을 지정하는 배정밀도 부동 소수점 숫자입니다.</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">복소수 <paramref name="value" />를 지수 <paramref name="power" />만큼 거듭제곱한 값입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a complex number.">지정된 복소수를 복소수로 지정된 지수만큼 거듭제곱하여 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">지수만큼 거듭제곱할 복소수입니다.</param>
      <param name="power" vsli:raw="A complex number that specifies a power.">지수를 지정하는 복소수입니다.</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">복소수 <paramref name="value" />를 지수 <paramref name="power" />만큼 거듭제곱한 값입니다.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Real">
      <summary vsli:raw="Gets the real component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">현재 <see cref="T:System.Numerics.Complex" /> 개체의 실수 구성 요소를 가져옵니다.</summary>
      <returns vsli:raw="The real component of a complex number.">복소수의 실수 구성 요소입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
      <summary vsli:raw="Returns the multiplicative inverse of a complex number.">복소수의 역수를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The reciprocal of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 역수입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the sine of the specified complex number.">지정된 복소수의 사인을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The sine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 사인입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic sine of the specified complex number.">지정된 복소수의 하이퍼볼릭 사인을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The hyperbolic sine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 쌍곡선 사인입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
      <summary vsli:raw="Returns the square root of a specified complex number.">지정된 복소수의 제곱근을 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The square root of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 제곱근입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from a double-precision real number and returns the result.">하나의 복소수를 배정밀도 실수에서 빼고 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">뺄 배정밀도 실수 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">뺄 복소수 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과(복소수)입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts one double-precision real number from a complex number and returns the result.">하나의 배정밀도 실수를 복소수에서 빼고 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">뺄 대상 복소수 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">뺄 배정밀도 실수 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과(복소수)입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from another and returns the result.">한 복소수에서 다른 복소수를 뺀 후 결과를 반환합니다.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">뺄 대상 값(피감수)입니다.</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">뺄 값(감수)입니다.</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="left" />에서 <paramref name="right" />를 뺀 결과입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the tangent of the specified complex number.">지정된 복소수의 탄젠트를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The tangent of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 접선입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic tangent of the specified complex number.">지정된 복소수의 하이퍼볼릭 탄젠트를 반환합니다.</summary>
      <param name="value" vsli:raw="A complex number.">복소수입니다.</param>
      <returns vsli:raw="The hyperbolic tangent of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 쌍곡선 접선입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form.">현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.">지정된 문화권별 서식 정보를 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;provider&quot; /&gt;.">
        <paramref name="provider" />에서 지정한 형식에 따른 현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.">실수와 허수 부분에 대해 지정된 서식을 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" />은 유효한 서식 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.">실수와 허수 부분에 대해 지정된 서식과 문화권별 서식 정보를 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">표준 또는 사용자 지정 숫자 서식 문자열입니다.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt;.">
        <paramref name="format" /> 및 <paramref name="provider" />에서 지정한 형식에 따른 현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" />은 유효한 서식 문자열이 아닙니다.</exception>
    </member>
    <member name="F:System.Numerics.Complex.Zero">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to zero.">0과 같은 실수와 0과 같은 허수를 포함하는 새 <see cref="T:System.Numerics.Complex" /> 인스턴스를 반환합니다.</summary>
    </member>
  </members>
</doc>