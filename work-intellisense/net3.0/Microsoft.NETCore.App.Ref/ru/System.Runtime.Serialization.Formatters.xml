<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary vsli:raw="Provides base functionality for the common language runtime serialization formatters.">Предоставляет основные функциональные возможности для форматеров сериализации общеязыковой среды выполнения.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Formatter" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; used with the current formatter.">При переопределении в производном классе возвращает или задает <see cref="T:System.Runtime.Serialization.SerializationBinder" />, используемый с текущим форматером.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; used with the current formatter.">
        <see cref="T:System.Runtime.Serialization.SerializationBinder" />, используемый с текущим форматером.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for the current serialization.">При переопределении в производном классе возвращает или задает <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для текущей сериализации.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for the current serialization.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для текущей сериализации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="When overridden in a derived class, deserializes the stream attached to the formatter when it was created, creating a graph of objects identical to the graph originally serialized into that stream.">При переопределении в производном классе десериализует поток, подсоединенный к форматеру при его создании, создавая граф объектов, идентичный графу, первоначально сериализованному в этот поток.</summary>
      <param name="serializationStream" vsli:raw="The stream to deserialize.">Десериализуемый поток.</param>
      <returns vsli:raw="The top object of the deserialized graph of objects.">Верхний объект десериализованного графа объектов.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary vsli:raw="Returns the next object to serialize, from the formatter's internal work queue.">Возвращает следующий сериализуемый объект из внутренней рабочей очереди форматера.</summary>
      <param name="objID" vsli:raw="The ID assigned to the current object during serialization.">Идентификатор, назначенный текущему объекту при сериализации.</param>
      <returns vsli:raw="The next object to serialize.">Следующий сериализуемый объект.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The next object retrieved from the work queue did not have an assigned ID.">У следующего объекта, извлеченного из рабочей очереди, нет назначенного идентификатора.</exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; used with the current formatter.">Содержит <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />, используемый с текущим форматером.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary vsli:raw="Contains a &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; of the objects left to serialize.">Содержит <see cref="T:System.Collections.Queue" /> объектов, предназначенных для сериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary vsli:raw="Schedules an object for later serialization.">Намечает объект для сериализации.</summary>
      <param name="obj" vsli:raw="The object to schedule for serialization.">Объект, назначенный для сериализации.</param>
      <returns vsli:raw="The object ID assigned to the object.">Идентификатор объекта, назначенный объекту.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="When overridden in a derived class, serializes the graph of objects with the specified root to the stream already attached to the formatter.">При переопределении в производном классе сериализует граф объектов с заданным корнем в поток, уже подсоединенный к форматеру.</summary>
      <param name="serializationStream" vsli:raw="The stream to which the objects are serialized.">Поток, в который сериализуются объекты.</param>
      <param name="graph" vsli:raw="The object at the root of the graph to serialize.">Объект в корне сериализуемого графа.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; used with the current formatter.">При переопределении в производном классе возвращает или задает <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, используемый с текущим форматером.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; used with the current formatter.">
        <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, используемый с текущим форматером.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes an array to the stream already attached to the formatter.">При переопределении в производном классе записывает массив в поток, уже подсоединенный к форматеру.</summary>
      <param name="obj" vsli:raw="The array to write.">Записываемый массив.</param>
      <param name="name" vsli:raw="The name of the array.">Имя массива.</param>
      <param name="memberType" vsli:raw="The type of elements that the array holds.">Тип элементов массива.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a Boolean value to the stream already attached to the formatter.">При переопределении в производном классе записывает логическое значение в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an 8-bit unsigned integer to the stream already attached to the formatter.">При переопределении в производном классе записывает 8-битовое целое число без знака в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a Unicode character to the stream already attached to the formatter.">При переопределении в производном классе записывает знак Юникода в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to the stream already attached to the formatter.">При переопределении в производном классе записывает значение <see cref="T:System.DateTime" /> в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to the stream already attached to the formatter.">При переопределении в производном классе записывает значение <see cref="T:System.Decimal" /> в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a double-precision floating-point number to the stream already attached to the formatter.">При переопределении в производном классе записывает число с плавающей запятой с удвоенной точностью в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 16-bit signed integer to the stream already attached to the formatter.">При переопределении в производном классе записывает 16-битовое целое число со знаком в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 32-bit signed integer to the stream.">При переопределении в производном классе записывает 32-битовое целое число со знаком в поток.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 64-bit signed integer to the stream.">При переопределении в производном классе записывает 64-битовое целое число со знаком в поток.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary vsli:raw="Inspects the type of data received, and calls the appropriate &lt;see langword=&quot;Write&quot; /&gt; method to perform the write to the stream already attached to the formatter.">Проверяет тип полученных данных и вызывает соответствующий метод <see langword="Write" /> для записи в поток, уже подсоединенный к форматеру.</summary>
      <param name="memberName" vsli:raw="The name of the member to serialize.">Сериализуемое имя элемента.</param>
      <param name="data" vsli:raw="The object to write to the stream attached to the formatter.">Объект, записываемый в поток, подсоединенный к форматеру.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes an object reference to the stream already attached to the formatter.">При переопределении в производном классе записывает ссылку на объект в поток, уже подсоединенный к форматеру.</summary>
      <param name="obj" vsli:raw="The object reference to write.">Записываемая ссылка на объект.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
      <param name="memberType" vsli:raw="The type of object the reference points to.">Тип объекта, на который указывает ссылка.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an 8-bit signed integer to the stream already attached to the formatter.">При переопределении в производном классе записывает 8-битовое целое число со знаком в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a single-precision floating-point number to the stream already attached to the formatter.">При переопределении в производном классе записывает число с плавающей запятой с обычной точностью в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to the stream already attached to the formatter.">При переопределении в производном классе записывает значение <see cref="T:System.TimeSpan" /> в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 16-bit unsigned integer to the stream already attached to the formatter.">При переопределении в производном классе записывает 16-битовое целое число без знака в поток, уже подсоединенный к форматеру.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 32-bit unsigned integer to the stream already attached to the formatter.">При переопределении в производном классе записывает 32-битовое целое число без знака в поток, уже присоединенный к модулю форматирования.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 64-bit unsigned integer to the stream already attached to the formatter.">При переопределении в производном классе записывает 64-битовое целое число без знака в поток, уже присоединенный к модулю форматирования.</summary>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes a value of the given type to the stream already attached to the formatter.">При переопределении в производном классе записывает значение заданного типа в поток, уже подсоединенный к форматеру.</summary>
      <param name="obj" vsli:raw="The object representing the value type.">Объект, представляющий тип значения.</param>
      <param name="name" vsli:raw="The name of the member.">Имя элемента.</param>
      <param name="memberType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value type.">
        <see cref="T:System.Type" /> типа значения.</param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary vsli:raw="Represents a base implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.IFormatterConverter&quot; /&gt; interface that uses the &lt;see cref=&quot;T:System.Convert&quot; /&gt; class and the &lt;see cref=&quot;T:System.IConvertible&quot; /&gt; interface.">Представляет базовую реализацию интерфейса <see cref="T:System.Runtime.Serialization.IFormatterConverter" />, использующую класс <see cref="T:System.Convert" /> и интерфейс <see cref="T:System.IConvertible" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.FormatterConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.FormatterConverter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary vsli:raw="Converts a value to the given &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Преобразует значение в заданный <see cref="T:System.Type" />.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; into which &lt;paramref name=&quot;value&quot; /&gt; is converted.">
        <see cref="T:System.Type" />, в который преобразуется <paramref name="value" />.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary vsli:raw="Converts a value to the given &lt;see cref=&quot;T:System.TypeCode&quot; /&gt;.">Преобразует значение в заданный <see cref="T:System.TypeCode" />.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <param name="typeCode" vsli:raw="The &lt;see cref=&quot;T:System.TypeCode&quot; /&gt; into which &lt;paramref name=&quot;value&quot; /&gt; is converted.">
        <see cref="T:System.TypeCode" />, в который преобразуется <paramref name="value" />.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Преобразует значение в <see cref="T:System.Boolean" />.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary vsli:raw="Converts a value to an 8-bit unsigned integer.">Преобразует значение в 8-битовое целое число без знака.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary vsli:raw="Converts a value to a Unicode character.">Преобразует значение в знак Юникода.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Преобразует значение в <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Преобразует значение в <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary vsli:raw="Converts a value to a double-precision floating-point number.">Преобразует значение в число удвоенной точности с плавающей запятой.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary vsli:raw="Converts a value to a 16-bit signed integer.">Преобразует значение в 16-битовое знаковое целое число.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary vsli:raw="Converts a value to a 32-bit signed integer.">Преобразует значение в 32-битовое целое число со знаком.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary vsli:raw="Converts a value to a 64-bit signed integer.">Преобразует значение в 64-битовое целое число со знаком.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">Преобразует значение в <see cref="T:System.SByte" />.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary vsli:raw="Converts a value to a single-precision floating-point number.">Преобразует значение в число обычной точности с плавающей запятой.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует указанный объект в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary vsli:raw="Converts a value to a 16-bit unsigned integer.">Преобразует значение в 16-битовое целое число без знака.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary vsli:raw="Converts a value to a 32-bit unsigned integer.">Преобразует значение в 32-битовое целое число без знака.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary vsli:raw="Converts a value to a 64-bit unsigned integer.">Преобразует значение в 64-битовое целое число без знака.</summary>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary vsli:raw="Serializes and deserializes an object, or an entire graph of connected objects, in binary format.">Сериализует и десериализует объект или полный граф связанных объектов в двоичном формате.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; class with default values.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; class with a given surrogate selector and streaming context.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> с заданными суррогатным селектором и потоковым контекстом.</summary>
      <param name="selector" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; to use. Can be &lt;see langword=&quot;null&quot; /&gt;.">Используемый <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />. Может иметь значение <see langword="null" />.</param>
      <param name="context" vsli:raw="The source and destination for the serialized data.">Новые источник и назначение для сериализованных данных.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary vsli:raw="Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.">Получает или задает поведение десериализатора в части, касающейся поиска и загрузки сборок.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&quot; /&gt; values that specifies the deserializer behavior.">Одно из значений <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />, определяющее поведение десериализатора.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary vsli:raw="(Insecure) Gets or sets an object of type &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that controls the binding of a serialized object to a type.">Получает или задает объект типа <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который управляет привязкой сериализованного объекта к типу.</summary>
      <returns vsli:raw="The serialization binder to use with this formatter.">Связыватель сериализации, используемый с этим форматером.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; for this formatter.">Получает или задает <see cref="T:System.Runtime.Serialization.StreamingContext" /> для этого форматера.</summary>
      <returns vsli:raw="The streaming context to use with this formatter.">Строковый контекст, используемый с этим форматером.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the specified stream into an object graph.">Десериализует заданный поток в граф объекта.</summary>
      <param name="serializationStream" vsli:raw="The stream from which to deserialize the object graph.">Поток, из которого десериализуется граф объекта.</param>
      <returns vsli:raw="The top (root) of the object graph.">Верхняя (корневая) позиция графы объектов.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="serializationStream" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; supports seeking, but its length is 0.&#xA;&#xA; -or-&#xA;&#xA;The input stream does not represent a well-formed &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; serialized payload.&#xA;&#xA;-or-&#xA;&#xA;An error occurred while deserializing an object from the input stream.&#xA;&#xA;The &lt;see langword=&quot;InnerException&quot; /&gt; property may contain more information about the root cause.">
        <paramref name="serializationStream" /> поддерживает поиск, но его длина равна 0.  

или - 
Целевым типом является тип <see cref="T:System.Decimal" />, однако его значение находится за пределами диапазона типа <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; of automatic deserialization the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; performs.">Получает или задает уровень <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> автоматической десериализации, которая осуществляется <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; that represents the current automatic deserialization level.">Уровень <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />, предоставляющий текущий уровень автоматической десериализации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the object, or graph of objects with the specified top (root), to the given stream.">Сериализует объект или граф объектов с указанной вершиной (корнем) в заданный поток.</summary>
      <param name="serializationStream" vsli:raw="The stream to which the graph is to be serialized.">Поток, для которого необходимо сериализовать граф.</param>
      <param name="graph" vsli:raw="The object at the root of the graph to serialize.">Объект в корне сериализуемого графа.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;graph&quot; /&gt; is null.">Значение параметра <paramref name="serializationStream" /> — <see langword="null" />.  

или - 
Значением параметра <paramref name="graph" /> является null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An error has occurred during serialization, such as if an object in the &lt;paramref name=&quot;graph&quot; /&gt; parameter is not marked as serializable.">Во время сериализации произошла ошибка, например, если объект в параметре <paramref name="graph" /> не отмечен как сериализуемый.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that controls type substitution during serialization and deserialization.">Получает или задает <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, управляющий подстановкой типа при сериализации и десериализации.</summary>
      <returns vsli:raw="The surrogate selector to use with this formatter.">Суррогатный селектор, используемый с этим форматером.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary vsli:raw="Gets or sets the format in which type descriptions are laid out in the serialized stream.">Получает или задает формат, в котором описания типов раскладываются в сериализованном потоке.</summary>
      <returns vsli:raw="The style of type layouts to use.">Стиль разбивки типов для использования.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary vsli:raw="Indicates the method that will be used during deserialization for locating and loading assemblies.">Указывает метод, который будет использоваться во время десериализации для расположения и загрузки сборок.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary vsli:raw="In full mode, the assembly used during deserialization must match exactly the assembly used during serialization. The &lt;see cref=&quot;Overload:System.Reflection.Assembly.Load&quot; /&gt; method of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; class is used to load the assembly.">В полном режиме сборка, используемая во время десериализации, должна точно соответствовать сборке, используемой во время сериализации. Метод <see cref="Overload:System.Reflection.Assembly.Load" /> класса <see cref="T:System.Reflection.Assembly" /> используется для загрузки сборки.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary vsli:raw="In simple mode, the assembly used during deserialization need not match exactly the assembly used during serialization. Specifically, the version numbers need not match as the &lt;see cref=&quot;Overload:System.Reflection.Assembly.LoadWithPartialName&quot; /&gt; method is used to load the assembly.">В простом режиме сборка, используемая во время десериализации, не должна точно соответствовать сборке, используемой во время сериализации. В частности, номера версий не должны совпадать, так как метод <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> используется для загрузки сборки.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary vsli:raw="Indicates the format in which type descriptions are laid out in the serialized stream.">Указывает формат, в котором описания типов раскладываются в сериализованном потоке.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary vsli:raw="Indicates that types can be given to all object members and &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; object members.">Указывает, что этот тип можно задавать для всех членов объектов и <see cref="T:System.Runtime.Serialization.ISerializable" /> членов объектов.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary vsli:raw="Indicates that types can be stated only for arrays of objects, object members of type &lt;see cref=&quot;T:System.Object&quot; /&gt;, and &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; non-primitive value types.">Указывает, что эти типы можно назначить для массивов объектов, членов объектов типа <see cref="T:System.Object" /> и неэлементарных типов значений <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary vsli:raw="Indicates that strings can be given in the XSD format rather than SOAP. No string IDs are transmitted.">Указывает, что эти строки можно задавать в формате XSD вместо SOAP. Нет переданных строковых идентификаторов.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary vsli:raw="Allows access to field names and field types of objects that support the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface.">Разрешает доступ к именам и типам полей объектов, которые поддерживают интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary vsli:raw="Gets or sets the field names of serialized objects.">Получает или задает имена полей сериализованных объектов.</summary>
      <returns vsli:raw="The field names of serialized objects.">Имена полей сериализованных объектов.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary vsli:raw="Gets or sets the field types of the serialized objects.">Получает или задает типы полей сериализованных объектов.</summary>
      <returns vsli:raw="The field types of the serialized objects.">Типы полей сериализованных объектов.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary vsli:raw="Specifies the level of automatic deserialization for .NET Framework remoting.">Задает уровень автоматической десериализации для удаленного взаимодействия .NET Framework.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary vsli:raw="The full deserialization level for .NET Framework remoting. It supports all types that remoting supports in all situations.">Полный уровень десериализации для удаленного взаимодействия .NET Framework. Поддерживаются все типы, которые поддерживаются удаленным взаимодействием во всех ситуациях.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary vsli:raw="The low deserialization level for .NET Framework remoting. It supports types associated with basic remoting functionality.">Низкий уровень десериализации для удаленного взаимодействия .NET Framework. Поддерживаются типы, связанные с основными функциональными возможностями удаленного взаимодействия.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary vsli:raw="Provides static methods to aid with the implementation of a &lt;see cref=&quot;T:System.Runtime.Serialization.Formatter&quot; /&gt; for serialization. This class cannot be inherited.">Предоставляет статические методы, упрощающие реализацию <see cref="T:System.Runtime.Serialization.Formatter" /> для сериализации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; can be deserialized with the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property set to &lt;see langword=&quot;Low&quot; /&gt;.">Определяет, возможно ли десериализовать заданный <see cref="T:System.Type" /> со значением свойства <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />, равным <see langword="Low" />.</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to check for the ability to deserialize.">
        <see cref="T:System.Type" /> для проверки возможности десериализации.</param>
      <param name="securityLevel" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property value.">Значение свойства <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is an advanced type and cannot be deserialized when the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property is set to &lt;see langword=&quot;Low&quot; /&gt;.">Параметр <paramref name="t" /> является дополнительным типом и его невозможно сериализовать, когда свойство <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> имеет значение <see langword="Low" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary vsli:raw="Extracts the data from the specified object and returns it as an array of objects.">Извлекает данные из заданного объекта и возвращает их в виде массива объектов.</summary>
      <param name="obj" vsli:raw="The object to write to the formatter.">Объект, записываемый в форматер.</param>
      <param name="members" vsli:raw="The members to extract from the object.">Элементы, извлекаемые из объекта.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains data stored in &lt;paramref name=&quot;members&quot; /&gt; and associated with &lt;paramref name=&quot;obj&quot; /&gt;.">Массив <see cref="T:System.Object" />, содержащий данные, сохраненные в <paramref name="members" /> и связанные с <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; or &lt;paramref name=&quot;members&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; An element of &lt;paramref name=&quot;members&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="obj" /> или параметра <paramref name="members" /> — <see langword="null" />.  
Элемент <paramref name="members" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An element of &lt;paramref name=&quot;members&quot; /&gt; does not represent a field.">Элемент <paramref name="members" /> не представляет поле.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified object type.">Создает новый экземпляр заданного типа объекта.</summary>
      <param name="type" vsli:raw="The type of object to create.">Тип создаваемого объекта.</param>
      <returns vsli:raw="A zeroed object of the specified type.">Обнуленный объект заданного типа.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is not a valid common language runtime type.">Параметр <paramref name="type" /> недопустимого типа общеязыковой среды выполнения.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary vsli:raw="Gets all the serializable members for a class of the specified &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Возвращает все сериализуемые элементы для класса заданного <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The type being serialized.">Сериализуемый тип.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; of the non-transient, non-static members.">Массив типа <see cref="T:System.Reflection.MemberInfo" /> непереходных нестатических элементов.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets all the serializable members for a class of the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; and in the provided &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Возвращает все сериализуемые элементы для класса заданного типа <see cref="T:System.Type" /> и в предоставленном <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="type" vsli:raw="The type being serialized or cloned.">Сериализуемый или клонируемый тип.</param>
      <param name="context" vsli:raw="The context where the serialization occurs.">Контекст, в котором происходит сериализация.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; of the non-transient, non-static members.">Массив типа <see cref="T:System.Reflection.MemberInfo" /> непереходных нестатических элементов.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary vsli:raw="Returns a serialization surrogate for the specified &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;.">Возвращает суррогат сериализации для заданного <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</summary>
      <param name="innerSurrogate" vsli:raw="The specified surrogate.">Заданный суррогат.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt; for the specified &lt;paramref name=&quot;innerSurrogate&quot; /&gt;.">Объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> для указанного узла <paramref name="innerSurrogate" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Looks up the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the specified object in the provided &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Ведет поиск <see cref="T:System.Type" /> заданного объекта в предоставленном <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assem" vsli:raw="The assembly where you want to look up the object.">Сборка, в которой необходимо найти объект.</param>
      <param name="name" vsli:raw="The name of the object.">Имя объекта.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the named object.">
        <see cref="T:System.Type" /> именованного объекта.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assem&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="assem" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified object type.">Создает новый экземпляр заданного типа объекта.</summary>
      <param name="type" vsli:raw="The type of object to create.">Тип создаваемого объекта.</param>
      <returns vsli:raw="A zeroed object of the specified type.">Обнуленный объект заданного типа.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary vsli:raw="Populates the specified object with values for each field drawn from the data array of objects.">Заполняет заданный объект значениями для каждого поля, скопированного из массива данных объектов.</summary>
      <param name="obj" vsli:raw="The object to populate.">Объект для заполнения.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that describes which fields and properties to populate.">Массив <see cref="T:System.Reflection.MemberInfo" />, описывающий заполняемые поля и свойства.</param>
      <param name="data" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that specifies the values for each field and property to populate.">Массив <see cref="T:System.Object" />, задающий значения для каждого заполняемого поля и свойства.</param>
      <returns vsli:raw="The newly populated object.">Вновь заполненный объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt;, &lt;paramref name=&quot;members&quot; /&gt;, or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; An element of &lt;paramref name=&quot;members&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="obj" />, <paramref name="members" /> или <paramref name="data" /> имеет значение <see langword="null" />.  
Элемент <paramref name="members" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;members&quot; /&gt; does not match the length of &lt;paramref name=&quot;data&quot; /&gt;.">Длина <paramref name="members" /> не совпадает с длиной <paramref name="data" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An element of &lt;paramref name=&quot;members&quot; /&gt; is not an instance of &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt;.">Элемент <paramref name="members" /> не является экземпляром <see cref="T:System.Reflection.FieldInfo" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary vsli:raw="Provides functionality for formatting serialized objects.">Предоставляет функциональные возможности для форматирования сериализованных объектов.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that performs type lookups during deserialization.">Возвращает или задает <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который выполняет поиск типа во время десериализации.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that performs type lookups during deserialization.">
        <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который выполняет поиск типа во время десериализации.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for serialization and deserialization.">Возвращает или задает <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для сериализации и десериализации.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for serialization and deserialization.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для сериализации и десериализации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the data on the provided stream and reconstitutes the graph of objects.">Десериализует данные в предоставленный поток и воспроизводит граф объектов.</summary>
      <param name="serializationStream" vsli:raw="The stream that contains the data to deserialize.">Поток, содержащий десериализуемые данные.</param>
      <returns vsli:raw="The top object of the deserialized graph.">Верхний объект десериализованного графа.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes an object, or graph of objects with the given root to the provided stream.">Сериализует объект или граф объектов с заданным корнем в предоставляемом потоке.</summary>
      <param name="serializationStream" vsli:raw="The stream where the formatter puts the serialized data. This stream can reference a variety of backing stores (such as files, network, memory, and so on).">Поток, в который модуль форматирования помещает сериализованные данные. Этот поток способен ссылаться на многочисленные резервные хранилища (файлы, сеть, память и т.д.).</param>
      <param name="graph" vsli:raw="The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized.">Объект или корень графа объекта для сериализации. Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; used by the current formatter.">Возвращает или задает <see cref="T:System.Runtime.Serialization.SurrogateSelector" />, используемый текущим форматером.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; used by this formatter.">
        <see cref="T:System.Runtime.Serialization.SurrogateSelector" />, используемый этим модулем форматирования.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary vsli:raw="Implements a serialization surrogate selector that allows one object to perform serialization and deserialization of another.">Реализует селектор суррогата сериализации, который позволяет одному объекту выполнять сериализацию и десериализацию другого.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the provided &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the object.">Заполняет предоставленный <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации объекта.</summary>
      <param name="obj" vsli:raw="The object to serialize.">Объект для сериализации.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Populates the object using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">Заполняет объект с помощью сведений в <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj" vsli:raw="The object to populate.">Объект для заполнения.</param>
      <param name="info" vsli:raw="The information to populate the object.">Сведения для заполнения объекта.</param>
      <param name="context" vsli:raw="The source from which the object is deserialized.">Источник, из которого десериализуется объект.</param>
      <param name="selector" vsli:raw="The surrogate selector where the search for a compatible surrogate begins.">Суррогатный селектор, в котором начинается поиск совместимого знака-заместителя.</param>
      <returns vsli:raw="The populated deserialized object.">Заполняет десериализованный объект.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary vsli:raw="Indicates a serialization surrogate selector class.">Указывает класс селектора суррогата сериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Specifies the next &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; for surrogates to examine if the current instance does not have a surrogate for the specified type and assembly in the specified context.">Задает следующий <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> для суррогатов, если у текущего экземпляра отсутствует суррогат для заданного типа и сборки в заданном контексте.</summary>
      <param name="selector" vsli:raw="The next surrogate selector to examine.">Следующий проверяемый селектор суррогата.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary vsli:raw="Returns the next surrogate selector in the chain.">Возвращает следующий селектор суррогата в цепочку.</summary>
      <returns vsli:raw="The next surrogate selector in the chain or &lt;see langword=&quot;null&quot; /&gt;.">Следующий селектор суррогата в цепочке или <see langword="null" />.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary vsli:raw="Finds the surrogate that represents the specified object's type, starting with the specified surrogate selector for the specified serialization context.">Находит суррогат, который представляет тип заданного объекта, начиная с заданного селектора суррогата для заданного контекста сериализации.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of object (class) that needs a surrogate.">
        <see cref="T:System.Type" /> объекта (класса), для которого необходим суррогат.</param>
      <param name="context" vsli:raw="The source or destination context for the current serialization.">Контекст источника или назначения для текущей сериализации.</param>
      <param name="selector" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that holds a reference to the surrogate selector where the appropriate surrogate was found. This parameter is passed uninitialized.">Когда этот метод возвращается, содержит <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, хранящий ссылку на селектор суррогата, в котором найден соответствующий суррогат. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="The appropriate surrogate for the given type in the given context.">Соответствующий суррогат для заданного типа в заданном контексте.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary vsli:raw="Generates IDs for objects.">Создает идентификаторы для объектов.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary vsli:raw="Returns the ID for the specified object, generating a new ID if the specified object has not already been identified by the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;.">Возвращает идентификатор для заданного объекта, создавая новый идентификатор, если заданный объект уже не был идентифицирован <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
      <param name="obj" vsli:raw="The object you want an ID for.">Объект, для которого необходим идентификатор.</param>
      <param name="firstTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; was not previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="obj" /> не был ранее известен <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; в противном случае — <see langword="false" />.</param>
      <returns vsli:raw="The object's ID is used for serialization. &lt;paramref name=&quot;firstTime&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; if this is the first time the object has been identified; otherwise, it is set to &lt;see langword=&quot;false&quot; /&gt;.">Идентификатор объекта используется для сериализации. Параметру <paramref name="firstTime" /> присваивается значение <see langword="true" />, если объект идентифицируется в первый раз; в противном случае присваивается значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; has been asked to keep track of too many objects.">Сделан запрос <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> для сохранения дорожек слишком большого количества объектов.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary vsli:raw="Determines whether an object has already been assigned an ID.">Определяет, был ли объекту уже присвоен идентификатор.</summary>
      <param name="obj" vsli:raw="The object you are asking for.">Запрашиваемый объект.</param>
      <param name="firstTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; was not previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="obj" /> не был ранее известен <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; в противном случае — <see langword="false" />.</param>
      <returns vsli:raw="The object ID of &lt;paramref name=&quot;obj&quot; /&gt; if previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, zero.">Идентификатор объекта имеет значение <paramref name="obj" />, если он был ранее известен <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />, в противном случае — ноль.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary vsli:raw="Keeps track of objects as they are deserialized.">Отслеживает объекты при их десериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectManager&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
      <param name="selector" vsli:raw="The surrogate selector to use. The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; determines the correct surrogate to use when deserializing objects of a given type. At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.">Используемый суррогатный селектор. <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> определяет соответствующий суррогат для использования при десериализации объектов заданного типа. Во время десериализации суррогатный селектор создает новый экземпляр объекта из сведений, переданных на поток.</param>
      <param name="context" vsli:raw="The streaming context. The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; is not used by &lt;see langword=&quot;ObjectManager&quot; /&gt;, but is passed as a parameter to any objects implementing &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or having a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. These objects can take specific actions depending on the source of the information to deserialize.">Контекст потоковой передачи. <see cref="T:System.Runtime.Serialization.StreamingContext" /> не используется <see langword="ObjectManager" />, но передается в качестве параметра любым объектам, реализующим <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеющим <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Эти объекты могут выполнять определенные действия в зависимости от источника сведений для десериализации.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary vsli:raw="Performs all the recorded fixups.">Выполняет все записанные адресные привязки.</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="A fixup was not successfully completed.">Неудачное завершение адресной привязки.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary vsli:raw="Returns the object with the specified object ID.">Возвращает объект с заданным идентификатором объекта.</summary>
      <param name="objectID" vsli:raw="The ID of the requested object.">Идентификатор запрашиваемого объекта.</param>
      <returns vsli:raw="The object with the specified object ID if it has been previously stored or &lt;see langword=&quot;null&quot; /&gt; if no such object has been registered.">Объект с заданным идентификатором объекта, если он был перед этим сохранен, или <see langword="null" />, если нет такого зарегистрированного объекта.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary vsli:raw="Raises the deserialization event to any registered object that implements &lt;see cref=&quot;T:System.Runtime.Serialization.IDeserializationCallback&quot; /&gt;.">Вызывает событие десериализации для любого зарегистрированного объекта, который реализует <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary vsli:raw="Invokes the method marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.OnDeserializingAttribute&quot; /&gt;.">Вызывает метод, помеченный <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
      <param name="obj" vsli:raw="The instance of the type that contains the method to be invoked.">Экземпляр типа, содержащего вызываемый метод.</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary vsli:raw="Records a fixup for one element in an array.">Записывает адресную привязку одного элемента в массив.</summary>
      <param name="arrayToBeFixed" vsli:raw="The ID of the array used to record a fixup.">Идентификатор массива, используемого для записи адресной привязки.</param>
      <param name="index" vsli:raw="The index within &lt;c&gt;arrayFixup&lt;/c&gt; that a fixup is requested for.">Индекс в <c>arrayFixup</c>, для которого запрашивается адресная привязка.</param>
      <param name="objectRequired" vsli:raw="The ID of the object that the current array element will point to after fixup is completed.">Идентификатор объекта, который указывает текущий элемент массива после завершения адресной привязки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;arrayToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">Параметр <paramref name="arrayToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="index" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary vsli:raw="Records fixups for the specified elements in an array, to be executed later.">Записывает адресные привязки заданных элементов в массив, который будет выполнен позже.</summary>
      <param name="arrayToBeFixed" vsli:raw="The ID of the array used to record a fixup.">Идентификатор массива, используемого для записи адресной привязки.</param>
      <param name="indices" vsli:raw="The indexes within the multidimensional array that a fixup is requested for.">Индексы в многомерном массиве, для которого регистрируется адресная привязка.</param>
      <param name="objectRequired" vsli:raw="The ID of the object the array elements will point to after fixup is completed.">Идентификатор объекта, который укажет элементы массива после завершения адресной привязки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;arrayToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">Параметр <paramref name="arrayToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;indices&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="indices" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary vsli:raw="Records a fixup for an object member, to be executed later.">Записывает адресную привязку для элемента объекта, который будет выполнен позже.</summary>
      <param name="objectToBeFixed" vsli:raw="The ID of the object that needs the reference to &lt;paramref name=&quot;objectRequired&quot; /&gt;.">Идентификатор объекта, требующего ссылку на <paramref name="objectRequired" />.</param>
      <param name="memberName" vsli:raw="The member name of &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; where the fixup will be performed.">Имя элемента <paramref name="objectToBeFixed" />, где будет выполнена адресная привязка.</param>
      <param name="objectRequired" vsli:raw="The ID of the object required by &lt;paramref name=&quot;objectToBeFixed&quot; /&gt;.">Идентификатор объекта, требуемого <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;objectToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">Параметр <paramref name="objectToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="memberName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary vsli:raw="Records a fixup for a member of an object, to be executed later.">Записывает адресную привязку для элемента объекта, который будет выполнен позже.</summary>
      <param name="objectToBeFixed" vsli:raw="The ID of the object that needs the reference to the &lt;paramref name=&quot;objectRequired&quot; /&gt; object.">Идентификатор объекта, требующего ссылку на объект <paramref name="objectRequired" />.</param>
      <param name="member" vsli:raw="The member of &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; where the fixup will be performed.">Элемент <paramref name="objectToBeFixed" />, где будет выполнена адресная привязка.</param>
      <param name="objectRequired" vsli:raw="The ID of the object required by &lt;paramref name=&quot;objectToBeFixed&quot; /&gt;.">Идентификатор объекта, требуемого <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">Параметр <paramref name="objectToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="member" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary vsli:raw="Registers an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;.">Регистрирует объект при его десериализации, сопоставляя его с <paramref name="objectID" />.</summary>
      <param name="obj" vsli:raw="The object to register.">Объект для регистрации.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">Идентификатор объекта для регистрации.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary vsli:raw="Registers an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used with it.">Регистрирует объект при его десериализации, сопоставляя его с <paramref name="objectID" /> и записывая используемый с ним <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj" vsli:raw="The object to register.">Объект для регистрации.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">Идентификатор объекта для регистрации.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> используется, если параметр <paramref name="obj" /> реализует объект <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеет объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> завершается с помощью любых требуемых сведений об адресной привязке, а затем передается необходимому объекту, когда объект завершается.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary vsli:raw="Registers a member of an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">Регистрирует элемент объекта при его десериализации, сопоставляя его с <paramref name="objectID" /> и записывая <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj" vsli:raw="The object to register.">Объект для регистрации.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">Идентификатор объекта для регистрации.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> используется, если параметр <paramref name="obj" /> реализует объект <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеет объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> завершается с помощью любых требуемых сведений об адресной привязке, а затем передается необходимому объекту, когда объект завершается.</param>
      <param name="idOfContainingObj" vsli:raw="The ID of the object that contains &lt;paramref name=&quot;obj&quot; /&gt;. This parameter is required only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">Идентификатор объекта, который содержит <paramref name="obj" />. Этот параметр требуется только в случае, если <paramref name="obj" /> является типом значения.</param>
      <param name="member" vsli:raw="The field in the containing object where &lt;paramref name=&quot;obj&quot; /&gt; exists. This parameter has meaning only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">Поле в содержащем объекте, где находится <paramref name="obj" />. Этот параметр имеет смысл только в случае, если <paramref name="obj" /> является типом значения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; and &lt;paramref name=&quot;member&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />, или <paramref name="member" /> не является <see cref="T:System.Reflection.FieldInfo" />, а <paramref name="member" /> не имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary vsli:raw="Registers a member of an array contained in an object while it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">Регистрирует элемент массива, содержащийся в объекте при его десериализации, сопоставляя его с <paramref name="objectID" /> и записывая <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj" vsli:raw="The object to register.">Объект для регистрации.</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">Идентификатор объекта для регистрации.</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> используется, если параметр <paramref name="obj" /> реализует объект <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеет объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> завершается с помощью любых требуемых сведений об адресной привязке, а затем передается необходимому объекту, когда объект завершается.</param>
      <param name="idOfContainingObj" vsli:raw="The ID of the object that contains &lt;paramref name=&quot;obj&quot; /&gt;. This parameter is required only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">Идентификатор объекта, который содержит <paramref name="obj" />. Этот параметр требуется только в случае, если <paramref name="obj" /> является типом значения.</param>
      <param name="member" vsli:raw="The field in the containing object where &lt;paramref name=&quot;obj&quot; /&gt; exists. This parameter has meaning only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">Поле в содержащем объекте, где находится <paramref name="obj" />. Этот параметр имеет смысл только в случае, если <paramref name="obj" /> является типом значения.</param>
      <param name="arrayIndex" vsli:raw="If &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.ValueType&quot; /&gt; and a member of an array, &lt;paramref name=&quot;arrayIndex&quot; /&gt; contains the index within that array where &lt;paramref name=&quot;obj&quot; /&gt; exists. &lt;paramref name=&quot;arrayIndex&quot; /&gt; is ignored if &lt;paramref name=&quot;obj&quot; /&gt; is not both a &lt;see cref=&quot;T:System.ValueType&quot; /&gt; and a member of an array.">Если параметр <paramref name="obj" /> является объектом <see cref="T:System.ValueType" /> и элементом массива, параметр <paramref name="arrayIndex" /> содержит индекс в том массиве, где находится <paramref name="obj" />. Параметр <paramref name="arrayIndex" /> игнорируется, если параметр <paramref name="obj" /> не является ни объектом <see cref="T:System.ValueType" />, ни элементом массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; and &lt;paramref name=&quot;member&quot; /&gt; isn't &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />, или <paramref name="member" /> не является <see cref="T:System.Reflection.FieldInfo" />, а <paramref name="member" /> не имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary vsli:raw="Allows users to control class loading and mandate what class to load.">Позволяет пользователям управлять загрузкой классов и выбирать класс для загрузки.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationBinder" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary vsli:raw="When overridden in a derived class, controls the binding of a serialized object to a type.">При переопределении в производном классе управляет привязкой сериализованного объекта к типу.</summary>
      <param name="serializedType" vsli:raw="The type of the object the formatter creates a new instance of.">Тип объекта, новый экземпляр которого создает форматер.</param>
      <param name="assemblyName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; name of the serialized object.">Задает имя <see cref="T:System.Reflection.Assembly" /> сериализованного объекта.</param>
      <param name="typeName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; name of the serialized object.">Указывает имя <see cref="T:System.Type" /> сериализованного объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, controls the binding of a serialized object to a type.">При переопределении в производном классе управляет привязкой сериализованного объекта к типу.</summary>
      <param name="assemblyName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; name of the serialized object.">Задает имя <see cref="T:System.Reflection.Assembly" /> сериализованного объекта.</param>
      <param name="typeName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; name of the serialized object.">Указывает имя <see cref="T:System.Type" /> сериализованного объекта.</param>
      <returns vsli:raw="The type of the object the formatter creates a new instance of.">Тип объекта, новый экземпляр которого создает форматер.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary vsli:raw="Manages serialization processes at run time. This class cannot be inherited.">Управляет процессами сериализации во время исполнения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationObjectManager&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationObjectManager" />.</summary>
      <param name="context" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; class that contains information about the current serialization operation.">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащего сведения о текущей операции сериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary vsli:raw="Invokes the OnSerializing callback event if the type of the object has one; and registers the object for raising the OnSerialized event if the type of the object has one.">Вызывает событие обратного вызова OnSerializing, если тип объекта содержит его, и регистрирует объект для вызова события OnSerialized, если тип объекта содержит его.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary vsli:raw="Registers the object upon which events will be raised.">Регистрирует объект, по которому будут созданы события.</summary>
      <param name="obj" vsli:raw="The object to register.">Объект для регистрации.</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary vsli:raw="Assists formatters in selection of the serialization surrogate to delegate the serialization or deserialization process to.">Содействует форматерам при выборе знака-заместителя сериализации для делегирования в обработку сериализации или десериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.SurrogateSelector" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary vsli:raw="Adds a surrogate to the list of checked surrogates.">Добавляет суррогат в список проверенных суррогатов.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which the surrogate is required.">
        <see cref="T:System.Type" />, для которого требуется суррогат.</param>
      <param name="context" vsli:raw="The context-specific data.">Связанные с контекстом данные.</param>
      <param name="surrogate" vsli:raw="The surrogate to call for this type.">Суррогат для вызова этого типа.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; or &lt;paramref name=&quot;surrogate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="type" /> или параметра <paramref name="surrogate" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A surrogate already exists for this type and context.">Для этого типа и контекста суррогат уже существует.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that can handle a particular object type to the list of surrogates.">Добавляет заданный <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, который может обрабатывать конкретный тип объекта для списка суррогатов.</summary>
      <param name="selector" vsli:raw="The surrogate selector to add.">Добавляемый суррогатный селектор.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;selector&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="selector" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The selector is already on the list of selectors.">Данный селектор уже находится в списке селекторов.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary vsli:raw="Returns the next selector on the chain of selectors.">Возвращает следующий селектор в цепочку селекторов.</summary>
      <returns vsli:raw="The next &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; on the chain of selectors.">Следующий <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> в цепочке селекторов.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary vsli:raw="Returns the surrogate for a particular type.">Возвращает суррогат для определенного типа.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which the surrogate is requested.">
        <see cref="T:System.Type" />, для которого запрашивается суррогат.</param>
      <param name="context" vsli:raw="The streaming context.">Потоковый контекст.</param>
      <param name="selector" vsli:raw="The surrogate to use.">Используемый суррогат.</param>
      <returns vsli:raw="The surrogate for a particular type.">Суррогат для определенного типа.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Removes the surrogate associated with a given type.">Удаляет суррогат, связанный с заданным типом.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which to remove the surrogate.">
        <see cref="T:System.Type" />, для которого удаляется суррогат.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; for the current surrogate.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> для текущего суррогата.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
  </members>
</doc>