<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Задает количество проверок ввода-вывода, которые выполняют объекты <see cref="T:System.Xml.XmlReader" /> и <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>Объект <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.Xml.XmlWriter" /> автоматически определяет, проверять ли весь документ или фрагмент документа, и выполняет соответствующую проверку. В случае использования оболочки для другого объекта <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.Xml.XmlWriter" /> внешний объект не выполняет никаких дополнительных проверок на соответствие. Проверка на соответствие выполняется базовым объектом.  
Сведения об определении уровня соответствия см. в описании свойств <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" /> и <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" />.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>Данные XML соответствуют правилам для XML-документов версии 1.0 с правильным форматом в соответствии с определением консорциума W3C. Этот уровень проверки гарантирует, что любое средство обработки сможет обработать считываемый поток как XML-документ версии 1.0.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>Данные XML являются XML-фрагментом правильного формата в соответствии с определением консорциума W3C.  Этот уровень соответствия предполагает, что документ XML может не иметь корневого элемента, но должен иметь правильный формат. Этот уровень проверки гарантирует, что любое средство обработки сможет обработать считываемый поток как сущность XML 1.0 с внешним синтаксическим анализом.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Задает параметры для обработки DTD. Перечисление <see cref="T:System.Xml.DtdProcessing" /> используется классом <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Элемент DOCTYPE будет проигнорирован. Обработка DTD не выполняется и при выводе DTD или DOCTYPE будет потерян.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Используется для анализа DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Указывает, что при обнаружении DTD будет создано исключение <see cref="T:System.Xml.XmlException" /> с сообщением о том, что DTD запрещены. Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>Задает способ обработки сущностей средством <see cref="T:System.Xml.XmlTextReader" /> или <see cref="T:System.Xml.XmlValidatingReader" />.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>Расширяет сущности символов и возвращает общие сущности как узлы <see cref="F:System.Xml.XmlNodeType.EntityReference" />. 
Необходимо вызвать <see cref="Overload:System.Xml.XmlReader.ResolveEntity" />, чтобы просмотреть, как будут расширены общие сущности. Это позволяет оптимизировать работу с сущностями, расширяя сущность только при первом ее использовании.  
Если задано значение <see langword="ExpandCharEntities" />, вызов чтения метода <see cref="Overload:System.Xml.XmlReader.GetAttribute" /> расширяет все сущности (общие сущности и сущности символов).</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>Расширяет все сущности и возвращает расширенные узлы.
Узлы <see cref="F:System.Xml.XmlNodeType.EntityReference" /> не возвращаются. Текст сущности расширяется там, где находятся ссылки на сущности.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>Задает параметры форматирования для <see cref="T:System.Xml.XmlTextWriter" />.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>Указывает, что дочерние элементы должны иметь отступы в соответствии с параметрами <see cref="P:System.Xml.XmlTextWriter.Indentation" /> и <see cref="P:System.Xml.XmlTextWriter.IndentChar" />.
Этот параметр делает отступ только у содержимого элемента. Смешанное содержимое не затрагивается. Определения этих терминов в XML 1.0 см. в документации консорциума World Wide Web (W3C) по содержимому элемента и смешанному содержимому.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>Специальное форматирование не применено. Это значение по умолчанию.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary>Представляет сопоставитель потока ресурсов приложения.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary>Возвращает поток ресурсов приложения из заданного универсального кода ресурса (URI).</summary>
      <param name="relativeUri">Относительный URI-адрес.</param>
      <returns>Поток ресурсов приложения.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>Позволяет классу возвращать объект <see cref="T:System.Xml.XmlNode" /> из текущего контекста или позиции.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlNode" /> для текущей позиции.</summary>
      <returns>Объект <see langword="XmlNode" /> для текущей позиции.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Предоставляет интерфейс, позволяющий классу возвращать информацию о строке и положении в ней.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке.</summary>
      <returns>Значение <see langword="true" />, если могут быть предоставлены свойства <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> и <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Возвращает номер текущей строки.</summary>
      <returns>Номер текущей строки или значение 0, если информация о строке недоступна (например, метод <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> возвращает значение <see langword="false" />).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Возвращает позицию в текущей строке.</summary>
      <returns>Текущее положение строки или значение 0, если информация о строке недоступна (например, метод <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> возвращает значение <see langword="false" />).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Предоставляет доступ только для чтения к набору сопоставлений префиксов и пространств имен.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Получает коллекцию определенных соответствий префиксов и пространств имен, которые в настоящий момент находятся в области.</summary>
      <param name="scope">С помощью значения <see cref="T:System.Xml.XmlNamespaceScope" /> указывается тип узлов пространства имен, которые следует возвратить.</param>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий текущие пространства имен в области.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Получает универсальный код ресурса (URI) пространства имен, соответствующий заданному префиксу.</summary>
      <param name="prefix">Префикс, URI пространства имен которого нужно найти.</param>
      <returns>URI пространства имен, сопоставленное с префиксом; <see langword="null" />, если префикс не сопоставлен с URI пространства имен.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Получает префикс, соответствующий заданному универсальному коду ресурса (URI) пространства имен.</summary>
      <param name="namespaceName">URI пространства имен, префикс которого нужно найти.</param>
      <returns>Префикс, сопоставленный с URI пространства имен; <see langword="null" /> если URI пространства имен не сопоставлен с префиксом.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Указывает, нужно ли удалять дубликаты объявлений в объекте <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Указывает, что дубликаты объявлений пространств имен не будут удалены.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Указывает, что дубликаты объявлений будут удалены. Чтобы дубликат пространства имен был удален, должны совпадать префиксы пространств имен.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Реализует однопотоковый объект <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Атомизирует заданную строку и добавляет ее к объекту <see langword="NameTable" />.</summary>
      <param name="key">Массив символов, содержащий добавляемую строку.</param>
      <param name="start">Отсчитываемый от нуля индекс в массиве, задающий первый символ строки.</param>
      <param name="len">Количество знаков в строке.</param>
      <returns>Атомизированная строка или существующая строка, если таковая уже имеется в объекте <see langword="NameTable" />. Если параметр <paramref name="len" /> имеет значение нуль, возвращается String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  
-или- 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 

или - 
<paramref name="len" /> &gt;= <paramref name="key" />.Length 
Вышеприведенные условия не вызывают исключение, если значение <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Атомизирует заданную строку и добавляет ее к объекту <see langword="NameTable" />.</summary>
      <param name="key">Строка для добавления.</param>
      <returns>Атомизированная строка или существующая строка, если таковая уже имеется в объекте <see langword="NameTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Получает атомизированную строку, содержащую те же символы, что и заданный диапазон символов в данном массиве.</summary>
      <param name="key">Массив символов, содержащий искомое имя.</param>
      <param name="start">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени.</param>
      <param name="len">Число символов в имени.</param>
      <returns>Атомизированная строка или значение <see langword="null" />, если строка еще не атомизирована. Если параметр <paramref name="len" /> имеет значение нуль, возвращается String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  
-или- 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 

или - 
<paramref name="len" /> &gt;= <paramref name="key" />.Length 
Вышеприведенные условия не вызывают исключение, если значение <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Получает атомизированную строку с заданным значением.</summary>
      <param name="value">Искомое имя.</param>
      <returns>Объект атомизированной строки или значение <see langword="null" />, если строка еще не атомизирована.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Задает способ обработки разрывов строк.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Символы новой строки преобразовываются. Благодаря этому параметру сохраняются все символы, когда результат читается нормализующим считывателем <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Символы новой строки не меняются. Выходные данные совпадают со входными.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Символы новой строки заменяются, чтобы соответствовать символу, заданному в свойстве <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Задает состояние читателя.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>Вызван метод <see cref="M:System.Xml.XmlReader.Close" />.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>Конец файла успешно достигнут.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Произошла ошибка, препятствующая продолжению операции чтения.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>Метод <see langword="Read" /> не был вызван.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>Вызван метод <see langword="Read" />. Для читателя можно вызвать дополнительные методы.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary>Перечисление <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> используется распознавателем <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />и определяет известные DTD, распознаваемые с помощью <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary>Указывает, что объект <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> будет распознавать все поддерживаемые в данный момент DTD. Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary>Указывает, что <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> не будет распознавать никакие предопределенные DTD.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary>Указывает, что <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> будет распознавать DTD и сущности, определенные в спецификации RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary>Указывает, что <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> будет распознавать DTD и сущности, определенные в спецификации XHTML 1.0.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary>Представляет класс, который используется для предварительной записи в кэш определений DTD и потоков XML.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанными предварительно загруженными известными DTD.</summary>
      <param name="preloadedDtds">Известные DTD, которые необходимо предварительно записать в кэш.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанным резервным распознавателем.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> или собственный сопоставитель пользователя.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанным резервным распознавателем и предварительно загруженными известными DTD.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> или собственный сопоставитель пользователя.</param>
      <param name="preloadedDtds">Известные DTD, которые необходимо предварительно записать в кэш.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанным резервным распознавателем, предварительно загруженными известными DTD и компаратором проверки на равенство URI.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> или собственный сопоставитель пользователя.</param>
      <param name="preloadedDtds">Известные DTD, которые необходимо предварительно записать в кэш.</param>
      <param name="uriComparer">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении кодов URI.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary>Добавляет массив байт к хранилищу <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет его URI. Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Байтовый массив с данными, соответствующий заданному коду URI.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary>Добавляет массив байт к хранилищу <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет его URI. Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Байтовый массив с данными, соответствующий заданному коду URI.</param>
      <param name="offset">Позиция в заданном байтовом массиве, с которой начинаются данные.</param>
      <param name="count">Количество байтов, которое следует считать из байтового массива, начиная с указанной позиции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="count" /> меньше 0.  

или - 
Длина <paramref name="value" /> за вычетом <paramref name="offset" /> меньше значения <paramref name="count." /></exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary>Добавляет <see cref="T:System.IO.Stream" /> к хранилищу <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет его URI. Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Объект <see cref="T:System.IO.Stream" /> с данными, соответствующий заданному коду URI.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="uri" /> или <paramref name="value" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary>Добавляет строку с предварительно загруженными данных в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет ее с универсальным кодом ресурса (URI). Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Объект <see langword="String" /> с данными, соответствующий заданному коду URI.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="uri" /> или <paramref name="value" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary>Задает учетные данные, используемые для аутентификации базового <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>Учетные данные, используемые для аутентификации базового веб-запроса.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Сопоставляет код URI объекту, содержащему фактический ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В текущей версии .NET Framework для Silverlight этот параметр не используется при распознавании URI. Этот параметр предоставлен с целью расширения возможностей в будущем. Например, этот параметр можно сопоставить роли xlink:role и использовать в качестве зависящего от реализации аргумента в других сценариях.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. Распознаватель <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> поддерживает объекты <see cref="T:System.IO.Stream" /> и объекты <see cref="T:System.IO.TextReader" /> для кодов URI, добавленных в виде значений типа <see langword="String" />. Если запрашиваемый тип не поддерживается распознавателем, создается исключение. Чтобы определить, поддерживается ли определенный тип <see langword="Type" /> распознавателем, воспользуйтесь методом <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" />.</param>
      <returns>Объект <see cref="T:System.IO.Stream" /> или <see cref="T:System.IO.TextReader" />, соответствующий фактическому источнику.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="absoluteUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Не удается разрешить URI, переданный в параметре <paramref name="absoluteUri" />.  

или - 
Параметр <paramref name="ofObjectToReturn" /> не относится к поддерживаемому типу.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Асинхронно сопоставляет универсальный код ресурса (URI) с объектом, содержащим фактический ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В текущей версии .NET Framework для Silverlight этот параметр не используется при распознавании URI. Этот параметр предоставлен с целью расширения возможностей в будущем. Например, этот параметр можно сопоставить роли xlink:role и использовать в качестве зависящего от реализации аргумента в других сценариях.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. Распознаватель <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> поддерживает объекты <see cref="T:System.IO.Stream" /> и объекты <see cref="T:System.IO.TextReader" /> для кодов URI, добавленных в виде значений типа <see langword="String" />. Если запрашиваемый тип не поддерживается распознавателем, создается исключение. Чтобы определить, поддерживается ли определенный тип <see langword="Type" /> распознавателем, воспользуйтесь методом <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" />.</param>
      <returns>Объект <see cref="T:System.IO.Stream" /> или <see cref="T:System.IO.TextReader" />, соответствующий фактическому источнику.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary>Получает коллекцию предварительно загруженных кодов URI.</summary>
      <returns>Коллекция предварительно загруженных кодов URI.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary>Удаляет данные, соответствующие коду URI, из распознавателя <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
      <param name="uri">URI данных, которые необходимо удалить из хранилища <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="uri" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>Разрешает абсолютный URI на основе базового и относительного URI.</summary>
      <param name="baseUri">Базовый URI, используемый для разрешения относительного URI.</param>
      <param name="relativeUri">URI, которые нужно разрешить. URI может быть как абсолютным, так и относительным. Если URI является абсолютным, данное значение замещает значение <paramref name="baseUri" />. Если относительным, то абсолютный URI является сочетанием относительного и <paramref name="baseUri" />.</param>
      <returns>
        <see cref="T:System.Uri" />, предоставляющий абсолютный универсальный код ресурса (URI), или значение <see langword="null" />, если невозможно разрешить относительный универсальный код ресурса (URI).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary>Определяет, поддерживает ли сопоставитель другие <see cref="T:System.Type" /> s, чем просто <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri">Абсолютный универсальный код ресурса (URI) для проверки.</param>
      <param name="type">Возвращаемое свойство <see cref="T:System.Type" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Type" /> поддерживается; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> — <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary>Определяет набор сведений после проверки схемы для проверенного узла XML.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary>Получает значение, которое отражает, установлен ли проверенный узел XML в результате значения по умолчанию, применяемого в ходе проверки XSD-схемы.</summary>
      <returns>
        <see langword="true" />, если проверенный узел XML установлен в результате значения по умолчанию, применяемого в ходе проверки схемы; в противном случае, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary>Получает значение, которое отражает, может ли проверенный узел XML иметь нулевое значение.</summary>
      <returns>
        <see langword="true" />, если проверенный узел XML имеет нулевое значение; в противном случае, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary>Получает динамический тип схемы для проверенного узла XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющий динамический тип схемы для данного проверенного узла XML.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary>Получает компилированный объект <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, соответствующий этому проверенному узлу XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, соответствующий этому XML-узлу.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary>Получает компилированный объект <see cref="T:System.Xml.Schema.XmlSchemaElement" />, соответствующий этому проверенному узлу XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaElement" />, соответствующий этому XML-узлу.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary>Получает статический тип XSD-схемы данного проверенного узла XML.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> данного проверенного XML-узла.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary>Получает значение <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> данного проверенного узла XML.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> данного проверенного XML-узла.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>Возвращает подробные сведения, связанные с <see langword="ValidationEventHandler" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>Получает исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />, связанное с событием проверки.</summary>
      <returns>Исключение <see langword="XmlSchemaException" />, связанное с событием проверки.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>Получает текстовое описание, соответствующее событию проверки.</summary>
      <returns>Текстовое описание.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>Получает сведения о серьезности события проверки.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSeverityType" />, представляющее серьезность события проверки.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>Представляет метод обратного вызова, обрабатывающий события проверки схемы XML и <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</summary>
      <param name="sender">Источник события.  
 Примечание. Определите тип отправителя перед его использованием в коде. Невозможно предполагать, что отправитель является экземпляром определенного типа. Также нет гарантии, что отправитель не равняется NULL. Все операции приведения необходимо помещать внутрь алгоритмов, обрабатывающих сбои.</param>
      <param name="e">Данные события.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary>Представляет типизированное значение проверяемого XML-элемента или атрибута. Класс <see cref="T:System.Xml.Schema.XmlAtomicValue" /> не поддерживает наследование.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary>Возвращает копию данного объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>Копия объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" /> данного объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary>Возвращает значение, указывающее, является ли проверяемый XML- элемент или атрибут узлом XPath или атомарным значением.</summary>
      <returns>
        <see langword="true" />, если проверяемый XML-элемент или атрибут является узлом XPath; <see langword="false" />, если проверяемый XML-элемент или атрибут является атомарным значением.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns>Копия данного объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary>Возвращает значение <see langword="string" /> проверяемого XML-элемента или атрибута.</summary>
      <returns>Значение <see langword="string" /> проверяемого XML-элемента или атрибута.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary>Возвращает текущий проверяемый XML-элемент или атрибут как объект в рамке наиболее подходящего типа Microsoft .NET Framework согласно типу его схемы</summary>
      <returns>Текущий проверяемый XML-элемент или атрибут как объект в рамке наиболее подходящего типа платформы .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary>Возвращает значение <see langword="string" /> проверяемого XML-элемента или атрибута.</summary>
      <returns>Значение <see langword="string" /> проверяемого XML-элемента или атрибута.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута, приведенное к указанному тип, используя указанный объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространств имен.</summary>
      <param name="type">Тип, к которому требуется привести возвращаемое значение проверяемого XML-элемента или атрибута.</param>
      <param name="nsResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <returns>Значение проверяемого XML-элемента или атрибута, приведенное к запрошенному типу.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для конечного типа.</exception>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Boolean" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Boolean" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.DateTime" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.DateTime" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Double" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Double" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int32" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int32" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int64" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int64" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary>Возвращает тип Microsoft .NET Framework проверяемого значения XML-элемента или атрибута.</summary>
      <returns>Тип .NET Framework проверяемого значения XML-элемента или атрибута. Значение по умолчанию — <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaType" /> для проверяемого XML-элемента или атрибута.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> для проверяемого XML-элемента или атрибута.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Размещаемое в памяти представление схемы XML в соответствии со спецификациями Схема XML, часть 1. Структуры и Схема XML, часть 2. Типы данных консорциума W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>Возвращает или задает форму для атрибутов, объявленных в целевом пространстве имен схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaForm" />, указывающее, требуется ли уточнение имен атрибутов из целевого пространства имен путем указания префикса пространства имен. Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>Возвращает значение после компиляции схемы из всех глобальных групп атрибутов в схеме.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все группы глобальных атрибутов в схеме.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>Получает значение после компиляции схемы всех атрибутов схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все атрибуты схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>Возвращает или задает атрибут <see langword="blockDefault" />, устанавливающий значение по умолчанию атрибута <see langword="block" /> для типов элементов и сложных типов в <see langword="targetNamespace" /> схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />, представляющее различные способы предотвращения создания производных типов. Значение по умолчанию — <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>Компилирует объектную модель схемы XML (SOM — Schema Object Model) в сведения о схеме для проверки. Используется для проверки синтаксической и семантической структуры программно реализованной модели SOM. Семантическая проверка допустимости выполняется во время компиляции.</summary>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения об ошибках проверки схемы XML.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary>Компилирует объектную модель схемы XML (SOM — Schema Object Model) в сведения о схеме для проверки. Используется для проверки синтаксической и семантической структуры программно реализованной модели SOM. Семантическая проверка допустимости выполняется во время компиляции.</summary>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения об ошибках проверки схемы XML.</param>
      <param name="resolver">
        <see langword="XmlResolver" /> используется для опознания пространств имен, на которые существуют ссылки в элементах <see langword="include" /> и <see langword="import" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>Возвращает или задает форму для элементов, объявленных в целевом пространстве имен схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaForm" />, указывающее, требуется ли уточнение имен элементов из целевого пространства имен путем указания префикса пространства имен. Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>Возвращает значение после компиляции схемы, состоящее из всех элементов схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все элементы схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>Возвращает или задает атрибут <see langword="finalDefault" />, устанавливающий значение по умолчанию атрибута <see langword="final" /> для типов элементов и сложных типов в целевом пространстве имен схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />, представляющее различные способы предотвращения создания производных типов. Значение по умолчанию — <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>Получает значение всех групп схемы после компиляции схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все группы схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>Возвращает или задает идентификатор строки.</summary>
      <returns>Идентификатор строки. Значение по умолчанию — <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>Получает коллекцию включаемых и импортируемых схем.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая включаемые и импортируемые схемы.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>Пространство имен экземпляра схемы XML. Это поле является константой.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>Указывает, была ли скомпилирована схема.</summary>
      <returns>
        <see langword="true" />, если схема была скомпилирована, иначе <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>Получает коллекцию элементов схемы из схемы, а также используется для добавления новых типов элементов на уровне элементов <see langword="schema" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая элементы схемы из схемы.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>Пространство имен схемы XML. Это поле является константой.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>Получает значение после компиляции схемы всех представлений схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все представления схемы.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>Считывает XML-схему из указанного потока.</summary>
      <param name="stream">Предоставленный поток данных.</param>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения о синтаксических ошибках схемы XML.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий схему XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Исключение <see cref="T:System.Xml.Schema.XmlSchemaException" /> порождается, если не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Считывает схему XML из предоставленного объекта <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Объект <see langword="TextReader" />, содержащий схему XML, которую необходимо считать.</param>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения о синтаксических ошибках схемы XML.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий схему XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Исключение <see cref="T:System.Xml.Schema.XmlSchemaException" /> порождается, если не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Считывает схему XML из предоставленного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Объект <see langword="XmlReader" />, содержащий схему XML, которую необходимо считать.</param>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения о синтаксических ошибках схемы XML.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий схему XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Исключение <see cref="T:System.Xml.Schema.XmlSchemaException" /> порождается, если не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>Получает значение всех типов схемы после компиляции схемы.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая все типы схемы из схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>Возвращает или задает идентификатор URI целевого пространства имен схемы.</summary>
      <returns>Целевое пространство имен схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>Получает или задает полные атрибуты, не принадлежащие целевому пространству имен схемы.</summary>
      <returns>Массив уточненных объектов <see cref="T:System.Xml.XmlAttribute" />, не принадлежащих к целевому пространству имен схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>Возвращает или задает версию схемы.</summary>
      <returns>Версия схемы. Значение по умолчанию — <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>Записывает схему XML в предоставленный поток данных.</summary>
      <param name="stream">Предоставленный поток данных.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>Выводит схему XML в предоставленный поток <see cref="T:System.IO.Stream" /> с помощью указанного <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <param name="stream">Предоставленный поток данных.</param>
      <param name="namespaceManager">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>Записывает схему XML в предоставленный объект <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.IO.TextWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>Записывает схему XML в предоставленный объект <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.IO.TextWriter" />, в который выполняется запись.</param>
      <param name="namespaceManager">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>Записывает схему XML в предоставленный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>Записывает схему XML в предоставленный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="namespaceManager">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>Представляет элемент <see langword="all" /> консорциума W3C (объединитель).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAll" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>Получает коллекцию элементов <see langword="XmlSchemaElement" />, содержащихся в объединителе <see langword="all" />.</summary>
      <returns>Коллекция элементов, содержащихся в <see langword="XmlSchemaAll" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>Базовый класс для любого элемента, который может содержать элементы примечаний.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>Возвращает или задает свойство <see langword="annotation" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, представляющая свойство <see langword="annotation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>Получает или задает идентификатор строки.</summary>
      <returns>Идентификатор строки. Значение по умолчанию — <see langword="String.Empty" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>Получает или задает уточненные атрибуты, не принадлежащие целевому пространству имен текущей схемы.</summary>
      <returns>Массив уточненных объектов <see cref="T:System.Xml.XmlAttribute" />, не принадлежащих к целевому пространству имен текущей схемы.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>Представляет элемент <see langword="annotation" /> консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>Получает или задает идентификатор строки.</summary>
      <returns>Идентификатор строки. Значение по умолчанию — <see langword="String.Empty" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>Получает коллекцию <see langword="Items" />, используемую для хранения дочерних элементов <see langword="appinfo" /> и <see langword="documentation" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая дочерние элементы <see langword="appinfo" /> и <see langword="documentation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>Получает или задает уточненные атрибуты, не принадлежащие целевому пространству имен схемы.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.XmlAttribute" />, не принадлежащих целевому пространству имен схемы.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>Представляет элемент <see langword="any" /> консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>Получает или задает пространства имен, содержащие элементы, которые можно использовать.</summary>
      <returns>Пространства имен для элементов, которые доступны для использования. Значение по умолчанию — <see langword="##any" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>Получает или задает сведения о том, как приложение или процессор XML должен выполнять проверку документа XML для элементов, заданных элементом <see langword="any" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Если атрибут <see langword="processContents" /> не указан, по умолчанию используется значение <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>Представляет элемент <see langword="anyAttribute" /> консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>Получает или задает пространство имен, содержащее атрибуты, которые могут использоваться.</summary>
      <returns>Пространства имен для атрибутов, которые можно использовать. Значение по умолчанию — <see langword="##any" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>Получает или задает сведения, определяющие, каким образом приложению или процессору XML следует выполнять проверку документа XML на атрибуты, указанные в элементе <see langword="anyAttribute" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Если атрибут <see langword="processContents" /> не указан, по умолчанию используется значение <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>Представляет элемент <see langword="appinfo" /> консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>Получает или задает массив объектов <see cref="T:System.Xml.XmlNode" />, представляющих дочерние узлы <see langword="appinfo" />.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.XmlNode" />, представляющих дочерние узлы <see langword="appinfo" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>Получает или задает источник информации приложения.</summary>
      <returns>Ссылка на идентификатор URI. Значение по умолчанию — <see langword="String.Empty" />. Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>Представляет элемент <see langword="attribute" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Атрибуты предоставляют дополнительную информацию для прочих элементов документа. Тэг атрибута вложен между тэгами элемента документа для схемы. Документ XML отображает атрибуты как элементы с именем в открывающем тэге элемента.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary>Получение объекта <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющего тип атрибута на основе <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> или <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> атрибута.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>Получение объекта CLR на основе <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> или <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> атрибута, который содержит значение после компиляции свойства <see langword="AttributeType" />.</summary>
      <returns>Объект CLR, который содержит значение после компиляции свойства <see langword="AttributeType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>Получает или задает значение по умолчанию для атрибута.</summary>
      <returns>Значение по умолчанию для атрибута. Значение по умолчанию — пустая ссылка. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>Получает или задает фиксированное значение для атрибута.</summary>
      <returns>Фиксированное значение для атрибута. Значение по умолчанию — null. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>Получает или задает форму для атрибута.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />. По умолчанию устанавливается значение <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> элемента схемы, включающего атрибут. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>Получает или задает имя атрибута.</summary>
      <returns>Имя атрибута.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>Получение полного имени для атрибута.</summary>
      <returns>Значение свойства <see langword="QualifiedName" />, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>Получает или задает имя атрибута, объявленного в данной схеме (или иной схеме, оговоренной указанным пространством имен).</summary>
      <returns>Имя объявленного атрибута.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>Получает или задает тип атрибута на простой тип.</summary>
      <returns>Простой тип, определенный в данной схеме.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>Получает или задает простой тип, объявленный в данной схеме (или иной схеме, оговоренной указанным пространством имен).</summary>
      <returns>Имя простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>Получает или задает информацию по использованию атрибута.</summary>
      <returns>Одно из следующих значений: None, Prohibited, Optional или Required. По умолчанию используется значение Optional. Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>Представляет элемент <see langword="attributeGroup" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). AttributesGroups обеспечивает механизм группировки набора объявлений атрибутов, чтобы можно было их добавить как группу в определения сложного типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>Получает или задает компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> группы атрибутов.</summary>
      <returns>Элемент <see langword="anyAttribute" /> World Wide Web Consortium (W3C).</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>Получает коллекцию атрибутов для группы атрибутов. Содержит элементы <see langword="XmlSchemaAttribute" /> и <see langword="XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Коллекция атрибутов для группы атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>Получает или задает имя группы атрибутов.</summary>
      <returns>Имя группы атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary>Получает полное имя группы атрибутов.</summary>
      <returns>Полное имя группы атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary>Получает переопределенное свойство группы атрибутов из схемы XML.</summary>
      <returns>Переопределенное свойство группы атрибутов.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>Представляет элемент <see langword="attributeGroup" /> с атрибутом <see langword="ref" /> из схемы XML согласно спецификации консорциума W3C. AttributesGroupRef является ссылкой для attributeGroup, свойство имени содержит группу атрибута, на которую указывает ссылка.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>Получает или задает имя элемента <see langword="attributeGroup" />, на который указывает ссылка.</summary>
      <returns>Имя группы атрибутов, на которую указывает ссылка. Значение должно быть значением QName.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>Представляет элемент <see langword="choice" /> (компоновщик) из схемы XML, определенной консорциумом W3C. Элемент <see langword="choice" /> позволяет присутствовать в экземпляре лишь одному из своих дочерних узелов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>Получает коллекцию элементов, содержащихся в композиторе (<see langword="choice" />): <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> или <see langword="XmlSchemaAny" />.</summary>
      <returns>Коллекция элементов, содержащихся в <see langword="XmlSchemaChoice" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>Содержит кэш языка определения схемы XML (XSD) и схем XDR. Класс <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> устарел. Взамен рекомендуется использовать <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlSchemaCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>Выполняет инициализацию нового экземпляра класса <see langword="XmlSchemaCollection" /> с заданным объектом <see cref="T:System.Xml.XmlNameTable" />. <see langword="XmlNameTable" /> используется при загрузке схем.</summary>
      <param name="nametable">Используемый <see langword="XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>Добавляет схему, размещенную по URL-адресу в коллекцию схем.</summary>
      <param name="ns">Связанный со схемой URI пространства имен. Для XML-схем оно обычно представлено <see langword="targetNamespace" />.</param>
      <param name="uri">URL-адрес, ссылающийся на схему, которую необходимо загрузить.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> добавлен в коллекцию схем; <see langword="null" />, если добавляемая схема является XDR-схемой или в схеме присутствуют ошибки компиляции.</returns>
      <exception cref="T:System.Xml.XmlException">Схема не является действительной схемой.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>Добавляет схему, содержащуюся в <see cref="T:System.Xml.XmlReader" /> в коллекцию схем.</summary>
      <param name="ns">Связанный со схемой URI пространства имен. Для XML-схем оно обычно представлено <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, содержащий схему для добавления.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> добавлен в коллекцию схем; <see langword="null" />, если добавляемая схема является XDR-схемой или в схеме присутствуют ошибки компиляции.</returns>
      <exception cref="T:System.Xml.XmlException">Схема не является действительной схемой.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Добавляет схему, содержащуюся в <see cref="T:System.Xml.XmlReader" /> в коллекцию схем. Заданный <see cref="T:System.Xml.XmlResolver" /> используется для опознания каких-либо внешних ресурсов.</summary>
      <param name="ns">Связанный со схемой URI пространства имен. Для XML-схем оно обычно представлено <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, содержащий схему для добавления.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для опознания пространства имен, на которое присутствуют ссылки в элементах <see langword="include" /> и <see langword="import" /> или атрибуте <see langword="x-schema" /> (XDR-схемы). Если <see langword="null" />, внешние ссылки не опознаются.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> добавлен в коллекцию схем; <see langword="null" />, если добавляемая схема является XDR-схемой или в схеме присутствуют ошибки компиляции.</returns>
      <exception cref="T:System.Xml.XmlException">Схема не является действительной схемой.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>Добавляет <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекцию.</summary>
      <param name="schema">Параметр <see langword="XmlSchema" /> для добавления в коллекцию.</param>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary>Добавляет <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекцию. Заданный <see cref="T:System.Xml.XmlResolver" /> используется для опознания каких-либо внешних ссылок.</summary>
      <param name="schema">Объект <see langword="XmlSchema" />, добавляемый в коллекцию.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для опознания пространств имен, на которые существуют ссылки в элементах <see langword="include" /> и <see langword="import" />. Если <see langword="null" />, внешние ссылки не опознаются.</param>
      <returns>
        <see langword="XmlSchema" /> добавлена в коллекцию схем.</returns>
      <exception cref="T:System.Xml.XmlException">Схема не является действительной схемой.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>Добавляет в данную коллекцию все пространства имен, определенные в указанной коллекции (включая связанные с ними схемы).</summary>
      <param name="schema">
        <see langword="XmlSchemaCollection" />, которую необходимо добавить в данную коллекцию.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>Получает значение, которое показывает, находится ли схема с указанным пространством имен в коллекции.</summary>
      <param name="ns">Связанный со схемой URI пространства имен. Для XML-схем оно обычно представлено конечным пространством имен.</param>
      <returns>
        <see langword="true" />, если схема с заданным пространством имен находится в коллекции; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Получает значение, которое показывает, находится ли <see langword="targetNamespace" />, заданной <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекции.</summary>
      <param name="schema">Объект <see langword="XmlSchema" />.</param>
      <returns>
        <see langword="true" />, если в коллекции присутствует схема с аналогичным <see langword="targetNamespace" />; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Копирует все объекты <see langword="XmlSchema" /> из данной коллекции в предложенный массив, начинающийся с предложенного индекса.</summary>
      <param name="array">Массив, в который копируются объекты.</param>
      <param name="index">Индекс в <paramref name="array" />, откуда начнется копирование.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>Возвращает количество пространств имен, определенных в данной коллекции.</summary>
      <returns>Количество пространств имен, определенных в данной коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>Предоставляет поддержку для итерации в стиле "for each" ("для каждого") по коллекции схем.</summary>
      <returns>Перечислитель для итерации по всем схемам в текущей коллекции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchema" />, связанную с указанным URI-пространством имен.</summary>
      <param name="ns">URI пространства имен, связанный со схемой, которую необходимо вернуть. Оно обычно представлено <see langword="targetNamespace" /> схемы.</param>
      <returns>
        <see langword="XmlSchema" />, связанное с URI-пространством имен; <see langword="null" />, если схема, связанная с указанным пространством имени, не загружена или если пространство имен, связано с XDR-схемой.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>Получает значение по умолчанию <see langword="XmlNameTable" />, используемой <see langword="XmlSchemaCollection" /> при загрузке новых схем.</summary>
      <returns>Объект <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array">Массив, в который копируются объекты.</param>
      <param name="index">Индекс в <paramref name="array" />, откуда начнется копирование.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns>Число элементов в коллекции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>Значение <see langword="true" />, если коллекция синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>
        <see cref="P:System.Collections.ICollection.SyncRoot" /> Объект, который можно использовать для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>Задает обработчик событий на получение информации об ошибках проверки XDR- и XML-схем.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>Поддерживает простую итерацию коллекции. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>Получает текущую <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекции.</summary>
      <returns>Получает текущую <see langword="XmlSchema" /> в коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>Продвигает перечислитель к следующей схеме в коллекции.</summary>
      <returns>
        <see langword="true" /> — если передвижение прошло успешно, <see langword="false" /> — если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns>Текущий узел.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns>Следующий узел.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary>Предоставляет параметры компиляции схемы для класса <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Данный класс не наследуется.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary>Получает или задает значение, указывающее, должен ли <see cref="T:System.Xml.Schema.XmlSchemaSet" /> выполнять проверку нарушения однозначного соответствия примитивов.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.Schema.XmlSchemaSet" /> должен проверять наличие нарушений однозначного соответствия примитивов; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>Представляет элемент <see langword="complexContent" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Данный класс представляет сложную модель содержимого для сложных типов. Она содержит расширения и ограничения по сложному типу, который включает только элементы или смешанное содержимое.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>Получает или задает содержимое.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> или <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>Получает или задает информацию, которая определяет, имеет ли тип модель смешанного содержимого.</summary>
      <returns>Если данное свойство является <see langword="true" />, символьные данные могут появиться между дочерними элементами сложного типа (модель смешанного содержимого). Значение по умолчанию — <see langword="false" />. Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>Представляет элемент <see langword="extension" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс предназначен для сложных типов со сложной моделью содержимого, производных от расширения. Он расширяет сложный тип, добавляя атрибуты и элементы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>Получает или задает компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> модели сложного содержимого.</summary>
      <returns>Компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> модели сложного содержимого.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>Получает коллекцию атрибутов для сложного содержимого. Содержит элементы <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Коллекция атрибутов для сложного содержимого.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>Получает или задает имя сложного типа, из которого по расширению создан данный тип.</summary>
      <returns>Имя сложного типа, из которого по расширению создан данный тип.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>Получает или задает один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>Представляет элемент <see langword="restriction" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс предназначен для сложных типов в рамках модели сложного содержимого, определяемого путем ограничения. Он ограничивает содержимое сложного типа подмножеством унаследованного сложного типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>Получает или задает компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> модели сложного содержимого.</summary>
      <returns>Компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> модели сложного содержимого.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>Получает коллекцию атрибутов для сложного типа. Содержит элементы <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Коллекция атрибутов для сложного типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>Получает или задает имя сложного типа, от которого этот тип создается, как производный, путем ограничения.</summary>
      <returns>Имя сложного типа, от которого данный тип создается, как производный, путем ограничения.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>Получает или задает один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>Представляет элемент <see langword="complexType" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Данный класс определяет сложный тип, которые задает набор атрибутов и содержимое элемента.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>Получает или задает значение для компонента <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> сложного типа.</summary>
      <returns>Компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> сложного типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>Получает коллекцию атрибутов для сложного типа.</summary>
      <returns>Содержит классы <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>Получает коллекцию всех компилируемых атрибутов данного сложного типа и его базовых типов.</summary>
      <returns>Коллекция всех атрибутов из данного сложного типа и его базовых типов. Значение свойства <see langword="AttributeUses" />, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>Получает значение <see langword="anyAttribute" /> после компиляции для данного сложного типа и его базовых типов.</summary>
      <returns>Значение элемента <see langword="anyAttribute" /> после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>Получает или задает атрибут <see langword="block" />.</summary>
      <returns>Атрибут <see langword="block" /> предотвращает использование сложного типа в заданном типе образования производных. Значение по умолчанию — <see langword="XmlSchemaDerivationMethod.None" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>Получает значение после компиляции типа в набор сведений после проверки схемы. Данное значение указывает, как изменяется тип, когда в документе экземпляра используется <see langword="xsi:type" />.</summary>
      <returns>Значение набора сведений после проверки схемы. По умолчанию — <see langword="BlockDefault" /> для элемента <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>Получает или задает <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> данного сложного типа после компиляции.</summary>
      <returns>Тип модели содержимого, который является одним из классов <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> или <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>Возвращает модель содержимого сложного типа, которая содержит значение после компиляции.</summary>
      <returns>Значение модели содержимого для сложного типа после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>Получает примитив, который содержит значение примитива <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> после компиляции.</summary>
      <returns>Примитив для типа содержимого. Значение примитива <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>Получает или задает сведения, определяющие, может ли использоваться элемент <see langword="complexType" /> в документе экземпляра.</summary>
      <returns>
        <see langword="true" /> — элемент не может использовать данный элемент <see langword="complexType" /> напрямую и должен использовать сложный тип, являющийся производным от элемента <see langword="complexType" />. Значение по умолчанию — <see langword="false" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>Получает или задает сведения, определяющие, имеет ли сложный тип модель смешанного содержимого (разметка в рамках содержимого).</summary>
      <returns>
        <see langword="true" />, если между дочерними элементами данного сложного типа могут появиться символьные данные; в противном случае, <see langword="false" />. Значение по умолчанию — <see langword="false" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>Получает или задает один из классов, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /><see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />, в качестве типа объединителя.</summary>
      <returns>Тип объединителя.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>Абстрактный класс для содержимого схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>Указывает порядок и структуру дочерних элементов типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>Получает или задает содержимое типа.</summary>
      <returns>Предоставляет содержимое типа.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>Предоставляет сведения о режиме проверки замен элементов <see langword="any" /> и <see langword="anyAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>В случае обнаружения связанной схемы элементы этого документа будут проверены. В противном случае ошибки не создаются.
Если элемент не проверен, процессор XML попытается уведомить клиента через обработчик событий проверки с <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Если обработчик событий проверки не настроен, при создании предупреждения информация не возвращается.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>Элементы документа не проверены.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>Элементы документа должны состоять из кода XML правильного формата и не проверяются схемой.
Процессор XML попытается уведомить клиента через обработчик событий проверки с <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" /> о том, что для данного элемента проверка не выполнена. Если обработчик событий проверки не настроен, при создании предупреждения информация не возвращается.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>Процессор схемы должен найти схему, связанную с указанным пространством имен, чтобы проверить элементы документа.
Если процессор не может найти схему или присутствуют недопустимые элементы, процессор XML попытается уведомить клиента через обработчик событий проверки с <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Если возникает ошибка проверки, а обработчик событий проверки не указан, выдается исключение.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>Перечисления для модели содержимого сложного типа. Представляет содержимое в наборе сведений после проверки схемы (infoset).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>Содержимым может быть только элемент.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>Пустое содержимое.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>Смешанное содержимое.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>Содержимым может быть только текст.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>Класс <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> является абстрактным классом для сопоставления типов XSD-схем с типами CLR.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary>Преобразование заданного значения, тип которого является одним из допустимых представлений CLR типа XML-схемы, представленных<see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, в заданный тип CLR.</summary>
      <param name="value">Входное значение, преобразовываемое в заданный тип.</param>
      <param name="targetType">Конечный тип, в который преобразовывается входное значение.</param>
      <returns>Преобразованное входное значение.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="T:System.Object" /> или параметра <see cref="T:System.Type" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Тип, представленный <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, не поддерживает преобразование из типа заданного значения в заданный тип.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Преобразование заданного значения, тип которого является одним из допустимых представлений CLR типа XML-схемы, представленных <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> в тип CLR, заданный с помощью <see cref="T:System.Xml.IXmlNamespaceResolver" />, если<see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:QName или тип, производный от него.</summary>
      <param name="value">Входное значение, преобразовываемое в заданный тип.</param>
      <param name="targetType">Конечный тип, в который преобразовывается входное значение.</param>
      <param name="namespaceResolver">
        <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространства имен. Это единственный вариант использования, если <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:QName или тип, производный от него.</param>
      <returns>Преобразованное входное значение.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="T:System.Object" /> или параметра <see cref="T:System.Type" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Тип, представленный <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, не поддерживает преобразование из типа заданного значения в заданный тип.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary>Метод <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> всегда возвращает <see langword="false" />.</summary>
      <param name="datatype">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
      <returns>Всегда возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>При переопределении в производном классе выполняется проверка заданного <see langword="string" /> на соответствие со встроенным или пользовательским простым типом.</summary>
      <param name="s">
        <see langword="string" />, чтобы проверить на соответствие простому типу.</param>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" />, чтобы использовать для атомизации при синтаксическом разборе <see langword="string" />, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:NCName.</param>
      <param name="nsmgr">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для использования при синтаксическом разборе <see langword="string" />, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип  xs:QName.</param>
      <returns>
        <see cref="T:System.Object" />, который может быть безопасно приведен к типу, возвращаемому свойством <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Входное значение не является допустимым экземпляром типа W3C XML-схемы.</exception>
      <exception cref="T:System.ArgumentNullException">Значение для разбора не может являться <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>При переопределении в производном классе получение типа для <see langword="string" /> выполняется в соответствии со спецификацией консорциума World Wide Web (W3C) XML 1.0.</summary>
      <returns>Значение <see cref="T:System.Xml.XmlTokenizedType" /> для <see langword="string" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary>Получает значение <see cref="T:System.Xml.Schema.XmlTypeCode" /> для простого типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlTypeCode" /> для простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>При переопределении в производном классе выполняется получение типа CLR данного элемента.</summary>
      <returns>CLR-тип элемента.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary>Получает значение <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> для простого типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> для простого типа.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary>Определяет разновидность типа данных схемы W3C XML для типа.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary>Атомарный тип данных схемы W3C XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary>Списковый тип схемы W3C XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary>Тип объединения схемы W3C XML.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>Представляет различные методы для предотвращения создания производных типов.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>
        <see langword="#all" />. Относится ко всем методам создания производных типов.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>Переопределите метод создания производных по умолчанию, чтобы разрешить все способы создания производных.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>Относится к созданию производных с помощью <see langword="Extension" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>Относится к созданию производных с помощью <see langword="List" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>Принимает метод создания производных по умолчанию.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>Относится к созданию производных с помощью <see langword="Restriction" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>Относится к созданию производных с помощью <see langword="Substitution" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>Относится к созданию производных с помощью <see langword="Union" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>Представляет элемент <see langword="documentation" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс задает информацию для прочтения или использования пользователем в <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>Получает или задает атрибут <see langword="xml:lang" />. Он служит указателем языка, используемого в содержимом.</summary>
      <returns>Атрибут <see langword="xml:lang" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>Получает или задает массив <see langword="XmlNodes" />, представляющий дочерние узлы документации.</summary>
      <returns>Массив, представляющий дочерние узлы документации.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>Получает или задает уникальный идентификатор ресурса (URI) для источника сведений.</summary>
      <returns>Ссылка URI. Значение по умолчанию — <see langword="String.Empty" />. Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>Представляет элемент <see langword="element" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс является базовым для всех примитивных типов и используется при описании элемента в документе XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>Получает или задает формирование <see langword="Block" />.</summary>
      <returns>Атрибут, используемый для блокировки создания производных типов. Значение по умолчанию — <see langword="XmlSchemaDerivationMethod.None" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>Получает значение свойства <see langword="Block" /> после компиляции.</summary>
      <returns>Значение свойства <see langword="Block" />, полученное после компиляции. Значение по умолчанию <see langword="BlockDefault" /> для элемента <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>Возвращает коллекцию ограничений, применяемых для элемента.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>Получает или задает значение по умолчанию элемента, если его содержимое является простым типом, или же содержимое элемента — <see langword="textOnly" />.</summary>
      <returns>Значение по умолчанию для этого элемента. Значение по умолчанию — пустая ссылка. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary>Получает объект <see cref="T:System.Xml.Schema.XmlSchemaType" />, представляющий тип элемента, основанный на значениях <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> или <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> элемента.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>Получает объект среды CLR, основанный на <see cref="T:System.Xml.Schema.XmlSchemaElement" /> или <see cref="T:System.Xml.Schema.XmlSchemaElement" /> элемента, содержащий значение свойства <see langword="ElementType" /> после компиляции.</summary>
      <returns>Объект общеязыковой среды выполнения. Значение свойства <see langword="ElementType" />, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>Получает или задает свойство <see langword="Final" />, определяющее, разрешены ли дальнейшие порождения типов.</summary>
      <returns>Свойство <see langword="Final" />. Значение по умолчанию — <see langword="XmlSchemaDerivationMethod.None" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>Получает значение свойства <see langword="Final" /> после компиляции.</summary>
      <returns>Значение свойства <see langword="Final" />, полученное после компиляции. По умолчанию значение <see langword="FinalDefault" /> используется для элемента <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>Получает или задает фиксированное значение.</summary>
      <returns>Фиксированное значение является предопределенным и неизменным. Значение по умолчанию — пустая ссылка. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>Получает или задает форму для элемента.</summary>
      <returns>Форма для элемента. Значением по умолчанию является <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>Получает или задает сведения, определяющие, может ли элемент использоваться в экземпляре документа.</summary>
      <returns>Если установлено значение <see langword="true" />, то элемент не может встречаться в экземплярах документа. Значение по умолчанию — <see langword="false" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>Получает или задает сведения, определяющие, может ли в экземпляре данных встречаться значение <see langword="xsi:nil" />. Указывает, может ли элементу присваиваться явное значение nil.</summary>
      <returns>Если nillable имеет значение <see langword="true" />, то у экземпляра элемента атрибут <see langword="nil" /> может принимать значение <see langword="true" />. Атрибут <see langword="nil" /> определен как составляющая пространства имен схемы XML для экземпляров. Значение по умолчанию — <see langword="false" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>Получает или задает имя элемента.</summary>
      <returns>Имя элемента. Значение по умолчанию — <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>Получает действительное полное имя для заданного элемента.</summary>
      <returns>Полное имя элемента. Значение свойства <see langword="QualifiedName" />, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>Получает или задает имя ссылки для элемента, объявленного в этой схеме (или в другой схеме, на которую указывает заданное пространство имен).</summary>
      <returns>Имя ссылки для элемента.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>Получает или задает тип элемента. Это может быть либо сложный, либо простой тип.</summary>
      <returns>Тип элемента.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>Получает или задает имя встроенного типа данных, определенного в этой схеме или в другой схеме, задаваемой указанным пространством имен.</summary>
      <returns>Имя встроенного типа данных.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>Получает или задает имя элемента, заменяемого этим элементом.</summary>
      <returns>Полное имя элемента, заменяемого этим элементом. Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>Представляет элемент <see langword="enumeration" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс задает список допустимых значений для элемента simpleType. Объявление содержится в объявлении <see langword="restriction" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>Возвращает подробную информацию об исключении схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый объект <see langword="XmlSchemaException" /> с имеющейся информацией <see langword="SerializationInfo" /> и <see langword="StreamingContext" />, в которой содержатся все свойства <see langword="XmlSchemaException" />.</summary>
      <param name="info">SerializationInfo.</param>
      <param name="context">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaException" /> с указанным сообщением об исключении.</summary>
      <param name="message">Описание <see langword="string" /> условий возникновения ошибки.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaException" /> с сообщением об исключении и исходным объектом <see cref="T:System.Exception" />, вызвавшим указанное исключение.</summary>
      <param name="message">Описание <see langword="string" /> условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект T:System.Exception, вызвавший это исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaException" /> с указанным сообщением исключения и исходным объектом <see cref="T:System.Exception" />, номером строки и размещением XML, вызвавшими указанное исключение.</summary>
      <param name="message">Описание <see langword="string" /> условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект T:System.Exception, вызвавший это исключение.</param>
      <param name="lineNumber">Номер строки XML, вызвавшей указанное исключение.</param>
      <param name="linePosition">Размещение строки XML, вызвавшей указанное исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Переносит все свойства <see langword="XmlSchemaException" /> в класс <see langword="SerializationInfo" /> для данного объекта <see langword="StreamingContext" />.</summary>
      <param name="info">
        <see langword="SerializationInfo" />.</param>
      <param name="context">Информация о <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>Получает номер строки, показывающий, где произошла ошибка.</summary>
      <returns>Номер строки, показывающий, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>Получает размещение строки, показывающее, где произошла ошибка.</summary>
      <returns>Размещение строки, показывающее, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary>Получает описание условий возникновения ошибки для этого исключения.</summary>
      <returns>Описание условий возникновения ошибки для этого исключения.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>Объект <see langword="XmlSchemaObject" />, вызвавший <see langword="XmlSchemaException" />.</summary>
      <returns>Допустимый экземпляр объекта, который отображает структурную ошибку проверки в объектной модели схемы (SOM) XML.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>Получает размещение URI схемы, которая вызвала исключение.</summary>
      <returns>Размещение URI схемы, которая вызвала исключение.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>Абстрактный класс. Предоставляет сведения о включенной схеме.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>Получает или задает идентификатор строки.</summary>
      <returns>Идентификатор строки. Значение по умолчанию — <see langword="String.Empty" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>Получает или задает <see langword="XmlSchema" /> для ссылочной схемы.</summary>
      <returns>
        <see langword="XmlSchema" /> для ссылочной схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>Получает или задает универсальный код ресурса (URI) для схемы, сообщающий процессору схемы физическое расположение схемы.</summary>
      <returns>URI-расположение для схемы. Необязательный параметр для импортированных схем.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>Получает или задает полные атрибуты, не принадлежащие целевому пространству имен схемы.</summary>
      <returns>Проверенные атрибуты, принадлежащие другому целевому пространству имен.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>Абстрактный класс для всех аспектов, которые используются при создании производных простых типов путем ограничения.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>Получает или задает сведения, указывающие, что данный аспект зафиксирован.</summary>
      <returns>
        <see langword="true" /> — значение зафиксировано; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>Получает или задает атрибут <see langword="value" /> для аспекта.</summary>
      <returns>Атрибут значения.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Указывает, требуется ли префикс пространства имен для атрибутов или элементов.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>Форма элемента и атрибута не указана в схеме.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Для элементов и атрибутов необходим префикс пространства имен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Префикс пространства имен для элементов и атрибутов не требуется.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>Задает ограничение на количество цифр, которое может содержаться в дробной части элемента simpleType. Значение fractionDigits должно быть целым положительным числом. Представляет собой примитив <see langword="fractionDigits" /> консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>Представляет элемент <see langword="group" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс определяет группы на уровне <see langword="schema" />, на которые ссылаются сложные типы. Он группирует набор объявлений элементов, позволяя использовать их в качестве группы, в определении сложного типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>Получает или задает имя группы схем.</summary>
      <returns>Имя группы схем.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>Получает или задает  один из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary>Возвращает полное имя группы схем.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий полное имя группы схем.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>Абстрактный класс для <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>Эта коллекция используется для добавления к композитору новых элементов.</summary>
      <returns>Объект <see langword="XmlSchemaObjectCollection" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>Представляет элемент <see langword="group" /> с атрибутом <see langword="ref" /> из схемы XML в соответствии с определением консорциума W3C. Данный класс используется в сложных типах, которые ссылаются на <see langword="group" />, определенную на уровне <see langword="schema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>Получает один из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />, который содержит значение свойства <see langword="Particle" />, полученное после компиляции.</summary>
      <returns>Полученное после компиляции значение свойства <see langword="Particle" />, относящееся к одному из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>Получает или задает имя группы, определенное в данной схеме (или в другой схеме с указанным пространством имен).</summary>
      <returns>Имя группы, определенное в данной схеме.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>Класс для ограничений идентификации: элементы <see langword="key" />, <see langword="keyref" /> и <see langword="unique" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>Получает коллекцию полей, выполняющих роль дочерних полей для селектора выражений языка XML Path (XPath).</summary>
      <returns>Коллекция полей.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>Получает или задает имя ограничения идентификации.</summary>
      <returns>Имя ограничения идентификации.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>Получает квалифицированное имя ограничения идентификации, которое содержит значение свойства <see langword="QualifiedName" />, полученное после компиляции.</summary>
      <returns>Значение свойства <see langword="QualifiedName" />, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>Получает или задает выражение XPath элемента <see langword="selector" />.</summary>
      <returns>Выражение XPath элемента <see langword="selector" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>Представляет элемент <see langword="import" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс используется для импортирования компонентов схемы из других схем.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaImport" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>Возвращает или задает свойство <see langword="annotation" />.</summary>
      <returns>Примечание.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>Получает или задает конечное пространство имен для импортированных схем в качестве ссылки URI.</summary>
      <returns>Конечное пространство имен для импортированных схем в качестве ссылки URI. Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>Представляет элемент <see langword="include" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс используется для включения объявлений и определений из внешней схемы. Включенные объявления и определения затем становятся доступными для обработки в содержащей их схеме.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaInclude" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>Возвращает или задает свойство <see langword="annotation" />.</summary>
      <returns>Примечание.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary>Определяет схему языка объявления схем XML (XML Schema Definition Language, XSD) на основе документа XML. Класс <see cref="T:System.Xml.Schema.XmlSchemaInference" /> не поддерживает наследование.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary>Влияет на вхождения и информацию о типе, определяемые классом <see cref="T:System.Xml.Schema.XmlSchemaInference" /> для элементов и атрибутов документа XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary>Указывает, что для определенного элемента или атрибута следует определять менее строгое объявление схемы.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary>Указывает, что для определенного элемента или атрибута следует определять более строгое объявление схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в указанном объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
      <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе. Во время процесса выведения схемы происходит ошибка.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в заданном объекте <see cref="T:System.Xml.XmlReader" />, а также уточняет определенную схему, используя существующую схему из объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />, заданную для того же целевого пространства имен.</summary>
      <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий существующую схему, которая используется для уточнения определяемой схемы.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
      <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе. Во время процесса выведения схемы происходит ошибка.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на объявления вхождения схем, определяемые на основе документа XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на способ определения типов на основе обрабатываемого документа XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary>Возвращает сведения об ошибках, возникших во время определения классом <see cref="T:System.Xml.Schema.XmlSchemaInference" /> схемы для документа XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с объектами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащими все свойства <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с заданным сообщением об ошибке.</summary>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с заданным сообщением об ошибке и с исходным <see cref="T:System.Exception" />, вызвавшим указанное <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий исходное исключение, вызвавшее <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с заданным сообщением об ошибке, исходным <see cref="T:System.Exception" />, вызвавшим указанное <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />, а также с указанным номером строки и указанной позицией в строке документа XML.</summary>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий исходное исключение, вызвавшее <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="lineNumber">Номер строки в документе XML, вызвавшей <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="linePosition">Позиция в строке документа XML, вызвавшей <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Направляет все свойства объекта <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> в объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, заданный для указанного объекта <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary>Представляет инфо-набор проверенного XML-узла после проверки схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary>Получает или задает <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> объект, соответствующий типу содержимого этого проверенного XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary>Получает или задает значение, которое показывает, был ли этот проверенный XML-узел установлен в результате применения значения по умолчанию во время проверки схемы языка XSD.</summary>
      <returns>Значение <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary>Получает или задает значение, указывающее, является ли значение этого проверенного XML-узла пустым.</summary>
      <returns>Значение <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary>Получает или задает динамический тип схемы для этого проверенного XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary>Получает или задает компилированный объект <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, соответствующий проверяемому XML-узлу.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary>Получает или задает компилированный объект <see cref="T:System.Xml.Schema.XmlSchemaElement" />, соответствующий проверяемому XML-узлу.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary>Получает или задает статический тип схемы языка XSD этого проверяемого XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> этого проверенного XML-узла.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>Данный класс представляет элемент <see langword="key" /> из XML-схемы в соответствии с требованиями консорциума World Wide Web(W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaKey" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>Данный класс представляет элемент <see langword="keyref" /> из XML-схемы в соответствии с требованиями консорциума World Wide Web(W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>Получает или задает имя ключа, на который ссылается данное ограничение в другом простом или сложном типе.</summary>
      <returns>QName ключа, на которое ссылается данное ограничение.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>Представляет элемент <see langword="length" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс можно использовать для того, чтобы указать ограничение длины элемента <see langword="simpleType" /> в типе данных.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>Представляет элемент <see langword="maxExclusive" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс можно использовать для задания ограничения по максимальному значению элемента <see langword="simpleType" />. Значение элемента должно быть меньшим, чем значение элемента <see langword="maxExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>Представляет элемент <see langword="maxInclusive" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс можно использовать для задания ограничения по максимальному значению элемента <see langword="simpleType" />. Значение элемента должно быть меньше или равно значению элемента <see langword="maxInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>Представляет элемент <see langword="maxLength" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс позволяет установить ограничение по максимальной длине для значения данных элемента <see langword="simpleType" />. Длина должна быть меньше значения элемента <see langword="maxLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>Представляет элемент <see langword="minExclusive" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Данный класс можно использовать для определения ограничений по минимальному значению элемента <see langword="simpleType" />. Значение элемента должно превышать значение элемента <see langword="minExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>Представляет элемент <see langword="minInclusive" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс может использоваться для определения ограничения на минимальное значение simpleType. Значение элемента должно быть равно или больше значения элемента <see langword="minInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>Представляет элемент <see langword="minLength" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс позволяет установить ограничение на минимальную длину значения данных элемента <see langword="simpleType" />. Длина должна быть больше значения элемента <see langword="minLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>Представляет элемент <see langword="notation" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Объявление схемы XML <see langword="notation" /> является реконструкцией объявлений <see langword="XML 1.0 NOTATION" />. Нотация предназначена для описания формата данных, не являющихся данными XML, в документе XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>Получает или задает имя представления.</summary>
      <returns>Имя представления.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>Получает или задает идентификатор <see langword="public" />.</summary>
      <returns>Идентификатор <see langword="public" />. Значение должно быть действительным идентификатором URI.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>Получает или задает идентификатор <see langword="system" />.</summary>
      <returns>Идентификатор <see langword="system" />. Значение должно быть действительным идентификатором URI.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>Абстрактный класс для определения аспектов <see langword="numeric" />. Данный класс является базовым классом для таких классов числовых аспектов, как <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /></summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Представляет корневой класс для иерархии модели объектов схемы XML, а также выступает в качестве базового класса для таких классов, как <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>Получает или задает номер строки в файле, на которую ссылается элемент <see langword="schema" />.</summary>
      <returns>Номер строки.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>Получает или задает позицию в строке файла, на которую ссылается элемент <see langword="schema" />.</summary>
      <returns>Позиция в строке.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary>Получает или задает <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> для использования с данным объектом схемы.</summary>
      <returns>Свойство <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> для объекта схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary>Получает или задает родительский элемент данного <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns>Родительский элемент <see cref="T:System.Xml.Schema.XmlSchemaObject" /> данного объекта <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>Получает или задает исходного расположение для файла, загрузившего данную схему.</summary>
      <returns>Исходное расположение (URI) для файла.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>Инициализация нового экземпляра класса <see langword="XmlSchemaObjectCollection" />, принимающего <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="parent">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>Добавляет <see cref="T:System.Xml.Schema.XmlSchemaObject" /> к <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>Индекс, по которому был добавлен элемент.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение <paramref name="index" /> больше значения <see langword="Count" />.</exception>
      <exception cref="T:System.InvalidCastException">Заданный параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не относится к типу <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> или его производным типам <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" />и <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>Сообщает, находится ли заданный <see cref="T:System.Xml.Schema.XmlSchemaObject" /> в <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>
        <see langword="true" />, если в коллекции существует указанное полное имя, иначе <see langword="false" />. Если получен параметр null, возвращается результат <see langword="false" />, так как для имени null не существует полного имени.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Xml.Schema.XmlSchemaObject" /> из коллекции в заданный массив, начиная с заданного индекса.</summary>
      <param name="array">Одномерный массив для приема элементов, копируемых из <see langword="XmlSchemaObjectCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> имеет несколько измерений.  

или - 
Значение индекса <paramref name="index" /> больше или равно длине массива <paramref name="array" />.  

или - 
Количество элементов в источнике <see cref="T:System.Xml.Schema.XmlSchemaObject" /> больше доступного пространства от заданного индекса до конца массива назначения.</exception>
      <exception cref="T:System.InvalidCastException">Тип источника <see cref="T:System.Xml.Schema.XmlSchemaObject" /> нельзя автоматически привести к типу массива назначения.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>Возвращает перечислитель для итерации по объектам <see langword="XmlSchemaObjects" />, содержащимся в <see langword="XmlSchemaObjectCollection" />.</summary>
      <returns>Итератор возвращает <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>Возвращает индекс коллекции, соответствующий заданному <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, индекс которого необходимо возвратить.</param>
      <returns>Индекс коллекции, соответствующий заданному <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>Вставляет <see cref="T:System.Xml.Schema.XmlSchemaObject" /> в <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому необходимо вставить элемент.</param>
      <param name="item">Вставляемый объект <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
-или- 
 Значение <paramref name="index" /> больше значения <see langword="Count" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Xml.Schema.XmlSchemaObject" /> по указанному индексу.</summary>
      <param name="index">Индекс объекта <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>Параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> по указанному индексу.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>Объект <see langword="OnClear" /> вызывается перед стандартным поведением <see langword="Clear" />. Дополнительные сведения см. в описании метода OnClear класса <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>Объект <see langword="OnInsert" /> вызывается перед стандартным поведением <see langword="Insert" />. Дополнительные сведения см. в описании метода <see langword="OnInsert" /> класса <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Индекс <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">Элемент.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>Объект <see langword="OnRemove" /> вызывается перед стандартным поведением <see langword="Remove" />. Дополнительные методы см. в описании метода <see langword="OnRemove" /> класса <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Индекс <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">Элемент.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Объект <see langword="OnSet" /> вызывается перед стандартным поведением <see langword="Set" />. Дополнительные сведения см. в описании метода OnSet класса <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Индекс <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="oldValue">Старое значение.</param>
      <param name="newValue">Новое значение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>Удаляет объект <see cref="T:System.Xml.Schema.XmlSchemaObject" /> из <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">Объект <see cref="T:System.Xml.Schema.XmlSchemaObject" /> для удаления.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>Представляет перечислитель для <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>Получает текущую <see cref="T:System.Xml.Schema.XmlSchemaObject" /> в коллекции.</summary>
      <returns>Текущий контекст <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>Переходит к следующему элементу в коллекции.</summary>
      <returns>
        <see langword="false" /> в конце коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>Сбрасывает перечислитель, помещая его в начало коллекции.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns>Текущий контекст <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns>Следующий объект <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>Предоставляет коллекции для элементов, содержащихся в классе <see cref="T:System.Xml.Schema.XmlSchema" /> (например, для Attributes, AttributeGroups, Elements и т.д.).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>Определяет, существует ли в коллекции указанное полное имя.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>
        <see langword="true" />, если в коллекции существует указанное полное имя, иначе <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>Возвращает число элементов, содержащихся в списке <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Количество элементов, содержащихся в коллекции <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>Возвращает перечислитель, который выполняет итерацию коллекции <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" />, который может выполнять итерацию всех элементов <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>Возвращает элемент из <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> с указанным полным именем.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> элемента, который возвращается.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> элемента из <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> с указанным полным именем.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>Возвращает коллекцию всех именованных элементов в <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Коллекция всех именованных элементов в <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>Возвращает коллекцию всех значений для всех элементов <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Коллекция всех значений для всех элементов <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>Абстрактный класс, служащий базовым классом для всех типов примитивов (например, <see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>Получает или задает максимальное количество вхождений примитива.</summary>
      <returns>Максимальное возможное количество вхождений примитива. Значение по умолчанию — 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>Получает или задает число как строковое значение. Максимальное возможное количество вхождений примитива.</summary>
      <returns>Число как строковое значение. Значение <see langword="String.Empty" /> указывает, что <see langword="MaxOccurs" /> аналогично значению по умолчанию. Значение по умолчанию — пустая ссылка.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>Получает или задает минимальное количество вхождений примитива.</summary>
      <returns>Минимальное возможное количество вхождений примитива. Значение по умолчанию — 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>Получает или задает число как строковое значение. Минимальное возможное количество вхождений примитива.</summary>
      <returns>Число как строковое значение. Значение <see langword="String.Empty" /> указывает, что <see langword="MinOccurs" /> аналогично значению по умолчанию. Значение по умолчанию — пустая ссылка.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>Представляет элемент <see langword="pattern" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс может использоваться для определения ограничения на вводимые значения элемента <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>Представляет элемент <see langword="redefine" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Данный класс позволяет переопределить в текущей схеме простые и сложные типы, группы и группы атрибутов из внешних схем. Данный класс также может использоваться для обеспечения управления версиями элементов схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех атрибутов в схеме, содержащей значение свойства <see langword="AttributeGroups" />, полученное после компиляции.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех атрибутов в схеме. Значение свойства <see langword="AttributeGroups" />, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех групп в схеме, содержащей значение свойства <see langword="Groups" />, полученное после компиляции.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех групп в схеме. Значение свойства <see langword="Groups" />, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>Получает коллекцию следующих классов: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> и <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
      <returns>Элементы, содержащиеся в переопределяемом элементе.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех простых и сложных типов в схеме, содержащей значение свойства <see langword="SchemaTypes" />, полученное после компиляции.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех типов схемы в схеме. Значение свойства <see langword="SchemaTypes" />, полученное после компиляции.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>Представляет элемент <see langword="sequence" /> (компоновщик) из схемы XML, определенной консорциумом W3C. <see langword="sequence" /> требует, чтобы элементы группы следовали в рамках содержащего их элемента в указанной последовательности.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>Элементы, содержащиеся в композиторе. Коллекция <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> или <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns>Элементы, содержащиеся в композиторе.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Содержит кэш схем языка определения схем XML (XSD).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSet" /> указанным значением <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nameTable">Объект <see cref="T:System.Xml.XmlNameTable" />, который следует использовать.</param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlNameTable" />, переданный в качестве параметра, является <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary>Добавляет схему языка определения схем XML (XSD), расположенную по указанному URL-адресу, в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">Свойство схемы <paramref name="targetNamespace" /> или <see langword="null" />, чтобы использовалось пространство имен <paramref name="targetNamespace" />, определенное в схеме.</param>
      <param name="schemaUri">URL-адрес, ссылающийся на схему, которую необходимо загрузить.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку. Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается <see langword="null" /> и возникает соответствующее событие проверки. В противном случае возникает исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">URL-адрес, переданный в качестве параметра, равен <see langword="null" /> или <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary>Добавляет схему языка определения схем XML (XSD), содержащуюся в <see cref="T:System.Xml.XmlReader" />, в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">Свойство схемы <paramref name="targetNamespace" /> или <see langword="null" />, чтобы использовалось пространство имен <paramref name="targetNamespace" />, определенное в схеме.</param>
      <param name="schemaDocument">Объект <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку. Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается <see langword="null" /> и возникает соответствующее событие проверки. В противном случае возникает исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" />, переданный в качестве параметра, является <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary>Добавляет указанную <see cref="T:System.Xml.Schema.XmlSchema" /> в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, добавляемый в коллекцию <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку. Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается <see langword="null" /> и возникает соответствующее событие проверки. В противном случае возникает исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, переданный в качестве параметра, является <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary>Добавляет все схемы языка определения схем XML (XSD), содержащиеся в заданном <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> недействительна.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, переданный в качестве параметра, является <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary>Возвращает или задает <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> для объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> для <see cref="T:System.Xml.Schema.XmlSchemaSet" />. По умолчанию у экземпляра <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> свойство <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> принимает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary>Компилирует схемы языка определения схем XML (XSD) <see cref="T:System.Xml.Schema.XmlSchemaSet" /> в одну логическую схему.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Возникла ошибка при проверке и компиляции схем в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary>Определяет, находится ли схема языка определения схем XML (XSD) с указанным идентификатором URI целевого пространства имен в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">Свойство <paramref name="targetNamespace" /> схемы.</param>
      <returns>Значение <see langword="true" />, если схема с указанным универсальным кодом ресурса (URI) целевого пространства имен находится в <see cref="T:System.Xml.Schema.XmlSchemaSet" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Определяет, находится ли указанный объект языка определения схем XML (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.Schema.XmlSchema" /> находится в <see cref="T:System.Xml.Schema.XmlSchemaSet" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, передаваемый в качестве параметра, равен <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Xml.Schema.XmlSchema" /> из <see cref="T:System.Xml.Schema.XmlSchemaSet" /> в заданный массив, начиная с заданного индекса.</summary>
      <param name="schemas">Массив, в который копируются объекты.</param>
      <param name="index">Индекс массива, начиная с которого будут копироваться объекты.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary>Получает количество логических схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Количество логических схем в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary>Получает все глобальные атрибуты всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Коллекция глобальных атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary>Получает все глобальные элементы всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Коллекция глобальных элементов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary>Получает все глобальные простые и сложные типы из всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Коллекция глобальных простых и сложных типов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary>Получает значение, указывающее, были ли скомпилированы все схемы языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Значение <see langword="true" />, если схемы в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> были скомпилированы с момента последнего добавления или удаления схемы из <see cref="T:System.Xml.Schema.XmlSchemaSet" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary>Получает имя <see cref="T:System.Xml.XmlNameTable" /> по умолчанию, используемое <see cref="T:System.Xml.Schema.XmlSchemaSet" /> при загрузке новых схем языка определения схем XML (XSD).</summary>
      <returns>Таблица атомизированных объектов строки.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Удаляет заданную схему языка определения схем XML (XSD) из <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который необходимо удалить из коллекции <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, удаленный из <see cref="T:System.Xml.Schema.XmlSchemaSet" />, или <see langword="null" />, если схема не была найдена в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не является действительной схемой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, равен <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary>Удаляет указанную схему языка определения схем XML (XSD) и все импортируемые ей схемы из <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaToRemove">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который необходимо удалить из коллекции <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.Schema.XmlSchema" /> и все импортируемые им объекты были успешно удалены; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, равен <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary>Выполняет повторную обработку схемы языка определения схем XML (XSD), которая уже находится в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Схема, которую необходимо обработать повторно.</param>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку. Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается <see langword="null" /> и порождается соответствующее событие проверки. В противном случае возникает исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, переданный в качестве параметра, является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, еще не существует в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary>Возвращает коллекцию всех схем языка определения схем XML (XSD), содержащихся в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий все схемы, добавленные в <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Если в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> не были добавлены схемы, возвращается пустой объект <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary>Возвращает коллекцию всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />, принадлежащих заданному пространству имен.</summary>
      <param name="targetNamespace">Свойство <paramref name="targetNamespace" /> схемы.</param>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий все схемы, которые были добавлены к <see cref="T:System.Xml.Schema.XmlSchemaSet" />, принадлежащие заданному пространству имен. Если в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> не были добавлены схемы, возвращается пустой объект <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary>Указывает обработчик событий, получающий сведения об ошибках проверки схем языка определения схем XML (XSD).</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый при разрешении пространств имен и расположений, на которые ссылаются элементы включения и импорта схемы.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" />, используемый при разрешении пространств имен и расположений, на которые ссылаются элементы включения и импорта схемы.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>Представляет элемент <see langword="simpleContent" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Данный класс подходит для простых и сложных типов с моделью простого содержимого.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>Получение одного из <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> или <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
      <returns>Содержимое, находящееся в рамках <see langword="XmlSchemaSimpleContentRestriction" /> или класса <see langword="XmlSchemaSimpleContentExtension" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>Представляет элемент <see langword="extension" /> для простого содержимого из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс используется для получения простых типов при помощи расширения. Такие образования используются для расширения содержимого простого типа элемента посредством добавления атрибутов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>Получает или задает <see langword="XmlSchemaAnyAttribute" />, который используется для значения атрибута.</summary>
      <returns>
        <see langword="XmlSchemaAnyAttribute" />. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>Получает коллекцию <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Коллекция атрибутов для элемента <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>Получает или задает имя встроенного или простого типа, при помощи которого данный тип был расширен.</summary>
      <returns>Имя базового типа.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>Представляет элемент <see langword="restriction" /> для простого содержимого из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс может использоваться для создания производных простых типов путем ограничения. Такое порождение позволяет ограничивать диапазон возможных значений элемента подмножеством значений, определенных для простого типа, который наследуется.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />, используемое в качестве значения атрибута.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> для значения атрибута. Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>Получает коллекции атрибутов <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> для простого типа.</summary>
      <returns>Коллекция атрибутов для простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>Возвращает или задает базовое значение для простого типа.</summary>
      <returns>Базовое значение для простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>Получает или задает имя встроенного типа данных или простого типа, от которого порожден данный производный тип.</summary>
      <returns>Имя базового типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>Получает или задает аспект схемы Xml.</summary>
      <returns>Один из следующих классов аспектов: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>Представляет элемент <see langword="simpleType" /> для простого содержимого из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс определяет простой тип. Простые типы могут содержать сведения и ограничения для значений атрибутов или элементов, которые допускают только текстовое содержимое.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>Получает или задает одно из значений <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />или <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
      <returns>Одно из значений <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" /> или <see langword="XmlSchemaSimpleTypeRestriction" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>Абстрактный класс для классов содержимого простого типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>Представляет элемент <see langword="list" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс позволяет определить элемент <see langword="simpleType" /> как список значений указанного типа данных.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющее тип элемента <see langword="simpleType" />, основываясь на значениях <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> и <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> простого типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> представляет тип элемента <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>Получает или задает элемент <see langword="simpleType" />, производный от типа, определяемого базовым значением.</summary>
      <returns>Тип элемента для элемента простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>Получает или задает имя встроенного типа данных или элемента <see langword="simpleType" />, определенного в этой схеме (или в другой схеме, задаваемой указанным пространством имен).</summary>
      <returns>Имя типа списка простых типов.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>Представляет элемент <see langword="restriction" /> для простых типов из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Этот класс может использоваться для ограничения элемента <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>Получает или задает информацию о базовом типе.</summary>
      <returns>Базовый тип для элемента <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>Получает или задает имя уточненного базового типа.</summary>
      <returns>Проверенное имя базового типа для ограничения простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>Получает или задает аспект схемы Xml.</summary>
      <returns>Один из следующих классов аспектов: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>Представляет элемент <see langword="union" /> для простых типов из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Тип данных <see langword="union" /> может использоваться для определения содержимого <see langword="simpleType" />. Значение элемента <see langword="simpleType" /> должно иметь один из возможных типов данных, заданных в объединении. Типы-объединения всегда являются производными типами и должны состоять как минимум из двух различных типов данных.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary>Получает массив объектов <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющих тип элемента <see langword="simpleType" />, основанный на значениях <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> и <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> простого типа.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющих тип элемента <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>Возвращает коллекцию базовых типов.</summary>
      <returns>Коллекция базовых значений для простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary>Получает или задает массив уточненных имен членов встроенных типов данных или элементов <see langword="simpleType" />, определенных в этой схеме (или в другой схеме, определяемой заданным пространством имен).</summary>
      <returns>Массив, состоящий из элементов списка встроенных типов данных или простых типов.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>Представляет элемент <see langword="totalDigits" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Данный класс может быть использован для определения ограничения по числу цифр, которые можно ввести для значения элемента <see langword="simpleType" />. Это значение <see langword="totalDigits" /> должно быть целым положительным числом.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>Базовый класс для всех простых и сложных типов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>Получает тип объекта после компиляции или встроенный тип данных XSD, элемент simpleType или элемент complexType. Свойство набора сведений после компиляции схемы.</summary>
      <returns>Встроенный тип данных XSD, элемент simpleType или элемент complexType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary>Получает значение после компиляции для базового типа данного типа схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />, представляющий базовый тип данного типа схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>Получает значение типа данных после компиляции для данного сложного типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> после компиляции схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>Получает сведения после компиляции о способе создания данного элемента из его базового типа.</summary>
      <returns>Одно из допустимых значений <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>Получает или задает финальный атрибут создания производной типа, указывающий, разрешены ли создание дальнейших производных.</summary>
      <returns>Одно из допустимых значений <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />. Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>Получает значение свойства <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> после компиляции.</summary>
      <returns>Значение свойства <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />, полученное после компиляции. По умолчанию используется значение атрибута <see langword="finalDefault" /> элемента <see langword="schema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, который представляет встроенный сложный тип указанного сложного типа.</summary>
      <param name="typeCode">Одно из значений <see cref="T:System.Xml.Schema.XmlTypeCode" />, представляющее сложный тип.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, представляющий встроенный сложный тип.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, который представляет встроенный сложный тип, заданный полным именем.</summary>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> сложного типа.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, представляющий встроенный сложный тип.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Xml.XmlQualifiedName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary>Возвращает тип <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, который представляет встроенный простой тип указанного простого типа.</summary>
      <param name="typeCode">Одно из значений <see cref="T:System.Xml.Schema.XmlTypeCode" />, представляющее простой тип.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющий встроенный простой тип.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, который представляет встроенный простой тип простого типа, заданного полным именем.</summary>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> данного простого типа.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющий встроенный простой тип.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Xml.XmlQualifiedName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary>Возвращает значение, указывающее, является ли указанный тип схемы производным от указанного типа базовой схемы.</summary>
      <param name="derivedType">Производный <see cref="T:System.Xml.Schema.XmlSchemaType" /> для тестирования.</param>
      <param name="baseType">Базовый <see cref="T:System.Xml.Schema.XmlSchemaType" /> для тестирования на соответствие производному <see cref="T:System.Xml.Schema.XmlSchemaType" />.</param>
      <param name="except">Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />, представляющее метод создания производного типа, который требуется исключить из тестирования.</param>
      <returns>
        <see langword="true" />, если производный тип создан от базового типа; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>Получает или задает значение, указывающее, имеет ли данный тип смешанную модель содержимого. Это свойство доступно только в сложных типах.</summary>
      <returns>
        <see langword="true" />, если тип имеет смешанную модель содержимого; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>Получает или задает имя типа.</summary>
      <returns>Имя типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>Получает полное имя для типа, построенного из атрибута <see langword="Name" /> данного типа. Свойство после компиляции схемы.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> для типа, построенного из атрибута <see langword="Name" /> данного типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlTypeCode" /> данного типа.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlTypeCode" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>Представляет элемент <see langword="unique" /> из схемы XML, определенной консорциумом World Wide Web Consortium (W3C). Данный класс используется для идентификации уникального ограничения среди набора элементов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>Индикатор способа использования атрибута.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>Использование атрибута не определено.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>Атрибут необязателен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>Атрибут нельзя использовать.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>Атрибут должен отобразиться один раз.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary>Представляет исключение, возникшее в проверяемом XML-документе в результате появления предупреждений и ошибок проверки языка XSD.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с указанными объектами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с указанным сообщением об исключении.</summary>
      <param name="message">Описание <see langword="string" /> условий возникновения ошибки.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с сообщением об исключении и исходным объектом <see cref="T:System.Exception" />, вызвавшим указанное исключение.</summary>
      <param name="message">Описание <see langword="string" /> условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект <see cref="T:System.Exception" />, вызвавший указанное исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с указанным сообщением исключения и исходным объектом <see cref="T:System.Exception" />, номером строки и размещением XML, вызвавшими указанное исключение.</summary>
      <param name="message">Описание <see langword="string" /> условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект <see cref="T:System.Exception" />, вызвавший указанное исключение.</param>
      <param name="lineNumber">Номер строки XML, вызвавшей указанное исключение.</param>
      <param name="linePosition">Размещение строки XML, вызвавшей указанное исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый объект <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с имеющейся информацией <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />, в которой содержатся все свойства <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary>Устанавливает XML-узел, ставший причиной ошибки.</summary>
      <param name="sourceObject">Объект-источник.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary>Получает XML-узел, вызвавший данное <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <returns>XML-узел, вызвавший данное <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary>Определяет параметры проверки схемы, используемые классами <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> и <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary>Разрешите атрибуты xml:*, даже если они не определены в схеме. Атрибуты проверяются на основе их типа данных.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary>Не обрабатывайте ограничения идентификации, внутренние схемы, указания по расположению схемы или не создавайте отчетов о предупреждениях при проверке схемы.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary>Ограничения удостоверения процесса (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>), обнаруженные во время проверки.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary>Обработайте внутренние схемы, найденные при проверке.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary>Указания на расположение схемы процесса (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>), обнаруженные во время проверки.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary>Создайте отчет о предупреждениях при проверке схемы, найденных при проверке.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary>Представляет обработчик проверки схемы языка XSD. Класс <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> не поддерживает наследование.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <param name="nameTable">Объект <see cref="T:System.Xml.XmlNameTable" />, содержащий имена элемента и атрибута в виде отдельных строк.</param>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы языка XSD, использующиеся для проверки.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, который используется для определения пространств имен, обнаруженных при проверке.</param>
      <param name="validationFlags">Значение <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />, указывающее параметры проверки схемы.</param>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Ошибка при компиляции схем в параметре <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary>Добавляет схему языка XSD к набору схем, используемых для проверки.</summary>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" /> для добавления к набору схем, используемых для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Указанный параметр <see cref="T:System.Xml.Schema.XmlSchema" /> является <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Конечное пространство имен параметра <see cref="T:System.Xml.Schema.XmlSchema" /> совпадает с пространством имен элемента или атрибута, уже обнаруженным объектом <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Параметр <see cref="T:System.Xml.Schema.XmlSchema" /> является недопустимым.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary>Завершает проверку и проверяет ограничения идентификации для всего документа XML.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">В документе XML обнаружена ошибка ограничения идентификации.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary>Возвращает указанные атрибуты для текущего контекста элемента.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или пустой массив, если отсутствуют указанные атрибуты.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary>Возвращает указанные примитивы в текущий контекст элемента.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> или пустой массив, если отсутствуют указанные примитивы.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary>Проверяет ограничения идентификации в атрибутах по умолчанию и заполняет указанный список <see cref="T:System.Collections.ArrayList" /> объектами <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> для любых атрибутов со значениями по умолчанию, которые до этого не прошли проверку при помощи метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> в контексте элемента.</summary>
      <param name="defaultAttributes">
        <see cref="T:System.Collections.ArrayList" /> для заполнения объектами <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> для любых атрибутов, которые не были обнаружены во время проверки в контексте элемента.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary>Инициализирует состояние объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <exception cref="T:System.InvalidOperationException">Вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> является допустимым только сразу после формирования объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> или после вызова <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary>Инициализирует состояние объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> при помощи <see cref="T:System.Xml.Schema.XmlSchemaObject" />, указанного для частичной проверки.</summary>
      <param name="partialValidationType">Объекты <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или <see cref="T:System.Xml.Schema.XmlSchemaType" />, используемые для инициализации контекста проверки объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для частичной проверки.</param>
      <exception cref="T:System.InvalidOperationException">Вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> является допустимым только сразу после формирования объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> или после вызова <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не является объектом <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не может иметь значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary>Получает или задает сведения о номерах строк для проверяемого XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.IXmlLineInfo" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Пропускает проверку содержимого текущего элемента и подготавливает объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для проверки содержимого в контексте родительского элемента.</summary>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, чьи свойства задаются при пропуске проверки содержимого текущего элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />. Например, <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary>Получает или задает исходный URI для проверяемого XML-узла.</summary>
      <returns>Объект <see cref="T:System.Uri" />, предоставляющий исходный URI для проверяемого XML-узла. По умолчанию это <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет имя атрибута, пространство имен URI и значение текущего контекста элемента.</summary>
      <param name="localName">Локальное имя атрибута, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI атрибута, которое нужно проверить.</param>
      <param name="attributeValue">Значение атрибута, которое нужно проверить.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке атрибута. Этот параметр может иметь значение <see langword="null" />.</param>
      <returns>Проверенное значение атрибута.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимый атрибут в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет имя атрибута, пространство имен URI и значение текущего контекста элемента.</summary>
      <param name="localName">Локальное имя атрибута, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI атрибута, которое нужно проверить.</param>
      <param name="attributeValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" />, используемый для передачи значения атрибута в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке атрибута. Данный параметр может принимать значение <see langword="null" />.</param>
      <returns>Проверенное значение атрибута.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимый атрибут в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет элемент в текущем контексте.</summary>
      <param name="localName">Локальное имя элемента, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI элемента, которое нужно проверить.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке имени элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое имя элемента в текущем контексте.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary>Проверяет элемент в текущем контексте с указанными знамениями атрибутов <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> и <c>xsi:NoNamespaceSchemaLocation</c>.</summary>
      <param name="localName">Локальное имя элемента, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI элемента, которое нужно проверить.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке имени элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <param name="xsiType">Значение атрибута <c>xsi:Type</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <param name="xsiNil">Значение атрибута <c>xsi:Nil</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <param name="xsiSchemaLocation">Значение атрибута <c>xsi:SchemaLocation</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <param name="xsiNoNamespaceSchemaLocation">Значение атрибута <c>xsi:NoNamespaceSchemaLocation</c> элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое имя элемента в текущем контексте.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет, является ли текстовое содержимое элемента допустимым относительно типа данных для элементов с простым содержимым, а также проверяет, является ли содержимое текущего элемента достаточным для элементов со сложным содержимым.</summary>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <returns>Проанализированное типизированное текстовое значение элемента, если содержимое элемента является простым.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое содержимое элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary>Проверяет, является ли текстовое содержимое указанного элемента допустимым для его типа данных.</summary>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке текстового содержимого элемента. Этот параметр может иметь значение <see langword="null" />.</param>
      <param name="typedValue">Типизированное текстовое содержимое элемента.</param>
      <returns>Проанализированное типизированное простое содержимое элемента.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое текстовое содержимое элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> не был вызван в правильной последовательности (например, если метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> вызывается после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), а вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> уже производился раньше или элемент имеет сложное содержимое.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр типизированного текстового содержимого не может принимать значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет наличие всех необходимых атрибутов в контексте элемента и подготавливает объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для проверки содержимого дочернего элемента.</summary>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке на наличие в элементе всех необходимых атрибутов. Этот параметр может иметь значение <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">В текущем контексте элемента отсутствует один или несколько необходимых атрибутов.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />. Например, <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary>Проверяет, является ли указанная текстовая <see langword="string" /> допустимой для контекста текущего элемента, и собирает текст для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">Текстовая <see langword="string" />, которую нужно проверить в контексте текущего элемента.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Указанная текстовая <see langword="string" /> является недопустимой для контекста текущего элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">Текстовый параметр <see langword="string" /> не может принимать значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary>Проверяет, является ли текст, возвращенный при помощи указанного объекта <see cref="T:System.Xml.Schema.XmlValueGetter" />, допустимым в контексте текущего элемента, и собирает текст для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" />, используемый для передачи текстового значения в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Указанная текстовая <see langword="string" /> является недопустимой для контекста текущего элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">Текстовый параметр <see langword="string" /> не может принимать значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary>Проверяет, является ли пустое пространство в указанной <see langword="string" /> допустимым для контекста текущего элемента, и собирает пустое пространство для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">Пустое пространство <see langword="string" />, которое нужно проверить в контексте текущего элемента.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое пустое пространство в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary>Проверяет, является ли пустое пространство, возвращенное при помощи указанного объекта <see cref="T:System.Xml.Schema.XmlValueGetter" />, допустимым для контекста текущего элемента, и собирает пустое пространство для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" />, используемый для передачи значения пробела в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое пустое пространство в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />. Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary>
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает предупреждения и ошибки, возникшие при проверке схемы.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary>Получает или задает объект, переданный в качестве отправителя объекта события проверки.</summary>
      <returns>
        <see cref="T:System.Object" />; по умолчанию это объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary>Задает объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения элементов <c>xs:import</c> и <c>xs:include</c>, а также атрибутов <c>xsi:schemaLocation</c> и <c>xsi:noNamespaceSchemaLocation</c>.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlResolver" />; по умолчанию это объект <see cref="T:System.Xml.XmlUrlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary>Представляет статус действительности элемента XML, проверенного классом <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary>Этот элемент XML недействителен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary>Статус действительности элемента XML неизвестен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary>Этот элемент XML действителен.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>Представляет собой примитив <see langword="whiteSpace" /> консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>Представляет элемент <see langword="selector" /> консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaXPath" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>Получает или задает атрибут для выражения XPath.</summary>
      <returns>Строковой атрибут значения для выражения XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Представляет собой уровень серьезности события проверки.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Указывает, что произошла ошибка проверки во время проверки документа экземпляра. Это относится к определениям типов документов (DTD) и схемам языка определения схем XML (XSD). Ограничения по проверке консорциума World Wide Web (W3C) считаются ошибками. Если обработчик событий проверки отсутствует, в связи с ошибками возникает исключение.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Указывает, что произошло событие проверки, не являющееся ошибкой. Обычно предупреждение происходит, когда отсутствует DTD или схема XML, по которой можно выполнить проверку определенного элемента или атрибута. В отличие от ошибок, при предупреждениях не происходит исключение для них также отсутствует обработчик событий проверки.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Представляет типы схем языка определения схем W3C XML (XSD).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Любое атомарное значение объединения.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Тип схемы W3C XML <see langword="xs:anyURI" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Тип схемы W3C XML <see langword="xs:base64Binary" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Тип схемы W3C XML <see langword="xs:boolean" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Тип схемы W3C XML <see langword="xs:byte" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Тип схемы W3C XML <see langword="xs:date" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Тип схемы W3C XML <see langword="xs:dateTime" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Тип схемы W3C XML <see langword="xs:decimal" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Тип схемы W3C XML <see langword="xs:double" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Тип схемы W3C XML <see langword="xs:Duration" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Тип схемы W3C XML <see langword="xs:ENTITY" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Тип схемы W3C XML <see langword="xs:float" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Тип схемы W3C XML <see langword="xs:gDay" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Тип схемы W3C XML <see langword="xs:gMonth" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Тип схемы W3C XML <see langword="xs:gMonthDay" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Тип схемы W3C XML <see langword="xs:gYear" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Тип схемы W3C XML <see langword="xs:gYearMonth" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Тип схемы W3C XML <see langword="xs:hexBinary" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Тип схемы W3C XML <see langword="xs:ID" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Тип схемы W3C XML <see langword="xs:IDREF" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Тип схемы W3C XML <see langword="xs:int" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Тип схемы W3C XML <see langword="xs:integer" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Элемент в качестве узла или атомарного значения.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Тип схемы W3C XML <see langword="xs:language" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Тип схемы W3C XML <see langword="xs:long" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Тип схемы W3C XML <see langword="xs:Name" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Тип схемы W3C XML <see langword="xs:NCName" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Тип схемы W3C XML <see langword="xs:negativeInteger" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Тип схемы W3C XML <see langword="xs:NMTOKEN" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Сведения о типе отсутствуют.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Тип схемы W3C XML <see langword="xs:nonNegativeInteger" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Тип схемы W3C XML <see langword="xs:nonPositiveInteger" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Тип схемы W3C XML <see langword="xs:normalizedString" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Тип схемы W3C XML <see langword="xs:NOTATION" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Тип схемы W3C XML <see langword="xs:positiveInteger" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Тип схемы W3C XML <see langword="xs:QName" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Тип схемы W3C XML <see langword="xs:short" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Тип схемы W3C XML <see langword="xs:string" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Тип схемы W3C XML <see langword="xs:time" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Тип схемы W3C XML <see langword="xs:token" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Тип схемы W3C XML <see langword="xs:unsignedByte" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Тип схемы W3C XML <see langword="xs:unsignedInt" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Тип схемы W3C XML <see langword="xs:unsignedLong" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Тип схемы W3C XML <see langword="xs:unsignedShort" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Нетипированное атомарное значение.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary>Класс <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> использует <see langword="delegate" />, чтобы передать атрибут, текст и значения пустого пространства в качестве типа CLR, совместимого с типом языка XSD атрибута, текста или пустого пространства.</summary>
      <returns>Объект, содержащий значение атрибута, текста или пустого пространства. Объект представляет собой тип CLR, соответствующий типу XSD атрибута, текста или пробела.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Предоставляет пользовательский формат для сериализации и десериализации XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Данный метод зарезервирован и не используется. При реализации интерфейса <see langword="IXmlSerializable" /> этот метод должен возвращать значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic), а если необходимо указать пользовательскую схему, то вместо использования метода следует применить <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> к классу.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Создает объект из представления XML.</summary>
      <param name="reader">Поток <see cref="T:System.Xml.XmlReader" />, из которого выполняется десериализация объекта.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Преобразует объект в представление XML.</summary>
      <param name="writer">Поток <see cref="T:System.Xml.XmlWriter" />, в который выполняется сериализация объекта.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>Указывает, что член (поле, возвращающее массив объектов <see cref="T:System.Xml.XmlAttribute" />) может содержать любые атрибуты XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>Конструирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Указывает, что член (поле, возвращающее массив объектов <see cref="T:System.Xml.XmlElement" /> или <see cref="T:System.Xml.XmlNode" />) содержит объекты, представляющие любые элементы XML, не имеющие соответствующего члена в сериализуемом или десериализуемом объекте.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя XML-элемента, сгенерированного в документе XML.</summary>
      <param name="name">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя XML-элемента, сгенерированного в документе XML, и его пространство имен XML.</summary>
      <param name="name">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="ns">Пространство имен XML XML-элемента.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Возвращает или задает имя XML-элемента.</summary>
      <returns>Имя элемента XML.</returns>
      <exception cref="T:System.InvalidOperationException">Имя элемента члена массива не соответствует имени элемента, указанному свойством <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Возвращает или задает пространство имен XML, созданное в документе XML.</summary>
      <returns>Пространство имен XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Возвращает или задает явный порядок сериализации или десериализации элементов.</summary>
      <returns>Порядок генерирования кода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Указывает, что <see cref="T:System.Xml.Serialization.XmlSerializer" /> необходимо выполнить сериализацию члена класса в качестве XML-атрибута.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, а также указывает имя созданного XML-атрибута.</summary>
      <param name="attributeName">Имя XML-атрибута, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName">Имя созданного XML-атрибута.</param>
      <param name="type">
        <see cref="T:System.Type" />, используемый для хранения атрибута.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" />, используемый для хранения атрибута.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Возвращает или задает имя XML-атрибута.</summary>
      <returns>Имя XML-атрибута. По умолчанию это имя члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Возвращает или задает тип данных XSD XML-атрибута, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных XSD (документ схемы XML).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Возвращает или задает значение, которое показывает, является ли имя XML-атрибута, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />, квалифицированным.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />. Значение по умолчанию — <see langword="XmlForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Возвращает или задает пространство имен XML для XML-атрибута.</summary>
      <returns>Пространство имен XML для XML-атрибута.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Возвращает или задает сложный тип XML-атрибута.</summary>
      <returns>Тип XML-атрибута.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Указывает, что открытое поле или свойство представляет XML-элемент, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует или десериализует объект, содержащий его.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и указывает имя элемента XML.</summary>
      <param name="elementName">Имя XML-элемента сериализованного члена.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и указывает имя XML-элемента и производного типа для члена, к которому применяется <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. Данный тип члена используйте при сериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> содержащего его объекта.</summary>
      <param name="elementName">Имя XML-элемента сериализованного члена.</param>
      <param name="type">
        <see cref="T:System.Type" /> объекта, являющегося производным от типа члена.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и указывает тип для члена, к которому применяется <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. Данный тип используется при сериализации или десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> содержащего его объекта.</summary>
      <param name="type">
        <see cref="T:System.Type" /> объекта, являющегося производным от типа члена.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Получает или задает тип данных определения схемы XML (XSD), сгенерированного <see cref="T:System.Xml.Serialization.XmlSerializer" /> элемента XML.</summary>
      <returns>Тип данных схемы XML.</returns>
      <exception cref="T:System.Exception">Указанный тип данных XML-схемы не может иметь соответствия в типах данных .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Получает или задает имя созданного XML-элемента</summary>
      <returns>Имя созданного XML-элемента. По умолчанию используется идентификатор члена</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Получает или задает значение, указывающее квалифицирован ли элемент.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.Schema.XmlSchemaForm" />. Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Получает или задает значение, которое указывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализовать члена, имеющего значение <see langword="null" />, в качестве пустого тега с атрибутом <see langword="xsi:nil" /> со значением <see langword="true" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут <see langword="xsi:nil" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Получает или задает пространство имен, присвоенное элементу XML, получаемому при сериализации класса.</summary>
      <returns>Пространство имен XML-элемента.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Возвращает или задает явный порядок сериализации или десериализации элементов.</summary>
      <returns>Порядок генерирования кода.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Получает или задает тип объекта, используемый для представления элемента XML.</summary>
      <returns>
        <see cref="T:System.Type" /> члена.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Управляет тем, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует член перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> и определяет XML-значение, которое создает или распознает <see cref="T:System.Xml.Serialization.XmlSerializer" /> (при сериализации или десериализации перечисления, соответственно).</summary>
      <param name="name">Переопределяющее имя члена перечисления.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Получает или задает значение, создаваемое в экземпляре XML-документа, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</summary>
      <returns>Значение, создаваемое в экземпляре XML-документа, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Инструктирует метод <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />, принадлежащий <see cref="T:System.Xml.Serialization.XmlSerializer" />, не сериализовывать значение открытого поля или открытого свойства чтения/записи.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Указывает, что целевое свойство, параметр, возвращаемое значение или член класса содержит префиксы, связанные с пространствами имен, используемыми в документе XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Управляет XML-сериализацией конечного объекта атрибута как корневого XML-элемента.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> и указывает имя корневого XML-элемента.</summary>
      <param name="elementName">Имя корневого XML-элемента.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Возвращает или задает тип данных XSD корневого XML-элемента.</summary>
      <returns>Тип данных XSD (документ схемы XML).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Возвращает или задает имя XML-элемента, создаваемого и опознаваемого методами <see cref="T:System.Xml.Serialization.XmlSerializer" /> и <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> класса <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />.</summary>
      <returns>Имя корневого XML-элемента, который создается и распознается в экземпляре XML-документа. По умолчанию — это имя сериализуемого класса.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Возвращает или задает значение, которое указывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена со значением <see langword="null" /> в атрибут <see langword="xsi:nil" /> со значением <see langword="true" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут <see langword="xsi:nil" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Возвращает или задает пространство имен для корневого XML-элемента.</summary>
      <returns>Пространство имен для XML-элемента.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>При применении к типу хранит имя статического метода типа, возвращающего XML-схему и объект <see cref="T:System.Xml.XmlQualifiedName" /> (или <see cref="T:System.Xml.Schema.XmlSchemaType" /> для анонимных типов), который управляет сериализацией этого типа.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />, принимая имя статического метода, который предоставляет XML-схему типа.</summary>
      <param name="methodName">Имя статического метода, который должен быть реализован.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Возвращает или задает значение, определяющее, является ли целевой класс подстановочным знаком, или содержит ли схема для класса только элемент <see langword="xs:any" />.</summary>
      <returns>
        <see langword="true" />, если класс является подстановочным знаком, или схема содержит только элемент <see langword="xs:any" />, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Получает имя статического метода, предоставляющего схему XML типа, и имя его типа данных схемы XML.</summary>
      <returns>Имя метода, вызываемого инфраструктурой XML, для возврата схемы XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Содержит пространства имен XML и префиксы, используемые <see cref="T:System.Xml.Serialization.XmlSerializer" /> для генерирования полных имен в экземпляре документа XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> с помощью определенного экземпляра <see langword="XmlSerializerNamespaces" />, содержащего коллекцию пар префикса и пространства имен.</summary>
      <param name="namespaces">Экземпляр <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, содержащий пары пространства имен и префикса.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="namespaces">Массив объектов <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Добавляет пару префикса и пространства имен объекту <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="prefix">Префикс ассоциирован с пространством имен XML.</param>
      <param name="ns">Пространство имен XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Получает число пар префикса и пространства имен в коллекции.</summary>
      <returns>Число пар префикса и пространства имен в коллекции.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Получает массив пар префикса и пространства имен в объекте <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.XmlQualifiedName" />, используемых в качестве квалифицированных имен в документе XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Указывает на <see cref="T:System.Xml.Serialization.XmlSerializer" />, что член должен обрабатываться как текст XML, когда содержащий его класс сериализуется или десериализуется.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> сериализуемого члена.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Получает или задает тип данных языка определения схем XML (XSD) текста, сгенерированного <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных схемы XML (XSD).</returns>
      <exception cref="T:System.Exception">Указанный тип данных XML-схемы не может иметь соответствия в типах данных .NET.</exception>
      <exception cref="T:System.InvalidOperationException">Указанный тип данных схемы XML неверен для свойства и не может быть преобразован в тип члена.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Получает или задает тип члена.</summary>
      <returns>
        <see cref="T:System.Type" /> члена.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>Указывает тип выполняемой проверки.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>Проверка наличия сведений о DTD или схеме. 
Начиная с .NET Framework 2.0, это поле является устаревшим. Применяется только к устаревшему классу <see cref="T:System.Xml.XmlValidatingReader" />.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>Проверка в соответствии с DTD.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>Проверка не выполняется и не выдаются ошибки проверки. Если задан этот параметр, создается совместимое с XML 1.0 средство синтаксического анализа, не выполняющее проверки. .
Вызовы <see cref="M:System.Xml.XmlReader.ResolveEntity" /> сообщают атрибуты по умолчанию и разрешают общие сущности. DOCTYPE не используется в целях проверки.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>Проверка в соответствии со схемами языка определения схем XML (XSD), включая встроенные схемы XML. Схемы XML связаны с универсальными кодами ресурса (URI) пространств имен с помощью атрибута <see langword="schemaLocation" /> или предоставленного свойства <see langword="Schemas" />.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>Проверка в соответствии со схемами XDR, включая встроенные схемы XDR. Схемы XDR распознаются по префиксу пространства имен <see langword="x-schema" /> или по свойству <see cref="P:System.Xml.XmlValidatingReader.Schemas" />.
Начиная с .NET Framework 2.0, это поле является устаревшим. Применяется только к устаревшему классу <see cref="T:System.Xml.XmlValidatingReader" />.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>Указывает способ обработки пробелов.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>Возвращает узлы <see langword="Whitespace" /> и <see langword="SignificantWhitespace" />. Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>Не возвращает узлы <see langword="Whitespace" /> и <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>Возвращает только узлы <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Задает состояние объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Указывает, что значение атрибута записывается.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Указывает, что был вызван метод <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Указывает, что содержимое элемента записывается.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Указывает, что открывающий тег элемента записывается.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Было создано исключение, которое оставило объект <see cref="T:System.Xml.XmlWriter" /> в недопустимом состоянии. Можно вызвать метод <see cref="M:System.Xml.XmlWriter.Close" />, чтобы перевести объект <see cref="T:System.Xml.XmlWriter" /> в состояние <see cref="F:System.Xml.WriteState.Closed" />. Вызов любого другого метода <see cref="T:System.Xml.XmlWriter" /> приведет к созданию исключения <see cref="T:System.InvalidOperationException" />.
Это поле было добавлено в .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Указывает, что пролог записывается.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Указывает, что метод Write еще не вызван.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>Представляет атрибут. Допустимые значения атрибута и его значения по умолчанию определены в определении DTD или схеме.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен.</param>
      <param name="doc">Родительский XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary>Добавляет указанный узел в конец списка дочерних узлов данного узла.</summary>
      <param name="newChild">Добавляемый объект <see cref="T:System.Xml.XmlNode" />.</param>
      <returns>Добавленный узел <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>Возвращает базовый URI узла.</summary>
      <returns>Место, из которого был загружен узел, или String.Empty, если базовый URI узла отсутствует. Узлам атрибутов присвоен базовый URI владеющего ими элемента. Если у атрибута нет элемента-владельца, свойство <see langword="BaseURI" /> возвращает значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Узел-дубликат.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>Задает последовательно соединенные значения узла и его дочерних узлов.</summary>
      <returns>Последовательно соединенные значения узела и его дочерних узов. Для узлов атрибутов это свойство теми же функциями, что и свойство <see cref="P:System.Xml.XmlAttribute.Value" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>Задает значение атрибута.</summary>
      <returns>Значение атрибута.</returns>
      <exception cref="T:System.Xml.XmlException">Формат XML, указанный при задании этого свойства, является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Вставляет заданный узел сразу после указанного узла ссылки.</summary>
      <param name="newChild">Вставляемый объект <see cref="T:System.Xml.XmlNode" />.</param>
      <param name="refChild">Объект <see cref="T:System.Xml.XmlNode" />, являющийся узлом ссылки. <paramref name="newChild" /> располагается после <paramref name="refChild" />.</param>
      <returns>Вставленный узел <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Узел <paramref name="refChild" /> не является дочерним для этого узла.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Вставляет заданный узел сразу перед указанным узлом ссылки.</summary>
      <param name="newChild">Вставляемый объект <see cref="T:System.Xml.XmlNode" />.</param>
      <param name="refChild">Объект <see cref="T:System.Xml.XmlNode" />, являющийся узлом ссылки. <paramref name="newChild" /> размещен перед данным узелом.</param>
      <returns>Вставленный узел <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Узел <paramref name="refChild" /> не является дочерним для этого узла.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Имя узла атрибута с удаленным префиксом. В следующем примере &lt;книги BK: Жанр = ' роман '&gt;, <see langword="LocalName" /> атрибут имеет <see langword="genre" />значение.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Полное имя узла атрибута.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>Возвращает URI пространства имен данного узла.</summary>
      <returns>URI пространства имен данного узла. Если атрибут не задан в пространстве имен явным образом, данное свойство возвращает значение String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Узлы <see langword="XmlAttribute" /> относятся к типу XmlNodeType.Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>Возвращает документ <see cref="T:System.Xml.XmlDocument" />, которому принадлежит данный узел.</summary>
      <returns>XML документ, которому принадлежит данный узел.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>Возвращает <see cref="T:System.Xml.XmlElement" />, которому принадлежит атрибут.</summary>
      <returns>Элемент <see langword="XmlElement" />, которому принадлежит атрибут или значение <see langword="null" />, если данный атрибут не является частью какого-либо элемента <see langword="XmlElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>Возвращает родительский узел данного узла. Для узлов <see langword="XmlAttribute" /> это свойство всегда возвращает значение <see langword="null" />.</summary>
      <returns>Для узлов <see langword="XmlAttribute" /> это свойство всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>Возвращает или задает префикс пространства имен данного узла.</summary>
      <returns>Префикс пространства имен данного узла. Если префикс отсутствует, данное свойство возвращает String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
      <exception cref="T:System.Xml.XmlException">Указанный префикс содержит недопустимый символ.  
Указанный префикс имеет неправильный формат.  
URI пространства имен данного узла является <see langword="null" />.  
Указанный префикс — "xml", а URI пространства имен данного узла отличается от "http://www.w3.org/XML/1998/namespace".  
Данный узел является атрибутом, задан префикс "xmlns", и URI пространства имен этого узла отличается от "http://www.w3.org/2000/xmlns/".  
Данный узел является атрибутом, и его полное имя — "xmlns" [пространства имен].</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary>Добавляет указанный узел в начало списка дочерних узлов данного узла.</summary>
      <param name="newChild">Добавляемый объект <see cref="T:System.Xml.XmlNode" />. Для узлов <see cref="T:System.Xml.XmlDocumentFragment" /> все содержимое фрагмента документа перемещается в дочерний список данного узла.</param>
      <returns>Добавленный узел <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary>Удаляет указанный дочерний узел.</summary>
      <param name="oldChild">Объект <see cref="T:System.Xml.XmlNode" /> для удаления.</param>
      <returns>Удаленный узел <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Узел <paramref name="oldChild" /> не является дочерним для этого узла. Или этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Заменяет указанный дочерний узел заданным новым дочерним узлом.</summary>
      <param name="newChild">Новый дочерний узел <see cref="T:System.Xml.XmlNode" />.</param>
      <param name="oldChild">Узел <see cref="T:System.Xml.XmlNode" /> для замены.</param>
      <returns>Замененный узел <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Этот узел доступен только для чтения.  
Узел <paramref name="oldChild" /> не является дочерним для этого узла.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary>Возвращает информационный набор после проверки схемы (назначенный этому узлу в результате проверки схемы).</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий набор сведений после проверки схемы для этого узла.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>Возвращает значение, указывающее, было ли явно задано значение атрибута.</summary>
      <returns>Значение <see langword="true" />, если для атрибута было явно задано значение в исходном экземпляре документа; в противном случае — значение <see langword="false" />. Значение <see langword="false" /> указывает, что значение атрибута происходит из определения DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. Для узлов <see langword="XmlAttribute" /> значение это свойства равно значению атрибута.</returns>
      <exception cref="T:System.ArgumentException">Узел доступен только для чтения и вызвана операция set.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>Представляет коллекцию атрибутов, к которым можно получить доступ по имени или по индексу.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут как последний узел коллекции.</summary>
      <param name="node">Атрибут для вставки.</param>
      <returns>
        <see langword="XmlAttribute" />, который требуется добавить в коллекцию.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> был создан из документа, отличающегося от того, который создал данную коллекцию.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>Копирует объекты <see cref="T:System.Xml.XmlAttribute" /> из этой коллекции в заданный массив.</summary>
      <param name="array">Массив, который является конечным массивом для объектов, копируемых из коллекции.</param>
      <param name="index">Индекс в массиве, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут непосредственно после заданного атрибута ссылки.</summary>
      <param name="newNode">Атрибут для вставки.</param>
      <param name="refNode">Ссылочный атрибут. <paramref name="newNode" /> располагается после <paramref name="refNode" />.</param>
      <returns>Объект <see langword="XmlAttribute" /> для вставки в коллекцию.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> был создан из документа, отличающегося от того, который создал данную коллекцию. Или <paramref name="refNode" /> не является членом данной коллекции.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут непосредственно перед заданным атрибутом ссылки.</summary>
      <param name="newNode">Атрибут для вставки.</param>
      <param name="refNode">Ссылочный атрибут. Элемент <paramref name="newNode" /> помещается перед элементом <paramref name="refNode" />.</param>
      <returns>Объект <see langword="XmlAttribute" /> для вставки в коллекцию.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> был создан из документа, отличающегося от того, который создал данную коллекцию. Или <paramref name="refNode" /> не является членом данной коллекции.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>Получает атрибут с указанным индексом.</summary>
      <param name="i">Индекс атрибута.</param>
      <returns>Атрибут по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданное значение индекса находится за пределами диапазона.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>Получает атрибут с заданным именем.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Атрибут с указанным именем. Если атрибут не существует, это свойство возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>Возвращает атрибут с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Атрибут с указанным локальным именем и URI пространства имен. Если атрибут не существует, это свойство возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут как первый узел коллекции.</summary>
      <param name="node">Атрибут для вставки.</param>
      <returns>Атрибут <see langword="XmlAttribute" />, добавленный в коллекцию.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>Удаляет указанный атрибут из коллекции.</summary>
      <param name="node">Удаляемый атрибут.</param>
      <returns>узел удален или равен <see langword="null" />, если он не найден в коллекции.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>Удаляет все атрибуты из коллекции.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции атрибут, соответствующий указанному индексу.</summary>
      <param name="i">Индекс удаляемого узла. Первый узел имеет индекс 0.</param>
      <returns>Возвращает значение <see langword="null" />, если по указанному индексу атрибут отсутствует.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>Добавляет узел <see cref="T:System.Xml.XmlNode" /> с помощью свойства <see cref="P:System.Xml.XmlNode.Name" /></summary>
      <param name="node">узел атрибута, предназначенный для помещения в коллекцию. Позже узел будет доступен по своему имени. Если узел с таким именем уже присутствует в коллекции, он замещается новым; в противном случае узел добавляется в конец коллекции.</param>
      <returns>Если узел <paramref name="node" /> заменяет существующий узел с таким же именем, то возвращается старый узел; в противном случае возвращается добавленный узел.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> был создан из <see cref="T:System.Xml.XmlDocument" />, отличающегося от того, который создал данную коллекцию.  
Этот объект <see langword="XmlAttributeCollection" /> доступен только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> представляет собой <see cref="T:System.Xml.XmlAttribute" />, который уже является атрибутом другого объекта <see cref="T:System.Xml.XmlElement" />. Для повторного использования атрибутов в других элементах необходимо клонировать объекты <see langword="XmlAttribute" />, которые требуется повторно использовать.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array">Массив, который является конечным массивом для объектов, копируемых из коллекции.</param>
      <param name="index">Индекс в массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</summary>
      <returns>Значение <see langword="int" /> типа, содержащее количество атрибутов.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />значение, если коллекция синхронизирована.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>Объект <see cref="T:System.Object" /> , являющийся корнем коллекции.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>Представляет раздел CDATA.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlCDataSection" />.</summary>
      <param name="data">Объект <see cref="T:System.String" />, содержащий знаковые данные.</param>
      <param name="doc">Объект <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла. Поскольку узлы CDATA не имеют дочерних узлов, независимо от настройки параметра точная копия узла всегда будет включать содержимое данных.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>узлы CDATA имеют локальное имя <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>узлы CDATA имеют локальное имя <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Тип узла. Для узлов CDATA значение равно XmlNodeType.CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только для тех узлов, которые могут иметь родительские узлы).</summary>
      <returns>Объект <see langword="XmlNode" />, являющийся родительским по отношению к текущему узлу. Если узел уже создан, но еще не добавлен в дерево или если узел был из дерева удален, родительский узел равен <see langword="null" />. Для всех других узлов возвращаемое значение зависит от свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. В следующей таблице описаны возможные возвращаемые значения для свойства <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary>Возвращает текстовый узел, непосредственно предшествующий данному.</summary>
      <returns>Возвращает <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет дочерний узел этого узела в заданном классе <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>Обеспечивает методы обработки текста, которые используются несколькими классами.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlCharacterData" />.</summary>
      <param name="data">Строка, содержащая символьные данные, которые необходимо добавить в документ.</param>
      <param name="doc">Объект <see cref="T:System.Xml.XmlDocument" />, который должен содержать символьные данные.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>Добавляет заданную строку в конец знаковых данных узла.</summary>
      <param name="strData">Строка, вставляемая в существующую строку.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>Содержит данные узла.</summary>
      <returns>Данные текущего узла.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>Удаляет диапазон знаков из узла.</summary>
      <param name="offset">Позиция в строке, с которой начинается удаление.</param>
      <param name="count">Число символов для удаления.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>Возвращает или задает последовательно соединенные значения узла и его дочерних узлов.</summary>
      <returns>Последовательно соединенные значения узла и его дочерних узлов.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>Вставляет заданную строку со смещением в указанное число знаков.</summary>
      <param name="offset">Позиция в строке для вставки предлагаемых данных строки.</param>
      <param name="strData">Данные строки, вставляемые в существующую строку.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>Возвращает длину данных в знаках.</summary>
      <returns>Длина строки в знаках в свойстве <see cref="P:System.Xml.XmlCharacterData.Data" />. Длина может быть равна нулю, то есть узлы CharacterData могут быть пустыми.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>Замещает заданное количество знаков, начиная с указанного смещения в заданной строке.</summary>
      <param name="offset">Позиция в строке, с которой начинается замещение.</param>
      <param name="count">Число знаков для замещения.</param>
      <param name="strData">Новые данные, заменяющие старые данные строки.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>Возвращает подстроку полной строки из заданного диапазона.</summary>
      <param name="offset">Позиция в строке, с которой начинается извлечение. Нулевое смещение означает, что началом данных является начальная пиксель.</param>
      <param name="count">Число извлекаемых знаков.</param>
      <returns>Подстрока, соответствующая указанному диапазону.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Значение узла.</returns>
      <exception cref="T:System.ArgumentException">Узел доступен только для чтения.</exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>Представляет содержимое XML-комментария.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlComment" />.</summary>
      <param name="comment">Содержимое элемента комментария.</param>
      <param name="doc">Родительский XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узела.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла. Поскольку узлы комментариев не имеют дочерних узлов, точная копия узла всегда включает текстовое содержимое независимо от значения параметра.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов комментариев значение — <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>Возвращает проверенное имя узла.</summary>
      <returns>Для узлов комментариев значение — <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>Получает тип текущего узла.</summary>
      <returns>Для узлов комментариев значение — XmlNodeType.Comment.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы в заданном классе <see cref="T:System.Xml.XmlWriter" />. Поскольку у узлов комментариев отсутствуют дочерние узлы, этот метод не работает.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Кодирует и декодирует имена XML и предоставляет методы для преобразования между типами общеязыковой среды выполнения и типами языков определения схем XML (XSD). При преобразовании типов данных возвращаемые значения не зависят от языкового стандарта.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlConvert" />.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Декодирует имя. Этот метод изменяет действие методов <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> и <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> на обратное.</summary>
      <param name="name">Преобразуемое имя.</param>
      <returns>Декодированное имя.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Преобразует имя в допустимое локальное имя XML.</summary>
      <param name="name">Имя для кодирования.</param>
      <returns>Закодированное имя.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Преобразует имя в допустимое имя XML.</summary>
      <param name="name">Преобразуемое имя.</param>
      <returns>Имя, где все недопустимые знаки замещены escape-строкой.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Проверяет допустимость имени на соответствие со спецификацией XML.</summary>
      <param name="name">Имя для кодирования.</param>
      <returns>Закодированное имя.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком, отличающимся от двоеточия.</summary>
      <param name="ch">Знак, который необходимо проверить на то, что он не является двоеточием.</param>
      <returns>Значение <see langword="true" />, если знак является допустимым знаком, отличным от двоеточия; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Возвращает экземпляр переданного знака, если знак в аргументе является допустимым знаком открытого идентификатора; в противном случае возвращает значение <see langword="null" />.</summary>
      <param name="ch">Объект <see cref="T:System.Char" /> для проверки.</param>
      <returns>Переданный знак, если он является допустимым знаком открытого идентификатора; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым значением типа начального знака имени.</summary>
      <param name="ch">Знак, подлежащий проверке.</param>
      <returns>Значение <see langword="true" />, если знак является допустимым значением типа начального знака имени; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком-разделителем XML.</summary>
      <param name="ch">Знак, подлежащий проверке.</param>
      <returns>Значение <see langword="true" />, если переданный знак является допустимым знаком-разделителем XML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком XML.</summary>
      <param name="ch">Знак, подлежащий проверке.</param>
      <returns>Значение <see langword="true" />, если переданный знак является допустимым знаком XML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Проверяет, что переданная пара знаков-заполнителей является допустимым знаком XML.</summary>
      <param name="lowChar">Знак-заполнитель для проверки.</param>
      <param name="highChar">Знак-заполнитель для проверки.</param>
      <returns>Значение <see langword="true" />, если переданная пара знаков-заполнителей является допустимым знаком XML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Boolean" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Значение <see langword="Boolean" /> равно <see langword="true" /> или <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не представляет значение типа <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Byte" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Byte" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Byte.MinValue" /> или больше значения <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Char" />.</summary>
      <param name="s">Строка, содержащая отдельный преобразуемый знак.</param>
      <returns>Значение <see langword="Char" />, представляющее отдельный знак.</returns>
      <exception cref="T:System.ArgumentNullException">параметр <paramref name="s" /> имеет значение <see langword="null" />;</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> содержит несколько символов.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTime" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="DateTime" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> является пустой строкой или его формат неправилен.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTime" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <param name="format">Структура формата, которая применяется к преобразованному значению <see langword="DateTime" />. Допустимы форматы типа "yyyy-MM-ddTHH:mm:sszzzzzz" и его подмножества. Строка проверяется по этому формату.</param>
      <returns>Эквивалент строки <see langword="DateTime" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Значение параметра <paramref name="s" /> или <paramref name="format" /> — String.Empty. 

или - 
Параметр <paramref name="s" /> не содержит дату и время, соответствующие параметру <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTime" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <param name="formats">Массив, содержащий структуры формата, которые применяются к преобразованному значению <see langword="DateTime" />. Допустимы форматы типа "yyyy-MM-ddTHH:mm:sszzzzzz" и его подмножества.</param>
      <returns>Эквивалент строки <see langword="DateTime" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Значение параметра <paramref name="s" /> или элемента параметра <paramref name="formats" /> — String.Empty. 
-или- 
 Параметр <paramref name="s" /> не содержит дату и время, соответствующие какому-либо элементу параметра <paramref name="formats" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.DateTime" /> с помощью указанного <see cref="T:System.Xml.XmlDateTimeSerializationMode" /></summary>
      <param name="s">Преобразуемое значение <see cref="T:System.String" />.</param>
      <param name="dateTimeOption">Одно из значений перечисления, указывающее, следует ли преобразовывать данные в локальное время или сохранять их во времени в формате UTC, если дата в формате UTC.</param>
      <returns>Эквивалент <see cref="T:System.DateTime" /> для значения <see cref="T:System.String" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="dateTimeOption" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> является пустой строкой или его формат недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Преобразует предоставленное значение <see cref="T:System.String" /> в эквивалентное значение <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Преобразуемая строка.  
 Примечание.  Строка должна соответствовать подмножеству в соответствии с рекомендацией W3C для типа XML dateTime. Дополнительные сведения см. в разделе dateTime спецификации схемы XML.</param>
      <returns>Эквивалент указанной строки <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Аргумент, переданный этому методу, находится вне диапазона допустимых значений. Сведения о допустимых значениях см. в разделе <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">Аргумент, переданный этому методу, не соответствует подмножеству рекомендаций W3C для типа XML dateTime. Дополнительные сведения см. в разделе dateTime спецификации схемы XML.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Преобразует предоставленное значение <see cref="T:System.String" /> в эквивалентное значение <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <param name="format">Формат, из которого преобразуется параметр <paramref name="s" />. Параметр формата может быть любым поднабором в соответствии с рекомендацией W3C для типа XML dateTime. (Дополнительные сведения см. в разделе dateTime спецификации схемы XML.) Строка <paramref name="s" /> проверяется по этому формату.</param>
      <returns>Эквивалент указанной строки <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> — <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> или <paramref name="format" /> является пустой строкой или его формат не соответствует указанному.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Преобразует предоставленное значение <see cref="T:System.String" /> в эквивалентное значение <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <param name="formats">Массив форматов, из которого можно преобразовать параметр <paramref name="s" />. Каждый формат в параметре <paramref name="formats" /> может быть любым подмножеством в соответствии с рекомендациями консорциума W3C для типа XML dateTime. (Дополнительные сведения см. в разделе dateTime спецификации схемы XML.) Строка <paramref name="s" /> проверяется по одному из этих форматов.</param>
      <returns>Эквивалент указанной строки <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Decimal" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Decimal" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Double" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Double" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> — <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Double.MinValue" /> или больше значения <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Guid" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Int16" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Int16" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int16.MinValue" /> или больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Int32" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Int32" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int32.MinValue" /> или больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Int64" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Int64" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int64.MinValue" /> или больше значения <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.SByte" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="SByte" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.SByte.MinValue" /> или больше значения <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Single" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="Single" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Single.MinValue" /> или больше значения <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Преобразует объект <see cref="T:System.Boolean" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление <see langword="Boolean" />, то есть true или false.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>Преобразует объект <see cref="T:System.Byte" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Преобразует объект <see cref="T:System.Char" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Char" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>Преобразует объект <see cref="T:System.DateTime" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="DateTime" /> в формат yyyy-MM-ddTHH:mm:ss, где T представляет собой буквенную константу.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>Преобразует объект <see cref="T:System.DateTime" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <param name="format">Структура формата, определяющая способ отображения преобразованной строки. Допустимы форматы типа "yyyy-MM-ddTHH:mm:sszzzzzz" и его подмножества.</param>
      <returns>Строковое представление объекта <see langword="DateTime" /> в заданном формате.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Преобразует объект <see cref="T:System.DateTime" /> в объект <see cref="T:System.String" /> с помощью заданного значения <see cref="T:System.Xml.XmlDateTimeSerializationMode" />.</summary>
      <param name="value">Преобразуемое значение <see cref="T:System.DateTime" />.</param>
      <param name="dateTimeOption">Одно из значений <see cref="T:System.Xml.XmlDateTimeSerializationMode" />, указывающее, как следует обрабатывать значение <see cref="T:System.DateTime" />.</param>
      <returns>Эквивалент <see cref="T:System.String" /> для значения <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">Значение <paramref name="dateTimeOption" /> является недопустимым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="value" /> или <paramref name="dateTimeOption" /> задано значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Преобразует предоставленную структуру <see cref="T:System.DateTimeOffset" /> в объект <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.DateTimeOffset" />.</param>
      <returns>Представление <see cref="T:System.String" /> для предоставленной структуры <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Преобразует предоставленную структуру <see cref="T:System.DateTimeOffset" /> в объект <see cref="T:System.String" /> в указанном формате.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.DateTimeOffset" />.</param>
      <param name="format">Формат, в который преобразуется параметр <paramref name="s" />. Параметр формата может быть любым поднабором в соответствии с рекомендацией W3C для типа XML dateTime. (Дополнительные сведения см. в разделе dateTime спецификации схемы XML.)</param>
      <returns>Представление <see cref="T:System.String" /> в указанном формате предоставленной структуры <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Преобразует объект <see cref="T:System.Decimal" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Преобразует объект <see cref="T:System.Double" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Преобразует объект <see cref="T:System.Guid" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Преобразует объект <see cref="T:System.Int16" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Int16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Преобразует объект <see cref="T:System.Int32" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Int32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Преобразует объект <see cref="T:System.Int64" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Int64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Преобразует объект <see cref="T:System.SByte" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="SByte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Преобразует объект <see cref="T:System.Single" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="Single" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Преобразует объект <see cref="T:System.TimeSpan" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>Преобразует объект <see cref="T:System.UInt16" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="UInt16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Преобразует объект <see cref="T:System.UInt32" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="UInt32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Преобразует объект <see cref="T:System.UInt64" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <returns>Строковое представление объекта <see langword="UInt64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.TimeSpan" />.</summary>
      <param name="s">Преобразуемая строка. Формат строки должен соответствовать рекомендации по продолжительности в зависимости от типа данных W3C XML-схемы (часть 2).</param>
      <returns>Эквивалент строки <see langword="TimeSpan" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> имеет неправильный формат для представления значения <see langword="TimeSpan" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.UInt16" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="UInt16" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt16.MinValue" /> или больше значения <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.UInt32" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="UInt32" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt32.MinValue" /> или больше значения <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.UInt64" />.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Эквивалент строки <see langword="UInt64" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt64.MinValue" /> или больше значения <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Проверяет допустимость имени в соответствии с рекомендацией W3C XML.</summary>
      <param name="name">Имя для проверки.</param>
      <returns>Имя, если это допустимое имя XML.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> не является допустимым именем XML.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или String.Empty.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Проверяет, что имя является допустимым именем <see langword="NCName" /> в соответствии с рекомендациями по XML консорциума W3C. <see langword="NCName" /> — это имя, которое не может содержать двоеточия.</summary>
      <param name="name">Имя для проверки.</param>
      <returns>Указанное имя не является допустимым именем NCName.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или <c>String.Empty</c>.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> не является допустимым именем без двоеточия.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Проверяет, является ли строка допустимым NMTOKEN, в соответствии с рекомендацией по типам данных W3C XML-схемы (часть 2).</summary>
      <param name="name">Строка, которую следует проверить.</param>
      <returns>Токен имени, если это допустимый NMTOKEN.</returns>
      <exception cref="T:System.Xml.XmlException">Строка не является допустимым токеном имени.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Возвращает экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками открытых идентификаторов.</summary>
      <param name="publicId">Объект <see cref="T:System.String" />, содержащий идентификатор для проверки.</param>
      <returns>Переданная строка, если все знаки в аргументе являются допустимыми знаками открытых идентификаторов.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary>Проверяет, является ли строка допустимым токеном, в соответствии с рекомендацией по типам данных W3C XML-схемы (часть 2).</summary>
      <param name="token">Строковое значение, которое следует проверить.</param>
      <returns>Токен, если это допустимый токен.</returns>
      <exception cref="T:System.Xml.XmlException">Строковое значение не является допустимым токеном.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Возвращает экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками-разделителями.</summary>
      <param name="content">Объект <see cref="T:System.String" /> для проверки.</param>
      <returns>Экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками-разделителями; в противном случае возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Возвращает переданную строку, если все знаки и пары знаков-заполнителей в строковом аргументе являются допустимыми знаками XML; в противном случае создается <see langword="XmlException" /> со сведениями о первом встретившемся недопустимом знаке.</summary>
      <param name="content">Объект <see cref="T:System.String" />, содержащий знаки для проверки.</param>
      <returns>Переданная строка, если все знаки и пары знаков-заполнителей в строковом аргументе являются допустимыми знаками XML; в противном случае создается <see langword="XmlException" /> со сведениями о первом встретившемся недопустимом знаке.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Определяет способ обработки значения времени при преобразовании между строками и объектами <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Обрабатывать как местное время. Если объект <see cref="T:System.DateTime" /> представляет время в формате UTC, оно будет преобразовано в местное время.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>Данные о часовом поясе необходимо сохранять при преобразовании.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Обрабатывать как местное время, если объект <see cref="T:System.DateTime" /> преобразовывается в строку. Если строка преобразуется в <see cref="T:System.DateTime" />, выполняется преобразование в местное время, если указан часовой пояс.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Обрабатывать как время в формате UTC. Если объект <see cref="T:System.DateTime" /> представляет местное время, оно будет преобразовано во время в формате UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>Представляет узел объявления XML &lt;?xml version='1.0'...?&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDeclaration" />.</summary>
      <param name="version">Версия XML, см. свойство <see cref="P:System.Xml.XmlDeclaration.Version" />.</param>
      <param name="encoding">Схема кодирования, см. свойство <see cref="P:System.Xml.XmlDeclaration.Encoding" />.</param>
      <param name="standalone">Указывает наличие зависимости XML-документа от внешнего DTD; см. свойство <see cref="P:System.Xml.XmlDeclaration.Standalone" />.</param>
      <param name="doc">Родительский XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла. Поскольку узлы <see langword="XmlDeclaration" /> не имеют дочерних узлов, точная копия узла всегда включает значение данных независимо от значения параметра.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>Получает или задает уровень кодировки XML-документа.</summary>
      <returns>Допустимое имя кодировки знаков. Ниже см. чаще всего поддерживаемые имена кодировок знаков для XML.  
  Категория  

  Имена кодировок  

  Юникод  

  UTF-8, UTF-16  

  ISO 10646  

  ISO-10646-UCS-2, ISO-10646-UCS-4  

  ISO 8859  

  ISO-8859-n (где "n" — цифра от 1 до 9)  

  JIS X-0208-1997  

  ISO-2022-JP, Shift_JIS, EUC-JP  

   

 Это значение является необязательным. Если значение не задано, это свойство возвращает String.Empty.  
Если атрибут кодировки не включен, предполагается использование кодировки UTF-8 при записи или сохранении документа.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>Получает или задает сцепленные значения для <see langword="XmlDeclaration" />.</summary>
      <returns>Последовательно соединенные значения <see langword="XmlDeclaration" /> (то есть любое значение между <c>&lt;? xml</c> и <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов <see langword="XmlDeclaration" /> локальное имя — <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для узлов <see langword="XmlDeclaration" /> имя — <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Для узлов <see langword="XmlDeclaration" /> это значение — XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>Получает или задает значение отдельного атрибута.</summary>
      <returns>Действительными значениями являются значения <see langword="yes" />, если все объявления сущности, требующиеся для XML-документа, содержатся в документе, или значения <see langword="no" />, если требуется внешнее DTD. Если отдельный атрибут отсутствует в объявлении XML, это свойство возвращает String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>Получает или задает значение <see langword="XmlDeclaration" />.</summary>
      <returns>Содержание <see langword="XmlDeclaration" /> (то есть любое значение между <c>&lt;? xml</c> и <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>Получает XML-версию документа.</summary>
      <returns>Это значение всегда равно <see langword="1.0" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет дочерний узел этого узела в заданном классе <see cref="T:System.Xml.XmlWriter" />. Поскольку у узлов <see langword="XmlDeclaration" /> отсутствуют дочерние узлы, этот метод не работает.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>Представляет XML-документ. Этот класс можно использовать для загрузки, проверки, изменения, добавления и размещения XML-кода в документе.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlDocument" /> указанным значением <see cref="T:System.Xml.XmlImplementation" />.</summary>
      <param name="imp">Используемый <see langword="XmlImplementation" />.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlDocument" /> указанным значением <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Используемый <see langword="XmlNameTable" />.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Расположение, из которого загружен узел.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Клонированный узел <see langword="XmlDocument" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlAttribute" /> с указанным <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <param name="name">Полное имя атрибута. Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за первым двоеточием. Свойство <see cref="P:System.Xml.XmlNode.NamespaceURI" /> остается пустым, если префикс не является распознаваемым встроенным префиксом, например xmlns. В этом случае <see langword="NamespaceURI" /> имеет значение <c></c>.</param>
      <returns>Новый объект <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlAttribute" /> с помощью указанного полного имени и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">Полное имя атрибута. Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием.</param>
      <param name="namespaceURI">URI пространства имен атрибута. Если полное имя содержит префикс xmlns, то этот параметр должен иметь значение <c></c>.</param>
      <returns>Новый объект <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlAttribute" /> с помощью указанных значений <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix">Префикс атрибута (если имеется). String.Empty равно значению <see langword="null" />.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">URI пространства имен атрибута (если имеется). String.Empty равно значению <see langword="null" />. Если значение параметра <paramref name="prefix" /> равно xmlns, этот параметр должен иметь значение <c></c>. В противном случае возникает исключение.</param>
      <returns>Новый объект <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlCDataSection" />, содержащий указанные данные.</summary>
      <param name="data">Содержимое нового класса <see langword="XmlCDataSection" />.</param>
      <returns>Новый объект <see langword="XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlComment" />, содержащий указанные данные.</summary>
      <param name="data">Содержимое нового класса <see langword="XmlComment" />.</param>
      <returns>Новый объект <see langword="XmlComment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>Создает атрибут по умолчанию с помощью указанного префикса, локального имени и URI пространства имен.</summary>
      <param name="prefix">Префикс атрибута (если имеется).</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">URI пространства имен атрибута (если имеется).</param>
      <returns>Новый объект <see cref="T:System.Xml.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>Создает <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns>Новый объект <see langword="XmlDocumentFragment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>Возвращает новый объект <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">Имя типа документа.</param>
      <param name="publicId">Общий идентификатор типа документа или значение <see langword="null" />. Вы можете указать общий URI и идентификатор системы для определения местоположения внешнего поднабора DTD.</param>
      <param name="systemId">Системный идентификатор типа документа или значение <see langword="null" />. Задает URL-адрес местоположения файла внешнего поднабора DTD.</param>
      <param name="internalSubset">Внутреннее подмножество DTD типа документа или значение <see langword="null" />.</param>
      <returns>Новый объект <see langword="XmlDocumentType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>Создает элемент с указанным именем.</summary>
      <param name="name">Полное имя элемента. Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием. Полное имя не может содержать префикс "xmlns".</param>
      <returns>Новый объект <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlElement" /> с помощью полного имени и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">Полное имя элемента. Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием. Полное имя не может содержать префикс "xmlns".</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Новый объект <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Создает элемент с помощью указанных <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix">Префикс нового элемента (если имеется). String.Empty равно значению <see langword="null" /> .</param>
      <param name="localName">Локальное имя нового элемента.</param>
      <param name="namespaceURI">URI пространства имен нового элемента (если имеется). String.Empty равно значению <see langword="null" />.</param>
      <returns>Новый объект <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</summary>
      <param name="name">Имя ссылки на сущность.</param>
      <returns>Новый объект <see langword="XmlEntityReference" />.</returns>
      <exception cref="T:System.ArgumentException">Недопустимое имя (например, имена, начинающиеся с символа "#", являются недопустимыми.)</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Создает объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе, расположенном в указанном узле <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="node">Узел <see cref="T:System.Xml.XmlNode" />, который будет служить исходной позицией навигатора.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlNode" /> с помощью указанного типа узла, а также свойств <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="nodeTypeString">Строковая версия типа <see cref="T:System.Xml.XmlNodeType" /> нового узла. Этот параметр должен принимать одно из значений, перечисленных в следующей таблице.</param>
      <param name="name">Полное имя нового узла. Если имя содержит двоеточие, оно разбивается на компоненты <see cref="P:System.Xml.XmlNode.Prefix" /> и <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">URI пространства имен нового узла.</param>
      <returns>Новый объект <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Имя не указано, а <see langword="XmlNodeType" /> требуется имя; или строка <paramref name="nodeTypeString" /> не является одной из следующих строк.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlNode" /> с помощью указанных значений <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="type">Тип <see langword="XmlNodeType" /> нового узла.</param>
      <param name="name">Полное имя нового узла. Если имя содержит двоеточие, оно разбивается на компоненты <see cref="P:System.Xml.XmlNode.Prefix" /> и <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">URI пространства имен нового узла.</param>
      <returns>Новый объект <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Имя не указано, а для <see langword="XmlNodeType" /> требуется имя.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlNode" /> с помощью указанных типов <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="type">Тип <see langword="XmlNodeType" /> нового узла.</param>
      <param name="prefix">Префикс нового узла.</param>
      <param name="name">Локальное имя нового узла.</param>
      <param name="namespaceURI">URI пространства имен нового узла.</param>
      <returns>Новый объект <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Имя не указано, а для <see langword="XmlNodeType" /> требуется имя.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlProcessingInstruction" /> с помощью указанного имени и данных.</summary>
      <param name="target">Имя инструкции по обработке.</param>
      <param name="data">Данные для инструкции обработки.</param>
      <returns>Новый объект <see langword="XmlProcessingInstruction" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Создает узел <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="text">Строка должна содержать только следующие символы: &amp;#20; &amp;#10; &amp;#13; и &amp;#9;</param>
      <returns>Новый узел <see langword="XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlText" /> с указанным текстом.</summary>
      <param name="text">Текст для узла Text.</param>
      <returns>Новый узел <see langword="XmlText" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>Создает узел <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="text">Строка должна содержать только следующие символы: &amp;#20; &amp;#10; &amp;#13; и &amp;#9;</param>
      <returns>Новый узел <see langword="XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>Создает узел <see cref="T:System.Xml.XmlDeclaration" /> с указанными значениями.</summary>
      <param name="version">Номер версии должен быть равен 1.0.</param>
      <param name="encoding">Значение атрибута кодировки. Эта кодировка используется при сохранении <see cref="T:System.Xml.XmlDocument" /> в файле или потоке, поэтому она должна быть задана как строка, поддерживаемая классом <see cref="T:System.Text.Encoding" />. В противном случае в работе <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> возникает сбой. Если она имеет значение <see langword="null" /> или String.Empty, метод <see langword="Save" /> не записывает атрибут кодировки в объявление XML и используется кодировка UTF-8, заданная по умолчанию.  
Примечание. Если <see langword="XmlDocument" /> сохранен в <see cref="T:System.IO.TextWriter" /> или <see cref="T:System.Xml.XmlTextWriter" />, это значение кодировки не учитывается. Вместо нее используется кодировка <see langword="TextWriter" /> или <see langword="XmlTextWriter" />. Таким образом обеспечивается возможность чтения записанного XML в правильной кодировке.</param>
      <param name="standalone">Значение должно быть равно "yes" или "no". Если значение равно <see langword="null" /> или String.Empty, метод <see langword="Save" /> не записывает в объявление XML отдельный атрибут.</param>
      <returns>Новый узел <see langword="XmlDeclaration" />.</returns>
      <exception cref="T:System.ArgumentException">Значения <paramref name="version" /> или <paramref name="standalone" /> немного отличаются от значений, указанных выше.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>Возвращает корень <see cref="T:System.Xml.XmlElement" /> для документа.</summary>
      <returns>Объект <see langword="XmlElement" />, представляющий корень дерева XML-документов. Если корень не существует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>Возвращает узел, содержащий объявление DOCTYPE.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlNode" />, содержащий DocumentType (объявление DOCTYPE).</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>Возвращает элемент <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</summary>
      <param name="elementId">Идентификатор атрибута для сопоставления.</param>
      <returns>Элемент <see langword="XmlElement" /> с соответствующим кодом или значение <see langword="null" />, если соответствующий элемент не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов-потомков, соответствующих указанному имени <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <param name="name">Сопоставляемое полное имя. Оно противопоставляется свойству <see langword="Name" /> соответствующего узла. Специальное значение "*" соответствует всем тегам.</param>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов. Если ни один из узлов не соответствует <paramref name="name" />, возвращаемая коллекция будет пустой.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>Возвращает <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех элементов-потомков, соответствующих указанным значениям <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="localName">Сопоставляемый параметр LocalName. Специальное значение "*" соответствует всем тегам.</param>
      <param name="namespaceURI">Сопоставляемый параметр NamespaceURI.</param>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов. Если ни один из узлов не соответствует указанным параметрам <paramref name="localName" /> и <paramref name="namespaceURI" />, возвращаемая коллекция будет пустой.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlImplementation" /> для текущего документа.</summary>
      <returns>Объект <see langword="XmlImplementation" /> для текущего документа.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>Импортирует в текущий документ узел из другого документа.</summary>
      <param name="node">Импортируемый узел.</param>
      <param name="deep">Значение <see langword="true" /> — выполняется полное точное клонирование; в противном случае — <see langword="false" />.</param>
      <returns>Импортированный <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов этого метода для типа узла, который не может быть импортирован.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary>Во всех случаях вызывает исключение <see cref="T:System.InvalidOperationException" />.</summary>
      <returns>Значения узла и всех его дочерних узлов.</returns>
      <exception cref="T:System.InvalidOperationException">Во всех случаях.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>Возвращает или задает разметку, отражающую дочерние узлы текущего узла.</summary>
      <returns>Разметка дочерних узлов текущего узла.</returns>
      <exception cref="T:System.Xml.XmlException">Формат XML, указанный при задании этого свойства, является неправильным.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли текущий узел только для чтения.</summary>
      <returns>Значение <see langword="true" />, если текущий узел доступен только для чтения; в противном случае — значение <see langword="false" />. Узлы <see langword="XmlDocument" /> всегда возвращают значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>Загружает XML-документ из указанного потока.</summary>
      <param name="inStream">Поток, содержащий загружаемый документ XML.</param>
      <exception cref="T:System.Xml.XmlException">Ошибка загрузки или синтаксического анализа в XML. В этом случае вызывается исключение <see cref="T:System.IO.FileNotFoundException" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>Загружает XML-документ из указанного <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader">
        <see langword="TextReader" />, используемый для передачи данных XML в документ.</param>
      <exception cref="T:System.Xml.XmlException">Ошибка загрузки или синтаксического анализа в XML. В этом случае документ остается пустым.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>Загружает XML-документ из указанного URL-адреса.</summary>
      <param name="filename">URL-адрес файла, содержащего загружаемый документ XML. URL-адрес может ссылаться на локальный файл или являться HTTP-ссылкой (веб-адресом).</param>
      <exception cref="T:System.Xml.XmlException">Ошибка загрузки или синтаксического анализа в XML. В этом случае вызывается исключение <see cref="T:System.IO.FileNotFoundException" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="filename" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="filename" /> указывает файл, доступный только для чтения.  
-или- 
Эта операция не поддерживается на текущей платформе.  
-или- 
 Параметр<paramref name="filename" /> определяет каталог.  

или - 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="filename" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="filename" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>Загружает XML-документ из указанного <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" />, используемый для передачи данных XML в документ.</param>
      <exception cref="T:System.Xml.XmlException">Ошибка загрузки или синтаксического анализа в XML. В этом случае документ остается пустым.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>Загружает XML-документ из указанной строки.</summary>
      <param name="xml">Строка, содержащая загружаемый XML-документ.</param>
      <exception cref="T:System.Xml.XmlException">Ошибка загрузки или синтаксического анализа в XML. В этом случае документ остается пустым.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов <see langword="XmlDocument" /> локальное имя равно #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для узлов <see langword="XmlDocument" /> имя равно #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>Класс <see langword="XmlNameTable" />, позволяющий получить атомизированную версию строки в документе.</returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>Возникает при изменении свойства <see cref="P:System.Xml.XmlNode.Value" /> узла, принадлежащего данному документу.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>Возникает при намерении изменить свойство <see cref="P:System.Xml.XmlNode.Value" /> узла, принадлежащего данному документу.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>Возникает после вставки узла, принадлежащего данному документу, в другой узел.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>Возникает перед вставкой узла, принадлежащего данному документу, в другой узел.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>Возникает после удаления узла, принадлежащего данному документу, из родительского узла.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>Возникает перед удалением узла из документа.</summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Тип узла. Для узлов <see langword="XmlDocument" /> это значение равно XmlNodeType.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>Возвращает <see cref="T:System.Xml.XmlDocument" />, к которому принадлежит текущий узел.</summary>
      <returns>Для узлов <see langword="XmlDocument" /> (<see cref="P:System.Xml.XmlDocument.NodeType" /> имеет значение XmlNodeType.Document) это свойство всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только узлов, у которых они могут быть).</summary>
      <returns>Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>Возвращает или задает значение, определяющее, будут ли сохранены знаки-разделители в содержимом элемента.</summary>
      <returns>Значение <see langword="true" />, если знак-разделитель будет сохранен; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>Создает объект <see cref="T:System.Xml.XmlNode" /> на основе данных из <see cref="T:System.Xml.XmlReader" />. Средство чтения должно быть позиционировано на узел или атрибут.</summary>
      <param name="reader">Источник XML</param>
      <returns>Новый <see langword="XmlNode" /> или значение <see langword="null" />, если больше узлов не существует.</returns>
      <exception cref="T:System.NullReferenceException">Средство чтения расположено на узле, тип которого не преобразуется в допустимый узел DOM (например, EndElement или EndEntity).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>Сохраняет XML-документ в указанном потоке.</summary>
      <param name="outStream">Поток, в который будет выполняться сохранение.</param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>Сохраняет XML-документ в указанном <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see langword="TextWriter" />, в котором необходимо выполнить сохранение.</param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>Сохраняет XML-документ в указанном файле. Если указанный файл существует, метод перезаписывает его.</summary>
      <param name="filename">Место в файле, где нужно сохранить документ.</param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>Сохраняет XML-документ в указанном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary>Возвращает информационный набор после проверки схемы (PSVI) для этого узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, представляющий набор сведений после проверки схемы этого узла.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary>Возвращает или задает объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, связанный с данным объектом <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, который содержит схемы языка определения схемы XML, связанные с этим <see cref="T:System.Xml.XmlDocument" />; в противном случае — пустой объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary>Проверяет <see cref="T:System.Xml.XmlDocument" /> по схемам языка XSD, содержащимся в свойстве <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает сведения о предупреждениях и ошибках, возникающих при проверке схемы.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Произошло событие проверки схемы, и не указан ни один объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary>Проверяет указанный объект <see cref="T:System.Xml.XmlNode" /> по схемам языка XSD, содержащимся в свойстве <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает сведения о предупреждениях и ошибках, возникающих при проверке схемы.</param>
      <param name="nodeToValidate">Объект <see cref="T:System.Xml.XmlNode" />, созданный из <see cref="T:System.Xml.XmlDocument" /> в целях проверки.</param>
      <exception cref="T:System.ArgumentException">Параметр объекта <see cref="T:System.Xml.XmlNode" /> не был создан из <see cref="T:System.Xml.XmlDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр объекта <see cref="T:System.Xml.XmlNode" /> не является элементом, атрибутом, фрагментом документа или корневым узлом.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Произошло событие проверки схемы, и не указан ни один объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла <see langword="XmlDocument" /> в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xw">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел <see langword="XmlDocument" /> в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения внешних ресурсов.</summary>
      <returns>Используемый <see langword="XmlResolver" />.  
Чтобы указать <see langword="XmlResolver" /> в .NET Framework версии 1.1, вызывающий объект должен быть надежным.</returns>
      <exception cref="T:System.Xml.XmlException">Это свойство имеет значение <see langword="null" />, и произошло обнаружение внешнего DTD или внешней сущности.</exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>Представляет простой объект, полезный для операций вставки дерева.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <param name="ownerDocument">XML-документ, являющийся источником фрагмента.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>Получает или задает разметку, представляющую дочерние узлы этого узла.</summary>
      <returns>Разметка дочерних узлов этого узла.</returns>
      <exception cref="T:System.Xml.XmlException">Формат XML, указанный при задании этого свойства, является неправильным.</exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов <see langword="XmlDocumentFragment" /> локальное имя — <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для <see langword="XmlDocumentFragment" /> имя — <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Для узлов <see langword="XmlDocumentFragment" /> это значение равно XmlNodeType.DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlDocument" />, которому принадлежит данный узел.</summary>
      <returns>
        <see langword="XmlDocument" />, к которому принадлежит данный узел.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только для тех узлов, которые могут иметь родительские узлы).</summary>
      <returns>Родительский узел этого узла.  
Для узлов <see langword="XmlDocumentFragment" /> это свойство всегда имеет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>Представляет объявление типа документа.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">Проверенное имя; см. свойство <see cref="P:System.Xml.XmlDocumentType.Name" />.</param>
      <param name="publicId">Открытый идентификатор; см. свойство <see cref="P:System.Xml.XmlDocumentType.PublicId" />.</param>
      <param name="systemId">Системный идентификатор; см. свойство <see cref="P:System.Xml.XmlDocumentType.SystemId" />.</param>
      <param name="internalSubset">Внутренний поднабор DTD; см. свойство <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />.</param>
      <param name="doc">Родительский документ.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла. Для узлов типа документа точная копия узла всегда включает поддерево независимо от значения параметра.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>Возвращает коллекцию узлов <see cref="T:System.Xml.XmlEntity" />, объявленных в объявлении типа документа.</summary>
      <returns>Элемент <see cref="T:System.Xml.XmlNamedNodeMap" />, содержащий узлы <see langword="XmlEntity" />. Возвращаемый элемент <see langword="XmlNamedNodeMap" /> доступен только для чтения.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>Возвращает полное значение внутреннего набора DTD для объявления DOCTYPE.</summary>
      <returns>Внутренний набор DTD для DOCTYPE. Если внутренний набор DTD отсутствует, возвращается String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>
        <see langword="true" />значение, если узел доступен только для чтения; в противном случае —. <see langword="false" />  
Поскольку узлы DocumentType доступны только для чтения, это свойство всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов DocumentType это свойство возвращает имя типа документа.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для узлов DocumentType это свойство возвращает имя типа документа.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Для узлов DocumentType это значение равно XmlNodeType.DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>Возвращает коллекцию узлов <see cref="T:System.Xml.XmlNotation" />, представленных в объявлении типа документа.</summary>
      <returns>Элемент <see cref="T:System.Xml.XmlNamedNodeMap" />, содержащий узлы <see langword="XmlNotation" />. Возвращаемый элемент <see langword="XmlNamedNodeMap" /> доступен только для чтения.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>Возвращает значение общего идентификатора для объявления DOCTYPE.</summary>
      <returns>Общий идентификатор для DOCTYPE. Если общий идентификатор отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>Возвращает значение идентификатора системы для объявления DOCTYPE.</summary>
      <returns>Идентификатор системы для DOCTYPE. Если идентификатор системы отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />. Для узлов <see langword="XmlDocumentType" /> этот метод бесполезен.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>Представляет элемент.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="prefix">Префикс пространства имен, см. свойство <see cref="P:System.Xml.XmlElement.Prefix" />.</param>
      <param name="localName">Локальное имя, см. свойство <see cref="P:System.Xml.XmlElement.LocalName" />.</param>
      <param name="namespaceURI">Универсальный код ресурса пространства имен, см. свойство <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</param>
      <param name="doc">Родительский XML-документ.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>Получает коллекцию <see cref="T:System.Xml.XmlAttributeCollection" />, содержащую список атрибутов для этого узла.</summary>
      <returns>Коллекция <see cref="T:System.Xml.XmlAttributeCollection" />, содержащая список атрибутов для этого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного создания точной копии поддерева указанного узла; значение <see langword="false" /> только для создания точной копии самого узла (и его атрибутов, если узел является объектом <see langword="XmlElement" />).</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>Возвращает значение атрибута с указанным именем.</summary>
      <param name="name">Имя извлекаемого атрибута. Это полное имя. Оно противопоставляется свойству <see langword="Name" /> соответствующего узла.</param>
      <returns>Значение указанного атрибута. Возвращается пустая строка, если соответствующий атрибут не найден или если атрибут не имеет заданного значения или значения по умолчанию.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>Возвращает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя получаемого атрибута.</param>
      <param name="namespaceURI">URI пространства имен получаемого атрибута.</param>
      <returns>Значение указанного атрибута. Возвращается пустая строка, если соответствующий атрибут не найден или если атрибут не имеет заданного значения или значения по умолчанию.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>Возвращает <see langword="XmlAttribute" /> с заданным именем.</summary>
      <param name="name">Имя извлекаемого атрибута. Это полное имя. Оно противопоставляется свойству <see langword="Name" /> соответствующего узла.</param>
      <returns>Значение <see langword="XmlAttribute" /> или <see langword="null" />, если соответствующий атрибут не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlAttribute" /> с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение <see langword="XmlAttribute" /> или <see langword="null" />, если соответствующий атрибут не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов-потомков, соответствующих указанному имени <see cref="P:System.Xml.XmlElement.Name" />.</summary>
      <param name="name">Сопоставляемый тег name. Это полное имя. Оно противопоставляется свойству <see langword="Name" /> соответствующего узла. Звездочка "*" является специальным значением, соответствующим всем тегам.</param>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов. Если соответствующих узлов нет, список пуст.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>Возвращает <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех элементов-потомков, соответствующих указанным значениям <see cref="P:System.Xml.XmlElement.LocalName" /> и <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</summary>
      <param name="localName">Сопоставляемое локальное имя. Звездочка "*" является специальным значением, соответствующим всем тегам.</param>
      <param name="namespaceURI">Сопоставляемый URI пространства имен.</param>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов. Если соответствующих узлов нет, список пуст.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>Определяет наличие у текущего узла атрибута с заданным именем.</summary>
      <param name="name">Имя искомого атрибута. Это полное имя. Оно противопоставляется свойству <see langword="Name" /> соответствующего узла.</param>
      <returns>Значение <see langword="true" />, если у текущего узла имеется заданный атрибут; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>Определяет наличие у текущего узла атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя искомого атрибута.</param>
      <param name="namespaceURI">URI пространства имен искомого атрибута.</param>
      <returns>Значение <see langword="true" />, если у текущего узла имеется заданный атрибут; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>Получает значение <see langword="boolean" />, указывающее наличие у текущего узла каких-либо атрибутов.</summary>
      <returns>Значение <see langword="true" />, если текущий узел содержит атрибуты; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>Получает или задает сцепленные значения узла и всех его дочерних узлов.</summary>
      <returns>Последовательно соединенные значения узела и его дочерних узов.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>Получает или задает разметку, представляющую только дочерние узлы этого узла.</summary>
      <returns>Разметка дочерних узлов этого узла.</returns>
      <exception cref="T:System.Xml.XmlException">Формат XML, указанный при задании этого свойства, является неправильным.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>Получает или задает формат тега элемента.</summary>
      <returns>
        <see langword="true" />значение, если элемент должен быть сериализован в коротком формате тега "&lt;Item/&gt;"; &gt;дляполного&gt;формата&lt;"Item&lt;/Item". <see langword="false" />  
Если значение <see langword="true" /> при задании этого свойства, дочерние элементы этого элемента удаляются и элемент сериализуется в тег с коротким форматом. Если задано значение <see langword="false" />, значение свойства изменяется (независимо от наличия в элементе содержимого); если элемент пустой, он сериализуется в тег с длинным форматом.  
Это свойство является расширением Microsoft для объектной модели документа (DOM).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>Возвращает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом. Например, <see langword="LocalName" /> Book для элемента &lt;BK: Book&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Полное имя узла. Для узлов <see langword="XmlElement" /> это имя тега элемента.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>Возвращает URI пространства имен данного узла.</summary>
      <returns>URI пространства имен данного узла. Если URI пространства имен отсутствует, возвращает String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>Получает объект <see cref="T:System.Xml.XmlNode" />, следующий сразу за этим элементом.</summary>
      <returns>Объект <see langword="XmlNode" />, следующий сразу за этим элементом.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Тип узла. Для узлов <see langword="XmlElement" /> это значение — XmlNodeType.Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>Возвращает документ <see cref="T:System.Xml.XmlDocument" />, которому принадлежит данный узел.</summary>
      <returns>Объект <see langword="XmlDocument" />, которому принадлежит этот элемент.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только для тех узлов, которые могут иметь родительские узлы).</summary>
      <returns>Объект <see langword="XmlNode" />, являющийся родительским по отношению к текущему узлу. Если узел уже создан, но еще не добавлен в дерево или если узел был из дерева удален, родительский узел равен <see langword="null" />. Для всех других узлов возвращаемое значение зависит от свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. В следующей таблице описаны возможные возвращаемые значения для свойства <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>Возвращает или задает префикс пространства имен данного узла.</summary>
      <returns>Префикс пространства имен данного узла. Если префикс отсутствует, данное свойство возвращает String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
      <exception cref="T:System.Xml.XmlException">Указанный префикс содержит недопустимый символ.  
Указанный префикс имеет неправильный формат.  
URI пространства имен данного узла является <see langword="null" />.  
Указанный префикс — "xml", а URI пространства имен данного узла отличается от http://www.w3.org/XML/1998/namespace.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>Удаляет все заданные атрибуты и дочерние узлы текущего узла. Атрибуты, используемые по умолчанию, не удаляются.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>Удаляет все заданные атрибуты из элемента. Атрибуты, используемые по умолчанию, не удаляются.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>Удаляет атрибут по имени.</summary>
      <param name="name">Имя удаляемого атрибута. Это полное имя. Оно противопоставляется свойству <see langword="Name" /> соответствующего узла.</param>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>Удаляет атрибут с заданным локальным именем и URI пространства имен. (Если удаленный атрибут имеет значение по умолчанию, он немедленно заменяется).</summary>
      <param name="localName">Локальное имя удаляемого атрибута.</param>
      <param name="namespaceURI">URI пространства имен удаляемого атрибута.</param>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>Удаляет из элемента узел атрибутов с указанным индексом. (Если удаленный атрибут имеет значение по умолчанию, он немедленно заменяется).</summary>
      <param name="i">Индекс удаляемого узла. Первый узел имеет индекс 0.</param>
      <returns>Узел атрибутов удален, или значение <see langword="null" />, если в указанном индексе узел отсутствует.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>Удаляет объект <see cref="T:System.Xml.XmlAttribute" />, заданный локальным именем и URI пространства имен. (Если удаленный атрибут имеет значение по умолчанию, он немедленно заменяется).</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Удаленный объект <see langword="XmlAttribute" /> или значение <see langword="null" />, если в элементе <see langword="XmlElement" /> отсутствует соответствующий узел атрибутов.</returns>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>Удаляет указанный объект <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="oldAttr">Удаляемый узел <see langword="XmlAttribute" />. Если удаленный атрибут имеет значение по умолчанию, он немедленно заменяется.</param>
      <returns>Удаленный объект <see langword="XmlAttribute" /> или значение <see langword="null" />, если <paramref name="oldAttr" /> не является узлом атрибутов <see langword="XmlElement" />.</returns>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary>Возвращает информационный набор после проверки схемы (назначенный этому узлу в результате проверки схемы).</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий набор сведений после проверки схемы для этого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>Задает значение атрибута с указанным именем.</summary>
      <param name="name">Имя создаваемого или изменяемого атрибута. Это полное имя. Если имя содержит двоеточие, оно разбивается на префикс и локальное имя.</param>
      <param name="value">Задаваемое значение атрибута.</param>
      <exception cref="T:System.Xml.XmlException">Заданное имя содержит недопустимый символ.</exception>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>Задает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <param name="value">Задаваемое значение атрибута.</param>
      <returns>Значение атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>Добавляет заданный объект <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Добавляемый объект <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>Добавляет заданный объект <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="newAttr">Узел <see langword="XmlAttribute" /> для добавления в коллекцию атрибутов этого элемента.</param>
      <returns>Если атрибут заменяет существующий атрибут с таким же именем, возвращается старый узел <see langword="XmlAttribute" />; в противном случае возвращается значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newAttr" /> был создан из другого документа, отличного от документа, из которого был создан этот узел. Или этот узел доступен только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">Узел <paramref name="newAttr" /> уже является атрибутом другого объекта <see langword="XmlElement" />. Необходимо явно создать точную копию узлов <see langword="XmlAttribute" /> для их повторного использования в других объектах <see langword="XmlElement" />.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет текущий узел в заданный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>Представляет объявление сущности, например &lt;!ENTITY... &gt;.</summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>Получает базовый универсальный код ресурса (URI) текущего узла.</summary>
      <returns>Расположение, из которого загружен узел.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла. Невозможно получить точные копии узлов сущности. При вызове этого метода для объекта <see cref="T:System.Xml.XmlEntity" /> создается исключение.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Копия узла <see cref="T:System.Xml.XmlNode" />, из которого вызывается метод.</returns>
      <exception cref="T:System.InvalidOperationException">Невозможно получить точные копии узлов сущности. При вызове этого метода для объекта <see cref="T:System.Xml.XmlEntity" /> создается исключение.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>Последовательно соединенные значения узла и его дочерних узлов.</summary>
      <returns>Последовательно соединенные значения узела и его дочерних узов.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задания значения свойства.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>Возвращает разметку, отражающую дочерние узлы данного узла.</summary>
      <returns>Для узлов <see langword="XmlEntity" /> возвращается String.Empty.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задания значения свойства.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>
        <see langword="true" />значение, если узел доступен только для чтения; в противном случае —. <see langword="false" />  
Поскольку узелы <see langword="XmlEntity" /> доступны только для чтения, это свойство всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>Возвращает имя узла без префикса пространства имен.</summary>
      <returns>Для узлов <see langword="XmlEntity" /> это свойство возвращает имя сущности.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>Возвращает имя узела.</summary>
      <returns>Имя сущности.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>Возвращает тип узла.</summary>
      <returns>Тип узла. Для узлов <see langword="XmlEntity" /> значение равно XmlNodeType.Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>Возвращает имя дополнительного атрибута NDATA для объявления сущности.</summary>
      <returns>Имя атрибута NDATA. Если атрибут NDATA отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>Возвращает разметку, представляющую данный узел и все его дочерние узлы.</summary>
      <returns>Для узлов <see langword="XmlEntity" /> возвращается String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>Возвращает значение открытого идентификатора для объявления сущности.</summary>
      <returns>Общий идентификатор для сущности. Если общий идентификатор отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>Возвращает значение идентификатора системы для объявления сущности.</summary>
      <returns>Идентификатор системы для сущности. Если идентификатор системы отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />. Для узлов <see langword="XmlEntity" /> этот метод бесполезен.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />. Для узлов <see langword="XmlEntity" /> этот метод бесполезен.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>Представляет узел ссылки на сущность.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlEntityReference" />.</summary>
      <param name="name">Имя ссылки на сущность; см. описание свойства <see cref="P:System.Xml.XmlEntityReference.Name" />.</param>
      <param name="doc">Родительский XML-документ.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>Получает базовый универсальный код ресурса (URI) текущего узла.</summary>
      <returns>Расположение, из которого загружен узел.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла. Для узлов <see langword="XmlEntityReference" /> этот метод всегда возвращает узел ссылки на сущность без родительских узлов. Текст замены устанавливается при вставке узла в родительский узел.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>Значение <see langword="true" />, если узел доступен только для чтения; в противном случае — <see langword="false" />.  
Поскольку узелы <see langword="XmlEntityReference" /> доступны только для чтения, это свойство всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов <see langword="XmlEntityReference" /> это свойство возвращает имя сущности, на которую указывает ссылка.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>Возвращает имя узела.</summary>
      <returns>Имя сущности, на которую существует ссылка.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>Возвращает тип узла.</summary>
      <returns>Тип узла. Для узлов <see langword="XmlEntityReference" /> это значение равно XmlNodeType.EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Значение узла. Для узлов <see langword="XmlEntityReference" /> это свойство возвращает значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Узел доступен только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">Задание свойства.</exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Подробные сведения о последнем исключении.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlException" />.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlException" />, используя сведения в объектах <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see langword="SerializationInfo" />, содержащий все свойства класса <see langword="XmlException" />.</param>
      <param name="context">Объект <see langword="StreamingContext" />, содержащий сведения о контексте.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlException" />.</summary>
      <param name="message">Описание условия ошибки.</param>
      <param name="innerException">
        <see cref="T:System.Exception" />, породивший <see langword="XmlException" /> (при наличии). Это значение может быть равно <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlException" />, используя заданное сообщение, внутреннее исключение, номер строки и позицию в строке.</summary>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения. Это значение может быть равно <see langword="null" />.</param>
      <param name="lineNumber">Номер строки, показывающий, где произошла ошибка.</param>
      <param name="linePosition">Размещение строки, показывающее, где произошла ошибка.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Переносит все свойства <see langword="XmlException" /> в класс <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для данного объекта <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see langword="SerializationInfo" />.</param>
      <param name="context">Объект <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Получает номер строки, показывающий, где произошла ошибка.</summary>
      <returns>Номер строки, показывающий, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Получает размещение строки, показывающее, где произошла ошибка.</summary>
      <returns>Размещение строки, показывающее, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Получает сообщение, которое описывает текущее исключение.</summary>
      <returns>Сообщение об ошибке, указывающее причину создания исключения.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Получает расположение XML-файла.</summary>
      <returns>Источник универсального кода ресурса (URI) для данных XML. Если нет источника универсального кода ресурса (URI), данное свойство возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>Определяет контекст набора объектов <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlImplementation" /> указанной таблицей <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Объект <see cref="T:System.Xml.XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Новый объект <see langword="XmlDocument" />.</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>Проверяет, реализована ли в реализации модели DOM определенный компонент.</summary>
      <param name="strFeature">Имя пакета проверяемого средства. Это имя не учитывает регистр.</param>
      <param name="strVersion">Это номер версии проверяемого имени пакета. Если версия не указана (<see langword="null" />), поддержка любой версии компонента приводит к возвращению методом значения <see langword="true" />.</param>
      <returns>Значение <see langword="true" />, если в указанной версии средство реализовано; в противном случае — <see langword="false" />.  
В следующей таблице перечислены сочетания, которые приводят к возвращению методом <see langword="HasFeature" /> значения <see langword="true" />.  
  strFeature 
  strVersion 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>Получает узел, непосредственно предшествующий данному узлу или следующий сразу же за ним.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>Возвращает узел, следующий сразу за данным узелом.</summary>
      <returns>Узел <see cref="T:System.Xml.XmlNode" />, следующий сразу после этого узла, или значение <see langword="null" />, если он не существует.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>Возвращает узел, непосредственно предшествующий данному узлу.</summary>
      <returns>Предшествующий узел <see cref="T:System.Xml.XmlNode" /> или значение <see langword="null" />, если он не существует.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>Представляет коллекцию узлов, доступ к которым можно получить по имени или по индексу.</summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>Получает число узлов в объекте <see langword="XmlNamedNodeMap" />.</summary>
      <returns>Число узлов.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>Обеспечивает поддержку итерации стиля "foreach" для коллекции узлов в объекте <see langword="XmlNamedNodeMap" />.</summary>
      <returns>Объект перечислителя.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>Получает объект <see cref="T:System.Xml.XmlNode" />, указанный по имени.</summary>
      <param name="name">Полное имя получаемого узла. Оно противопоставляется свойству <see cref="P:System.Xml.XmlNode.Name" /> соответствующего узла.</param>
      <returns>Объект <see langword="XmlNode" /> с указанным именем или значение <see langword="null" />, если соответствующий узел не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>Получает узел с соответствующими свойствами <see cref="P:System.Xml.XmlNode.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="localName">Локальное имя получаемого узла.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен получаемого узла.</param>
      <returns>Объект <see cref="T:System.Xml.XmlNode" /> с соответствующим локальным именем и URI пространства имен или возвращается значение <see langword="null" />, если соответствующий узел не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>Получает узел по указанному индексу в <see langword="XmlNamedNodeMap" />.</summary>
      <param name="index">Позиция индекса узла, получаемого из <see langword="XmlNamedNodeMap" />. Индекс начинается с нуля, поэтому первым узлом в индексе является 0, а последним — <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
      <returns>Параметр <see cref="T:System.Xml.XmlNode" /> по указанному индексу. Если значение <paramref name="index" /> меньше 0 либо больше или равно значению свойства <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>Удаляет узел из <see langword="XmlNamedNodeMap" />.</summary>
      <param name="name">Полное имя удаляемого узла. Имя сопоставляется со свойством <see cref="P:System.Xml.XmlNode.Name" /> соответствующего узла.</param>
      <returns>Объект <see langword="XmlNode" /> удален из этого объекта <see langword="XmlNamedNodeMap" />, или возвращается значение <see langword="null" />, если соответствующий узел не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>Удаляет узел с соответствующими объектами <see cref="P:System.Xml.XmlNode.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="localName">Локальное имя удаляемого узла.</param>
      <param name="namespaceURI">URI пространства имен удаляемого узла.</param>
      <returns>Объект <see cref="T:System.Xml.XmlNode" /> удален, или возвращается значение <see langword="null" />, если соответствующий узел не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>Добавляет объект <see cref="T:System.Xml.XmlNode" /> с помощью свойства <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="node">Объект <see langword="XmlNode" /> для хранения в <see langword="XmlNamedNodeMap" />. Если узел с таким именем уже существует в сопоставлении, он заменяется новым.</param>
      <returns>Если узел <paramref name="node" /> заменяет существующий узел с таким же именем, возвращается старый узел; в противном случае возвращается значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Узел <paramref name="node" /> был создан из другого объекта <see cref="T:System.Xml.XmlDocument" />, отличного от объекта, из которого был создан объект <see langword="XmlNamedNodeMap" />; или объект <see langword="XmlNamedNodeMap" /> доступен только для чтения.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Разрешает, добавляет и удаляет пространства имен из коллекции и обеспечивает управление областью для этих пространств имен.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNamespaceManager" /> указанным значением <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nameTable">Используемый <see cref="T:System.Xml.XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Значение <see langword="null" /> передается конструктору.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Добавляет заданное пространство имен в коллекцию.</summary>
      <param name="prefix">Префикс, который требуется связать с добавляемым пространством имен. Используйте String.Empty для добавления пространства имен по умолчанию.  
 Примечание. Если объект <see cref="T:System.Xml.XmlNamespaceManager" /> будет использоваться для разрешения пространств имен в выражении языка XPath, необходимо указать префикс. Если выражение языка XPath не содержит префикс, предполагается, что универсальным кодом ресурса пространства имен является пустое пространство имен. Дополнительные сведения о выражениях языка XPath и <see cref="T:System.Xml.XmlNamespaceManager" /> см. в разделах с описанием методов <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> и <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</param>
      <param name="uri">Добавляемое пространство имен.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="prefix" /> — "xml" или "xmlns".</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="prefix" /> или <paramref name="uri" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Получает универсальный код ресурса (URI) для пространства имен по умолчанию.</summary>
      <returns>URI пространства имен для пространства имен по умолчанию или пустая строка, если пространство имен по умолчанию отсутствует.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Возвращает перечислитель для выполнения итерации по пространствам имен в объекте <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, содержащий префиксы, которые хранятся объектом <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Получает коллекцию пространств имен, ключами которой являются префиксы, используемые для перечисления пространств имен, которые в настоящее время находятся в области.</summary>
      <param name="scope">Значение перечисления, указывающее тип узлов пространства имен, которые требуется возвратить.</param>
      <returns>Коллекция пар префикс-пространство имен, которые в настоящий момент находятся в области.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Получает значение, указывающее, определено ли пространство имен для указанного префикса в текущей области, занесенной в стек.</summary>
      <param name="prefix">Префикс пространства имен, которое нужно найти.</param>
      <returns>Значение <see langword="true" />, если пространство имен определено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Возвращает URI пространства имен для указанного префикса.</summary>
      <param name="prefix">Префикс, для которого требуется разрешить URI пространства имен. Чтобы сопоставить пространство имен по умолчанию, необходимо передать поле String.Empty.</param>
      <returns>Универсальный код ресурса (URI) пространства имен для <paramref name="prefix" />, или <see langword="null" />, если сопоставленного пространства имен нет. Возвращаемая строка является атомизированной.  
Дополнительные сведения об атомизированных строках см. в описании класса <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Находит префикс, объявленный для заданного универсального кода ресурса (URI) пространства имен.</summary>
      <param name="uri">Пространство имен, которое необходимо разрешить для получения префикса.</param>
      <returns>Соответствующий префикс. Если нет сопоставленного префикса, данный метод возвращает поле String.Empty. Если предоставляется значение NULL, возвращается тоже значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Получает объект <see cref="T:System.Xml.XmlNameTable" />, связанный с данным объектом.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlNameTable" />, используемый данным объектом.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Извлекает область пространства имен из стека.</summary>
      <returns>Значение <see langword="true" />, если в стеке остались области пространств имен; значение <see langword="false" />, если больше нет пространств имен, которые требуется извлечь.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Заносит область пространства имен в стек.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Удаляет заданное пространство имен для указанного префикса.</summary>
      <param name="prefix">Префикс для пространства имен.</param>
      <param name="uri">Пространство имен, которое требуется удалить для указанного префикса. Пространство имен удаляется из текущей области пространства имен. Пространства имен вне текущей области пропускаются.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="prefix" /> или <paramref name="uri" /> — <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Определяет область пространства имен.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Все пространства имен, определенные в области текущего узла. Сюда входит пространство xmlns:xml, всегда объявляемое неявно. Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Все пространства имен, определенные в области текущего узла, кроме пространства xmlns:xml, всегда объявляемого неявно. Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Все пространства имен, определенные локально для текущего узла.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Таблица атомизированных объектов строки.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу <see langword="XmlNameTable" />.</summary>
      <param name="array">Массив символов, содержащий добавляемое имя.</param>
      <param name="offset">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени.</param>
      <param name="length">Число символов в имени.</param>
      <returns>Новая атомизированная строка или существующая строка, если таковая уже имеется. Если параметр length имеет значение нуль, возвращается String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  

или - 
<paramref name="offset" /> &gt;= <paramref name="array" />.Length 
или - 
<paramref name="length" /> &gt; <paramref name="array" />.Length 
Вышеприведенные условия не вызывают исключение, если значение <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу <see langword="XmlNameTable" />.</summary>
      <param name="array">Добавляемое имя.</param>
      <returns>Новая атомизированная строка или существующая строка, если таковая уже имеется.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе получает атомизированную строку, содержащую те же символы, что и заданный диапазон символов в заданном массиве.</summary>
      <param name="array">Массив символов, содержащий искомое имя.</param>
      <param name="offset">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени.</param>
      <param name="length">Число символов в имени.</param>
      <returns>Атомизированная строка или значение <see langword="null" />, если строка еще не атомизирована. Если параметр <paramref name="length" /> имеет значение нуль, возвращается String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  

или - 
<paramref name="offset" /> &gt;= <paramref name="array" />.Length 
или - 
<paramref name="length" /> &gt; <paramref name="array" />.Length 
Вышеприведенные условия не вызывают исключение, если значение <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>При переопределении в производном классе получает атомизированную строку, содержащую то же значение, что и заданная строка.</summary>
      <param name="array">Искомое имя.</param>
      <returns>Атомизированная строка или значение <see langword="null" />, если строка еще не атомизирована.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>Представляет отдельный узел в XML-документе.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>Добавляет указанный узел в конец списка дочерних узлов данного узла.</summary>
      <param name="newChild">Добавляемый узел. Все содержимое узла, которое должно быть добавлено, перемещается в указанное расположение.</param>
      <returns>Добавленный узел.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlAttributeCollection" />, содержащий атрибуты данного узла.</summary>
      <returns>Класс <see langword="XmlAttributeCollection" />, содержащий атрибуты узла.  
Для узлов типа XmlNodeType.Element происходит возвращение атрибутов. В противном случае это свойство возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Место, из которого был загружен узел, или String.Empty, если базовый URI узла отсутствует.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>Возвращает все дочерние узлы данного узла.</summary>
      <returns>Объект, содержащий все дочерние узлы данного узла.  
Если дочерние узлы отсутствуют, это свойство возвращает пустой <see cref="T:System.Xml.XmlNodeList" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>Создает дубликат этого узла.</summary>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>Когда переопределено в производном классе, создает дубликат узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Точная копия узла.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов этого метода для типа узла, для которого не может быть создана точная копия.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>Создает класс <see cref="T:System.Xml.XPath.XPathNavigator" /> для перемещения данного объекта.</summary>
      <returns>Объект <see langword="XPathNavigator" />, используемый для перехода по узлу. <see langword="XPathNavigator" /> размещается на узле, из которого вызывается метод. Он не позиционируется на корневой узел документа.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>Возвращает первый дочерний узел данного узла.</summary>
      <returns>Первый дочерний узел данного узла. Если такой узел отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию дочерних узлов текущего узла.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который можно использовать для итерации дочерних узлов в текущем узле.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>Ищет наиболее точное объявление xmlns для заданного префикса, принадлежащее области действия текущего узла, и возвращает универсальный код ресурса (URI) пространства имен в объявлении.</summary>
      <param name="prefix">Префикс, универсальный код ресурса (URI) пространства имен которого нужно найти.</param>
      <returns>URI пространства имен указанного префикса.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>Ищет наиболее точное объявление xmlns для универсального кода ресурса (URI) пространства имен, принадлежащее области действия текущего узла, и возвращает префикс, определенный в этом объявлении.</summary>
      <param name="namespaceURI">URI пространства имен, префикс которого нужно найти.</param>
      <returns>Префикс для указанного URI пространства имен.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>Возвращает значение, свидетельствующее о наличии дочерних узлов у текущего узла.</summary>
      <returns>
        <see langword="true" />, если у узла есть дочерние узлы. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>Возвращает или задает связанные значения узла и всех его дочерних узлов.</summary>
      <returns>Связанные значения узла и всех его дочерних узлов.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>Возвращает или задает разметку, отражающую только дочерние узлы данного узла.</summary>
      <returns>Разметка дочерних узлов данного узла.  
 <see langword="InnerXml" /> не возвращает атрибуты, используемые по умолчанию.</returns>
      <exception cref="T:System.InvalidOperationException">Установка этого свойства на узле, который не может иметь дочерних узлов.</exception>
      <exception cref="T:System.Xml.XmlException">Формат XML, указанный при задании этого свойства, является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Вставляет заданный узел сразу после указанного узла ссылки.</summary>
      <param name="newChild">Вставляемый узел.</param>
      <param name="refChild">Узел ссылки. <paramref name="newChild" /> располагается после <paramref name="refChild" />.</param>
      <returns>Вставляемый узел.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Узел <paramref name="refChild" /> не является дочерним для этого узла.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Вставляет заданный узел сразу перед указанным узлом ссылки.</summary>
      <param name="newChild">Вставляемый узел.</param>
      <param name="refChild">Узел ссылки. <paramref name="newChild" /> размещен перед данным узлом.</param>
      <returns>Вставляемый узел.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Узел <paramref name="refChild" /> не является дочерним для этого узла.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>
        <see langword="true" />значение, если узел доступен только для чтения; в противном случае —. <see langword="false" /></returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>Возвращает первый дочерний элемент с помощью указанного свойства <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="name">Проверенное имя загружаемого элемента.</param>
      <returns>Первый объект <see cref="T:System.Xml.XmlElement" />, соответствующий указанному имени. Если совпадения нет, он возвращает пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>Возвращает первый дочерний элемент с помощью указанного свойства <see cref="P:System.Xml.XmlNode.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="localname">Локальное имя элемента.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Первый объект <see cref="T:System.Xml.XmlElement" /> с соответствующими параметрами <paramref name="localname" /> и <paramref name="ns" />. . Если совпадения нет, он возвращает пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>Возвращает последний дочерний узел данного узла.</summary>
      <returns>Последний дочерний узел данного узла. Если такой узел отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>При переопределении в производном классе возвращает локальное имя узла.</summary>
      <returns>Имя узла с удаленным префиксом. Например, <see langword="LocalName" /> Book для элемента &lt;BK: Book&gt;.  
Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. 
  Тип 
  name 
  Атрибут 
  Локальное имя атрибута.  
  CDATA 
  #cdata-section 
  Комментарий 
  #comment 
  Document 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType; 
  Имя типа документа.  
  Элемент 
  Локальное имя элемента.  
  Объект 
  Имя сущности.  
  EntityReference 
  Имя сущности, на которую существует ссылка.  
  Notation 
  Имя представления.  
  ProcessingInstruction; 
  Цель инструкции по обработке.  
  Text 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>При переопределении в производном классе возвращает полное имя узла.</summary>
      <returns>Полное имя узла. Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. 
  Тип 
  name 
  Атрибут 
  Полное имя атрибута.  
  CDATA 
  #cdata-section 
  Комментарий 
  #comment 
  Document 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType; 
  Имя типа документа.  
  Элемент 
  Полное имя элемента.  
  Объект 
  Имя сущности.  
  EntityReference 
  Имя сущности, на которую существует ссылка.  
  Notation 
  Имя представления.  
  ProcessingInstruction; 
  Цель инструкции по обработке.  
  Text 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>Возвращает URI пространства имен данного узла.</summary>
      <returns>URI пространства имен данного узла. Если URI пространства имен отсутствует, возвращает String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>Возвращает узел, следующий сразу за данным узлом.</summary>
      <returns>Следующий объект <see langword="XmlNode" />. Если следующий узел отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>При переопределении в производном классе возвращает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>Помещает все узлы XmlText на максимальную глубину поддерева, расположенного под данным узлом XmlNode, в обычную форму, где узлы XmlText разделяются только разметкой (теги, примечания, комментарии, инструкции по обработке, разделы CDATA и ссылки на сущности). Смежные узлы XmlText отсутствуют.</summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>Возвращает разметку, содержащую данный узел и все его дочерние узлы.</summary>
      <returns>Разметка, содержащая данный узел и все его дочерние узлы.  
 <see langword="OuterXml" /> не возвращает атрибуты, используемые по умолчанию.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>Возвращает документ <see cref="T:System.Xml.XmlDocument" />, которому принадлежит данный узел.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" />, к которому принадлежит данный узел.  
Если узел является объектом <see cref="T:System.Xml.XmlDocument" /> (NodeType равен XmlNodeType.Document), это свойство возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только для тех узлов, которые могут иметь родительские узлы).</summary>
      <returns>Объект <see langword="XmlNode" />, являющийся родительским по отношению к текущему узлу. Если узел уже создан, но еще не добавлен в дерево или если узел был из дерева удален, родительский узел равен <see langword="null" />. Для всех других узлов возвращаемое значение зависит от свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. В следующей таблице описаны возможные возвращаемые значения для свойства <see langword="ParentNode" />.  
  NodeType 
  Возвращаемое значение параметра ParentNode 
  Attribute, Document, DocumentFragment, Entity, Notation 
  Возвращает значение <see langword="null" />; эти узлы не имеют родительских узлов.  

  CDATA 
  Возвращает ссылку на сущность или элемент, содержащую раздел CDATA.  

  Комментарий 
  Возвращает элемент, ссылку на сущность, тип документа или документ, содержащий комментарий.  

  DocumentType; 
  Возвращает узел документа.  

  Элемент 
  Возвращает родительский узел элемента. Если элемент является корневым узлом дерева, родительский узел служит узлом документа.  

  EntityReference 
  Возвращает элемент, атрибут или ссылку на сущность, содержащую ссылку на сущность.  

  ProcessingInstruction; 
  Возвращает документ, элемент, тип документа или ссылку на сущность, содержащую инструкцию обработки.  

  Text 
  Возвращает родительский элемент, атрибут или ссылку на сущность, содержащую текстовый узел.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>Возвращает или задает префикс пространства имен данного узла.</summary>
      <returns>Префикс пространства имен данного узла. Например, <see langword="Prefix" /> BK для элемента &lt;BK: Book&gt;. Если префикс отсутствует, данное свойство возвращает String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Этот узел доступен только для чтения.</exception>
      <exception cref="T:System.Xml.XmlException">Указанный префикс содержит недопустимый символ.  
 Указанный префикс имеет неправильный формат.  
 Указанный префикс — "xml", а URI пространства имен данного узла отличается от "http://www.w3.org/XML/1998/namespace".  
 Данный узел является атрибутом, указан префикс "xmlns", а URI пространства имен данного узла отличается от "http://www.w3.org/2000/xmlns/".  
 Данный узел является атрибутом, полное имя данного узла — "xmlns".</exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>Добавляет указанный узел в начало списка дочерних узлов данного узла.</summary>
      <param name="newChild">Добавляемый узел. Все содержимое узла, которое должно быть добавлено, перемещается в указанное расположение.</param>
      <returns>Добавленный узел.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Этот узел доступен только для чтения.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>Возвращает узел, непосредственно предшествующий данному узлу.</summary>
      <returns>Предшествующий <see langword="XmlNode" />. Если предшествующий узел отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary>Возвращает текстовый узел, непосредственно предшествующий данному.</summary>
      <returns>Возвращает <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>Удаляет все дочерние узлы и (или) атрибуты текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>Удаляет указанный дочерний узел.</summary>
      <param name="oldChild">Удаленный узел.</param>
      <returns>Удаленный узел.</returns>
      <exception cref="T:System.ArgumentException">Узел <paramref name="oldChild" /> не является дочерним для этого узла. Или этот узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Заменяет дочерний узел <paramref name="oldChild" /> на узел <paramref name="newChild" />.</summary>
      <param name="newChild">Новый узел для помещения в список дочерних элементов.</param>
      <param name="oldChild">Замененный узел в списке.</param>
      <returns>Замененный узел.</returns>
      <exception cref="T:System.InvalidOperationException">Данный узел относится к типу, который не допускает дочерних узлов типа <paramref name="newChild" />.  
Узел <paramref name="newChild" /> является предком данного узла.</exception>
      <exception cref="T:System.ArgumentException">Узел <paramref name="newChild" /> был создан из другого документа, отличного от документа, из которого был создан этот узел.  
Этот узел доступен только для чтения.  
Узел <paramref name="oldChild" /> не является дочерним для этого узла.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary>Возвращает информационный набор после проверки схемы (назначенный этому узлу в результате проверки схемы).</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий набор сведений после проверки схемы для этого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>Выбирает список узлов в соответствии с выражением XPath.</summary>
      <param name="xpath">Выражение XPath.</param>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" />, содержащий коллекцию узлов, соответствующих запросу XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath, содержащее префикс. См. раздел Примеры XPath.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Выбирает список узлов в соответствии с выражением XPath. Префиксы, найденные в выражении XPath, разрешаются с помощью предоставленного <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <param name="xpath">Выражение XPath. См. раздел Примеры XPath.</param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> служит для разрешения пространств имен для префиксов в выражении XPath.</param>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" />, содержащий коллекцию узлов, соответствующих запросу XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath содержит префикс, который не определен в <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>Выделяет первый объект <see langword="XmlNode" />, соответствующий выражению XPath.</summary>
      <param name="xpath">Выражение XPath. См. раздел Примеры XPath.</param>
      <returns>Первый объект <see langword="XmlNode" />, соответствующий запросу XPath, или значение <see langword="null" />, если соответствующий узел не найден.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath, содержащее префикс.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Выделяет первый объект <see langword="XmlNode" />, соответствующий выражению XPath. Префиксы, найденные в выражении XPath, разрешаются с помощью предоставленного <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <param name="xpath">Выражение XPath. См. раздел Примеры XPath.</param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> служит для разрешения пространств имен для префиксов в выражении XPath.</param>
      <returns>Первый объект <see langword="XmlNode" />, соответствующий запросу XPath, или значение <see langword="null" />, если соответствующий узел не найден.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath содержит префикс, который не определен в <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>Проверяет, присутствует ли указанное средство в реализации DOM.</summary>
      <param name="feature">Имя пакета проверяемого средства. Это имя не учитывает регистр.</param>
      <param name="version">Номер версии проверяемого средства. Если версия не указана (null), поддержка любой версии средства заставляет метод вернуть значение true.</param>
      <returns>Значение <see langword="true" />, если в указанной версии средство реализовано; в противном случае — <see langword="false" />. В следующей таблице перечислены сочетания, возвращающие значение <see langword="true" />.  
  Функция 
  Версия 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns>Перечислитель для коллекции.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns>Копия узла, из которого он вызван.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. 
  Тип 
  Значение 
  Атрибут 
  Значение атрибута.  
  CDATASection. 
  Содержимое раздела CDATA.  
  Комментарий 
  Содержимое комментария.  
  Document 
 <see langword="null" />.  
  DocumentFragment 
 <see langword="null" />.  
  DocumentType; 
 <see langword="null" />.  
  Элемент 
 <see langword="null" />. Для доступа к значению узла элемента можно использовать свойство <see cref="P:System.Xml.XmlElement.InnerText" /> или <see cref="P:System.Xml.XmlElement.InnerXml" />.  
  Объект 
 <see langword="null" />.  
  EntityReference 
 <see langword="null" />.  
  Notation 
 <see langword="null" />.  
  ProcessingInstruction; 
  Все содержимое, исключая назначение.  
  Text 
  Содержимое текстового узла.  
  SignificantWhitespace 
  Символы-разделители. Символы-разделители могут включать один или более символов пробела, возврата каретки, перевода строки или табуляции.  
  Whitespace 
  Символы-разделители. Символы-разделители могут включать один или более символов пробела, возврата каретки, перевода строки или табуляции.  
  XmlDeclaration 
  Содержимое объявления (то есть все между &lt;? XML и?&gt;).</returns>
      <exception cref="T:System.ArgumentException">Установка значения узла, доступного только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">Установка значения узла, который не должен иметь значения (например, узла элемента).</exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы данного узла в указанном <see cref="T:System.Xml.XmlWriter" /> при переопределении в производном классе.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет текущий узел в указанном <see cref="T:System.Xml.XmlWriter" /> при переопределении в производном классе.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>Задает тип изменения узла.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>Изменяется значение узла.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>Узел вставляется в дерево.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>Узел удаляется из дерева.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>Предоставляет данные для событий <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> и <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNodeChangedEventArgs" />.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, создавший событие.</param>
      <param name="oldParent">Старый родительский узел <see cref="T:System.Xml.XmlNode" /> узла <see cref="T:System.Xml.XmlNode" />, создавшего событие.</param>
      <param name="newParent">Новый родительский узел <see cref="T:System.Xml.XmlNode" /> узла <see cref="T:System.Xml.XmlNode" />, создавшего событие.</param>
      <param name="oldValue">Старое значение узла <see cref="T:System.Xml.XmlNode" />, создавшего событие.</param>
      <param name="newValue">Новое значение узла <see cref="T:System.Xml.XmlNode" />, создавшего событие.</param>
      <param name="action">
        <see cref="T:System.Xml.XmlNodeChangedAction" />.</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>Возвращает значение, указывающее тип происходящего события изменения узла.</summary>
      <returns>Одно из значений перечисления, описывающее событие изменения узла. Значение <see langword="Action" /> не различает, когда событие возникло (до или после). Можно создать отдельные обработчики событий для обработки обоих экземпляров.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>Получает значение <see cref="P:System.Xml.XmlNode.ParentNode" /> после завершения операции.</summary>
      <returns>Значение <see langword="ParentNode" /> после завершения операции. Это свойство возвращает значение <see langword="null" />, если узел удаляется.  
   
 Для узлов атрибутов это свойство возвращает <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary>Получает новое значение узла.</summary>
      <returns>Новое значение узла. Это свойство возвращает значение <see langword="null" />, если узел не является ни атрибутом, ни текстовым узлом или если узел удаляется.  
При вызове в событии <see cref="E:System.Xml.XmlDocument.NodeChanging" /> объект <see langword="NewValue" /> возвращает значение узла в случае успешного изменения. При вызове в событии <see cref="E:System.Xml.XmlDocument.NodeChanged" /> объект <see langword="NewValue" /> возвращает текущее значение узла.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>Получает добавляемый, удаляемый или изменяемый объект <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Добавляемый, удаляемый или изменяемый объект <see langword="XmlNode" />; это свойство никогда не возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>Получает значение <see cref="P:System.Xml.XmlNode.ParentNode" /> до начала операции.</summary>
      <returns>Значение <see langword="ParentNode" /> до начала операции. Это свойство возвращает значение <see langword="null" />, если у узла отсутствует родительский узел.  
   
 Для узлов атрибутов это свойство возвращает <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary>Получает исходное значение узла.</summary>
      <returns>Исходное значение узла. Это свойство возвращает значение <see langword="null" />, если узел не является ни атрибутом, ни текстовым узлом или если узел вставляется.  
При вызове в событии <see cref="E:System.Xml.XmlDocument.NodeChanging" /> объект <see langword="OldValue" /> возвращает текущее значение узла, который будет заменен в случае успешного изменения. При вызове в событии <see cref="E:System.Xml.XmlDocument.NodeChanged" /> объект <see langword="OldValue" /> возвращает значение узла до изменения.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>Представляет метод, обрабатывающий события <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> и <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Xml.XmlNodeChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>Представляет упорядоченную коллекцию узлов.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>Получает число узлов в объекте <see langword="XmlNodeList" />.</summary>
      <returns>Число узлов в объекте <see langword="XmlNodeList" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>Получает перечислитель, выполняющий итерацию коллекции узлов.</summary>
      <returns>Перечислитель, который используется для итерации коллекции узлов.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>Извлекает узел по заданному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс в списке узлов.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> с указанным индексом в коллекции. Если значение параметра <paramref name="index" /> больше или равно числу узлов в списке, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>Получает узел по заданному индексу.</summary>
      <param name="i">Отсчитываемый от нуля индекс в списке узлов.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> с указанным индексом в коллекции. Если значение индекса больше или равно числу узлов в списке, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary>Закрыто освобождает ресурсы в списке узлов.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary>Освобождает все ресурсы, используемые классом <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>Описывает документный порядок узла по отношению ко второму узлу.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>Текущий узел данного навигатора находится после текущего узла указанного навигатора.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>Текущий узел данного навигатора находится перед текущим узлом указанного навигатора.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>Два навигатора расположены на одном и том же узле.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>Не удается определить расположения узлов в документном порядке по отношению друг ко другу. Это может произойти, если два узла находятся в различных деревьях.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML в классе <see cref="T:System.Xml.XmlNode" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlNodeReader" /> с помощью указанного класса <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="node">Класс <see langword="XmlNode" />, который требуется считать.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>Возвращает количество атрибутов текущего узла.</summary>
      <returns>Количество атрибутов текущего узла. в том числе атрибутов, используемых по умолчанию.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary>Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlNodeReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение <see langword="true" />, если реализуются методы чтения двоичного содержимого; в противном случае — <see langword="false" />. Класс <see cref="T:System.Xml.XmlNodeReader" /> всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее, способно ли данное средство чтения выполнять синтаксический анализ и разрешение сущностей.</summary>
      <returns>Значение <see langword="true" />, если средство чтения позволяет анализировать и разрешать сущности; в противном случае — <see langword="false" />. Параметр <see langword="XmlNodeReader" /> всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>Изменяет значение свойства <see cref="P:System.Xml.XmlNodeReader.ReadState" /> на <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>Возвращает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>Возвращает значение, определяющее, позиционировано ли средство чтения в конец потока.</summary>
      <returns>Значение <see langword="true" />, если средство чтения установлено в конец потока; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>Возвращает значение атрибута по заданному индексу.</summary>
      <param name="attributeIndex">Индекс атрибута. Индексация начинается с нуля. (Индекс первого атрибута равен нулю.)</param>
      <returns>Значение указанного атрибута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>Возвращает значение атрибута с указанным именем.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>Возвращает значение атрибута с указанным локальным именем и универсальным кодом ресурса (URI) пространства имен.</summary>
      <param name="name">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>Возвращает значение, показывающее, имеются ли атрибуты у текущего узла.</summary>
      <returns>Значение <see langword="true" />, если текущий узел содержит атрибуты; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>Возвращает значение, определяющие наличие свойства <see cref="P:System.Xml.XmlNodeReader.Value" /> у текущего узла.</summary>
      <returns>Значение <see langword="true" />, если узел, на котором расположено средство чтения, может иметь значение <see langword="Value" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>Возвращает значение, определяющее, является ли текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
      <returns>Значение <see langword="true" />, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD или схеме; значение <see langword="false" />, если значение атрибута было задано явно.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>Возвращает значение, определяющее, является ли текущий узел пустым элементом (например, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />значение,<see cref="P:System.Xml.XmlNodeReader.NodeType" /><c>/ &gt;</c><see langword="XmlNodeType.Element" />если текущийузелявляетсяэлементом(равен)изаканчивается;впротивномслучае—.<see langword="false" /></returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>Возвращает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом. Например, <see langword="LocalName" /><see langword="book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
Для безымянных типов узлов (например, <see langword="Text" />, <see langword="Comment" /> и т. д.) данное свойство возвращает String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>Разрешает префикс пространства имен в области видимости текущего элемента.</summary>
      <param name="prefix">Префикс, для которого требуется разрешить URI пространства имен. Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку. Эту строку не следует атомизировать.</param>
      <returns>URI пространства имен, которое отображает префикс, или значение <see langword="null" />, если соответствующий префикс не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>Переходит к атрибуту с указанным индексом.</summary>
      <param name="attributeIndex">Индекс атрибута.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>Переходит к атрибуту с указанным именем.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>Переходит к атрибуту с указанным локальным именем и URI пространства имен.</summary>
      <param name="name">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>Переходит к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение <see langword="true" />, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>Переходит к первому атрибуту.</summary>
      <returns>Значение <see langword="true" />, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>Переходит к следующему атрибуту.</summary>
      <returns>Значение <see langword="true" />, если присутствует следующий атрибут; значение <see langword="false" />, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>Возвращает полное имя текущего узла.</summary>
      <returns>Полное имя текущего узла. Например, <see langword="Name" /><see langword="bk:book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlNodeReader.NodeType" /> узла. Значения возвращаются для представленных ниже типов узлов. Для других типов узлов возвращается пустая строка.  
  Тип узла 
  name 
 <see langword="Attribute" /> Имя атрибута.  

 <see langword="DocumentType" /> Имя типа документа.  

 <see langword="Element" /> Имя тега.  

 <see langword="EntityReference" /> Имя сущности, на которую существует ссылка.  

 <see langword="ProcessingInstruction" /> Цель инструкции по обработке.  

 <see langword="XmlDeclaration" /> Строка символов <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>Возвращает URI пространства имен (определенное в спецификации W3C Namespace) узла, на который позиционировано средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>
        <see langword="XmlNameTable" />, позволяющий получать в узле разделенную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>Возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>Считывает следующий узел из потока.</summary>
      <returns>Значение <see langword="true" />, если чтение прошло успешно; значение <see langword="false" />, если отсутствуют узлы для чтения.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>Разбирает значение атрибута в один или несколько узлов <see langword="Text" />, <see langword="EntityReference" /> или <see langword="EndEntity" />.</summary>
      <returns>Значение <see langword="true" />, если присутствуют возвращаемые узлы.  
 Значение <see langword="false" />, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.  
Пустой атрибут (например, <c>misc=""</c>) возвращает значение <see langword="true" /> с отдельным узлом, имеющим значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает данные и возвращает двоичные байты, декодированные из кодировки BinHex.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует его из кодировки Base64.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует его из кодировки BinHex.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>Возвращает состояние средства чтения.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>Считывает содержимое элемента или текстового узла в виде строки.</summary>
      <returns>Содержимое элемента или текстового узла, который может быть узлом CDATA, Text и т. д. Если средство чтения позиционировано не на элемент или текстовый узел, а также если отсутствует возвращаемый текст, это может быть пустая строка.  
 <see langword="Note:" /> Текстовым узлом может быть элемент или текстовой узел атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>Разрешает ссылки на сущности для узлов <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary>Возвращает сведения схемы, которые были назначены текущему узлу.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> содержит сведения схемы для текущего узла.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>Пропускает дочерний узел текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Объект <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, который содержит находящиеся в области видимости пространства имен.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Строка <see cref="T:System.String" />, содержащая префикс пространства имен.</param>
      <returns>Строка <see cref="T:System.String" />, содержащая имя пространства имен.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Объект <see cref="T:System.String" />, определяющий пространство имен.</param>
      <returns>Объект <see cref="T:System.String" />, содержащий префикс пространства имен.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>Возвращает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlNodeReader.NodeType" /> узла. В следующей таблице представлен список возвращаемых типов узлов со значениями. Другие типы узлов возвращают String.Empty.  
  Тип узла 
  Значение 
 <see langword="Attribute" /> Значение атрибута.  

 <see langword="CDATA" /> Содержимое раздела CDATA.  

 <see langword="Comment" /> Содержимое комментария.  

 <see langword="DocumentType" /> Внутреннее подмножество.  

 <see langword="ProcessingInstruction" /> Все содержимое, за исключением цели.  

 <see langword="SignificantWhitespace" /> Пустое пространство в разметке модели со смешанным содержимым.  

 <see langword="Text" /> Содержимое текстового узла.  

 <see langword="Whitespace" /> Пробелы между разметкой.  

 <see langword="XmlDeclaration" /> Содержимое декларации.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>Возвращает текущую область действия <see langword="xml:lang" />.</summary>
      <returns>Текущая область действия <see langword="xml:lang" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>Возвращает текущую область действия <see langword="xml:space" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.XmlSpace" />. Если область действия <see langword="xml:space" /> отсутствует, данное свойство принимает значение <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Задает типа узла.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Атрибут (например, <c>id='123'</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Например CDATA (например, <c>&lt;![CDATA[экранированный текст]]&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Комментарий (например, <c>&lt;!-- мой комментарий --&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Объект документа, являющийся корневым элементом дерева документов, предоставляет доступ ко всему XML-документу.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Фрагмент документа.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>Объявление типа документа, обозначенное следующим тегом (например, <c>&lt;!DOCTYPE...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Элемент (например, <c>&lt;item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Конечный тег элемента (например, <c>&lt;/item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Возвращается, когда объект <see langword="XmlReader" /> доходит до конца замены сущности в результате вызова <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Объявление сущности (например, <c>&lt;!ENTITY...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Ссылка на сущность (например, <c>&amp;num;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>Возвращается объектом <see cref="T:System.Xml.XmlReader" />, если не был вызван метод <see langword="Read" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Нотация в объявлении типа документа (например, <c>&lt;!NOTATION...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Инструкция по обработке (например, <c>&lt;?pi test?&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Пробел между элементами разметки в смешанной модели содержимого или пробел в области <c>xml:space="preserve"</c>.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Текстовое содержимое узла.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Пробел между разметкой.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>Объявление XML (например, <c>&lt;?xml version='1.0'?&gt;</c>).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>Представляет объявление нотации, например &lt;!NOTATION... &gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла. Невозможно создать точную копию узлов представлений. При вызове этого метода для объекта <see cref="T:System.Xml.XmlNotation" /> создается исключение.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Копия узла <see cref="T:System.Xml.XmlNode" />, из которого вызывается метод.</returns>
      <exception cref="T:System.InvalidOperationException">Невозможно создать точную копию узлов представлений. При вызове этого метода для объекта <see cref="T:System.Xml.XmlNotation" /> создается исключение.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>Возвращает разметку, отражающую дочерние узлы данного узла.</summary>
      <returns>Для узлов <see langword="XmlNotation" /> возвращается String.Empty.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задания значения свойства.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>
        <see langword="true" />значение, если узел доступен только для чтения; в противном случае —. <see langword="false" />  
Поскольку узелы <see langword="XmlNotation" /> доступны только для чтения, это свойство всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>Возвращает имя текущего узла без префикса пространства имен.</summary>
      <returns>Для узлов <see langword="XmlNotation" /> это свойство возвращает имя представления.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>Возвращает имя текущего узла.</summary>
      <returns>Имя представления.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Тип узла. Для узлов <see langword="XmlNotation" /> значение равно XmlNodeType.Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>Возвращает разметку, представляющую данный узел и все его дочерние узлы.</summary>
      <returns>Для узлов <see langword="XmlNotation" /> возвращается String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>Возвращает значение открытого идентификатора для объявления представления.</summary>
      <returns>Общий идентификатор для представления. Если общий идентификатор отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>Возвращает значение идентификатора системы для объявления представления.</summary>
      <returns>Идентификатор системы для представления. Если идентификатор системы отсутствует, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет дочерний узел этого узела в заданном классе <see cref="T:System.Xml.XmlWriter" />. Этот метод не влияет на узлы <see langword="XmlNotation" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />. Этот метод не влияет на узлы <see langword="XmlNotation" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary>Задает метод, используемый для сериализации выходных данных объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary>С помощью правил XSLT можно выбирать метод вывода <see cref="F:System.Xml.XmlOutputMethod.Xml" /> или <see cref="F:System.Xml.XmlOutputMethod.Html" /> во время выполнения.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary>Сериализация в соответствии с правилами HTML, заданными XSLT.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary>Сериализация только блоков текста.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary>Сериализация в соответствии с правилами XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Предоставляет все контекстные данные, необходимые объекту <see cref="T:System.Xml.XmlReader" /> для анализа фрагмента XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlParserContext" /> с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, базового URI, <see langword="xml:lang" />, <see langword="xml:space" /> и значений типов документов.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк. Если значение параметра равно <see langword="null" />, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />. Дополнительные сведения об атомизированных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение <see langword="null" />.</param>
      <param name="docTypeName">Имя объявления типа документа.</param>
      <param name="pubId">Открытый идентификатор.</param>
      <param name="sysId">Идентификатор системы.</param>
      <param name="internalSubset">Внутреннее подмножество DTD. Подмножество DTD используется для разрешения сущностей, но не для проверки документа.</param>
      <param name="baseURI">Базовый URI для фрагмента XML (размещение, из которого был загружен фрагмент).</param>
      <param name="xmlLang">Область <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, указывающее область <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="nt" /> отличается от таблицы <see langword="XmlNameTable" />, используемой для создания объекта <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlParserContext" /> с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, базового URI, <see langword="xml:lang" />, <see langword="xml:space" />, кодировки и значений типов документов.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк. Если значение параметра равно <see langword="null" />, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />. Дополнительные сведения об атомизированных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение <see langword="null" />.</param>
      <param name="docTypeName">Имя объявления типа документа.</param>
      <param name="pubId">Открытый идентификатор.</param>
      <param name="sysId">Идентификатор системы.</param>
      <param name="internalSubset">Внутреннее подмножество DTD. DTD используется для разрешения сущностей, но не для проверки документа.</param>
      <param name="baseURI">Базовый URI для фрагмента XML (размещение, из которого был загружен фрагмент).</param>
      <param name="xmlLang">Область <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, указывающее область <see langword="xml:space" />.</param>
      <param name="enc">Объект <see cref="T:System.Text.Encoding" />, указывающий параметр кодировки.</param>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="nt" /> отличается от таблицы <see langword="XmlNameTable" />, используемой для создания объекта <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlParserContext" /> с помощью заданных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> и <see langword="xml:space" />.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк. Если значение параметра равно <see langword="null" />, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />. Дополнительные сведения об атомизированных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение <see langword="null" />.</param>
      <param name="xmlLang">Область <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, указывающее область <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="nt" /> отличается от таблицы <see langword="XmlNameTable" />, используемой для создания объекта <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlParserContext" /> с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" />, <see langword="xml:space" /> и кодировки.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк. Если значение параметра равно <see langword="null" />, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />. Дополнительные сведения об атомизированных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение <see langword="null" />.</param>
      <param name="xmlLang">Область <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, указывающее область <see langword="xml:space" />.</param>
      <param name="enc">Объект <see cref="T:System.Text.Encoding" />, указывающий параметр кодировки.</param>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="nt" /> отличается от таблицы <see langword="XmlNameTable" />, используемой для создания объекта <paramref name="nsMgr" />.</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Возвращает или задает базовый URI.</summary>
      <returns>Базовый URI, используемый для разрешения файла DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Возвращает или задает имя объявления типа документа.</summary>
      <returns>Имя объявления типа документа.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Возвращает или задает тип кодировки.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, показывающий тип кодировки.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Возвращает или задает внутреннее подмножество DTD.</summary>
      <returns>Внутреннее подмножество DTD. Например, это свойство возвращает все, что заключено в квадратные скобки <c>&lt;! Документ DOCTYPE [...] &gt;</c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Возвращает или задает класс <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>
        <see langword="XmlNamespaceManager" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк. Дополнительные сведения об атомизированных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>
        <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Возвращает или задает открытый идентификатор.</summary>
      <returns>Открытый идентификатор.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Возвращает или задает идентификатор системы.</summary>
      <returns>Идентификатор системы.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Возвращает или задает текущую область <see langword="xml:lang" />.</summary>
      <returns>Текущая область действия <see langword="xml:lang" />. Если в области отсутствует <see langword="xml:lang" />, возвращается значение <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Возвращает или задает текущую область <see langword="xml:space" />.</summary>
      <returns>Значение <see cref="T:System.Xml.XmlSpace" />, указывающее область <see langword="xml:space" />.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>Представляет инструкцию по обработке, которая определяется в XML для хранения сведений, относящихся к процессору, в тексте документа.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlProcessingInstruction" />.</summary>
      <param name="target">Целевой объект инструкции по обработке; см. описание свойства <see cref="P:System.Xml.XmlProcessingInstruction.Target" />.</param>
      <param name="data">Содержимое инструкции; см. описание свойства <see cref="P:System.Xml.XmlProcessingInstruction.Data" />.</param>
      <param name="doc">Родительский XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Узел-дубликат.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>Получает или задает содержимое инструкции по обработке, исключая цель.</summary>
      <returns>Содержимое инструкции по обработке, исключая цель.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>Получает или задает сцепленные значения узла и всех его дочерних узлов.</summary>
      <returns>Последовательно соединенные значения узела и его дочерних узов.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов инструкций по обработке это свойство возвращает цель инструкции по обработке.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для узлов инструкций по обработке это свойство возвращает цель инструкции по обработке.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Для узлов <see langword="XmlProcessingInstruction" /> это значение равно XmlNodeType.ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>Получает цель инструкции по обработке.</summary>
      <returns>Цель инструкции по обработке.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Все содержимое инструкции по обработке, исключая цель.</returns>
      <exception cref="T:System.ArgumentException">Узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />. У узлов ProcessingInstruction отсутствуют дочерние узлы, поэтому этот метод не выполняет никаких действий.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Представляет полное имя XML.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlQualifiedName" /> с указанным именем.</summary>
      <param name="name">Локальное имя, используемое в качестве имени объекта <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlQualifiedName" /> с заданными именем и пространством имен.</summary>
      <param name="name">Локальное имя, используемое в качестве имени объекта <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="ns">Пространство имен для объекта <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Предоставляет пустое полное имя <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Определяет, равен ли заданный объект <see cref="T:System.Xml.XmlQualifiedName" /> текущему объекту <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="other">Сравниваемый шаблон <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>Значение <see langword="true" />, если оба объекта являются одним и тем же объектом экземпляра; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Возвращает хэш-код для <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Хэш-код объекта.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Получает значение, указывающее, пуст ли объект <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Значение <see langword="true" />, если имя и пространство имен представляют собой пустые строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Получает строковое представление полного имени объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Строковое представление полного имени или String.Empty, если для объекта не определено имя.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Получает строковое представление пространства имен для объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Строковое представление пространства имен или String.Empty, если для объекта не определено пространство имен.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Сравнивает два объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения.</param>
      <param name="b">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения.</param>
      <returns>Значение <see langword="true" />, если у двух объектов совпадают имена и пространства имен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Сравнивает два объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения.</param>
      <param name="b">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения.</param>
      <returns>Значение <see langword="true" />, если у двух объектов не совпадают имена и пространства имен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Возвращает строковое значение полного имени <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Строковое значение полного имени <see cref="T:System.Xml.XmlQualifiedName" /> в формате <see langword="namespace:localname" />. Если у объекта не определено пространство имен, данный метод вернет только локальное имя.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Возвращает строковое значение полного имени <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="name">Имя объекта.</param>
      <param name="ns">Пространство имен объекта.</param>
      <returns>Строковое значение полного имени <see cref="T:System.Xml.XmlQualifiedName" /> в формате <see langword="namespace:localname" />. Если у объекта не определено пространство имен, данный метод вернет только локальное имя.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlReader" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>При переопределении в производном классе получает количество атрибутов текущего узла.</summary>
      <returns>Количество атрибутов текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>При переопределении в производном классе получает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение <see langword="true" />, если реализуются методы чтения двоичного содержимого; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlReader" /> метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.XmlReader" /> реализует метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее, способно ли данное средство чтения выполнять синтаксический анализ и разрешение сущностей.</summary>
      <returns>Значение <see langword="true" />, если средство чтения позволяет анализировать и разрешать сущности; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>При переопределении в производном классе изменяет значение свойства <see cref="P:System.Xml.XmlReader.ReadState" /> на <see cref="F:System.Xml.ReadState.Closed" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" />, используя заданный поток с параметрами по умолчанию.</summary>
      <param name="input">Поток, содержащий XML-данные.  
<see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки. Эта кодировка после определения используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Тип <see cref="T:System.Xml.XmlReader" /> не имеет достаточных разрешений для доступа к расположению XML-данных.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Создает экземпляр <see cref="T:System.Xml.XmlReader" /> с указанными потоком и параметрами.</summary>
      <param name="input">Поток, содержащий XML-данные.  
<see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки. Эта кодировка после определения используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного потока, базового URI и параметров.</summary>
      <param name="input">Поток, содержащий XML-данные.  
<see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки. Эта кодировка после определения используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <param name="baseUri">Базовый URI считываемой сущности или документа. Это значение может быть равно <see langword="null" />.  
 Примечание по безопасности. Базовый универсальный код ресурса (URI) используется для разрешения относительного URI XML-документа. Не используйте базовый URI из непроверенного источника.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" />, используя заданный поток, параметры и контекстную информацию для анализа.</summary>
      <param name="input">Поток, содержащий XML-данные.  
<see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки. Эта кодировка после определения используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <param name="inputContext">Для синтаксического анализа фрагмента XML необходимы контекстные сведения. Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущие области <c>xml:lang</c> и <c>xml:space</c>, базовый код URI и определение типа документа.  
Это значение может быть равно <see langword="null" />.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Создает экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного средства чтения текста.</summary>
      <param name="input">Средство считывания текста, из которого следует считывать данные XML. Средство считывания текста возвращает поток символов Юникода, и указанная в объявлении XML кодировка не используется средством считывания XML для раскодирования потока данных.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного модуля чтения текста и параметров.</summary>
      <param name="input">Средство считывания текста, из которого следует считывать данные XML. Средство считывания текста возвращает поток символов Юникода, и указанная в объявлении XML кодировка не используется средством считывания XML для раскодирования потока данных.</param>
      <param name="settings">Параметры для нового <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Создает экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного средства чтения текста, параметров и базового кода URI.</summary>
      <param name="input">Средство считывания текста, из которого следует считывать данные XML. Средство считывания текста возвращает поток символов Юникода, и указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для декодирования потока данных.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <param name="baseUri">Базовый URI считываемой сущности или документа. Это значение может быть равно <see langword="null" />.  
 Примечание по безопасности. Базовый универсальный код ресурса (URI) используется для разрешения относительного URI XML-документа. Не используйте базовый URI из непроверенного источника.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного средства чтения текста, параметров и сведений о контексте для анализа.</summary>
      <param name="input">Средство считывания текста, из которого следует считывать данные XML. Средство считывания текста возвращает поток символов Юникода, и указанная в объявлении XML кодировка не используется средством считывания XML для раскодирования потока данных.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <param name="inputContext">Для синтаксического анализа фрагмента XML необходимы контекстные сведения. Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущие области <c>xml:lang</c> и <c>xml:space</c>, базовый код URI и определение типа документа.  
Это значение может быть равно <see langword="null" />.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Значения присвоены как свойству <see cref="P:System.Xml.XmlReaderSettings.NameTable" />, так и свойству <see cref="P:System.Xml.XmlParserContext.NameTable" />. (Только для одного из этих свойств <see langword="NameTable" /> можно задать значение и использовать это свойство).</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанным URI.</summary>
      <param name="inputUri">URI файла с XML-данными. Класс <see cref="T:System.Xml.XmlUrlResolver" /> используется для преобразования пути к классическому представлению данных.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="inputUri" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Тип <see cref="T:System.Xml.XmlReader" /> не имеет достаточных разрешений для доступа к расположению XML-данных.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, указанный в URI, не существует.</exception>
      <exception cref="T:System.UriFormatException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.FormatException" />.  


            

 Неправильный формат URI.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного URI и параметров.</summary>
      <param name="inputUri">URI файла с XML-данными. Объект <see cref="T:System.Xml.XmlResolver" /> в объекте <see cref="T:System.Xml.XmlReaderSettings" /> используется для преобразования пути в каноническое представление данных. Если <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> равно <see langword="null" />, используется новый объект <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="inputUri" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл, заданный с помощью URI.</exception>
      <exception cref="T:System.UriFormatException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.FormatException" />.  


            

 Неправильный формат URI.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с помощью указанного URI, параметров и сведений о контексте для анализа.</summary>
      <param name="inputUri">URI файла с XML-данными. Объект <see cref="T:System.Xml.XmlResolver" /> в объекте <see cref="T:System.Xml.XmlReaderSettings" /> используется для преобразования пути в каноническое представление данных. Если <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> равно <see langword="null" />, используется новый объект <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />. Это значение может быть равно <see langword="null" />.</param>
      <param name="inputContext">Для синтаксического анализа фрагмента XML необходимы контекстные сведения. Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущие области <c>xml:lang</c> и <c>xml:space</c>, базовый код URI и определение типа документа.  
Это значение может быть равно <see langword="null" />.</param>
      <returns>Объект, используемый для чтения данных XML в потоке.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <see langword="inputUri" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Тип <see cref="T:System.Xml.XmlReader" /> не имеет достаточных разрешений для доступа к расположению XML-данных.</exception>
      <exception cref="T:System.ArgumentException">Значения присвоены как свойству <see cref="P:System.Xml.XmlReaderSettings.NameTable" />, так и свойству <see cref="P:System.Xml.XmlParserContext.NameTable" />. (Только для одного из этих свойств <see langword="NameTable" /> можно задать значение и использовать это свойство).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл, заданный с помощью URI.</exception>
      <exception cref="T:System.UriFormatException">Неправильный формат URI.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" />, используя заданное средство чтения XML и параметры.</summary>
      <param name="reader">Объект, который следует использовать в качестве базового средства чтения XML.</param>
      <param name="settings">Параметры нового экземпляра <see cref="T:System.Xml.XmlReader" />.  
Уровень согласованности объекта <see cref="T:System.Xml.XmlReaderSettings" /> должен быть равным уровню согласованности базового средства чтения или иметь значение <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <returns>Объект, являющийся оболочкой для объекта <see cref="T:System.Xml.XmlReader" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="reader" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Если объект <see cref="T:System.Xml.XmlReaderSettings" /> задает уровень согласованности, который не соответствует уровню согласованности базового средства чтения.  
-или- 
Базовый <see cref="T:System.Xml.XmlReader" /> находится в состоянии <see cref="F:System.Xml.ReadState.Error" /> или <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>При переопределении в производном классе получает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xml.XmlReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>При переопределении в производном классе получает значение, показывающее, установлено ли средство чтения в конец потока.</summary>
      <returns>Значение <see langword="true" />, если средство чтения установлено в конец потока; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>При переопределении в производном классе получает значение атрибута по указанному индексу.</summary>
      <param name="i">Индекс атрибута. Индексация начинается с нуля. (Индекс первого атрибута равен нулю.)</param>
      <returns>Значение указанного атрибута. Этот метод не изменяет позицию средства чтения.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> выходит за пределы допустимого диапазона. Оно должно быть неотрицательным и меньшим, чем размер коллекции атрибутов.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден или значение равно <see langword="String.Empty" />, возвращается значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанными свойствами <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <param name="name">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден или значение равно <see langword="String.Empty" />, возвращается значение <see langword="null" />. Этот метод не изменяет позицию средства чтения.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Асинхронно получает значение текущего узла.</summary>
      <returns>Значение текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Возвращает значение, показывающее, имеются ли атрибуты у текущего узла.</summary>
      <returns>Значение <see langword="true" />, если текущий узел содержит атрибуты; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>При переопределении в производном классе получает значение, показывающее, имеет ли текущий узел свойство <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns>Значение <see langword="true" />, если узел, на котором расположено средство чтения, может иметь значение <see langword="Value" />; в противном случае — <see langword="false" />. Если значение равно <see langword="false" />, узел принимает значение <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>При переопределении в производном классе получает значение, определяющее, является текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
      <returns>Значение <see langword="true" />, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD или схеме; значение <see langword="false" />, если значение атрибута было задано явно.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>При переопределении в производном классе получает значение, указывающее, является ли текущий узел пустым элементом (например, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" /> Если текущий узел является элементом (<see cref="P:System.Xml.XmlReader.NodeType" /> равно <see langword="XmlNodeType.Element" />), заканчивается <c>/ &gt;</c>; в противном случае <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Возвращает значение, определяющее, является ли строковый аргумент допустимым именем XML.</summary>
      <param name="str">Имя для проверки.</param>
      <returns>Значение <see langword="true" />, если имя является допустимым; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="str" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Возвращает значение, определяющее, является ли строковый аргумент допустимым токеном имени XML.</summary>
      <param name="str">Лексема имени для проверки.</param>
      <returns>Значение <see langword="true" />, если аргумент является допустимой лексемой имени; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="str" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента.</summary>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> находит открывающий тег или пустой тег элемента; значение <see langword="false" />, если тип найденного узла отличается от <see langword="XmlNodeType.Element" />.</returns>
      <exception cref="T:System.Xml.XmlException">Во входном потоке обнаружен неправильный XML-код.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствует ли значение свойства <see cref="P:System.Xml.XmlReader.Name" /> элемента заданному аргументу.</summary>
      <param name="name">Строка противопоставляется значению свойства <see langword="Name" /> найденного элемента.</param>
      <returns>Значение <see langword="true" />, если полученный в результате узел является элементом, а свойство <see langword="Name" /> совпадает с указанной строкой. Значение <see langword="false" />, если обнаружен узел с типом, отличным от <see langword="XmlNodeType.Element" />, или если свойство <see langword="Name" /> элемента не совпадает с указанной строкой.</returns>
      <exception cref="T:System.Xml.XmlException">Во входном потоке обнаружен неправильный XML-код.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствуют ли значения свойств <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> элемента заданным строкам.</summary>
      <param name="localname">Строка, которая противопоставляется значению свойства <see langword="LocalName" /> найденного элемента.</param>
      <param name="ns">Строка, которая противопоставляется значению свойства <see langword="NamespaceURI" /> найденного элемента.</param>
      <returns>Значение <see langword="true" />, если полученный в результате узел является элементом. Значение <see langword="false" />, если обнаружен узел с типом, отличным от <see langword="XmlNodeType.Element" />, или если свойства <see langword="LocalName" /> и <see langword="NamespaceURI" /> элемента не совпадают с указанными строками.</returns>
      <exception cref="T:System.Xml.XmlException">Во входном потоке обнаружен неправильный XML-код.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>При переопределении в производном классе получает значение атрибута по указанному индексу.</summary>
      <param name="i">Индекс атрибута.</param>
      <returns>Значение указанного атрибута.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанными свойствами <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <param name="name">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>При переопределении в производном классе получает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом. Например <see langword="LocalName" /> — <see langword="book" /> для элемента <c>&lt;bk: book&gt;</c>.  
Для безымянных типов узлов (например, <see langword="Text" />, <see langword="Comment" /> и т. д.) данное свойство возвращает <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>При переопределении в производном классе разрешает префикс пространства имен в ограниченной области действия текущего элемента.</summary>
      <param name="prefix">Префикс, для которого требуется разрешить URI пространства имен. Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.</param>
      <returns>URI пространства имен, которое отображает префикс, или значение <see langword="null" />, если соответствующий префикс не найден.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанным индексом.</summary>
      <param name="i">Индекс атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанным <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Параметр является пустой строкой.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанными <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <param name="name">Локальное имя атрибута.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentNullException">Оба параметра имеют значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Проверяет, является ли текущий узел узлом содержимого (текст без пустого пространства, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" /> или <see langword="EndEntity" />). Если узел не является узлом содержимого, средство чтения пропускает этот узел и переходит к следующему узлу содержимого или в конец файла. Пропускаются узлы следующих типов: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" /> и <see langword="SignificantWhitespace" />.</summary>
      <returns>Значение <see cref="P:System.Xml.XmlReader.NodeType" /> для текущего узла, найденного с помощью метода, или значение <see langword="XmlNodeType.None" />, если средство чтения достигло конца потока входных данных.</returns>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>В асинхронном режиме проверяет, является ли текущий узел узлом содержимого. Если узел не является узлом содержимого, средство чтения пропускает этот узел и переходит к следующему узлу содержимого или в конец файла.</summary>
      <returns>Значение <see cref="P:System.Xml.XmlReader.NodeType" /> для текущего узла, найденного с помощью метода, или значение <see langword="XmlNodeType.None" />, если средство чтения достигло конца потока входных данных.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>При переопределении в производном классе перемещает к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение <see langword="true" />, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>При переопределении в производном классе перемещает к первому атрибуту.</summary>
      <returns>Значение <see langword="true" />, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>При переопределении в производном классе перемещает к следующему атрибуту.</summary>
      <returns>Значение <see langword="true" />, если присутствует следующий атрибут; значение <see langword="false" />, если другие атрибуты отсутствуют.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>Когда переопределено в производном классе, возвращает полное имя текущего узла.</summary>
      <returns>Полное имя текущего узла. Например <see langword="Name" /> — <see langword="bk:book" /> для элемента <c>&lt;bk: book&gt;</c>.  
Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlReader.NodeType" /> узла. Значения возвращаются для представленных ниже типов узлов. Для других типов узлов возвращается пустая строка.  
  Тип узла 
  name 
 <see langword="Attribute" /> Имя атрибута.  

 <see langword="DocumentType" /> Имя типа документа.  

 <see langword="Element" /> Имя тега.  

 <see langword="EntityReference" /> Имя сущности, на которую существует ссылка.  

 <see langword="ProcessingInstruction" /> Цель инструкции по обработке.  

 <see langword="XmlDeclaration" /> Строка символов <see langword="xml" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>При переопределении в производном классе получает URI пространства имен (определенное в спецификации W3C Namespace) узла, на котором расположено средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>При переопределении в производном классе получает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>
        <see langword="XmlNameTable" />, позволяющий получать в узле разделенную версию строки.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>При переопределении в производном классе получает тип текущего узла.</summary>
      <returns>Одно из значений перечисления, задающее тип текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>Когда переопределено в производном классе, возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>При переопределении в производном классе получает знак кавычек для выделения значения узла атрибута.</summary>
      <returns>Знак кавычек (" или ') для выделения значения узла атрибута.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>Когда переопределено в производном классе, считывает из потока следующий узел.</summary>
      <returns>
        <see langword="true" />, если считывание узла прошло успешно. В противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка при синтаксическом анализе XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>Асинхронно считывает следующий узел из потока.</summary>
      <returns>Значение <see langword="true" />, если чтение прошло успешно; значение <see langword="false" />, если отсутствуют узлы для чтения.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>При переопределении в производном классе разбирает значение атрибута в один или более узлов <see langword="Text" />, <see langword="EntityReference" /> или <see langword="EndEntity" />.</summary>
      <returns>Значение <see langword="true" />, если присутствуют возвращаемые узлы.  
 Значение <see langword="false" />, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.  
Пустой атрибут (например, <c>misc=""</c>) возвращает значение <see langword="true" /> с отдельным узлом, имеющим значение <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Прочитывает содержимое объекта указанного типа.</summary>
      <param name="returnType">Тип возвращаемого значения.  
 Примечание. С выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может иметь тип <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов. Например, этот объект можно использовать при преобразовании объекта <see cref="T:System.Xml.XmlQualifiedName" /> в <c>xs:string</c>.  
Это значение может быть равно <see langword="null" />.</param>
      <returns>Объединенное текстовое содержимое или значение атрибута, преобразованное в требуемый тип.</returns>
      <exception cref="T:System.FormatException">Содержимое имеет неверный формат для типа целевого объекта.</exception>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="returnType" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не принадлежит к поддерживаемому типу узлов. Дополнительные сведения приведены в таблице ниже.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.OverflowException">Чтение значения <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Асинхронно считывает содержимое как объект указанного типа.</summary>
      <param name="returnType">Тип возвращаемого значения.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <returns>Объединенное текстовое содержимое или значение атрибута, преобразованное в требуемый тип.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты <see langword="BinHex" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает содержимое и возвращает раскодированные двоичные байты <see langword="BinHex" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Считывает содержимое текста в текущей позиции как значение <see langword="Boolean" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Считывает содержимое текста в текущем положении как объект <see cref="T:System.DateTime" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Считывает содержимое текста в текущем положении как объект <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Считывает содержимое текста в текущем положении как объект <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое текста в текущей позиции как объект <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Считывает содержимое текста в текущей позиции как число с плавающей запятой двойной точности.</summary>
      <returns>Текстовое содержимое в виде числа с плавающей запятой двойной точности.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Считывает содержимое текста в текущей позиции как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое текста в текущей позиции как число с плавающей запятой одинарной точности.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Считывает содержимое текста в текущем положении как 32-разрядное знаковое целое число.</summary>
      <returns>Содержимое как целое 32-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Считывает текстовое содержимое в текущей позиции как 64-разрядное целое число со знаком.</summary>
      <returns>Текстовое содержимое как 64-разрядное целое число со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Считывает содержимое текста в текущей позиции как значение <see cref="T:System.Object" />.</summary>
      <returns>Текстовое содержимое является самым подходящим объектом CLR.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Асинхронно считывает содержимое текста в текущем положении как объект <see cref="T:System.Object" />.</summary>
      <returns>Текстовое содержимое является самым подходящим объектом CLR.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Считывает содержимое текста в текущем положении как объект <see cref="T:System.String" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.FormatException">Недопустимый формат строки.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Асинхронно считывает содержимое текста в текущем положении как объект <see cref="T:System.String" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Считывает содержимое элемента в качестве требуемого типа.</summary>
      <param name="returnType">Тип возвращаемого значения.  
 Примечание. С выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может иметь тип <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Не удается преобразовать содержимое элемента в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException">Чтение значения <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Проверяет, сопоставлен ли URI локального имени и пространства имен с URI текущего элемента, затем считывает содержимое элемента требуемого типа.</summary>
      <param name="returnType">Тип возвращаемого значения.  
 Примечание. С выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может иметь тип <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Не удается преобразовать содержимое элемента в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
      <exception cref="T:System.OverflowException">Чтение значения <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Асинхронно считывает содержимое элемента как запрашиваемый тип.</summary>
      <param name="returnType">Тип возвращаемого значения.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует содержимое <see langword="Base64" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает элемент и расшифровывает содержимое <see langword="Base64" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует содержимое <see langword="BinHex" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает элемент и расшифровывает содержимое <see langword="BinHex" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.Boolean" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
-или- 
Содержимое элемента нельзя преобразовать в объект <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Boolean" />.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Не удается преобразовать содержимое элемента в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
-или- 
Содержимое элемента нельзя преобразовать в объект <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.DateTime" />.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Не удается преобразовать содержимое элемента в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
-или- 
Содержимое элемента нельзя преобразовать в объект типа <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Decimal" />.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
-или- 
Содержимое элемента нельзя преобразовать в объект типа <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой двойной точности.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента нельзя преобразовать в число с плавающей запятой двойной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента в виде числа с плавающей запятой двойной точности.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Не удается преобразовать содержимое элемента в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой одинарной точности.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента нельзя преобразовать в число с плавающей запятой одиночной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента в виде числа с плавающей запятой одинарной точности.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента нельзя преобразовать в число с плавающей запятой одиночной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Считывает текущий элемент и возвращает содержимое в виде 32-разрядного знакового целого числа.</summary>
      <returns>Содержимое элемента как целое 32-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента не может быть преобразовано в 32-разрядное знаковое целое число.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как 32-разрядное целое число со знаком.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента как целое 32-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента не может быть преобразовано в 32-разрядное знаковое целое число.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Считывает текущий элемент и возвращает содержимое в виде 64-разрядного целого числа со знаком.</summary>
      <returns>Содержимое элемента как целое 64-разрядное целое число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента не может быть преобразовано в 64-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Проверяет, совпадают ли указанные локальное имя и URI пространства имен с таковыми для текущего элемента, затем считывает текущий элемент и возвращает содержимое как 64-разрядное целое число со знаком.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента как целое 64-разрядное целое число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента не может быть преобразовано в 64-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Прочитывает текущий элемент и возвращает содержимое в качестве объекта <see cref="T:System.Object" />.</summary>
      <returns>Упакованный объект CLR наиболее подходящего типа. Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR. Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Object" />.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Упакованный объект CLR наиболее подходящего типа. Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR. Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
 -или-  
 Не удается преобразовать содержимое элемента в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Асинхронно считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Object" />.</summary>
      <returns>Упакованный объект CLR наиболее подходящего типа. Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR. Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.String" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
-или- 
Содержимое элемента нельзя преобразовать в объект <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.String" />.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.  
-или- 
Содержимое элемента нельзя преобразовать в объект <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Асинхронно считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.String" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>Считывает текстовый элемент. Однако рекомендуем использовать вместо этого метод <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />, предполагающий более простой способ обработки данной операции.</summary>
      <returns>Текст, содержащийся в считываемом элементе. Пустая строка, если элемент пуст.</returns>
      <exception cref="T:System.Xml.XmlException">Следующий узел содержимого не является открывающим тегом или найденный элемент не содержит простого текстового значения.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>Проверяет перед чтением текстового элемента соответствие значения свойства <see cref="P:System.Xml.XmlReader.Name" /> найденного элемента и заданной строки. Однако рекомендуем использовать вместо этого метод <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />, предполагающий более простой способ обработки данной операции.</summary>
      <param name="name">Имя для проверки.</param>
      <returns>Текст, содержащийся в считываемом элементе. Пустая строка, если элемент пуст.</returns>
      <exception cref="T:System.Xml.XmlException">Если следующий узел содержимого не является открывающим тегом, элемент <see langword="Name" /> не соответствует заданному аргументу или найденный элемент не содержит простого текстового значения.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>Проверяет перед чтением текстового элемента соответствие значений свойств <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> найденного элемента и заданных строк. Однако рекомендуем использовать вместо этого метод <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />, предполагающий более простой способ обработки данной операции.</summary>
      <param name="localname">Локальное имя для проверки.</param>
      <param name="ns">URI пространства имен для проверки.</param>
      <returns>Текст, содержащийся в считываемом элементе. Пустая строка, если элемент пуст.</returns>
      <exception cref="T:System.Xml.XmlException">Если следующий узел содержимого не является открывающим тегом, элемент <see langword="LocalName" /> или <see langword="NamespaceURI" /> не соответствует заданным аргументам или найденный элемент не содержит простого текстового значения.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Проверяет, является ли текущий узел содержимого закрывающим тегом, и перемещает средство чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException">Текущий узел не является закрывающим тегом или если во входном потоке обнаружен неверный XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>При переопределении в производном классе считывает все содержимое, включая разметку, как строку.</summary>
      <returns>Все содержимое XML-кода, включая разметку, на текущем узле. Если текущий узел не имеет дочерних узлов, возвращается пустая строка.  
 Если текущий узел является элементом или атрибутом, возвращается пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">Неправильный формат XML, или при синтаксическом анализе XML произошла ошибка.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>Асинхронно считывает все содержимое, включая разметку, в виде строки.</summary>
      <returns>Все содержимое XML-кода, включая разметку, на текущем узле. Если текущий узел не имеет дочерних узлов, возвращается пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>При переопределении в производном классе считывает содержимое в виде строки, включая разметку, предоставляющую этот узел и все его дочерние узлы.</summary>
      <returns>Если средство чтения находится на узле элемента или атрибута, данный метод возвращает все содержимое XML текущего узла и всех его дочерних узлов, включая разметку; в противном случае возвращается пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">Неправильный формат XML, или при синтаксическом анализе XML произошла ошибка.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>Асинхронно считывает содержимое в виде строки, включая разметку, предоставляющую этот узел и все его дочерние узлы.</summary>
      <returns>Если средство чтения находится на узле элемента или атрибута, данный метод возвращает все содержимое XML текущего узла и всех его дочерних узлов, включая разметку; в противном случае возвращается пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Проверяет, является ли текущий узел элементом и перемещает средство чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Проверяет, является ли текущий узел элементом с заданным <see cref="P:System.Xml.XmlReader.Name" />, и перемещает средство чтения на следующий узел.</summary>
      <param name="name">Полное имя элемента.</param>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML.  
-или- 
<see cref="P:System.Xml.XmlReader.Name" /> элемента не соответствует заданному <paramref name="name" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Проверяет, является ли текущий узел элементом с заданным <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />, и перемещает средство чтения на следующий узел.</summary>
      <param name="localname">Локальное имя элемента.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML.  
-или- 
Свойства <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> найденного элемента не совпадают с предоставленными аргументами.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>При переопределении в производном классе получает состояние средства чтения.</summary>
      <returns>Одно из значений перечисления, определяющее состояние средства чтения.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>При переопределении в производном классе считывает содержимое узла элемента или текстового узла в виде строки. Однако рекомендуем использовать вместо этого метод <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" />, предполагающий более простой способ обработки данной операции.</summary>
      <returns>Содержимое элемента или пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка при синтаксическом анализе XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Возвращает новый экземпляр <see langword="XmlReader" />, который может использоваться для считывания текущего узла и всех его потомков.</summary>
      <returns>Новый экземпляр средства чтения XML задается как <see cref="F:System.Xml.ReadState.Initial" />. Вызов метода <see cref="M:System.Xml.XmlReader.Read" /> приводит к позиционированию нового средства чтения на узле, который являлся текущим до вызова метода <see cref="M:System.Xml.XmlReader.ReadSubtree" />.</returns>
      <exception cref="T:System.InvalidOperationException">Средство чтения XML не расположено на элементе при вызове этого метода.
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Переводит <see cref="T:System.Xml.XmlReader" /> к следующему сопоставленному элементу-потомку с указанным проверенным именем.</summary>
      <param name="name">Проверенное имя элемента, на который следует переместиться.</param>
      <returns>
        <see langword="true" />, если найден сопоставленный элемент-потомок; в противном случае — <see langword="false" />. Если сопоставленный дочерний элемент не найден, средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является <see langword="XmlNodeType.EndElement" />) родительского элемента.  
Если средство чтения <see cref="T:System.Xml.XmlReader" /> не размещено на элементе при вызове метода <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />, последний возвращает значение <see langword="false" /> и положение <see cref="T:System.Xml.XmlReader" /> не изменяется.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Параметр является пустой строкой.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Переводит <see cref="T:System.Xml.XmlReader" /> к следующему элементу-потомку с указанным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя элемента, на который следует переместиться.</param>
      <param name="namespaceURI">URI пространства имен элемента, на который следует переместиться.</param>
      <returns>
        <see langword="true" />, если найден сопоставленный элемент-потомок; в противном случае — <see langword="false" />. Если сопоставленный дочерний элемент не найден, средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является <see langword="XmlNodeType.EndElement" />) родительского элемента.  
Если средство чтения <see cref="T:System.Xml.XmlReader" /> не размещено на элементе при вызове метода <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />, последний возвращает значение <see langword="false" /> и положение <see cref="T:System.Xml.XmlReader" /> не изменяется.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentNullException">Оба параметра имеют значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Производит чтение до обнаружения элемента с указанным проверенным именем.</summary>
      <param name="name">Полное имя элемента.</param>
      <returns>Значение <see langword="true" />, если найден соответствующий элемент; в противном случае —<see langword="false" /> и перемещение <see cref="T:System.Xml.XmlReader" /> в конец файла.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Параметр является пустой строкой.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Производит чтение до обнаружения указанного URI локального имени и пространства имен.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Значение <see langword="true" />, если найден соответствующий элемент; в противном случае —<see langword="false" /> и перемещение <see cref="T:System.Xml.XmlReader" /> в конец файла.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentNullException">Оба параметра имеют значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Переводит <see langword="XmlReader" /> к следующему сопоставленному родственному элементу с указанным проверенным именем.</summary>
      <param name="name">Проверенное имя родственного элемента, на который следует переместиться.</param>
      <returns>
        <see langword="true" />, если найден сопоставленный родственный элемент; в противном случае — <see langword="false" />. Если такой элемент не найден, средство чтения <see langword="XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является <see langword="XmlNodeType.EndElement" />) родительского элемента.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Параметр является пустой строкой.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Переводит <see langword="XmlReader" /> к следующему элементу того же уровня с указанным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя элемента того же уровня, на который следует переместиться.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента того же уровня, на который следует переместиться.</param>
      <returns>Значение <see langword="true" />, если найден сопоставленный элемент с тем же родительским элементом. В противном случае — значение <see langword="false" />. Если такой элемент не найден, средство чтения <see langword="XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является <see langword="XmlNodeType.EndElement" />) родительского элемента.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentNullException">Оба параметра имеют значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает большие потоки текста, внедренного в XML-документ.</summary>
      <param name="buffer">Массив символов, выполняющий функции буфера, в который записывается текстовое содержимое. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, где <see cref="T:System.Xml.XmlReader" /> может начать копировать результаты.</param>
      <param name="count">Максимальное число копируемых в буфер символов. Этим методом возвращается фактическое количество скопированных символов.</param>
      <returns>Количество символов, считанных в буфер. При отсутствии текстового содержимого возвращается нуль.</returns>
      <exception cref="T:System.InvalidOperationException">У текущего узла нет значения (значение свойства <see cref="P:System.Xml.XmlReader.HasValue" /> — <see langword="false" />).
-или- 
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Данные XML имеют неправильный формат.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает большие потоки текста, внедренного в XML-документ.</summary>
      <param name="buffer">Массив символов, выполняющий функции буфера, в который записывается текстовое содержимое. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, где <see cref="T:System.Xml.XmlReader" /> может начать копировать результаты.</param>
      <param name="count">Максимальное число копируемых в буфер символов. Этим методом возвращается фактическое количество скопированных символов.</param>
      <returns>Количество символов, считанных в буфер. При отсутствии текстового содержимого возвращается нуль.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>При переопределении в производном классе разрешает ссылки для сущностей для узлов <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле <see langword="EntityReference" />; эта реализация средства чтения не может разрешить сущности (свойство <see cref="P:System.Xml.XmlReader.CanResolveEntity" /> возвращает значение <see langword="false" />).
-или-
Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary>Возвращает сведения схемы, которые были назначены текущему узлу в результате проверки схемы.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> содержит сведения схемы для текущего узла. Сведения схемы могут быть заданы для элементов, атрибутов или текстовых узлов со значением <see cref="P:System.Xml.XmlReader.ValueType" />, не являющимся нулевым (типизированные значения).  
Если текущий узел не является одним из приведенных выше типов узлов или если экземпляр <see langword="XmlReader" /> не указывает сведений схемы, это свойство возвращает <see langword="null" />.  
Если это свойство вызывается из объекта <see cref="T:System.Xml.XmlTextReader" /> или <see cref="T:System.Xml.XmlValidatingReader" />, это свойство всегда возвращает <see langword="null" />. Эти реализации <see langword="XmlReader" /> не раскрывают сведений схемы посредством свойства <see langword="SchemaInfo" />.  
   
 Если требуется получить набор сведений PSVI (Post-Schema-Validation Information) для элемента, поместите объект чтения на конечный тег элемента, а не на его начальный элемент. Сведения PSVI доступны через свойство <see langword="SchemaInfo" /> объекта чтения. Проверяющий объект чтения, который создается с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />, и свойство <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> которого имеет значение <see cref="F:System.Xml.ValidationType.Schema" />, содержит полные сведения PSVI для элемента только в том случае, если объект чтения помещается на конечный тег элемента.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Получает объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания данного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для создания этого экземпляра средства чтения. Если это средство чтения не было создано с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />, это свойство возвращает <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Пропускает дочерний узел текущего узла.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Асинхронно пропускает дочерний узел текущего узла.</summary>
      <returns>Текущий узел.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlReader" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlReaderSettings.Async" /> значения <see langword="true" />. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlReaderSettings.Async значение true, если хотите использовать асинхронные методы Async Methods".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>При переопределении в производном классе получает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlReader.NodeType" /> узла. В следующей таблице представлен список возвращаемых типов узлов со значениями. Все прочие типы узлов возвращают значение <see langword="String.Empty" />.  
  Тип узла 
  Значение 
 <see langword="Attribute" /> Значение атрибута.  

 <see langword="CDATA" /> Содержимое раздела CDATA.  

 <see langword="Comment" /> Содержимое комментария.  

 <see langword="DocumentType" /> Внутреннее подмножество.  

 <see langword="ProcessingInstruction" /> Все содержимое, за исключением цели.  

 <see langword="SignificantWhitespace" /> Пустое пространство в разметке модели со смешанным содержимым.  

 <see langword="Text" /> Содержимое текстового узла.  

 <see langword="Whitespace" /> Пробелы между разметкой.  

 <see langword="XmlDeclaration" /> Содержимое декларации.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Возвращает тип CLR текущего узла.</summary>
      <returns>Тип CLR, соответствующий типизированному значению узла. Значение по умолчанию — <see langword="System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>При переопределении в производном классе получает текущую область действия <see langword="xml:lang" />.</summary>
      <returns>Текущая область действия <see langword="xml:lang" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>При переопределении в производном классе получает текущую область действия <see langword="xml:space" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlSpace" />. Если область действия <see langword="xml:space" /> отсутствует, данное свойство принимает значение <see langword="XmlSpace.None" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlReader" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Получает или задает значение, указывающее, можно ли использовать асинхронные методы <see cref="T:System.Xml.XmlReader" /> для конкретного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Значение <see langword="true" />, если могут использоваться асинхронные методы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли проверка символов.</summary>
      <returns>Значение <see langword="true" /> — проверка осуществляется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.  
   
 Если средство чтения <see cref="T:System.Xml.XmlReader" /> обрабатывает текстовые данные, всегда происходит проверка допустимости XML-имен и текстового содержимого независимо от значения этого свойства. Задание свойству <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> значения <see langword="false" /> отключает проверку символов для ссылок на сущности символов.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Точная копия объекта <see cref="T:System.Xml.XmlReaderSettings" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Возвращает или задает значение, указывающее, следует ли закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения.</summary>
      <returns>Значение <see langword="true" /> — закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Возвращает или задает уровень соответствия для <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Одно из значений перечисления, которое указывает уровень соответствия, обеспечиваемый средством чтения XML. Значение по умолчанию: <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Получает или задает значение, определяющее обработку определений DTD.</summary>
      <returns>Одно из значений перечисления, определяющее обработку определений DTD. Значение по умолчанию — <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Возвращает или задает значение, указывающее, следует ли игнорировать комментарии.</summary>
      <returns>
        <see langword="true" /> — игнорировать комментарии; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Возвращает или задает значение, указывающее, следует ли игнорировать инструкции по обработке.</summary>
      <returns>
        <see langword="true" /> — игнорировать инструкции обработки; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Возвращает или задает значение, определяющее, будут ли игнорироваться незначимые символы-разделители.</summary>
      <returns>Значение <see langword="true" />, если пустое пространство будет игнорироваться; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Возвращает или задает смещение номера строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Смещение номера строки. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Возвращает или задает смещение позиции строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Смещение позиции строки. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Возвращает или задает значение, указывающее максимально допустимое количество символов в документе, которые возникают вследствие расширения сущностей.</summary>
      <returns>Наибольшее количество символов вследствие расширения сущностей. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Возвращает или задает значение, указывающее максимальное допустимое количество символов в XML-документе. Нуль (0) означает отсутствие ограничений на размер XML-документа. Значение, не равное нулю, указывает максимальное количество символов.</summary>
      <returns>Максимально допустимое количество символов в XML-документе. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Возвращает или задает таблицу <see cref="T:System.Xml.XmlNameTable" />, используемую для разделенных сравнений строк.</summary>
      <returns>Таблица <see cref="T:System.Xml.XmlNameTable" />, в которой хранятся все разделенные строки, используемые экземплярами <see cref="T:System.Xml.XmlReader" />, созданными с помощью объекта <see cref="T:System.Xml.XmlReaderSettings" />.  
Значение по умолчанию: <see langword="null" />. Созданный экземпляр <see cref="T:System.Xml.XmlReader" /> будет использовать новую пустую таблицу <see cref="T:System.Xml.NameTable" />, если это значение будет равно <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary>Возвращает или задает значение, определяющее, следует ли запретить обработку DTD. Это свойство устарело. Взамен рекомендуется использовать <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>Значение <see langword="true" /> для запрещения обработки DTD; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary>Возвращает или задает <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для использования при проверке схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для использования при проверке схемы. Значением по умолчанию является пустой объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary>Возникает, когда средство чтения встречает ошибки проверки.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary>Возвращает или задает значение, указывающее параметры проверки схемы. Этот параметр применим к объектам <see cref="T:System.Xml.XmlReader" />, служащим для проверки схем (значение свойства <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> равно <see langword="ValidationType.Schema" />).</summary>
      <returns>Побитовое сочетание значений перечисления, задающих параметры проверки. Поля <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> по умолчанию включены. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> по умолчанию отключены.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary>Возвращает или задает значение, показывающее, будет ли <see cref="T:System.Xml.XmlReader" /> при считывании выполнять проверку типа назначения.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ValidationType" />, указывающее, будет ли XmlReader при считывании выполнять проверку или назначение типа. Значение по умолчанию — <see langword="ValidationType.None" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам. Если задано значение <see langword="null" />, создается исключение <see cref="T:System.Xml.XmlException" /> при попытке <see cref="T:System.Xml.XmlReader" /> получить доступ к внешнему ресурсу. По умолчанию используется новый <see cref="T:System.Xml.XmlUrlResolver" /> без учетных данных.  Начиная с .NET Framework 4.5.2, этот параметр имеет значение <see langword="null" />по умолчанию.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Разрешает внешние ресурсы XML, имена которых заданы с помощью URI.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>При переопределении в производном классе задает учетные данные для аутентификации веб-запросов.</summary>
      <returns>Учетные данные, используемые для аутентификации веб-запросов. Если свойство не задано, значением по умолчанию становится <see langword="null" /> — <see langword="XmlResolver" /> не имеет учетных данных пользователя.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>При переопределении в производном классе сопоставляет URI с объектом, содержащим текущий ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В настоящее время не используется.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. В текущей версии возвращаются только объекты System.IO.Stream.</param>
      <returns>Объект потока или значение <see langword="null" />, если указан тип, отличающийся от потока.</returns>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="ofObjectToReturn" /> не относится к типу <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">Заданный URI не является абсолютным.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Есть ошибка среды выполнения (например, разрыв подключения к серверу).</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Асинхронно сопоставляет универсальный код ресурса (URI) с объектом, содержащим фактический ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В настоящее время не используется.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. В текущей версии возвращаются только объекты <see cref="T:System.IO.Stream" />.</param>
      <returns>Объект потока или значение <see langword="null" />, если указан тип, отличающийся от потока.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>При переопределении в производном классе разрешает абсолютный URI из базовых и относительных URI.</summary>
      <param name="baseUri">Базовый URI, используемый для разрешения относительного URI.</param>
      <param name="relativeUri">URI, которые нужно разрешить. URI может быть как абсолютным, так и относительным. Если URI является абсолютным, данное значение замещает значение <paramref name="baseUri" />. Если относительным, то абсолютный URI является сочетанием относительного и <paramref name="baseUri" />.</param>
      <returns>Абсолютный код URI или значение <see langword="null" />, если невозможно разрешить относительный URI.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Позволяет сопоставителю возвращать типы, отличные от <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri">URI-адрес.</param>
      <param name="type">Возвращаемый тип.</param>
      <returns>Значение <see langword="true" />, если <paramref name="type" /> поддерживается; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary>Позволяет защитить другую реализацию <see cref="T:System.Xml.XmlResolver" /> путем применения программы-оболочки к объекту <see cref="T:System.Xml.XmlResolver" /> и ограничения ресурсов, доступ к которым имеет доступ базовый объект <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlSecureResolver" /> с указанными объектом <see cref="T:System.Xml.XmlResolver" /> и URL-адресом.</summary>
      <param name="resolver">Сопоставитель XML, для которого <see cref="T:System.Xml.XmlSecureResolver" /> создает программу-оболочку.</param>
      <param name="securityUrl">URL-адрес, используемый для создания объекта <see cref="T:System.Security.PermissionSet" />, который будет применен к базовому объекту <see cref="T:System.Xml.XmlResolver" />. Объект <see cref="T:System.Xml.XmlSecureResolver" /> вызывает метод <see cref="M:System.Security.PermissionSet.PermitOnly" /> для созданного объекта <see cref="T:System.Security.PermissionSet" /> перед вызовом метода <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> для базового объекта <see cref="T:System.Xml.XmlResolver" />.</param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary>Задает учетные данные, используемые для проверки подлинности веб-запросов.</summary>
      <returns>Учетные данные, используемые для аутентификации веб-запросов. Объект <see cref="T:System.Xml.XmlSecureResolver" /> задает указанные учетные данные для базового объекта <see cref="T:System.Xml.XmlResolver" />. Если свойство не задано, значением по умолчанию становится <see langword="null" /> — <see cref="T:System.Xml.XmlSecureResolver" /> не имеет учетных данных пользователя.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Сопоставляет код URI объекту, содержащему фактический ресурс. Этот метод временно задает объект <see cref="T:System.Security.PermissionSet" />, созданный в конструкторе путем вызова объекта <see cref="M:System.Security.PermissionSet.PermitOnly" /> до вызова <see langword="GetEntity" /> для базового объекта <see cref="T:System.Xml.XmlResolver" />, чтобы открыть ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В настоящее время не используется.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. В текущей версии возвращаются только объекты <see cref="T:System.IO.Stream" />.</param>
      <returns>Поток, возвращенный путем вызова <see langword="GetEntity" /> для базового объекта <see cref="T:System.Xml.XmlResolver" />. Если задан тип, отличный от <see cref="T:System.IO.Stream" />, метод возвращает значение <see langword="null" />.</returns>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="ofObjectToReturn" /> не <see langword="null" /> и не <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.UriFormatException">Заданный URI не является абсолютным.</exception>
      <exception cref="T:System.NullReferenceException">Свойство <paramref name="absoluteUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Есть ошибка среды выполнения (например, разрыв подключения к серверу).</exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Асинхронно сопоставляет универсальный код ресурса (URI) с объектом, содержащим фактический ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В настоящее время не используется.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. В текущей версии возвращаются только объекты <see cref="T:System.IO.Stream" />.</param>
      <returns>Поток, возвращенный путем вызова <see langword="GetEntity" /> для базового объекта <see cref="T:System.Xml.XmlResolver" />. Если задан тип, отличный от <see cref="T:System.IO.Stream" />, метод возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary>Разрешает абсолютный URI на основе базового и относительного URI путем вызова <see langword="ResolveUri" /> для базового объекта <see cref="T:System.Xml.XmlResolver" />.</summary>
      <param name="baseUri">Базовый URI, используемый для разрешения относительного URI.</param>
      <param name="relativeUri">URI, которые нужно разрешить. URI может быть как абсолютным, так и относительным. Если URI является абсолютным, данное значение замещает значение <paramref name="baseUri" />. Если относительным, то абсолютный URI является сочетанием относительного и <paramref name="baseUri" />.</param>
      <returns>Абсолютный URI или значение <see langword="null" />, если относительный URI невозможно разрешить (возвращенный путем вызова <see langword="ResolveUri" /> для базового объекта <see cref="T:System.Xml.XmlResolver" />).</returns>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="relativeUri" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>Представляет пробел между элементами разметки в смешанном узле содержимого или пробел в области xml:space= 'preserve'. Он также называется значащим пробелом.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="strData">Пробелы узла.</param>
      <param name="doc">Объект <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла. Для узлов значащих пробелов точная копия узла всегда включает значение данных независимо от значения параметра.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов <see langword="XmlSignificantWhitespace" /> это свойство возвращает значение <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для узлов <see langword="XmlSignificantWhitespace" /> это свойство возвращает значение <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Для узлов <see langword="XmlSignificantWhitespace" /> это значение — XmlNodeType.SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary>Возвращает родительский узел текущего узла.</summary>
      <returns>Родительский узел <see cref="T:System.Xml.XmlNode" /> текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary>Возвращает текстовый узел, непосредственно предшествующий данному.</summary>
      <returns>Возвращает <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Пробелы, найденные в узле.</returns>
      <exception cref="T:System.ArgumentException">Задание значения <see langword="Value" /> как недопустимые пробелы.</exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Задает текущую область <see langword="xml:space" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>Область <see langword="xml:space" /> соответствует значению <see langword="default" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Нет области <see langword="xml:space" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>Область <see langword="xml:space" /> соответствует значению <see langword="preserve" />.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>Представляет текстовое содержимое элемента или атрибута.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlText" />.</summary>
      <param name="strData">Содержимое узла см. в свойстве <see cref="P:System.Xml.XmlText.Value" />.</param>
      <param name="doc">Родительский XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для текстовых узлов это свойство возвращает <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для текстовых узлов это свойство возвращает <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Для текстовых узлов это значение — XmlNodeType.Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только для тех узлов, которые могут иметь родительские узлы).</summary>
      <returns>Объект <see langword="XmlNode" />, являющийся родительским по отношению к текущему узлу. Если узел уже создан, но еще не добавлен в дерево или если узел был из дерева удален, родительский узел равен <see langword="null" />. Для всех других узлов возвращаемое значение зависит от свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. В следующей таблице описаны возможные возвращаемые значения для свойства <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary>Возвращает текстовый узел, непосредственно предшествующий данному.</summary>
      <returns>Возвращает <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>Разделяет узел на два узла с указанным смещением, сохраняя их в дереве как узлы одного уровня.</summary>
      <param name="offset">Смещение для разделения узла.</param>
      <returns>Новый узел.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Содержимое текстового узла.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />. У узлов <see langword="XmlText" /> отсутствуют дочерние узлы, поэтому этот метод не работает.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML.  
Начиная с .NET Framework версии 2.0 рекомендуется использовать класс <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlTextReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным потоком.</summary>
      <param name="input">Поток, содержащий считываемые XML-данные.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными потоком и <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">Поток, содержащий считываемые XML-данные.</param>
      <param name="nt">Используемый <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Параметру <paramref name="input" /> или <paramref name="nt" /> задано значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными потоком, <see cref="T:System.Xml.XmlNodeType" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Поток, содержащий анализируемый фрагмент XML.</param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML. Также определяет содержимое фрагмента. (См. таблицу, приведенную ниже.)</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется <paramref name="xmlFragment" />. Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущая область <c>xml:lang</c> и <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не является элементом, атрибутом и документом <see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> указанным значением <see cref="T:System.IO.TextReader" />.</summary>
      <param name="input">
        <see langword="TextReader" />, содержащий считываемые XML-данные.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с заданными свойствами <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">
        <see langword="TextReader" />, содержащий считываемые XML-данные.</param>
      <param name="nt">Используемый <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Значение <paramref name="nt" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным файлом.</summary>
      <param name="url">URL-адрес файла с XML-данными. Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</param>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти указанный файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Не удается найти часть имени файла или каталога.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="url" /> равен пустой строке.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить удаленное имя файла.  

или -  

 При обработке этого запроса возникла ошибка.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> не является допустимым URI.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом и потоком.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов. Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</param>
      <param name="input">Поток, содержащий считываемые XML-данные.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными URL-адресом, потоком и <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов. Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение. Если значение <paramref name="url" /> равно <see langword="null" />, то <see langword="BaseURI" /> присваивается значение <see langword="String.Empty" />.</param>
      <param name="input">Поток, содержащий считываемые XML-данные.</param>
      <param name="nt">Используемый <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Параметру <paramref name="input" /> или <paramref name="nt" /> задано значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом и <see cref="T:System.IO.TextReader" />.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов. Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</param>
      <param name="input">
        <see langword="TextReader" />, содержащий считываемые XML-данные.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом, <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов. Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение. Если значение <paramref name="url" /> равно <see langword="null" />, то <see langword="BaseURI" /> присваивается значение <see langword="String.Empty" />.</param>
      <param name="input">
        <see langword="TextReader" />, содержащий считываемые XML-данные.</param>
      <param name="nt">Используемый <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="nt" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным файлом и <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">URL-адрес файла, содержащего считываемые данные XML.</param>
      <param name="nt">Используемый <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Значение <paramref name="nt" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти указанный файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Не удается найти часть имени файла или каталога.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="url" /> равен пустой строке.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить удаленное имя файла.  
 -или-  
 При обработке этого запроса возникла ошибка.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> не является допустимым URI.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанной строкой, <see cref="T:System.Xml.XmlNodeType" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Строка, содержащая анализируемый фрагмент XML.</param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML. Также определяет содержимое строки фрагмента. (См. таблицу, приведенную ниже.)</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется <paramref name="xmlFragment" />. Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущая область <c>xml:lang</c> и <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не является <see langword="Element" />, <see langword="Attribute" /> или <see langword="Document" /><see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="xmlFragment" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> указанным значением <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Используемый <see langword="XmlNameTable" />.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>Возвращает количество атрибутов текущего узла.</summary>
      <returns>Количество атрибутов текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary>Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlTextReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение <see langword="true" />, если реализуются методы чтения двоичного содержимого; в противном случае — <see langword="false" />. Класс <see cref="T:System.Xml.XmlTextReader" /> всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlTextReader" /> метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.XmlTextReader" /> реализует метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; в противном случае — <see langword="false" />. Класс <see cref="T:System.Xml.XmlTextReader" /> всегда возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее, способно ли данное средство чтения выполнять синтаксический анализ и разрешение сущностей.</summary>
      <returns>Значение <see langword="true" />, если средство чтения позволяет анализировать и разрешать сущности; в противном случае — <see langword="false" />. Класс <see langword="XmlTextReader" /> всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>Изменяет значение свойства <see cref="P:System.Xml.XmlReader.ReadState" /> на <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>Возвращает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary>Получает или задает перечисление <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Перечисление <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>Возвращает кодировку документа.</summary>
      <returns>Значение кодировки. Если атрибут кодировки и метка порядка байтов отсутствуют, по умолчанию используется кодировка UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary>Возвращает или задает значение, определяющее способ обработки сущностей средством чтения.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.EntityHandling" />. Если <see langword="EntityHandling" /> не задан, по умолчанию для него используется значение <see langword="EntityHandling.ExpandCharEntities" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>Возвращает значение, определяющее, позиционировано ли средство чтения в конец потока.</summary>
      <returns>Значение <see langword="true" />, если средство чтения установлено в конец потока; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>Возвращает значение атрибута по заданному индексу.</summary>
      <param name="i">Индекс атрибута. Индексация начинается с нуля. (Индекс первого атрибута равен нулю.)</param>
      <returns>Значение указанного атрибута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>Возвращает значение атрибута с указанным именем.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>Возвращает значение атрибута с указанным локальным именем и универсальным кодом ресурса (URI) пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />. Этот метод не изменяет позицию средства чтения.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Возвращает коллекцию, содержащую все пространства имен, которые в настоящий момент находятся в области видимости.</summary>
      <param name="scope">С помощью значения <see cref="T:System.Xml.XmlNamespaceScope" /> указывается тип узлов пространства имен, которые следует возвратить.</param>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий все текущие пространства имен в области. Если средство чтения не позиционировано на какой-либо элемент, возвращается пустой словарь (без пространств имен).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>Возвращает оставшуюся часть XML-кода, находящегося в буфере.</summary>
      <returns>Объект <see cref="T:System.IO.TextReader" />, содержащий оставшуюся часть XML-кода, находящегося в буфере.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке.</summary>
      <returns>Значение <see langword="true" />, если класс может возвратить сведения о строке, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>Возвращает значение, определяющие наличие у текущего узла свойства <see cref="P:System.Xml.XmlTextReader.Value" />, значение которого отличается от <see langword="String.Empty" />.</summary>
      <returns>Значение <see langword="true" />, если узел, на котором расположено средство чтения, может иметь значение <see langword="Value" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>Возвращает значение, показывающее, является ли текущий узел атрибутом, который был создан из значения по умолчанию, определенного в определении DTD или в схеме.</summary>
      <returns>Данное свойство всегда возвращает значение <see langword="false" />. (<see cref="T:System.Xml.XmlTextReader" /> не расширяет атрибуты по умолчанию).</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>Возвращает значение, определяющее, является ли текущий узел пустым элементом (например, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />значение, если текущий узел является элементом (<see cref="P:System.Xml.XmlTextReader.NodeType" /><see langword="XmlNodeType.Element" />равным), который <c>/ &gt;</c><see langword="false" />заканчивается на; в противном случае —.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>Возвращает номер текущей строки.</summary>
      <returns>Текущий номер строки.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>Возвращает позицию в текущей строке.</summary>
      <returns>Позиция в текущей строке.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>Возвращает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом. Например, <see langword="LocalName" /><see langword="book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
Для безымянных типов узлов (например, <see langword="Text" />, <see langword="Comment" /> и т. д.) данное свойство возвращает <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>Разрешает префикс пространства имен в области видимости текущего элемента.</summary>
      <param name="prefix">Префикс, для которого требуется разрешить URI пространства имен. Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку. Эту строку не следует атомизировать.</param>
      <returns>URI пространства имен, которое отображает префикс, или значение <see langword="null" />, если соответствующий префикс не найден.</returns>
      <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlTextReader.Namespaces" /> задано значение <see langword="true" />, а свойству <paramref name="prefix" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>Переходит к атрибуту с указанным индексом.</summary>
      <param name="i">Индекс атрибута.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>Переходит к атрибуту с указанным именем.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>Переходит к атрибуту с указанным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>Переходит к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение <see langword="true" />, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>Переходит к первому атрибуту.</summary>
      <returns>Значение <see langword="true" />, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>Переходит к следующему атрибуту.</summary>
      <returns>Значение <see langword="true" />, если присутствует следующий атрибут; значение <see langword="false" />, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>Возвращает полное имя текущего узла.</summary>
      <returns>Полное имя текущего узла. Например, <see langword="Name" /><see langword="bk:book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlTextReader.NodeType" /> узла. Значения возвращаются для представленных ниже типов узлов. Для других типов узлов возвращается пустая строка.  
  Тип узла 
  name 
 <see langword="Attribute" /> Имя атрибута.  

 <see langword="DocumentType" /> Имя типа документа.  

 <see langword="Element" /> Имя тега.  

 <see langword="EntityReference" /> Имя сущности, на которую существует ссылка.  

 <see langword="ProcessingInstruction" /> Цель инструкции по обработке.  

 <see langword="XmlDeclaration" /> Строка символов <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>Возвращает или задает значение, указывающее, поддерживаются ли пространства имен.</summary>
      <returns>Значение <see langword="true" /> — поддержка осуществляется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Установка значения этого свойства после того, как выполнена операция чтения (значение <see cref="P:System.Xml.XmlTextReader.ReadState" /> не равно <see langword="ReadState.Initial" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>Возвращает URI пространства имен (определенное в спецификации W3C Namespace) узла, на который позиционировано средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>
        <see langword="XmlNameTable" />, позволяющий получать в узле разделенную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>Возвращает или задает значение, определяющее необходимость нормализации символов-разделителей и значений атрибутов.</summary>
      <returns>Значение <see langword="true" /> для нормализации; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Установка значения этого свойства после закрытия средства чтения (<see cref="P:System.Xml.XmlTextReader.ReadState" /> равно <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>Возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary>Возвращает или задает значение, определяющее, следует ли разрешить обработку DTD. Это свойство устарело. Взамен рекомендуется использовать <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>Значение <see langword="true" /> для отключения обработки DTD; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>Возвращает знак кавычек, используемый для выделения значения узла атрибута.</summary>
      <returns>Знак кавычек (" или ') для выделения значения узла атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>Считывает следующий узел из потока.</summary>
      <returns>Значение <see langword="true" />, если чтение прошло успешно; значение <see langword="false" />, если отсутствуют узлы для чтения.</returns>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка при синтаксическом анализе XML.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>Разбирает значение атрибута в один или несколько узлов <see langword="Text" />, <see langword="EntityReference" /> или <see langword="EndEntity" />.</summary>
      <returns>Значение <see langword="true" />, если присутствуют возвращаемые узлы.  
 Значение <see langword="false" />, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.  
Пустой атрибут (например, <c>misc=""</c>) возвращает значение <see langword="true" /> с отдельным узлом, имеющим значение <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Декодирует данные из кодировки Base64 и возвращает результат в виде декодированных двоичных байтов.</summary>
      <param name="array">Массив символов, выполняющий функции буфера, в который записывается текстовое содержимое.</param>
      <param name="offset">Начинающийся с нуля индекс в массиве, указывающий место, с которого метод начнет запись в буфер.</param>
      <param name="len">Число байтов для записи в буфер.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.Xml.XmlException">Недопустимая последовательность Base64.</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="array" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; равно 0 или <paramref name="len" /> &lt; равно 0, или <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Декодирует <see langword="BinHex" /> и возвращает результат в виде декодированных двоичных байтов.</summary>
      <param name="array">Массив байтов, выполняющий функции буфера, в который записываются декодированные двоичные байты.</param>
      <param name="offset">Начинающийся с нуля индекс в массиве, указывающий место, с которого метод начнет запись в буфер.</param>
      <param name="len">Число байтов для записи в буфер.</param>
      <returns>Количество байтов, записываемых в буфер.</returns>
      <exception cref="T:System.Xml.XmlException">Недопустимая последовательность <see langword="BinHex" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="array" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> &lt; равно 0 или <paramref name="len" /> &lt; равно 0, или <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает текстовое содержимое элемента в буфер символов. Этот метод предназначен для чтения больших потоков внедренного текста путем его последовательного вызова.</summary>
      <param name="buffer">Массив символов, выполняющий функции буфера, в который записывается текстовое содержимое.</param>
      <param name="index">Положение в <paramref name="buffer" />, с которого метод начинает запись текстового содержимого.</param>
      <param name="count">Число символов, записываемых в <paramref name="buffer" />.</param>
      <returns>Число прочитанных знаков. Если средство чтения находится не на элементе или отсутствует возвращаемый текст, это значение может быть равно <see langword="0" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> больше, чем размер, указанный в <paramref name="buffer" /> (размер буфера — <paramref name="index" />).</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />
        <see langword="&lt; 0" /> или <paramref name="count" /><see langword="&lt; 0" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты <see langword="Base64" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается в текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты <see langword="BinHex" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlTextReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует его из кодировки Base64.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlTextReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует содержимое <see langword="BinHex" />.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>Возвращает состояние средства чтения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>Считывает содержимое элемента или текстового узла в виде строки.</summary>
      <returns>Содержимое элемента или текстового узла. Если средство чтения позиционировано не на элемент или текстовый узел, а также если отсутствует возвращаемый текст, это может быть пустая строка.  
 <see langword="Note:" /> Текстовым узлом может быть элемент или текстовой узел атрибута.</returns>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка при синтаксическом анализе XML.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка выполнить недопустимую операцию.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>Сбрасывает состояние средства чтения на ReadState.Initial.</summary>
      <exception cref="T:System.InvalidOperationException">Вызывает <see langword="ResetState" />, если средство чтения было создано с помощью <see cref="T:System.Xml.XmlParserContext" />.</exception>
      <exception cref="T:System.Xml.XmlException">У документов в одном потоке разная кодировка.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>Разрешает ссылки на сущности для узлов <see langword="EntityReference" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary>Пропускает дочерний узел текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">С помощью значения <see cref="T:System.Xml.XmlNamespaceScope" /> указывается тип узлов пространства имен, которые следует возвратить.</param>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий текущие пространства имен в области.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Префикс, URI пространства имен которого нужно найти.</param>
      <returns>URI пространства имен, сопоставленное с префиксом; <see langword="null" />, если префикс не сопоставлен с URI пространства имен.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">URI пространства имен, префикс которого нужно найти.</param>
      <returns>Префикс, сопоставленный с URI пространства имен; <see langword="null" /> если URI пространства имен не сопоставлен с префиксом.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>Возвращает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlTextReader.NodeType" /> узла. В следующей таблице представлен список возвращаемых типов узлов со значениями. Все прочие типы узлов возвращают значение <see langword="String.Empty" />.  
  Тип узла 
  Значение 
 <see langword="Attribute" /> Значение атрибута.  

 <see langword="CDATA" /> Содержимое раздела CDATA.  

 <see langword="Comment" /> Содержимое комментария.  

 <see langword="DocumentType" /> Внутреннее подмножество.  

 <see langword="ProcessingInstruction" /> Все содержимое, за исключением цели.  

 <see langword="SignificantWhitespace" /> Пустое пространство в области <see langword="xml:space" />= 'preserve'.  

 <see langword="Text" /> Содержимое текстового узла.  

 <see langword="Whitespace" /> Пробелы между разметкой.  

 <see langword="XmlDeclaration" /> Содержимое декларации.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>Возвращает или задает значение, определяющее способ обработки символов-разделителей.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.WhitespaceHandling" />. По умолчанию используется значение <see langword="WhitespaceHandling.All" /> (возвращает узлы <see langword="Whitespace" /> и <see langword="SignificantWhitespace" />).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Установка значения этого свойства после закрытия средства чтения (<see cref="P:System.Xml.XmlTextReader.ReadState" /> равно <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>Возвращает текущую область действия <see langword="xml:lang" />.</summary>
      <returns>Текущая область действия <see langword="xml:lang" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" /> для разрешения ссылок на DTD.</summary>
      <returns>Используемый <see langword="XmlResolver" />. Если он имеет значение <see langword="null" />, внешние ресурсы не разрешаются.  
В .NET Framework версии 1.1 вызывающий объект должен иметь полное доверие, чтобы иметь возможность указывать <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>Возвращает текущую область действия <see langword="xml:space" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.XmlSpace" />. Если область действия <see langword="xml:space" /> отсутствует, данное свойство принимает значение <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>Представляет средство записи, предоставляющее способ быстрого прямого создания потоков (без кэширования) или файлов с данными XML, которые соответствуют рекомендациям консорциума W3C по языку XML версии 1.0 и пространств имен в XML.  
Начиная с .NET Framework версии 2.0 рекомендуется использовать класс <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Создает экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного потока и кодировки.</summary>
      <param name="w">Поток, в который будет выполняться запись.</param>
      <param name="encoding">Создаваемая кодировка. Если для кодировки задано значение <see langword="null" />, для потока используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">Кодировка не поддерживается или не может быть записано в поток.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="w" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного класса <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="w">Экземпляр <see langword="TextWriter" />, в который выполняется запись. Предполагается, что для <see langword="TextWriter" /> задана верная кодировка.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>Создает экземпляр класса <see cref="T:System.Xml.XmlTextWriter" /> с помощью указанного файла.</summary>
      <param name="filename">Имя файла, в который осуществляется запись. Если файл существует, он будет усечен и в него будет записано новое содержимое.</param>
      <param name="encoding">Создаваемая кодировка. Если для кодировки задано значение <see langword="null" />, для файла используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">Кодировка не поддерживается, имя файла является пустым, содержит только пробелы или один или несколько недопустимых символов.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Отказано в доступе.</exception>
      <exception cref="T:System.ArgumentNullException">Имя файла — <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Не найден каталог для записи.</exception>
      <exception cref="T:System.IO.IOException">Имя файла включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>Возвращает объект базового потока.</summary>
      <returns>Поток, в который осуществляется запись с помощью <see langword="XmlTextWriter" /> или значение <see langword="null" />, если <see langword="XmlTextWriter" /> создан с помощью класса <see cref="T:System.IO.TextWriter" />, который не наследуется от класса <see cref="T:System.IO.StreamWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>Закрывает данный и базовый потоки.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>Записывает в базовый поток содержимое буфера и сохраняет базовый поток.</summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>Определяет способ форматирования выходных данных.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.Formatting" />. По умолчанию используется значение <see langword="Formatting.None" /> (без форматирования).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>Возвращает или задает количество записываемых IndentChars для каждого уровня в иерархии, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</summary>
      <returns>Количество <see langword="IndentChars" /> для каждого уровня. Значение по умолчанию — 2.</returns>
      <exception cref="T:System.ArgumentException">Свойству присвоено отрицательное значение.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>Возвращает или задает знак для отступа, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</summary>
      <returns>Символ, используемый для отступа. По умолчанию используется пробел.  
   
 <see langword="XmlTextWriter" /> позволяет задать это свойство для любого знака. Для обеспечения корректности XML-кода необходимо использовать только допустимые символы-разделители: 0x9, 0x10, 0x13 или 0x20.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>Возвращает для URI пространства имен ближайший префикс, определенный в текущей области видимости пространства имен.</summary>
      <param name="ns">URI пространства имен, для которого требуется найти префикс.</param>
      <returns>Соответствующий префикс. Или значение <see langword="null" />, если в текущей области отсутствует соответствующий URI пространства имен.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>Возвращает или задает значение, указывающее, поддерживаются ли пространства имен.</summary>
      <returns>Значение <see langword="true" /> — пространства имен поддерживаются; в противном случае — <see langword="false" />.  
Значение по умолчанию — <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Это свойство можно изменить только в состоянии <see langword="WriteState.Start" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>Возвращает или задает знак, используемый для заключения значений атрибутов в кавычки.</summary>
      <returns>Знак, используемый для заключения значений атрибутов в кавычки. Это должна быть одинарная кавычка&amp;(#39;) или двойная кавычка (&amp;#34;). По умолчанию используются двойные кавычки.</returns>
      <exception cref="T:System.ArgumentException">Задание этому свойству значения, отличное от одинарные или двойные кавычки.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует указанный набор двоичных байтов в кодировку base64 и записывает получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует указанный набор двоичных байтов в кодировку binhex и записывает получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>Записывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</summary>
      <param name="text">Текст, записываемый в блок CDATA.</param>
      <exception cref="T:System.ArgumentException">Текст приведет к неправильному формированию документа XML.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>Инициирует создание сущности знака для указанного значения знака Юникода.</summary>
      <param name="ch">Знак Юникода, для которого создается сущность.</param>
      <exception cref="T:System.ArgumentException">Символ находится в диапазоне символов суррогатной пары <see langword="0xd800" /> - <see langword="0xdfff" />. В противном случае текст приведет к созданию неправильно сформированного документа XML.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает содержимое текстового буфера.</summary>
      <param name="buffer">Массив символов, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  

или - 
Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />; вызов приводит к разделению пар символов-заместителей или к записи недопустимой пары символов-заместителей.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>Записывает примечание &lt;!--...--&gt;, содержащее заданный текст.</summary>
      <param name="text">Текст, записываемый в примечание.</param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</summary>
      <param name="name">Имя DOCTYPE. Не должно быть пустым.</param>
      <param name="pubid">Если значение не равно нулю, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов.</param>
      <param name="sysid">Если параметр <paramref name="pubid" /> имеет значение null, а параметр <paramref name="sysid" /> не равен нулю, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента.</param>
      <param name="subset">Если не равно нулю, записывает [subset], где subset замещается значением данного аргумента.</param>
      <exception cref="T:System.InvalidOperationException">Этот метод был вызван вне пролога (после корневого элемента).</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="name" /> равно <see langword="null" /> или <see langword="String.Empty" />.  

или - 
Значение <paramref name="name" /> приведет к недопустимый XML.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>Закрывает вызов предыдущего метода <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>Закрывает все открытые элементы и атрибуты и возвращает средство записи в начальное состояние.</summary>
      <exception cref="T:System.ArgumentException">Недопустимый документ XML.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>Закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>Выводит ссылку на сущность в виде <see langword="&amp;name;" />.</summary>
      <param name="name">Имя ссылки на сущность.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />
        <see langword="null" />
        <see langword="String.Empty" />; или текст приведет к плохому формированию документа XML.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>Закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>Записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0.</summary>
      <param name="name">Имя для записи.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым именем XML; или значение параметра <paramref name="name" /> — <see langword="null" /> или <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>Записывает указанное имя, гарантируя, что это допустимый <see langword="NmToken" />, согласно рекомендации W3C по языку XML версии 1.0.</summary>
      <param name="name">Имя для записи.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым <see langword="NmToken" />; или <paramref name="name" /> равен <see langword="null" /> или <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Записывает инструкцию по обработке с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</summary>
      <param name="name">Имя инструкции обработки.</param>
      <param name="text">Текст для инструкции обработки.</param>
      <exception cref="T:System.ArgumentException">Текст приведет к неправильному формированию документа XML.  
 <paramref name="name" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.  
Этот метод используется для создания XML-объявления после того, как метод <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> уже вызван.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Записывает полное имя пространства имен. Этот метод выполняет поиск префикса для пространства имен в его области.</summary>
      <param name="localName">Локальное имя для записи.</param>
      <param name="ns">URI пространства имен, который связывается с именем.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.  
 <paramref name="localName" /> не является допустимым именем в соответствии со спецификацией пространств имен W3C.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Вручную записывает из буфера символов необработанные данные для разметки.</summary>
      <param name="buffer">Массив символов, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  

или - 
Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>Вручную записывает из строки необработанные данные для разметки.</summary>
      <param name="data">Строка, содержащая текст для записи.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Записывает начало атрибута.</summary>
      <param name="prefix">Префикс <see langword="Namespace" /> атрибута.</param>
      <param name="localName">
        <see langword="LocalName" /> атрибута.</param>
      <param name="ns">
        <see langword="NamespaceURI" /> атрибута.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>Записывает объявление XML с номером версии "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>Записывает объявление XML с номером версии "1.0" и отдельным атрибутом.</summary>
      <param name="standalone">Если значение равно <see langword="true" />, записывается "standalone=yes"; если <see langword="false" />, записывается "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix">Префикс пространства имен элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен, связываемый с элементом. Если пространство имен уже находится в области видимости и с ним связан префикс, средство записи автоматически запишет этот префикс.</param>
      <exception cref="T:System.InvalidOperationException">Модуль записи закрыт.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>Возвращает состояние средства записи.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>Записывает заданное текстовое содержимое.</summary>
      <param name="text">Текст для записи.</param>
      <exception cref="T:System.ArgumentException">Строка текста содержит недопустимую пару символов-заместителей.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Создает и записывает сущность знака-заместителя для пары знаков-заместителей.</summary>
      <param name="lowChar">Младший заместитель. Это должно быть значение в диапазоне от <see langword="0xDC00" /> до <see langword="0xDFFF" />.</param>
      <param name="highChar">Старший заместитель. Это должно быть значение в диапазоне от <see langword="0xD800" /> до <see langword="0xDBFF" />.</param>
      <exception cref="T:System.Exception">Передана недопустимая пара символов-заместителей.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>Записывает указанный символ-разделитель.</summary>
      <param name="ws">Строка символов-разделителей.</param>
      <exception cref="T:System.ArgumentException">Строка содержит символы, отличные от пробелов.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>Возвращает текущую область действия <see langword="xml:lang" />.</summary>
      <returns>Текущие значения <see langword="xml:lang" /> или <see langword="null" />, если в текущей области отсутствует <see langword="xml:lang" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlSpace" />, представляющий текущую область <see langword="xml:space" />.</summary>
      <returns>Объект <see langword="XmlSpace" />, представляющий текущую область <see langword="xml:space" />.  
  Значение 
  Значение 
  Нет 
  Значение, задаваемое по умолчанию, если область <see langword="xml:space" /> отсутствует.  

  Значение по умолчанию 
  Текущая область — <see langword="xml:space" />="default".  

  Сохранить 
  Текущая область — <see langword="xml:space" />="preserve".</returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Представляет тип XML для строки. Это позволяет читать строку как определенный тип XML, например как тип раздела CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>Тип CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>Тип ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>Тип ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>Тип ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>Тип ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>Тип IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>Тип IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>Тип NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>Тип NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>Тип NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Тип отсутствует.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>Тип NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>Тип QName.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>Разрешает внешние ресурсы XML, имена которых заданы с помощью URI.</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary>Получает или задает политику кэширования для базового объекта <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>Политика кэширования для базового веб-запроса.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>Задает учетные данные, используемые для проверки подлинности веб-запросов.</summary>
      <returns>Учетные данные, используемые для аутентификации веб-запросов. Если свойство не задано, значением по умолчанию становится <see langword="null" /> — <see langword="XmlUrlResolver" /> не имеет учетных данных пользователя.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Сопоставляет код URI объекту, содержащему фактический ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В настоящее время не используется.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. В текущей реализации возвращаются только объекты <see cref="T:System.IO.Stream" />.</param>
      <returns>Объект потока или значение <see langword="null" />, если указан тип, отличающийся от потока.</returns>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="ofObjectToReturn" /> не <see langword="null" /> и не <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">Заданный URI не является абсолютным.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Есть ошибка среды выполнения (например, разрыв подключения к серверу).</exception>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Асинхронно сопоставляет универсальный код ресурса (URI) с объектом, содержащим фактический ресурс.</summary>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В настоящее время не используется.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. В текущей реализации возвращаются только объекты <see cref="T:System.IO.Stream" />.</param>
      <returns>Объект потока или значение <see langword="null" />, если указан тип, отличающийся от потока.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary>Получает или задает сетевой прокси-сервер для соответствующего объекта <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> для доступа к данному интернет-ресурсу.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Разрешает абсолютный URI на основе базового и относительного URI.</summary>
      <param name="baseUri">Базовый URI, используемый для разрешения относительного URI.</param>
      <param name="relativeUri">URI, которые нужно разрешить. URI может быть как абсолютным, так и относительным. Если URI является абсолютным, данное значение замещает значение <paramref name="baseUri" />. Если относительным, то абсолютный URI является сочетанием относительного и <paramref name="baseUri" />.</param>
      <returns>Абсолютный URI или значение <see langword="null" />, если не удается разрешить относительный URI.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="baseUri" /> — <see langword="null" />, или значение параметра <paramref name="relativeUri" /> — <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>Представляет средство чтения, обеспечивающее проверку определения DTD, схемы XDR и языка определения схемы XML.  
Этот класс устарел. Начиная с .NET Framework версии 2.0, рекомендуется использовать класс <see cref="T:System.Xml.XmlReaderSettings" /> и метод <see cref="Overload:System.Xml.XmlReader.Create" /> для создания проверяющего средства чтения XML.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlValidatingReader" /> с использованием указанных значений.</summary>
      <param name="xmlFragment">Поток, содержащий анализируемый фрагмент XML.</param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML. Определяет содержимое фрагмента (см. таблицу ниже).</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется фрагмент XML. Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий <see langword="xml:lang" /> и область <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не относится к одному из разрешенных типов узлов, перечисленных в таблице ниже.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlValidatingReader" /> с использованием указанных значений.</summary>
      <param name="xmlFragment">Строка, содержащая анализируемый фрагмент XML.</param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML. Также определяет содержимое строки фрагмента (см. таблицу ниже).</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется фрагмент XML. Это включает в себя используемый класс <see cref="T:System.Xml.NameTable" />, кодировку, область пространства имен, текущий xml:lang и область xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не относится к одному из разрешенных типов узлов, перечисленных в таблице ниже.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса <see langword="XmlValidatingReader" />, который служит для проверки содержимого, возвращаемого заданным <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" />, из которого при проверке данных выполняется чтение. Текущая реализация поддерживает только <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException">Указанное средство чтения не является <see langword="XmlTextReader" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>Возвращает количество атрибутов текущего узла.</summary>
      <returns>Количество атрибутов текущего узла. в том числе атрибутов, используемых по умолчанию.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary>Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlValidatingReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение <see langword="true" />, если реализуются методы чтения двоичного содержимого; в противном случае — <see langword="false" />. Класс <see cref="T:System.Xml.XmlValidatingReader" /> возвращает <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее, способно ли данное средство чтения выполнять синтаксический анализ и разрешение сущностей.</summary>
      <returns>Значение <see langword="true" />, если средство чтения позволяет анализировать и разрешать сущности; в противном случае — <see langword="false" />. Параметр <see langword="XmlValidatingReader" /> всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>Изменяет значение <see cref="P:System.Xml.XmlReader.ReadState" /> на Closed.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>Возвращает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>Возвращает атрибут кодировки для документа.</summary>
      <returns>Значение кодировки. Если атрибут кодировки и метка порядка байтов отсутствуют, по умолчанию используется кодировка UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>Возвращает или задает значение, определяющее способ обработки сущностей средством чтения.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.EntityHandling" />. Если <see langword="EntityHandling" /> не задан, по умолчанию для него используется значение EntityHandling.ExpandEntities.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указано недопустимое значение.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>Возвращает значение, определяющее, позиционировано ли средство чтения в конец потока.</summary>
      <returns>Значение <see langword="true" />, если средство чтения установлено в конец потока; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>Возвращает значение атрибута по заданному индексу.</summary>
      <param name="i">Индекс атрибута. Индексация начинается с нуля. (Индекс первого атрибута равен нулю.)</param>
      <returns>Значение указанного атрибута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>Возвращает значение атрибута с указанным именем.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>Возвращает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />. Этот метод не изменяет позицию средства чтения.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке.</summary>
      <returns>Значение <see langword="true" />, если класс может возвратить сведения о строке, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>Возвращает значение, определяющие наличие у текущего узла свойства <see cref="P:System.Xml.XmlValidatingReader.Value" />, значение которого отличается от String.Empty.</summary>
      <returns>Значение <see langword="true" />, если узел, на котором расположено средство чтения, может иметь значение <see langword="Value" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>Возвращает значение, определяющее, является ли текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
      <returns>Значение <see langword="true" />, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD или схеме; значение <see langword="false" />, если значение атрибута было задано явно.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>Возвращает значение, определяющее, является ли текущий узел пустым элементом (например, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />значение, если текущий узел является элементом (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /><see langword="XmlNodeType.Element" />равным), который <c>/ &gt;</c><see langword="false" />заканчивается на; в противном случае —.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary>Возвращает номер текущей строки.</summary>
      <returns>Текущий номер строки. Начальным значением свойства является 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary>Возвращает позицию в текущей строке.</summary>
      <returns>Позиция в текущей строке. Начальным значением свойства является 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>Возвращает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом. Например, <see langword="LocalName" /><see langword="book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
Для безымянных типов узлов (например, <see langword="Text" />, <see langword="Comment" /> и т. д.) данное свойство возвращает String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>Разрешает префикс пространства имен в области видимости текущего элемента.</summary>
      <param name="prefix">Префикс, URI пространства имен которого вы хотите разрешить. Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.</param>
      <returns>URI пространства имен, которое отображает префикс, или значение <see langword="null" />, если соответствующий префикс не найден.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>Переходит к атрибуту с указанным индексом.</summary>
      <param name="i">Индекс атрибута.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>Переходит к атрибуту с указанным именем.</summary>
      <param name="name">Полное имя атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>Переходит к атрибуту с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>Переходит к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение <see langword="true" />, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>Переходит к первому атрибуту.</summary>
      <returns>Значение <see langword="true" />, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>Переходит к следующему атрибуту.</summary>
      <returns>Значение <see langword="true" />, если присутствует следующий атрибут; значение <see langword="false" />, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>Возвращает полное имя текущего узла.</summary>
      <returns>Полное имя текущего узла. Например, <see langword="Name" /><see langword="bk:book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> узла. Значения возвращаются для представленных ниже типов узлов. Для других типов узлов возвращается пустая строка.  
  Тип узла 
  name 
 <see langword="Attribute" /> Имя атрибута.  

 <see langword="DocumentType" /> Имя типа документа.  

 <see langword="Element" /> Имя тега.  

 <see langword="EntityReference" /> Имя сущности, на которую существует ссылка.  

 <see langword="ProcessingInstruction" /> Цель инструкции по обработке.  

 <see langword="XmlDeclaration" /> Строка символов <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>Возвращает или задает значение, указывающее, поддерживаются ли пространства имен.</summary>
      <returns>Значение <see langword="true" /> — поддержка осуществляется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>Возвращает URI пространства имен (определенное в спецификации W3C, посвященной пространствам имен) узла, на который позиционировано средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>
        <see langword="XmlNameTable" />, позволяющий получать в узле разделенную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>Возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>Возвращает знак кавычек, используемый для выделения значения узла атрибута.</summary>
      <returns>Знак кавычек (" или ') для выделения значения узла атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>Считывает следующий узел из потока.</summary>
      <returns>Значение <see langword="true" />, если чтение прошло успешно; значение <see langword="false" />, если отсутствуют узлы для чтения.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>Разбирает значение атрибута в один или несколько узлов <see langword="Text" />, <see langword="EntityReference" /> или <see langword="EndEntity" />.</summary>
      <returns>Значение <see langword="true" />, если присутствуют возвращаемые узлы.  
 Значение <see langword="false" />, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.  
Пустой атрибут (например, <c>misc=""</c>) возвращает значение <see langword="true" /> с отдельным узлом, имеющим значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает данные и возвращает двоичные байты, декодированные из кодировки BinHex.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует его из кодировки Base64.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и декодирует его из кодировки BinHex.</summary>
      <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
      <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
      <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
      <returns>Количество байтов, записанных в буфер.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>Возвращает <see cref="T:System.Xml.XmlReader" />, используемый для создания <see langword="XmlValidatingReader" />.</summary>
      <returns>
        <see langword="XmlReader" />, заданный в конструкторе.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>Возвращает состояние средства чтения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>Считывает содержимое элемента или текстового узла в виде строки.</summary>
      <returns>Содержимое элемента или текстового узла. Если средство чтения позиционировано не на элемент или текстовый узел, а также если отсутствует возвращаемый текст, это может быть пустая строка.  
   
 Текстовым узлом может быть элемент или текстовой узел атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>Возвращает тип CLR для указанного типа языка определения схем XML (XSD).</summary>
      <returns>Тип CLR для указанного типа XSD.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>Разрешает ссылки на сущности для узлов <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaCollection" />, который будет использоваться при проверке данных.</summary>
      <returns>
        <see langword="XmlSchemaCollection" />, используемый при проверке данных.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>Возвращает объект с типом схемы.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, или <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> в зависимости от того, является ли значение узла встроенным в язык определения схемы XML типом или определяемым пользователем типом simpleType или complexType; <see langword="null" />, если текущий узел не имеет типа схемы.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Объект <see cref="T:System.Xml.XmlNamespaceScope" />, определяющий область действия средства чтения.</param>
      <returns>Объект T:System.Collections.IDictionary, определяющий пространства имен в области видимости.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Префикс пространства имен.</param>
      <returns>Строковое значение, содержащее универсальный код ресурса (URI) пространства имен, связанный с данным префиксом.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Пространство имен, связанное с префиксом.</param>
      <returns>Строковое значение, содержащее префикс пространства имен, связанный со значением <paramref name="namespaceName" />.</returns>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>Задает обработчик событий для получения сведений об ошибках проверки DTD, XDR- и XSD-схем.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>Возвращает или задает значение, указывающее тип выполняемой проверки.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ValidationType" />. Если это свойство не задано, то по умолчанию используется тип ValidationType.Auto.</returns>
      <exception cref="T:System.InvalidOperationException">Задает значение свойства после вызова Read.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>Возвращает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> узла. В следующей таблице представлен список возвращаемых типов узлов со значениями. Другие типы узлов возвращают String.Empty.  
  Тип узла 
  Значение 
 <see langword="Attribute" /> Значение атрибута.  

 <see langword="CDATA" /> Содержимое раздела CDATA.  

 <see langword="Comment" /> Содержимое комментария.  

 <see langword="DocumentType" /> Внутреннее подмножество.  

 <see langword="ProcessingInstruction" /> Все содержимое, за исключением цели.  

 <see langword="SignificantWhitespace" /> Пустое пространство в разметке модели со смешанным содержимым.  

 <see langword="Text" /> Содержимое текстового узла.  

 <see langword="Whitespace" /> Пробелы между разметкой.  

 <see langword="XmlDeclaration" /> Содержимое декларации.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>Возвращает текущую область действия <see langword="xml:lang" />.</summary>
      <returns>Текущая область действия <see langword="xml:lang" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" /> для разрешения внешних DTD и ссылок на расположение схем. Кроме того, <see langword="XmlResolver" /> используется для обработки любых импортированных или добавленных элементов, найденных в XSD-схемах.</summary>
      <returns>Используемый <see langword="XmlResolver" />. Если он имеет значение <see langword="null" />, внешние ресурсы не разрешаются.  
В .NET Framework версии 1.1 вызывающий объект должен иметь полное доверие, чтобы иметь возможность указывать <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>Возвращает текущую область действия <see langword="xml:space" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xml.XmlSpace" />. Если область действия <see langword="xml:space" /> отсутствует, данное свойство принимает значение <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>Представляет пробел в содержимом элемента.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="strData">Пробелы узла.</param>
      <param name="doc">Объект <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла. Для узлов пробелов точная копия узла всегда включает значение данных независимо от значения параметра.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов <see langword="XmlWhitespace" /> это свойство возвращает значение <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>Возвращает полное имя узла.</summary>
      <returns>Для узлов <see langword="XmlWhitespace" /> это свойство возвращает значение <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>Возвращает тип узла.</summary>
      <returns>Для узлов <see langword="XmlWhitespace" /> значение — <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary>Возвращает родительский узел текущего узла.</summary>
      <returns>Родительский узел <see cref="T:System.Xml.XmlNode" /> текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary>Возвращает текстовый узел, непосредственно предшествующий данному.</summary>
      <returns>Возвращает <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Пробелы, найденные в узле.</returns>
      <exception cref="T:System.ArgumentException">Задание значения <see cref="P:System.Xml.XmlWhitespace.Value" /> как недопустимые пробелы.</exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы узла в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see cref="T:System.Xml.XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект <see cref="T:System.Xml.XmlWriter" />, в котором необходимо выполнить сохранение.</param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Представляет средство записи, обеспечивающее быстрый прямой способ (без кэширования) создания потоков или файлов, содержащих XML-данные.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>Когда переопределено в производном классе, закрывает данный поток и базовый поток.</summary>
      <exception cref="T:System.InvalidOperationException">Выполнен вызов для записи дополнительных выходных после вызова <see langword="Close" /> или результатом данного вызова является недопустимый XML-документ.

или -

Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного потока.</summary>
      <param name="output">Поток, в который будет выполняться запись. <see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stream" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с помощью потока и объекта <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">Поток, в который будет выполняться запись. <see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" />. Если значение равно <see langword="null" />, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.  
Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stream" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="output">
        <see cref="T:System.IO.TextWriter" />, в которое необходимо записать. Объект <see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку <see cref="T:System.IO.TextWriter" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="text" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием объектов <see cref="T:System.IO.TextWriter" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">
        <see cref="T:System.IO.TextWriter" />, в которое необходимо записать. Объект <see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку <see cref="T:System.IO.TextWriter" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" />. Если значение равно <see langword="null" />, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.  
Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="text" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного имени файла.</summary>
      <param name="outputFileName">Файл, в который будет выполняться запись. Метод <see cref="T:System.Xml.XmlWriter" /> создает файл по указанному пути и записывает в него, используя синтаксис текста XML 1.0. Параметр <paramref name="outputFileName" /> должен являться путем файловой системы.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="url" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с помощью имени файла и объекта <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="outputFileName">Файл, в который будет выполняться запись. Метод <see cref="T:System.Xml.XmlWriter" /> создает файл по указанному пути и записывает в него, используя синтаксис текста XML 1.0. Параметр <paramref name="outputFileName" /> должен являться путем файловой системы.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" />. Если значение равно <see langword="null" />, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.  
Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="url" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="output">Класс <see cref="T:System.Text.StringBuilder" />, в который осуществляется запись. Содержимое, записанное методом <see cref="T:System.Xml.XmlWriter" />, добавляется в <see cref="T:System.Text.StringBuilder" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="builder" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием объектов <see cref="T:System.Text.StringBuilder" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">Класс <see cref="T:System.Text.StringBuilder" />, в который осуществляется запись. Содержимое, записанное методом <see cref="T:System.Xml.XmlWriter" />, добавляется в <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" />. Если значение равно <see langword="null" />, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.  
Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="builder" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, который следует использовать в качестве базового средства записи.</param>
      <returns>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="writer" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанных объектов <see cref="T:System.Xml.XmlWriter" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, который следует использовать в качестве базового средства записи.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" />. Если значение равно <see langword="null" />, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.  
Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="writer" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xml.XmlWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>Когда переопределено в производном классе, сохраняет в базовый поток содержимое буфера, а также сохраняет основной поток.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>Асинхронно записывает в базовый поток содержимое буфера и сохраняет базовый поток.</summary>
      <returns>Задача, представляющая асинхронную операцию <see langword="Flush" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>Когда переопределено в производном классе, возвращает ближайший префикс, определенный в области видимости текущего пространства имен для URI пространства имен.</summary>
      <param name="ns">URI пространства имен, префикс которого нужно найти.</param>
      <returns>Соответствующий префикс или значение <see langword="null" />, если в текущей области отсутствует соответствующий URI пространства имен.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Получает объект <see cref="T:System.Xml.XmlWriterSettings" />, используемый для создания данного экземпляра <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriterSettings" />, используемый для создания этого экземпляра средства записи. Если это средство записи не было создано с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />, это свойство возвращает <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>При переопределении в производном классе записывает все атрибуты, найденные в текущей позиции в объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" />, из которого происходит копирование атрибутов.</param>
      <param name="defattr">Значение <see langword="true" />, чтобы скопировать атрибуты по умолчанию из <see langword="XmlReader" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Средство чтения не расположено на узле <see langword="element" />, <see langword="attribute" /> или <see langword="XmlDeclaration" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Асинхронно записывает все атрибуты, найденные в текущей позиции в объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" />, из которого происходит копирование атрибутов.</param>
      <param name="defattr">Значение <see langword="true" />, чтобы скопировать атрибуты по умолчанию из <see langword="XmlReader" />; в противном случае — значение <see langword="false" />.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteAttributes" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>Когда переопределено в производном классе, записывает атрибут с указанным локальным именем и значением.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="value">Значение атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Состояние средства записи отличается от <see langword="WriteState.Element" /> или средство записи закрыто.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение атрибута <see langword="xml:space" /> или <see langword="xml:lang" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>Когда переопределено в производном классе, записывает атрибут с указанным локальным именем, URI пространства имен и значением.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">URI пространства имен, который связывается с атрибутом.</param>
      <param name="value">Значение атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Состояние средства записи отличается от <see langword="WriteState.Element" /> или средство записи закрыто.

или - 
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение атрибута <see langword="xml:space" /> или <see langword="xml:lang" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>Когда переопределено в производном классе, записывает атрибут с указанным префиксом, локальным именем, URI пространства имен и значением.</summary>
      <param name="prefix">Префикс пространства имен атрибута.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <param name="value">Значение атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Состояние средства записи отличается от <see langword="WriteState.Element" /> или средство записи закрыто.

или - 
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение атрибута <see langword="xml:space" /> или <see langword="xml:lang" />.</exception>
      <exception cref="T:System.Xml.XmlException">Значение параметра <paramref name="localName" /> или <paramref name="ns" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Асинхронно записывает атрибут с заданным префиксом, локальным именем, универсальным кодом ресурса (URI) пространства имен и значением.</summary>
      <param name="prefix">Префикс пространства имен атрибута.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <param name="value">Значение атрибута.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteAttributeString" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или - 
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Когда переопределено в производном классе, преобразует указанный набор двоичных байтов в кодировку Base64 и записывает получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  
-или- 
Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно преобразует указанный набор двоичных байтов в кодировку Base64 и записывает получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteBase64" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе преобразует указанный набор двоичных байтов как <see langword="BinHex" /> и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто или находится в состоянии ошибки.

или -

Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  

или - 
Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно кодирует указанные двоичные байты как <see langword="BinHex" /> и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteBinHex" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>Когда переопределено в производном классе, записывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</summary>
      <param name="text">Текст, записываемый в блок CDATA.</param>
      <exception cref="T:System.ArgumentException">Текст приведет к неправильному формированию документа XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Асинхронно записывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</summary>
      <param name="text">Текст, записываемый в блок CDATA.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteCData" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>Когда переопределено в производном классе, вызывает создание сущности знака для указанного значения знака Юникода.</summary>
      <param name="ch">Знак Юникода, для которого создается сущность знака.</param>
      <exception cref="T:System.ArgumentException">Символ находится в диапазоне символов суррогатной пары <see langword="0xd800" /> - <see langword="0xdfff" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Асинхронно инициирует создание сущности знака для указанного значения знака Юникода.</summary>
      <param name="ch">Знак Юникода, для которого создается сущность знака.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteCharEntity" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Когда переопределено в производном классе, записывает содержимое текстового буфера.</summary>
      <param name="buffer">Массив символов, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  

или - 
Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />; вызов приводит к разделению пар символов-заместителей или к записи недопустимой пары символов-заместителей.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="buffer" /> является недопустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает содержимое текстового буфера.</summary>
      <param name="buffer">Массив символов, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteChars" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>Когда переопределено в производном классе, записывает примечание &lt;!--...--&gt;, содержащее заданный текст.</summary>
      <param name="text">Текст, записываемый в примечание.</param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>Асинхронно записывает комментарий &lt;!--...--&gt;, содержащий заданный текст.</summary>
      <param name="text">Текст, записываемый в примечание.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteComment" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Когда переопределено в производном классе, записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</summary>
      <param name="name">Имя DOCTYPE. Не должно быть пустым.</param>
      <param name="pubid">Если значение не равно нулю, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов.</param>
      <param name="sysid">Если параметр <paramref name="pubid" /> имеет значение <see langword="null" />, а параметр <paramref name="sysid" /> не равен нулю, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента.</param>
      <param name="subset">Если не равно нулю, записывает [subset], где subset замещается значением данного аргумента.</param>
      <exception cref="T:System.InvalidOperationException">Этот метод был вызван вне пролога (после корневого элемента).

или -

Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.ArgumentException">Значение для <paramref name="name" /> приведет к недопустимому XML.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Асинхронно записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</summary>
      <param name="name">Имя DOCTYPE. Не должно быть пустым.</param>
      <param name="pubid">Если значение не равно нулю, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов.</param>
      <param name="sysid">Если параметр <paramref name="pubid" /> имеет значение <see langword="null" />, а параметр <paramref name="sysid" /> не равен нулю, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента.</param>
      <param name="subset">Если не равно нулю, записывает [subset], где subset замещается значением данного аргумента.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteDocType" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>Записывает элемент с заданным локальным именем и значением.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="value">Значение элемента.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — <see langword="null" /> или пустая строка.  

или - 
Значения параметра являются недопустимыми.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Записывает элемент с заданным локальным именем, URI пространства имен и значением.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен, связываемый с элементом.</param>
      <param name="value">Значение элемента.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — <see langword="null" /> или пустая строка.  

или - 
Значения параметра являются недопустимыми.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Записывает элемент с заданным префиксом, локальным именем, универсальный кодом ресурса (URI) пространства имен и значением.</summary>
      <param name="prefix">Префикс элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="value">Значение элемента.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — <see langword="null" /> или пустая строка.  

или - 
Значения параметра являются недопустимыми.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Асинхронно записывает элемент с заданным префиксом, локальным именем, универсальным кодом ресурса (URI) пространства имен и значением.</summary>
      <param name="prefix">Префикс элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="value">Значение элемента.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteElementString" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>При переопределении в производном классе закрывает предыдущий вызов <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Асинхронно закрывает предыдущий вызов <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteEndAttribute" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>Когда переопределено в производном классе, закрывает все открытые элементы и атрибуты, возвращая средство записи в начальное состояние.</summary>
      <exception cref="T:System.ArgumentException">Недопустимый документ XML.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Асинхронно закрывает все открытые элементы и атрибуты, возвращая средство записи в начальное состояние.</summary>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteEndDocument" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>Когда переопределено в производном классе, закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</summary>
      <exception cref="T:System.InvalidOperationException">Это приводит к недопустимому XML-документу.

или -

Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Асинхронно закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</summary>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteEndElement" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>При переопределении в производном классе записывает ссылку на сущность в виде <see langword="&amp;name;" />.</summary>
      <param name="name">Имя ссылки на сущность.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>Асинхронно записывает ссылку на сущность в виде <see langword="&amp;name;" />.</summary>
      <param name="name">Имя ссылки на сущность.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteEntityRef" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>Когда переопределено в производном классе, закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Асинхронно закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</summary>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteFullEndElement" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>Когда переопределено в производном классе, записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым именем XML; или значение параметра <paramref name="name" /> — <see langword="null" /> или <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Асинхронно записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteName" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>Когда переопределено в производном классе, записывает указанное имя, гарантируя, что оно является допустимым NmToken согласно рекомендации W3C по языку XML версии 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым NmToken; или значение параметра <paramref name="name" /> — <see langword="null" /> или <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Асинхронно записывает указанное имя, гарантируя, что оно является допустимым NmToken согласно рекомендации W3C по языку XML версии 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteNmToken" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Когда переопределено в производном классе, копирует все данные из средства чтения в средство записи и перемещает средство чтения к началу следующего элемента того же уровня.</summary>
      <param name="reader">Экземпляр <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="defattr">Значение <see langword="true" />, чтобы скопировать атрибуты по умолчанию из <see langword="XmlReader" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="reader" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="reader" /> содержит недопустимые символы.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Копирует все из объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> в средство записи. Позиция <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменной.</summary>
      <param name="navigator">Элемент <see cref="T:System.Xml.XPath.XPathNavigator" />, из которого копируются данные.</param>
      <param name="defattr">Значение <see langword="true" /> — копирование атрибутов по умолчанию; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="navigator" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Асинхронно копирует все данные из средства чтения в средство записи и перемещает средство чтения к началу следующего элемента того же уровня.</summary>
      <param name="reader">Экземпляр <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="defattr">Значение <see langword="true" />, чтобы скопировать атрибуты по умолчанию из <see langword="XmlReader" />; в противном случае — значение <see langword="false" />.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Асинхронно копирует все из объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> в средство записи. Позиция <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменной.</summary>
      <param name="navigator">Элемент <see cref="T:System.Xml.XPath.XPathNavigator" />, из которого копируются данные.</param>
      <param name="defattr">Значение <see langword="true" /> — копирование атрибутов по умолчанию; в противном случае — <see langword="false" />.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>При переопределении в производном классе считывает инструкцию обработки с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</summary>
      <param name="name">Имя инструкции по обработке.</param>
      <param name="text">Текст, включаемый в инструкцию по обработке.</param>
      <exception cref="T:System.ArgumentException">Текст приведет к неправильному формированию документа XML.  
 <paramref name="name" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.  
Этот метод используется для создания XML-объявления после того, как метод <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> уже вызван.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Асинхронно записывает инструкцию обработки с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</summary>
      <param name="name">Имя инструкции по обработке.</param>
      <param name="text">Текст, включаемый в инструкцию по обработке.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteProcessingInstruction" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>При переопределении в производном классе считывает полное имя пространства имен. Этот метод выполняет поиск префикса для пространства имен в его области.</summary>
      <param name="localName">Локальное имя для записи.</param>
      <param name="ns">URI пространства имен для имени.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.  
 <paramref name="localName" /> является недопустимым именем.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Асинхронно записывает полное имя пространства имен. Этот метод выполняет поиск префикса для пространства имен в его области.</summary>
      <param name="localName">Локальное имя для записи.</param>
      <param name="ns">URI пространства имен для имени.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteQualifiedName" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Когда переопределено в производном классе, вручную записывает из буфера символов необработанные данные для разметки .</summary>
      <param name="buffer">Массив символов, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.  

или - 
Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>Когда переопределено в производном классе, вручную записывает из строки необработанные данные для разметки.</summary>
      <param name="data">Строка, содержащая текст для записи.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно, вручную записывает для разметки необработанные данные из буфера символов.</summary>
      <param name="buffer">Массив символов, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteRaw" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Асинхронно, вручную записывает необработанные данные для разметки.</summary>
      <param name="data">Строка, содержащая текст для записи.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteRaw" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Записывает начало атрибута с заданным локальным именем.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Модуль записи закрыт.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Записывает начало атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Когда переопределено в производном классе, записывает начало атрибута с указанным префиксом, локальным именем и URI пространства имен.</summary>
      <param name="prefix">Префикс пространства имен атрибута.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">URI пространства имен атрибута.</param>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Асинхронно записывает начало атрибута с заданным префиксом, локальным именем и универсальным кодом ресурса (URI) пространства имен.</summary>
      <param name="prefix">Префикс пространства имен атрибута.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">URI пространства имен атрибута.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteStartAttribute" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>Когда переопределено в производном классе, записывает объявление XML с номером версии "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>Когда переопределено в производном классе, записывает объявление XML с номером версии "1.0" и отдельным атрибутом.</summary>
      <param name="standalone">Если значение равно <see langword="true" />, записывается "standalone=yes"; если <see langword="false" />, записывается "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Асинхронно записывает объявление XML с номером версии "1.0".</summary>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteStartDocument" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Асинхронно записывает объявление XML с номером версии "1.0". и отдельным атрибутом.</summary>
      <param name="standalone">Если значение равно <see langword="true" />, записывается "standalone=yes"; если <see langword="false" />, записывается "standalone=no".</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteStartDocument" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>Когда переопределено в производном классе, записывает открывающий тег с указанным локальным именем.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <exception cref="T:System.InvalidOperationException">Модуль записи закрыт.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>Когда переопределено в производном классе, записывает указанный открывающий тег и связывает его с заданным пространством имен.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен, связываемый с элементом. Если пространство имен уже находится в области видимости и с ним связан префикс, средство записи автоматически запишет этот префикс.</param>
      <exception cref="T:System.InvalidOperationException">Модуль записи закрыт.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Когда переопределено в производном классе, записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix">Префикс пространства имен элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен, связываемый с элементом.</param>
      <exception cref="T:System.InvalidOperationException">Модуль записи закрыт.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода. Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127. Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер. Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов). Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Асинхронно записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix">Префикс пространства имен элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен, связываемый с элементом.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteStartElement" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>Когда переопределено в производном классе, возвращает состояние средства записи.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.WriteState" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>Записывает заданное текстовое содержимое при переопределении в производном классе.</summary>
      <param name="text">Текст для записи.</param>
      <exception cref="T:System.ArgumentException">Строка текста содержит недопустимую пару символов-заместителей.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Асинхронно записывает заданное текстовое содержимое.</summary>
      <param name="text">Текст для записи.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteString" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Когда переопределено в производном классе, создает и записывает сущность символа-заместителя для пары символов-заместителей.</summary>
      <param name="lowChar">Младший заместитель. Значение должно быть в диапазоне от 0xDC00 до 0xDFFF.</param>
      <param name="highChar">Старший заместитель. Значение должно быть в диапазоне от 0xD800 до 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Передана недопустимая пара символов-заместителей.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Асинхронно создает и записывает сущность символа-заместителя для пары символов-заместителей.</summary>
      <param name="lowChar">Младший заместитель. Значение должно быть в диапазоне от 0xDC00 до 0xDFFF.</param>
      <param name="highChar">Старший заместитель. Значение должно быть в диапазоне от 0xD800 до 0xDBFF.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteSurrogateCharEntity" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".
-или-
Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Записывает значение <see cref="T:System.Boolean" />.</summary>
      <param name="value">Значение <see cref="T:System.Boolean" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Записывает значение <see cref="T:System.DateTime" />.</summary>
      <param name="value">Значение <see cref="T:System.DateTime" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Записывает значение <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value">Значение <see cref="T:System.DateTimeOffset" /> для записи.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Записывает значение <see cref="T:System.Decimal" />.</summary>
      <param name="value">Значение <see cref="T:System.Decimal" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Записывает значение <see cref="T:System.Double" />.</summary>
      <param name="value">Значение <see cref="T:System.Double" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Записывает значение <see cref="T:System.Int32" />.</summary>
      <param name="value">Значение <see cref="T:System.Int32" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Записывает значение <see cref="T:System.Int64" />.</summary>
      <param name="value">Значение <see cref="T:System.Int64" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Записывает значение объекта.</summary>
      <param name="value">Значение объекта для записи.  
 Примечание. С выпуском платформы .NET Framework 3.5 этот метод принимает <see cref="T:System.DateTimeOffset" /> в качестве параметра.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто или находится в состоянии ошибки.
-или-
Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Записывает число с плавающей запятой одиночной точности.</summary>
      <param name="value">Число с плавающей запятой одиночной точности для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Записывает значение <see cref="T:System.String" />.</summary>
      <param name="value">Значение <see cref="T:System.String" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>Когда переопределено в производном классе, записывает указанный символ-разделитель.</summary>
      <param name="ws">Строка символов-разделителей.</param>
      <exception cref="T:System.ArgumentException">Строка содержит символы, отличные от пробелов.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Асинхронно записывает указанный символ-разделитель.</summary>
      <param name="ws">Строка символов-разделителей.</param>
      <returns>Задача, представляющая асинхронную операцию <see langword="WriteWhitespace" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>При переопределении в производном классе получает текущую область действия <see langword="xml:lang" />.</summary>
      <returns>Текущая область действия <see langword="xml:lang" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>При переопределении в производном классе возвращает класс <see cref="T:System.Xml.XmlSpace" />, предоставляющий текущую область <see langword="xml:space" />.</summary>
      <returns>Объект <see langword="XmlSpace" />, представляющий текущую область <see langword="xml:space" />.  
  Значение 
  Значение 
 <see langword="None" /> Значение, задаваемое по умолчанию, если область <see langword="xml:space" /> отсутствует.  

 <see langword="Default" /> Текущая область — <see langword="xml:space" />="default".  

 <see langword="Preserve" /> Текущая область — <see langword="xml:space" />="preserve".</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlWriter" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Получает или задает значение, указывающее, можно ли использовать асинхронные методы <see cref="T:System.Xml.XmlWriter" /> для конкретного экземпляра <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Значение <see langword="true" />, если могут использоваться асинхронные методы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Возвращает или задает значение, указывающее, должно ли средство записи XML выполнять проверку на предмет того, соответствуют ли все символы в документе разделу "2.2 Characters" документа W3C XML 1.0 Recommendation.</summary>
      <returns>Значение <see langword="true" /> для выполнения проверки символов; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Точная копия объекта <see cref="T:System.Xml.XmlWriterSettings" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Возвращает или задает значение, указывающее, следует ли объекту <see cref="T:System.Xml.XmlWriter" /> закрывать также и основной поток или <see cref="T:System.IO.TextWriter" /> при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>Значение <see langword="true" />, если следует закрыть основной поток или <see cref="T:System.IO.TextWriter" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Возвращает или задает уровень соответствия, на предмет которого средство записи XML проверяет выходные данные XML.</summary>
      <returns>Одно из значений перечисления, указывающее уровень соответствия (документ, фрагмент или автоматическое обнаружение). Значение по умолчанию — <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary>Возвращает или задает значение, указывающее, преобразует ли <see cref="T:System.Xml.XmlWriter" /> атрибуты URI в escape-последовательности.</summary>
      <returns>
        <see langword="true" />значение ,<see langword="false" />если не выполняетэкранированиеатрибутовURI;впротивномслучае—.<see cref="T:System.Xml.XmlWriter" /> Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Получает или задает тип используемой кодировки текста.</summary>
      <returns>Используемая кодировка текста. Значение по умолчанию — <see langword="Encoding.UTF8" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Возвращает или задает значение, указывающее, следует ли использовать отступ для элементов.</summary>
      <returns>Значение <see langword="true" />, если необходимо записывать отдельные элементы в новых строках с отступом; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Возвращает или задает строку символов, которую следует использовать при отступах. Этот параметр используется, если значение свойства <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно <see langword="true" />.</summary>
      <returns>Строка символов, которую следует использовать при отступах. Может принять любое строчное значение. Однако в целях обеспечения допустимого XML-кода, необходимо указывать только допустимые символы строковых пробелов, например символы пробела, табуляции, возврата каретки или перевода строки. По умолчанию - два пробела.</returns>
      <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> присваивается значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Получает или задает значение, указывающие, должен ли объект <see cref="T:System.Xml.XmlWriter" /> при записи содержимого XML удалять дубликаты объявлений пространств имен. По умолчанию объект записи выводит объявления пространств имен, присутствующие в его распознавателе пространств имен.</summary>
      <returns>Перечисление <see cref="T:System.Xml.NamespaceHandling" />, которое указывает, нужно ли удалять дубликаты объявлений пространств имен в объекте <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Возвращает или задает строку символов, которую следует использовать для разрывов строк.</summary>
      <returns>Строка символов, которую следует использовать для разрывов строк. Может принять любое строчное значение. Однако в целях обеспечения допустимого XML-кода, необходимо указывать только допустимые символы строковых пробелов, например символы пробела, табуляции, возврата каретки или перевода строки. Значение по умолчанию — <c>\r\n</c> (возврат каретки, Новая строка).</returns>
      <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> присваивается значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Возвращает или задает значение, показывающее, осуществляется нормализация разрывов строк в выходных данных.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.NewLineHandling" />. Значение по умолчанию — <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Возвращает или задает значение, указывающее, следует ли записывать атрибуты в новой строке.</summary>
      <returns>Значение <see langword="true" />, если необходимо записывать атрибуты в отдельные строки; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.  
   
 Этот параметр ни на что не влияет, если значение свойства  <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно <see langword="false" />.  

  

 Если значение объекта <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> равно <see langword="true" />, каждому атрибуту предшествует новая строка и дополнительный уровень отступа.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Получает или задает значение, определяющее, следует ли опустить XML-объявление.</summary>
      <returns>Значение <see langword="true" />, если необходимо опустить XML-объявление; в противном случае — значение <see langword="false" />. Значением по умолчанию является <see langword="false" />; XML-объявление записывается.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary>Возвращает метод, используемый для сериализации выходных данных объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlOutputMethod" />. Значение по умолчанию — <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Получает или задает значение, указывающее, добавляет ли <see cref="T:System.Xml.XmlWriter" /> закрывающие теги ко всем незакрытым тегам элементов при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>Значение <see langword="true" />, если все незакрытые теги элементов будут закрыты; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>Предоставляет метод доступа к классу <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>Возвращает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>Указывает порядок сортировки для строчных и прописных букв.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>Строчные буквы сортируются перед прописными буквами.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>Игнорирование регистра.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>Прописные буквы сортируются перед строчными буквами.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>Указывает тип данных для определения порядка сортировки.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>Значения сортируются по числам.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>Значения сортируются в алфавитном порядке.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>Указывает порядок сортировки.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>узлы сортируются в восходящем порядке. Например, если номера 1, 2, 3 и 4 сортируются в восходящем порядке, они отображаются в последовательности 1, 2, 3, 4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>узлы сортируются в нисходящем порядке. Например, если номера 1, 2, 3 и 4 сортируются в нисходящем порядке, они отображаются в последовательности 4, 3, 2, 1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>Предоставляет типизированный класс, представляющий скомпилированное выражение XPath.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>При переопределении в производном классе выполняется сортировка узлов, выбранных выражением XPath, согласно заданному объекту <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="expr">Объект, представляющий ключ сортировки. Это может быть значение <see langword="string" /> узла или объект <see cref="T:System.Xml.XPath.XPathExpression" /> со скомпилированным выражением XPath.</param>
      <param name="comparer">Объект <see cref="T:System.Collections.IComparer" />, предоставляющий сравнения определенных типов данных для сравнения двух объектов на предмет эквивалентности.</param>
      <exception cref="T:System.Xml.XPath.XPathException">
        <see cref="T:System.Xml.XPath.XPathExpression" /> или ключ сортировки включает префикс и либо не предоставлен <see cref="T:System.Xml.XmlNamespaceManager" />, либо префикс не удается найти в указанном <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>При переопределении в производном классе выполняется сортировка узлов, выбранных выражением XPath, согласно указанным параметрам.</summary>
      <param name="expr">Объект, представляющий ключ сортировки. Это может быть значение <see langword="string" /> узла или объект <see cref="T:System.Xml.XPath.XPathExpression" /> со скомпилированным выражением XPath.</param>
      <param name="order">Значение <see cref="T:System.Xml.XPath.XmlSortOrder" />, указывающее порядок сортировки.</param>
      <param name="caseOrder">Значение <see cref="T:System.Xml.XPath.XmlCaseOrder" />, указывающее способ сортировки строчных и прописных букв.</param>
      <param name="lang">Язык, используемый для сравнения. Использует класс <see cref="T:System.Globalization.CultureInfo" />, который может быть передан в метод <see cref="Overload:System.String.Compare" /> для типа языка, например, us-en для английского (США). Если указывается пустая строка, для определения <see cref="T:System.Globalization.CultureInfo" /> используется системное окружение.</param>
      <param name="dataType">Значение <see cref="T:System.Xml.XPath.XmlDataType" />, указывающее порядок сортировки для типа данных.</param>
      <exception cref="T:System.Xml.XPath.XPathException">
        <see cref="T:System.Xml.XPath.XPathExpression" /> или ключ сортировки включает префикс и либо не предоставлен <see cref="T:System.Xml.XmlNamespaceManager" />, либо префикс не удается найти в указанном <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>При переопределении в производном классе возвращает клон <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Новый объект <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>Компилирует заданное выражение XPath и возвращает объект <see cref="T:System.Xml.XPath.XPathExpression" />, представляющий выражение XPath.</summary>
      <param name="xpath">Выражение XPath.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр выражения XPath не является допустимым выражением XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Компилирует заданное выражение XPath, при указанном для разрешения пространства имен объекте <see cref="T:System.Xml.IXmlNamespaceResolver" />, и возвращает объект <see cref="T:System.Xml.XPath.XPathExpression" />, представляющий выражение XPath.</summary>
      <param name="xpath">Выражение XPath.</param>
      <param name="nsResolver">Объект, реализующий интерфейс <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения пространства имен.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр выражения XPath не является допустимым выражением XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>При переопределении в производном классе получает представление <see langword="string" /> для <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Представление <see langword="string" /> для <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>При переопределении в производном классе получает тип результата выражения XPath.</summary>
      <returns>Значение <see cref="T:System.Xml.XPath.XPathResultType" />, представляющее тип результата выражения XPath.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>При переопределении в производном классе указывает объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, который следует использовать для разрешения пространства имен.</summary>
      <param name="nsResolver">Объект, реализующий интерфейс <see cref="T:System.Xml.IXmlNamespaceResolver" />, для использования для разрешения пространства имен.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Параметр объекта <see cref="T:System.Xml.IXmlNamespaceResolver" /> не является производным от <see cref="T:System.Xml.IXmlNamespaceResolver" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>При переопределении в производном классе указывает объект <see cref="T:System.Xml.XmlNamespaceManager" />, который следует использовать для разрешения пространства имен.</summary>
      <param name="nsManager">Объект <see cref="T:System.Xml.XmlNamespaceManager" /> для использования для разрешения пространства имен.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Параметр объекта <see cref="T:System.Xml.XmlNamespaceManager" />, не являющийся производным от класса <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>Представляет элемент в моделях данных XQuery 1.0 и XPath 2.0.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>При переопределении в производном классе возвращает значение, указывающее, представляет ли элемент узел XPath или атомарное значение.</summary>
      <returns>
        <see langword="true" />, если элемент представляет узел XPath; <see langword="false" />, если элемент представляет атомарное значение.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary>При переопределении в производном классе возвращает текущий элемент как упакованный объект наиболее подходящего типа .NET Framework 2.0, соответствующего типу схемы.</summary>
      <returns>Текущий элемент в виде упакованного объекта наиболее соответствующего типа .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>Переопределяемый в производных классах возвращает значение <see langword="string" /> для элемента.</summary>
      <returns>Значение <see langword="string" /> для элемента.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary>Возвращает значение элемента с заданным типом.</summary>
      <param name="returnType">Тип, в котором необходимо возвратить значение элемента.</param>
      <returns>Значение элемента в заданном типе.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для целевого типа.</exception>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Переопределяемый в производных классах возвращает значение элемента с типом, задаваемым с помощью объекта <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространств имен.</summary>
      <param name="returnType">Тип, в котором необходимо возвратить значение элемента.</param>
      <param name="nsResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <returns>Значение элемента в заданном типе.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для целевого типа.</exception>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary>При переопределении в производном классе получает значение элемента в представлении <see cref="T:System.Boolean" />.</summary>
      <returns>Значение элемента в представлении <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Boolean" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary>При переопределении в производном классе получает значение элемента в представлении <see cref="T:System.DateTime" />.</summary>
      <returns>Значение элемента в представлении <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.DateTime" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary>При переопределении в производном классе получает значение элемента в представлении <see cref="T:System.Double" />.</summary>
      <returns>Значение элемента в представлении <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Double" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary>При переопределении в производном классе получает значение элемента в представлении <see cref="T:System.Int32" />.</summary>
      <returns>Значение элемента в представлении <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int32" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary>При переопределении в производном классе получает значение элемента в представлении <see cref="T:System.Int64" />.</summary>
      <returns>Значение элемента в представлении <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int64" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary>Переопределяемый в производных классах возвращает тип .NET Framework 2.0 элемента.</summary>
      <returns>Тип .NET Framework для элемента. Значение по умолчанию — <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary>Переопределяемый в производных классах возвращает значение <see cref="T:System.Xml.Schema.XmlSchemaType" /> для элемента.</summary>
      <returns>Тип <see cref="T:System.Xml.Schema.XmlSchemaType" /> для элемента.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>Определяет область пространства имен.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>Возвращает все пространства имен, заданные в области текущего узла. Сюда входит пространство <c>xmlns:xml</c>, всегда объявляемое неявно. Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>Возвращает все пространства имен, заданные в области текущего узла, исключая пространство имен <c>xmlns:xml</c>. Пространство имен <c>xmlns:xml</c> всегда объявлено неявно. Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>Возвращает все пространства имен, которые заданы локально в текущем узле.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>Представляет модель курсора для навигации по данным XML и их редактирования.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания одного или нескольких дочерних узлов в конце списка дочерних узлов текущего узла.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания новых дочерних узлов в конце списка дочерних узлов текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором располагается <see cref="T:System.Xml.XPath.XPathNavigator" />, не является ни корневым узлом, ни узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>Создает новый дочерний узел в конце списка дочерних узлов текущего узла, используя заданную строку данных XML.</summary>
      <param name="newChild">Строка данных XML для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML-данных — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором располагается <see cref="T:System.Xml.XPath.XPathNavigator" />, не является ни корневым узлом, ни узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Неправильный формат параметра строки XML-данных.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>Создает новый дочерний узел в конце списка дочерних узлов текущего узла, используя XML-содержимое заданного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XmlReader" />, расположенный в XML-данных для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором располагается <see cref="T:System.Xml.XPath.XPathNavigator" />, не является ни корневым узлом, ни узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">XML-содержимое параметра объекта <see cref="T:System.Xml.XmlReader" /> сформировано некорректно.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый дочерний узел в конце списка дочерних узлов текущего узла, используя узлы в заданном <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в узле, который следует добавить как новый дочерний узел.</param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором располагается <see cref="T:System.Xml.XPath.XPathNavigator" />, не является ни корневым узлом, ни узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>Создает новый элемент дочернего узла в конце списка дочерних узлов текущего узла, используя заданный префикс пространства имен, локальное имя, URI пространства имен и указанное значение.</summary>
      <param name="prefix">Префикс пространства имен нового элемента дочернего узла (если имеется).</param>
      <param name="localName">Локальное имя нового элемента дочернего узла (если имеется).</param>
      <param name="namespaceURI">URI пространства имен нового дочернего узла элементов (если имеется). <see cref="F:System.String.Empty" /> и <see langword="null" /> эквивалентны.</param>
      <param name="value">Значение нового элемента дочернего узла. Если передается значение <see cref="F:System.String.Empty" /> или <see langword="null" />, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором располагается <see cref="T:System.Xml.XPath.XPathNavigator" />, не является ни корневым узлом, ни узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>Когда переопределено в производном классе, возвращает базовый URI для текущего узла.</summary>
      <returns>Расположение, из которого был загружен узел, или <see cref="F:System.String.Empty" />, если значение отсутствует.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>Получает значение, указывающее, может ли <see cref="T:System.Xml.XPath.XPathNavigator" /> редактировать базовые данные XML.</summary>
      <returns>
        <see langword="true" />значение ,<see langword="false" />если может изменять базовые XML-данные; в противном случае —. <see cref="T:System.Xml.XPath.XPathNavigator" /></returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Проверяет соответствие данных XML в <see cref="T:System.Xml.XPath.XPathNavigator" /> указанной схеме языка определения схем XML (XSD).</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы, используемые для проверки данных XML в <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />, получающий сведения об ошибках и предупреждениях при проверке схемы.</param>
      <returns>
        <see langword="true" />, если произошли ошибки при проверке схемы, иначе <see langword="false" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Возникла ошибка при проверке схемы, и не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для обработки ошибок проверки.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> расположен на узле, который не является элементом, атрибутом или корневым узлом, или же отсутствует информация о типе для выполнения проверки.</exception>
      <exception cref="T:System.ArgumentException">Метод <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> был вызван с параметром <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в то время, когда <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на корневом узле данных XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>При переопределении в производном классе создает новый <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в том же узле, что и данный <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Новый <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в том же узле, что и данный <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Сравнивает положение текущего <see cref="T:System.Xml.XPath.XPathNavigator" /> с положением заданного <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="nav">Итератор <see cref="T:System.Xml.XPath.XPathNavigator" />, с которым выполняется сравнение.</param>
      <returns>Значение <see cref="T:System.Xml.XmlNodeOrder" />, представляющее сравнительное положение двух объектов <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>Компилирует строчное представление выражения XPath и возвращает объект <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="xpath">Строчное представление выражения XPath.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathExpression" />, представляющий выражение XPath.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="xpath" /> содержит недействительное выражение XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>Создает узел атрибута в текущем узле элемента, используя заданный префикс пространства имен, локальное имя, URI пространства имен и указанное значение.</summary>
      <param name="prefix">Префикс пространства имен нового узла атрибута (если имеется).</param>
      <param name="localName">Локальное имя нового узла атрибута, которое не может быть <see cref="F:System.String.Empty" /> или <see langword="null" />.</param>
      <param name="namespaceURI">URI пространства имен нового узла атрибута (если имеется).</param>
      <param name="value">Значение нового узла атрибута. Если передается значение <see cref="F:System.String.Empty" /> или <see langword="null" />, то создается пустой узел атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не находится в узле элемента.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания новых атрибутов текущего элемента.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания новых атрибутов текущего элемента.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не находится в узле элемента.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>Возвращает копию <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Копия <see cref="T:System.Xml.XPath.XPathNavigator" /> этого <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>Удаляет узлы того же уровня в диапазоне от текущего до заданного узла.</summary>
      <param name="lastSiblingToDelete">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в последнем сестринском узле в удаляемом диапазоне.</param>
      <exception cref="T:System.ArgumentNullException">Заданный объект <see cref="T:System.Xml.XPath.XPathNavigator" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.InvalidOperationException">Указанный последний удаляемый узел является допустимым сестринским узлом текущего узла.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>Удаляет текущий узел и его дочерние узлы.</summary>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> расположен в узле, который не может быть удален как корневой узел или узел пространства имен.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>Вычисляет заданное выражение XPath и возвращает типизированный результат.</summary>
      <param name="xpath">Строка, представляющая выражение XPath, которое следует вычислить.</param>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов). Он сопоставляется с объектом <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <exception cref="T:System.ArgumentException">Возвращаемый тип выражения XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Вычисляет значение заданного выражения XPath и возвращает типизированный результат с помощью указанного объекта <see cref="T:System.Xml.IXmlNamespaceResolver" />, который разрешает префиксы пространства имен в выражении XPath.</summary>
      <param name="xpath">Строка, представляющая выражение XPath, которое следует вычислить.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространства имен в выражении XPath.</param>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов). Он сопоставляется с объектом <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <exception cref="T:System.ArgumentException">Возвращаемый тип выражения XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>Вычисляет <see cref="T:System.Xml.XPath.XPathExpression" /> и возвращает типизированный результат.</summary>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" />, которое можно вычислить.</param>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов). Он сопоставляется с объектом <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <exception cref="T:System.ArgumentException">Возвращаемый тип выражения XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>Использует предоставленный контекст для вычисления <see cref="T:System.Xml.XPath.XPathExpression" /> и возвращает типизированный результат.</summary>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" />, которое можно вычислить.</param>
      <param name="context">Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на выбранный узел, в котором должно выполняться вычисление.</param>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов). Он сопоставляется с объектом <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <exception cref="T:System.ArgumentException">Возвращаемый тип выражения XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>Возвращает значение атрибута с указанным локальным именем и универсальным кодом ресурса (URI) пространства имен.</summary>
      <param name="localName">Локальное имя атрибута. <paramref name="localName" /> учитывает регистр.</param>
      <param name="namespaceURI">URI пространства имен атрибута.</param>
      <returns>
        <see cref="T:System.String" />, содержащая значение указанного атрибута; <see cref="F:System.String.Empty" />, если совпадающий атрибут не найден, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>Возвращает значение узла пространства имен, соответствующее указанному локальному имени.</summary>
      <param name="name">Локальное имя узла пространства имен.</param>
      <returns>
        <see cref="T:System.String" />, содержащая значение узла пространства имен; <see cref="F:System.String.Empty" /> если не найден совпадающий узел пространства имен, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Возвращает пространства имен, находящиеся в области видимости для текущего узла.</summary>
      <param name="scope">Значение <see cref="T:System.Xml.XmlNamespaceScope" />, определяющее пространства имен, которые следует возвратить.</param>
      <returns>Коллекция <see cref="T:System.Collections.Generic.IDictionary`2" /> имен пространств имен, ключами которой являются префиксы.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>Получает значение, показывающее, имеются ли атрибуты у текущего узла.</summary>
      <returns>
        <see langword="true" />значение, если текущий узел имеет атрибуты; Возвращает <see langword="false" /> значение, если текущий узел не имеет атрибутов, или значение <see cref="T:System.Xml.XPath.XPathNavigator" /> , если объект не находится на узле элемента.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>Получает значение, показывающее, имеются ли дочерние узлы у текущего узла.</summary>
      <returns>Значение <see langword="true" />, если у текущего узла имеются дочерние узлы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>Возвращает или задает разметку, представляющую дочерние узлы текущего узла.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая разметку дочерних узлов текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Невозможно задать свойство <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового сестринского узла после текущего выбранного узла.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового сестринского узла после текущего выбранного узла.</returns>
      <exception cref="T:System.InvalidOperationException">Положение объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>Создает после текущего выбранного узла новый узел того же уровня, используя заданную строку XML.</summary>
      <param name="newSibling">Строка данных XML для нового узла того же уровня.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Положение объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Неправильный формат параметра строки XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>Создает новый сестринский узел после выбранного в текущий момент узла, используя содержимое XML указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XmlReader" />, расположенный в XML-данных для нового сестринского узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Положение объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">XML-содержимое параметра объекта <see cref="T:System.Xml.XmlReader" /> сформировано некорректно.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый сестринский узел после выбранного в данный момент узла, используя узлы, содержащиеся в указанном объекте <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в узле, который следует добавить как новый сестринский узел.</param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Положение объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового сестринского узла перед текущим выбранным узлом.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового сестринского перед текущим выбранным узлом.</returns>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>Создает перед текущим выбранным узлом новый узел того же уровня, используя заданную строку XML.</summary>
      <param name="newSibling">Строка данных XML для нового узла того же уровня.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Неправильный формат параметра строки XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>Создает новый сестринский узел того же уровня перед выбранным в данный момент узлом, используя XML-содержимое указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XmlReader" />, расположенный в XML-данных для нового сестринского узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">XML-содержимое параметра объекта <see cref="T:System.Xml.XmlReader" /> сформировано некорректно.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый сестринский узел перед выбранным в данный момент узлом, используя узлы, содержащиеся в указанном объекте <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в узле, который следует добавить как новый сестринский узел.</param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>Создает после текущего узла новый элемент с тем же родителем, используя заданный префикс пространства имен, локальное имя, URI пространства имен и значение.</summary>
      <param name="prefix">Префикс пространства имен нового дочернего элемента (если имеется).</param>
      <param name="localName">Локальное имя нового дочернего элемента (если имеется).</param>
      <param name="namespaceURI">URI пространства имен нового дочернего элемента (если имеется). <see cref="F:System.String.Empty" /> и <see langword="null" /> эквивалентны.</param>
      <param name="value">Значение нового дочернего элемента. Если передается значение <see cref="F:System.String.Empty" /> или <see langword="null" />, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Положение объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>Создает перед текущим узлом новый элемент того же уровня, используя заданный префикс пространства имен, локальное имя, URI пространства имен и значение.</summary>
      <param name="prefix">Префикс пространства имен нового дочернего элемента (если имеется).</param>
      <param name="localName">Локальное имя нового дочернего элемента (если имеется).</param>
      <param name="namespaceURI">URI пространства имен нового дочернего элемента (если имеется). <see cref="F:System.String.Empty" /> и <see langword="null" /> эквивалентны.</param>
      <param name="value">Значение нового дочернего элемента. Если передается значение <see cref="F:System.String.Empty" /> или <see langword="null" />, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не допускает вставку нового сестринского узла перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>Определяет, является ли заданный <see cref="T:System.Xml.XPath.XPathNavigator" /> наследником текущего <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="nav">Структура <see cref="T:System.Xml.XPath.XPathNavigator" /> для сравнения с данной структурой <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Xml.XPath.XPathNavigator" /> является наследником текущего объекта <see cref="T:System.Xml.XPath.XPathNavigator" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>Когда переопределено в производном классе, возвращает значение, указывающее, является ли текущий узел пустым элементом без тега конечного элемента.</summary>
      <returns>Значение <see langword="true" />, если текущий узел является пустым элементом; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>Возвращает значение, указывающее, представлен ли узел XPath текущим узлом.</summary>
      <returns>Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>При переопределении в производном классе определяет, находится ли текущий <see cref="T:System.Xml.XPath.XPathNavigator" /> в той же позиции, что и указанный <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="other">Структура <see cref="T:System.Xml.XPath.XPathNavigator" /> для сравнения с данной структурой <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>Значение <see langword="true" />, если расположение двух объектов <see cref="T:System.Xml.XPath.XPathNavigator" /> совпадает, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>При переопределении в производном классе возвращает <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> текущего узла без какого-либо префикса пространства имен.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая локальное имя текущего узла, или <see cref="F:System.String.Empty" />, если у текущего узла нет имени (например, у текстового узла или узла комментария).</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>Возвращает URI пространства имен для указанного префикса.</summary>
      <param name="prefix">Префикс, для которого требуется разрешить URI пространства имен. Для сопоставления с пространством имен по умолчанию следует передать значение <see cref="F:System.String.Empty" />.</param>
      <returns>
        <see cref="T:System.String" />, содержащая URI пространства имен, назначенный указанному префиксу пространства; <see langword="null" />, если указанному префиксу пространства имен не назначен URI пространства имен. Возвращаемая <see cref="T:System.String" /> атомизирована.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>Возвращает префикс, объявленный для указанного URI пространства имен.</summary>
      <param name="namespaceURI">URI пространства имен, который необходимо разрешить для получения префикса.</param>
      <returns>Строка <see cref="T:System.String" />, содержащая префикс пространства имен, назначенный указанному URI пространства имен; в противном случае — значение <see cref="F:System.String.Empty" />, если указанному URI пространства имен не назначен префикс. Возвращаемая <see cref="T:System.String" /> атомизирована.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>Определяет, соответствует ли текущий узел указанному выражению XPath.</summary>
      <param name="xpath">Выражение XPath.</param>
      <returns>Значение <see langword="true" />, если текущий узел соответствует указанному выражению XPath; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Не удается вычислить выражение XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>Определяет, соответствует ли текущий узел указанному выражению <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="expr">Объект <see cref="T:System.Xml.XPath.XPathExpression" />, содержащий скомпилированное выражение XPath.</param>
      <returns>Значение <see langword="true" />, если текущий узел соответствует <see cref="T:System.Xml.XPath.XPathExpression" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Не удается вычислить выражение XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> в то же положение, в котором находится указанный <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="other">
        <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на узле, к которому необходимо переместиться.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к положению указанного <see cref="T:System.Xml.XPath.XPathNavigator" />, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к атрибуту с совпадающим локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">URI пространства имен атрибута; <see langword="null" /> обозначает пустое пространство имен.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к атрибуту, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к дочернему узлу с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя дочернего узла, к которому следует перейти.</param>
      <param name="namespaceURI">URI пространства имен дочернего узла, к которому следует перейти.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к дочернему узлу, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на дочерний узел указанного <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> дочернего узла, к которому следует перейти.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к дочернему узлу, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>Перемещает объект <see cref="T:System.Xml.XPath.XPathNavigator" /> в первый узел одного уровня с текущим узлом.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому узлу-брату текущего узла; <see langword="false" />, если первый узел-брат отсутствует или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута. Если <see cref="T:System.Xml.XPath.XPathNavigator" /> уже расположен на первом узле-брате, то <see cref="T:System.Xml.XPath.XPathNavigator" /> возвращает <see langword="true" />, а его положение не изменяется.  
Если <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> возвращает <see langword="false" />, так как первый узел-брат отсутствует, или так как <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент расположен на атрибуте, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому атрибуту текущего узла.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому атрибуту текущего узла; иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому дочернему узлу текущего узла.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому дочернему узлу текущего узла, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому узлу пространства имен текущего узла.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому узлу пространства имен, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому узлу пространства имен, соответствующему указанному <see cref="T:System.Xml.XPath.XPathNamespaceScope" />.</summary>
      <param name="namespaceScope">Значение <see cref="T:System.Xml.XPath.XPathNamespaceScope" />, описывающее область пространства имен.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому узлу пространства имен, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к элементу с указанным локальным именем и URI пространства имен в порядке документа.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к элементу с указанным локальным именем и URI пространства имен, до достижения заданной границы в порядке документа.</summary>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="end">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, размещенный на границе элемента, которая не пересекается текущим <see cref="T:System.Xml.XPath.XPathNavigator" /> при поиске следующего элемента.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему элементу типа <see cref="T:System.Xml.XPath.XPathNodeType" />, указанному в порядке документа.</summary>
      <param name="type">Тип <see cref="T:System.Xml.XPath.XPathNodeType" /> элемента. Тип <see cref="T:System.Xml.XPath.XPathNodeType" /> не может быть <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> или <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему элементу указанного <see cref="T:System.Xml.XPath.XPathNodeType" /> до указанной границы в порядке документа.</summary>
      <param name="type">Тип <see cref="T:System.Xml.XPath.XPathNodeType" /> элемента. Тип <see cref="T:System.Xml.XPath.XPathNodeType" /> не может быть <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> или <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, размещенный на границе элемента, которая не пересекается текущим <see cref="T:System.Xml.XPath.XPathNavigator" /> при поиске следующего элемента.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>При переопределении в производном классе переходит к узлу, имеющему атрибут типа <c>ID</c>, значение которого соответствует указанному <see cref="T:System.String" />.</summary>
      <param name="id">
        <see cref="T:System.String" />, представляющий значение <c>ID</c> узла, к которому следует перейти.</param>
      <returns>
        <see langword="true" />, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> перемещается успешно, иначе <see langword="false" />. Если возвращается значение <see langword="false" />, то положение навигатора остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на узел пространства имен с указанным префиксом пространства имен.</summary>
      <param name="name">Префикс пространства имен для узла пространства имен.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к указанному пространству имен; <see langword="false" />, если соответствующее пространство имен не найдено, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему сестринскому узлу текущего узла.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему сестринскому узлу; в противном случае — значение <see langword="false" />, если больше нет сестринских узлов, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится в узле атрибута. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему узлу-брату с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя следующего узла того же уровня, к которому следует перейти.</param>
      <param name="namespaceURI">URI пространства имен следующего узла того же уровня, к которому следует перейти.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу-брату текущего узла; <see langword="false" />, если больше нет узлов-братьев, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему узлу-брату текущего узла, соответствующему заданному <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> узла-брата, к которому следует перейти.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему сестринскому узлу; в противном случае — значение <see langword="false" />, если больше нет сестринских узлов, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится в узле атрибута. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на следующий атрибут.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается в следующий атрибут, или значение <see langword="false" />, если атрибутов больше нет. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на следующий узел пространства имен.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу пространства имен, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему пространству имен, соответствующему указанному <see cref="T:System.Xml.XPath.XPathNamespaceScope" />.</summary>
      <param name="namespaceScope">Значение <see cref="T:System.Xml.XPath.XPathNamespaceScope" />, описывающее область пространства имен.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу пространства имен, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к родительскому узлу текущего узла.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к родительскому узлу текущего узла, иначе — <see langword="false" />. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к предыдущему одноуровневому узлу текущего узла.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к предыдущему одноуровневому узлу текущего узла; <see langword="false" />, если больше нет предыдущих одноуровневых узлов или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута. Если возвращается значение <see langword="false" />, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к корневому узлу, к которому относится текущий узел.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>Когда переопределено в производном классе, возвращает полное имя текущего узла.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая полное имя <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> текущего узла, или <see cref="F:System.String.Empty" />, если у текущего узла нет имени (например, у текстового узла или узла комментария).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>Когда переопределено в производном классе, возвращает URI пространства имен текущего узла.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая URI пространства имен текущего узла, или <see cref="F:System.String.Empty" />, если у текущего узла нет URI пространства имен.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>Переопределяемый в производных классах, возвращает <see cref="T:System.Xml.XmlNameTable" />, принадлежащую <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlNameTable" />, обеспечивающий доступ к атомизированной версии <see cref="T:System.String" /> в документе XML.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>Получает <see cref="T:System.Collections.IEqualityComparer" />, используемый для определения равенства объектов <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEqualityComparer" />, используемый для определения равенства объектов <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>При переопределении в производном классе получает <see cref="T:System.Xml.XPath.XPathNodeType" /> текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XPath.XPathNodeType" />, представляющих текущий узел.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>Возвращает или задает разметку, представляющую открывающие и закрывающие теги текущего узла и его дочерних узлов.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая разметку, которая представляет открывающие и закрывающие теги текущего узла и его дочерних узлов.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>Когда переопределено в производном классе, возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового дочернего узла в начале списка дочерних узлов текущего узла.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового дочернего узла в начале списка дочерних узлов текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором расположен объект <see cref="T:System.Xml.XPath.XPathNavigator" />, не разрешает добавить перед собой новый дочерний узел.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>Создает новый дочерний узел в начале списка дочерних узлов текущего узла, используя заданную строку XML.</summary>
      <param name="newChild">Строка данных XML для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором расположен объект <see cref="T:System.Xml.XPath.XPathNavigator" />, не разрешает добавить перед собой новый дочерний узел.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Неправильный формат параметра строки XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>Создает новый дочерний узел в начале списка дочерних узлов текущего узла, используя XML-содержимое указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XmlReader" />, расположенный в XML-данных для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором расположен объект <see cref="T:System.Xml.XPath.XPathNavigator" />, не разрешает добавить перед собой новый дочерний узел.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">XML-содержимое параметра объекта <see cref="T:System.Xml.XmlReader" /> сформировано некорректно.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый дочерний узел в начале списка дочерних узлов текущего узла, используя узлы из указанного объекта <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в узле, который следует добавить как новый дочерний узел.</param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором расположен объект <see cref="T:System.Xml.XPath.XPathNavigator" />, не разрешает добавить перед собой новый дочерний узел.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>Создает новый элемент дочернего узла в начале списка дочерних узлов текущего узла, используя заданный префикс пространства имен, локальное имя, URI пространства имен значение.</summary>
      <param name="prefix">Префикс пространства имен нового дочернего элемента (если имеется).</param>
      <param name="localName">Локальное имя нового дочернего элемента (если имеется).</param>
      <param name="namespaceURI">URI пространства имен нового дочернего элемента (если имеется). <see cref="F:System.String.Empty" /> и <see langword="null" /> эквивалентны.</param>
      <param name="value">Значение нового дочернего элемента. Если передается значение <see cref="F:System.String.Empty" /> или <see langword="null" />, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Текущий узел, в котором расположен объект <see cref="T:System.Xml.XPath.XPathNavigator" />, не разрешает добавить перед собой новый дочерний узел.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlReader" />, содержащий текущий узел и его дочерние узлы.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий текущий узел и его дочерние узлы.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не находится в узле элемента или в корневом узле.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>Заменяет узлы того же уровня в диапазоне от текущего до заданного узла.</summary>
      <param name="lastSiblingToReplace">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в последнем сестринском узле в заменяемом диапазоне.</param>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для указания диапазона замены.</returns>
      <exception cref="T:System.ArgumentNullException">Заданный объект <see cref="T:System.Xml.XPath.XPathNavigator" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.InvalidOperationException">Указанный последний заменяемый узел не является допустимым сестринским узлом текущего узла.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>Заменяет текущий узел содержимым указанной строки.</summary>
      <param name="newNode">Строка данных XML для нового узла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не находится в элементе, тексте, инструкции по обработке или узле комментария.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Неправильный формат параметра строки XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>Заменяет текущий узел содержимым указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newNode">Объект <see cref="T:System.Xml.XmlReader" />, расположенный в XML-данных для нового узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> Находится не на элемент, текст, инструкция по обработке или узел комментария.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">XML-содержимое параметра объекта <see cref="T:System.Xml.XmlReader" /> сформировано некорректно.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>Заменяет текущий узел содержимым указанного объекта <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newNode">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный в новом узле.</param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> имеет параметр <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> Находится не на элемент, текст, инструкция по обработке или узел комментария.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">XML-содержимое параметра объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> сформировано некорректно.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary>Возвращает сведения схемы, которые были назначены текущему узлу в результате проверки схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий сведения о схеме для текущего узла.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>Выбирает набор узлов с помощью заданного выражения XPath.</summary>
      <param name="xpath">Строка <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на выбранный набор узлов.</returns>
      <exception cref="T:System.ArgumentException">Выражение XPath содержит ошибку, или его возвращаемый тип не является набором узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Выбирает набор узлов, используя указанное выражение XPath совместно с объектом <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространств имен.</summary>
      <param name="xpath">Строка <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на набор выбранных узлов.</returns>
      <exception cref="T:System.ArgumentException">Выражение XPath содержит ошибку, или его возвращаемый тип не является набором узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>Выбирает набор узлов с помощью заданного выражения <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="expr">Объект <see cref="T:System.Xml.XPath.XPathExpression" />, содержащий скомпилированный запрос XPath.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на набор выбранных узлов.</returns>
      <exception cref="T:System.ArgumentException">Выражение XPath содержит ошибку, или его возвращаемый тип не является набором узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>Выбирает все узлы-предки текущего узла с заданным локальным именем и URI пространства имен.</summary>
      <param name="name">Локальное имя узлов-предков.</param>
      <param name="namespaceURI">URI пространства имен узлов-предков.</param>
      <param name="matchSelf">Значение <see langword="true" /> для включения узла контекста в выбираемые узлы; в противном случае значение <see langword="false" />.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы. Возвращаемые узлы располагаются в порядке, обратном их следованию в документе.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <see langword="null" /> не может передаваться в качестве параметра.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Выбирает все узлы-предки текущего узла с совпадающим <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> узлов-предков.</param>
      <param name="matchSelf">Значение <see langword="true" /> для включения узла контекста в выбираемые узлы; в противном случае значение <see langword="false" />.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы. Возвращаемые узлы располагаются в порядке, обратном их следованию в документе.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>Выбирает все дочерние узлы текущего узла с заданным локальным именем и URI пространства имен.</summary>
      <param name="name">Локальное имя дочерних узлов.</param>
      <param name="namespaceURI">URI пространства имен дочерних узлов.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <see langword="null" /> не может передаваться в качестве параметра.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>Выбирает все дочерние узлы текущего узла с совпадающим <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> дочерних узлов.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>Выбирает все узлы-потомки текущего узла с заданным локальным именем и URI пространства имен.</summary>
      <param name="name">Локальное имя узлов-потомков.</param>
      <param name="namespaceURI">URI пространства имен узлов-потомков.</param>
      <param name="matchSelf">
        <see langword="true" /> для включения в выбираемые узлы узла контекста, иначе <see langword="false" />.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <see langword="null" /> не может передаваться в качестве параметра.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Выбирает все узлы-потомки текущего узла с совпадающим <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> узлов-потомков.</param>
      <param name="matchSelf">
        <see langword="true" /> для включения в выбираемые узлы узла контекста, иначе <see langword="false" />.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>Выбирает один узел в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанный запрос XPath.</summary>
      <param name="xpath">Строка <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий первый узел, соответствующий указанному запросу XPath, или значение <see langword="null" />, если результаты запроса отсутствуют.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка в запросе XPath, или тип возвращаемого значения выражения XPath не является узлом.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимый запрос XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Выбирает один узел в объекте <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанный запрос XPath совместно с указанным объектом <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространства имен.</summary>
      <param name="xpath">Строка <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространства имен в запросе XPath.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий первый узел, соответствующий указанному запросу XPath, или значение <see langword="null" />, если результаты запроса отсутствуют.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка в запросе XPath, или тип возвращаемого значения выражения XPath не является узлом.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимый запрос XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>Выбирает один узел в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанный объект <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="expression">Объект <see cref="T:System.Xml.XPath.XPathExpression" />, содержащий скомпилированный запрос XPath.</param>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий первый узел, соответствующий указанному запросу XPath, или значение <see langword="null" />, если результаты запроса отсутствуют.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка в запросе XPath, или тип возвращаемого значения выражения XPath не является узлом.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимый запрос XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary>Устанавливает типизированное значение текущего узла.</summary>
      <param name="typedValue">Новое типизированное значение узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает тип указанного объекта.</exception>
      <exception cref="T:System.ArgumentNullException">Указанное значение не может быть <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не находится в узле элемента или атрибута.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>Устанавливает значение текущего узла.</summary>
      <param name="value">Новое значение узла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр value имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> расположен в корневом узле, узле пространства имен, или указанное значение является недопустимым.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary>Создает новую копию объекта <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Новая копия объекта <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>Возвращает текстовое значение текущего узла.</summary>
      <returns>
        <see langword="string" />, содержащая текстовое значение текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary>Возвращает текущий узел в виде упакованного объекта наиболее подходящего типа .NET Framework.</summary>
      <returns>Текущий узел в виде упакованного объекта наиболее подходящего типа .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>Используется реализациями <see cref="T:System.Xml.XPath.XPathNavigator" />, предоставляющими "виртуализированное" представление XML для хранилища, для обеспечения доступа к нижележащим объектам.</summary>
      <returns>Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Получает значение текущего узла, приведенное к заданному <see cref="T:System.Type" />, используя заданный объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространства имен.</summary>
      <param name="returnType">
        <see cref="T:System.Type" />, в котором следует возвратить значение текущего узла.</param>
      <param name="nsResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <returns>Значение текущего узла в запрошенном <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.FormatException">Значение текущего узла имеет неверный формат для целевого типа.</exception>
      <exception cref="T:System.InvalidCastException">Недопустимая попытка приведения.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary>Получает значение текущего узла в представлении <see cref="T:System.Boolean" />.</summary>
      <returns>Значение текущего узла в представлении <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Boolean" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary>Получает значение текущего узла в представлении <see cref="T:System.DateTime" />.</summary>
      <returns>Значение текущего узла в представлении <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.DateTime" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary>Получает значение текущего узла в представлении <see cref="T:System.Double" />.</summary>
      <returns>Значение текущего узла в представлении <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Double" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary>Получает значение текущего узла в представлении <see cref="T:System.Int32" />.</summary>
      <returns>Значение текущего узла в представлении <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int32" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary>Получает значение текущего узла в представлении <see cref="T:System.Int64" />.</summary>
      <returns>Значение текущего узла в представлении <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int64" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary>Получает <see cref="T:System.Type" /> платформы .NET Framework текущего узла.</summary>
      <returns>
        <see cref="T:System.Type" /> платформы .NET Framework текущего узла. Значение по умолчанию — <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>Выполняет потоковую передачу текущего узла и его дочерних узлов в указанный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который выполняется потоковая передача.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>Получает область <c>xml:lang</c> для текущего узла.</summary>
      <returns>Значение <see cref="T:System.String" /> типа, содержащее значение области <c>XML: lang</c> или <see cref="F:System.String.Empty" /> значение, если текущий узел не имеет значения области <c>XML: lang</c> для возврата.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary>Получает сведения <see cref="T:System.Xml.Schema.XmlSchemaType" /> для текущего узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />; значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>Обеспечивает итератор над выбранным набором узлов.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>При переопределении в производном классе возвращает клон объекта <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
      <returns>Новый клон <see cref="T:System.Xml.XPath.XPathNodeIterator" /> объекта <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>Получает индекс последнего узла в выбранном наборе узлов.</summary>
      <returns>Индекс последнего узла в выбранном наборе узлов или значение 0 при отсутствии выбранных узлов.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>При переопределении в производном классе получает объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для данного <see cref="T:System.Xml.XPath.XPathNodeIterator" />, который размещается в текущем контекстном узле.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> размещается в контекстном узле, из которого был выбран набор узлов. Необходимо вызвать метод <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> для перемещения <see cref="T:System.Xml.XPath.XPathNodeIterator" /> в первый узел в выбранном наборе.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>При переопределении в производном классе получает индекс текущей позиции в выбранном наборе узлов.</summary>
      <returns>Индекс текущей позиции.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для итерации по выбранному набору узлов.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для итерации по выбранному набору узлов.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>При переопределении в производном классе объект <see cref="T:System.Xml.XPath.XPathNavigator" />, возвращенный свойством <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" />, перемещается в следующий узел выбранного набора узлов.</summary>
      <returns>
        <see langword="true" />, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> перемещен в следующий узел; <see langword="false" />, если отсутствуют другие выбранные узлы.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>Определяет типы узлов XPath, которые могут быть возвращены из класса <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>Любые из типов узлов <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>Атрибут, например <c>id='123'</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>Комментарий, например <c>&lt;!-- my comment --&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>Элемент, например <c>&lt;element&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>Пространство имен, например <c>xmlns="namespace"</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>Инструкция по обработке, например <c>&lt;?pi test?&gt;</c>. При этом не включаются объявления XML, невидимые для класса <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>Корневой узел XML-документа или дерева узлов.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>Узел с символами пробелов и <c>xml:space</c> с установленным значением <c>preserve</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>Текстовое содержимое узла. Эквивалентно тексту объектной модели документов (DOM) и типам узлов CDATA. Содержит, по крайней мере, один символ.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>узел, содержащий только символы пробела без значащих пробелов. Символы пробелов — <c>#x20</c>, <c>#x9</c>, <c>#xD</c> или <c>#xA</c>.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>Указывает тип возвращаемого значения выражения XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>Любые из типов узлов XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>Значение типа <see cref="T:System.Boolean" />, равное <see langword="true" /> или <see langword="false" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>Выражение не вычисляется как правильный тип XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>Фрагмент дерева.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>Коллекция узлов.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>Числовое значение.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>Значение <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>Представляет интерфейс доступа к заданной функции, определенной в таблице стилей, на этапе выполнения.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>Возвращает типы XPath для списка аргументов функции. Эти данные могут использоваться для определения сигнатуры функции, которая позволяет различать перегруженные функции.</summary>
      <returns>Массив объектов типа <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий типы аргументов функции.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>Предоставляет метод для вызова функции с заданными аргументами в заданном контексте.</summary>
      <param name="xsltContext">Контекст XSLT для вызова функции.</param>
      <param name="args">Аргументы вызова функции. Каждый аргумент является элементом массива.</param>
      <param name="docContext">Контекстный узел для вызова функции.</param>
      <returns>Объект <see cref="T:System.Object" />, предоставляющий возвращаемое значение функции.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>Возвращает максимальное количество аргументов функции. Это позволяет пользователю различать перегруженные функции.</summary>
      <returns>Максимальное количество аргументов функции.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>Возвращает минимальное количество аргументов функции. Это позволяет пользователю различать перегруженные функции.</summary>
      <returns>Минимальное количество аргументов функции.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>Возвращает объект типа <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий тип XPath, возвращаемый данной функцией.</summary>
      <returns>Объект типа <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий тип XPath, возвращаемый данной функцией.</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>Предоставляет интерфейс доступа к заданной переменной, определенной в таблице стилей, на этапе выполнения.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>Вычисляет значение переменной во время исполнения программы и возвращает объект, предоставляющий значение переменной.</summary>
      <param name="xsltContext">Объект типа <see cref="T:System.Xml.Xsl.XsltContext" />, представляющий контекст переменной на этапе выполнения.</param>
      <returns>Объект <see cref="T:System.Object" />, предоставляющий значение переменной. Возможные типы возвращаемых значений включают числовой, строковый, логический, фрагмент документа или набор узлов.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>Возвращает значение, определяющее, является ли переменная локальной.</summary>
      <returns>
        <see langword="true" />, если переменная является локальной в текущем контексте; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>Возвращает значение, определяющее, является ли переменная параметром XSLT. Это может быть параметр таблицы стилей или шаблона.</summary>
      <returns>
        <see langword="true" />, если переменная является параметром XSLT; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>Возвращает объект <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий тип переменной XPath.</summary>
      <returns>Объект типа <see cref="T:System.Xml.XPath.XPathResultType" />, предоставляющий тип переменной XPath.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> с указанными параметрами отладки.</summary>
      <param name="enableDebug">
        <see langword="true" />, если следует создавать сведения об отладке; в противном случае <see langword="false" />. С помощью значения <see langword="true" /> можно включить таблицу стилей отладки в отладчике Microsoft Visual Studio.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary>Загружает метод из таблицы стилей, скомпилированной с помощью средства <see langword="XSLTC.exe" />.</summary>
      <param name="executeMethod">Объект <see cref="T:System.Reflection.MethodInfo" />, представляющий созданный компилятором метод <c>execute</c> скомпилированной таблицы стилей.</param>
      <param name="queryData">Массив байтов сериализованных структур данных в поле <c>staticData</c> скомпилированной таблицы стилей, создаваемый методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
      <param name="earlyBoundTypes">Массив типов, хранящихся в созданном компилятором поле <c>ebTypes</c> в скомпилированной таблице стилей.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary>Загружает и компилирует таблицу стилей, расположенную по указанному URI.</summary>
      <param name="stylesheetUri">URI таблицы стилей.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheetUri" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти таблицу стилей.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="stylesheetUri" /> включает имя файла или каталог, который невозможно найти.</exception>
      <exception cref="T:System.Net.WebException">Значение <paramref name="stylesheetUri" /> не удается разрешить.  
-или- 
При обработке этого запроса возникла ошибка.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> не является допустимым URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке таблицы стилей.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Загружает и компилирует таблицу стилей XSLT. указанную в URI. Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT <c>import</c> или <c>include</c>, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
      <param name="stylesheetUri">URI таблицы стилей.</param>
      <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей. Если значение равно <see langword="null" />, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения URI таблицы стилей и любых таблиц стилей, на которые имеются ссылки в элементах XSLT <c>import</c> и <c>include</c>.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="stylesheetUri" /> или <paramref name="stylesheetResolver" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти таблицу стилей.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="stylesheetUri" /> включает имя файла или каталог, который невозможно найти.</exception>
      <exception cref="T:System.Net.WebException">Значение <paramref name="stylesheetUri" /> не удается разрешить.  

или - 
При обработке этого запроса возникла ошибка.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> не является допустимым URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке таблицы стилей.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary>Загружает скомпилированную таблицу стилей, которая была создана с помощью XSLT-компилятора (xsltc.exe).</summary>
      <param name="compiledStylesheet">Имя класса, содержащего скомпилированную таблицу стилей.  
 Как правило, это имя таблицы стилей. Если не указано обратное, средство xsltc.exe использует имя таблицы стилей для имен класса и сборки.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary>Компилирует таблицу стилей, содержащуюся в объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Компилирует таблицу стилей XSLT, содержащуюся в объекте <see cref="T:System.Xml.XmlReader" />. Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT <c>import</c> или <c>include</c>, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей.</param>
      <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей. Если значение равно <see langword="null" />, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для разрешения любых таблиц стилей, на которые имеются ссылки в элементах XSLT <c>import</c> и <c>include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Компилирует таблицу стилей, содержащуюся в таблице <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Компилирует таблицу стилей XSLT, содержащуюся в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />. Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT <c>import</c> или <c>include</c>, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей.</param>
      <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей. Если значение равно <see langword="null" />, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для разрешения любых таблиц стилей, на которые имеются ссылки в элементах XSLT <c>import</c> и <c>include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriterSettings" />, который содержит выходные данные, полученные из элемента <c>xsl:output</c> таблицы стилей.</summary>
      <returns>Объект только <see cref="T:System.Xml.XmlWriterSettings" /> для чтения, содержащий выходные данные, полученные из элемента <c>XSL: output</c> таблицы стилей. Это значение может быть равно <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в файл.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="resultsFile">URI выходного файла.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="resultsFile" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти входной документ документа.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> или <paramref name="resultsFile" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="inputUri" /> или <paramref name="resultsFile" />.  

или - 
Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="inputUri" /> или <paramref name="resultsFile" /> не является допустимым именем URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  

или - 
При обработке этого запроса возникла ошибка.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> не является допустимым URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в поток. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  
-или- 
Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> не является допустимым URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  

или - 
Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> не является допустимым URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputtUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  
-или- 
При обработке этого запроса возникла ошибка.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> не является допустимым URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в поток. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы времени выполнения, а XmlResolver разрешает функцию XSLT <c>document()</c>.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="documentResolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в поток. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> содержит дополнительные аргументы для работы во время выполнения, а <see cref="T:System.Xml.XmlResolver" /> разрешает функцию XSLT <see langword="document()" />.</summary>
      <param name="input">Документ для преобразования, заданный в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
      <param name="arguments">Список аргументов в виде <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
Если таблица стилей содержит элемент <see langword="xsl:output" />, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="documentResolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <see langword="document()" />. Если значение равно <see langword="null" />, функция <see langword="document()" /> не разрешается.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>Содержит переменное число аргументов, являющихся либо параметрами XSLT, либо объектами расширения.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>Добавляет новый объект в <see cref="T:System.Xml.Xsl.XsltArgumentList" /> и связывает его с URI пространства имен.</summary>
      <param name="namespaceUri">URI пространства имен для связи с объектом. Чтобы использовать пространство имен по умолчанию, укажите пустую строку.</param>
      <param name="extension">Объект, который требуется добавить в список.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> имеет значение <see langword="null" /> или http://www.w3.org/1999/XSL/Transform 
Параметр <paramref name="namespaceUri" /> уже имеет связанный с ним объект.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет достаточных полномочий для вызова этого метода.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>Добавляет параметр в <see cref="T:System.Xml.Xsl.XsltArgumentList" /> и связывает его с проверенным именем пространства имен.</summary>
      <param name="name">Имя для связи с параметром.</param>
      <param name="namespaceUri">URI пространства имен для связи с параметром. Чтобы использовать пространство имен по умолчанию, укажите пустую строку.</param>
      <param name="parameter">Значение параметра или объект, который требуется добавить в список.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> имеет значение <see langword="null" /> или http://www.w3.org/1999/XSL/Transform.  
<paramref name="name" /> не является допустимым именем в соответствии со спецификацией W3C XML.  
<paramref name="namespaceUri" /> уже имеет ассоциированный с ним параметр.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>Удаляет все параметры и объекты расширения из <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>Возвращает объект, связанный с заданным пространством имен.</summary>
      <param name="namespaceUri">URI пространства имен объекта.</param>
      <returns>Объект URI пространства имен или <see langword="null" />, если он не был найден.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>Возвращает параметр, связанный с проверенным именем пространства имен.</summary>
      <param name="name">Имя параметра. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> не проверяет, является ли передаваемое имя допустимым локальным именем; тем не менее это имя не может принимать значение <see langword="null" />.</param>
      <param name="namespaceUri">URI пространства имен, связанный с параметром.</param>
      <returns>Объект параметра или <see langword="null" />, если он не был найден.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>Удаляет объект с URI пространства имен из <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="namespaceUri">URI пространства имен, связанный с удаляемым объектом.</param>
      <returns>Объект с URI пространства имен или <see langword="null" />, если он не был найден.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>Удаляет параметр из <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="name">Имя удаляемого параметра. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> не проверяет, является ли передаваемое имя допустимым локальным именем; тем не менее это имя не может принимать значение <see langword="null" />.</param>
      <param name="namespaceUri">URI пространства имен удаляемого параметра.</param>
      <returns>Объект параметра или <see langword="null" />, если он не был найден.</returns>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary>Происходит, если сообщение указывается в таблице стилей с помощью элемента <c>xsl:message</c>.</summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>Исключение, которое вызывается методом Load, если в таблице стилей XSLT обнаружена ошибка.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltCompileException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see langword="XsltCompileException" />.</summary>
      <param name="inner">Объект <see cref="T:System.Exception" />, вызвавший исключение <see langword="XsltCompileException" />.</param>
      <param name="sourceUri">Путь к таблице стилей.</param>
      <param name="lineNumber">Номер строки в таблице стилей, указывающий место возникновения ошибки.</param>
      <param name="linePosition">Позиция в строке, указывающая место возникновения ошибки в таблице стилей.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="XsltCompileException" />, используя сведения в объектах <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see langword="SerializationInfo" />, содержащий все свойства класса <see langword="XsltCompileException" />.</param>
      <param name="context">Объект <see langword="StreamingContext" />, содержащий сведения о контексте.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltCompileException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Xml.Xsl.XsltCompileException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или значение <see langword="null" />, если внутреннее исключение не задано.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Переносит все свойства <see langword="XsltCompileException" /> в класс <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для данного объекта <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see langword="SerializationInfo" />.</param>
      <param name="context">Объект <see langword="StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>Инкапсулирует текущий контекст периода выполнения процессора XSLT, позволяя XPath разрешать функции, параметры и пространства имен в выражениях XPath.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltContext" /> указанным значением <see cref="T:System.Xml.NameTable" />.</summary>
      <param name="table">Используемый <see cref="T:System.Xml.NameTable" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>При переопределении в производном классе сравнивает базовые URI двух документов, основываясь на порядке загрузки документов процессором XSLT (который является объектом класса <see cref="T:System.Xml.Xsl.XslTransform" />).</summary>
      <param name="baseUri">Базовый URI первого документа.</param>
      <param name="nextbaseUri">Базовый URI второго документа.</param>
      <returns>Целое число, описывающее относительный порядок двух основных кодов URI: –1, если <paramref name="baseUri" /> предшествует <paramref name="nextbaseUri" />; 0, если два основных кода URI идентичны; 1, если <paramref name="baseUri" /> следует за <paramref name="nextbaseUri" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>При переопределении в производном классе вычисляет, будут ли узлы пустых пространств сохранены или срезаны в данном контексте.</summary>
      <param name="node">узел пустого пространства, который должен быть сохранен или отброшен в текущем контексте.</param>
      <returns>
        <see langword="true" />, если пустое пространство будет сохранено, или <see langword="false" />, если пустое пространство будет усечено.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>При переопределении в производном классе разрешает ссылку на функцию и возвращает объект <see cref="T:System.Xml.Xsl.IXsltContextFunction" />, представляющий эту функцию. Объект <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> используется во время выполнения для получения значения функции.</summary>
      <param name="prefix">Префикс функции для использования в выражениях XPath.</param>
      <param name="name">Имя функции.</param>
      <param name="ArgTypes">Массив типов аргументов разрешаемой функции. Это позволяет выбрать нужный метод из нескольких, имеющих одно и то же имя (например, перегруженных методов).</param>
      <returns>Объект <see cref="T:System.Xml.Xsl.IXsltContextFunction" />, представляющий функцию.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>При переопределении в производном классе разрешает ссылку на переменную и возвращает объект <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, представляющий эту переменную.</summary>
      <param name="prefix">Префикс переменной для использования в выражениях XPath.</param>
      <param name="name">Имя переменной.</param>
      <returns>Объект <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, представляющий переменную во время выполнения программы.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>При переопределении в производном классе возвращает значение, показывающее, следует ли включать узлы пустых пространств в выходной поток данных.</summary>
      <returns>Значение <see langword="true" />, если узлы пустых пространств в исходном документе включаются в выходной поток данных; значение <see langword="false" />, если обработка узлов пустых пространств в исходном документе запрещена. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>Исключение, создаваемое, если во время обработки преобразования XSLT произошла ошибка.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="XsltException" />, используя сведения в объектах <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see langword="SerializationInfo" />, содержащий все свойства класса <see langword="XsltException" />.</param>
      <param name="context">Объект <see langword="StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see langword="XsltException" />.</summary>
      <param name="message">Описание условия ошибки.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, выбросившее <see langword="XsltException" />, если таковое имеется. Это значение может быть равно <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Переносит все свойства <see langword="XsltException" /> в класс <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для данного объекта <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see langword="SerializationInfo" />.</param>
      <param name="context">Объект <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>Возвращает номер строки в таблице стилей, указывающий место возникновения ошибки.</summary>
      <returns>Номер строки в таблице стилей, указывающий место возникновения ошибки.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>Возвращает позицию в строке, указывающую место возникновения ошибки в таблице стилей.</summary>
      <returns>Позиция в строке, указывающая место возникновения ошибки в таблице стилей.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>Возвращает отформатированное сообщение об ошибке, описывающее текущее исключение.</summary>
      <returns>Отформатированное сообщение об ошибке, описывающее текущее исключение.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>Возвращает путь к таблице стилей.</summary>
      <returns>Путь к таблице стилей.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary>Возвращает содержимое элемента <c>xsl:message</c>.</summary>
      <returns>Содержимое элемента <c>XSL: Message</c> .</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Класс <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
      <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
      <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки таблицы стилей и всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>.  
Если он равен <see langword="null" />, то для открытия таблицы стилей используется объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию без указания учетных данных пользователя. Объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию не используется для разрешения внешних ресурсов в таблице стилей, поэтому элементы <c>xsl:import</c> и <c>xsl:include</c> не разрешаются.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
      <param name="inputfile">URL-адрес исходного документа для преобразования.</param>
      <param name="outputfile">URL-адрес выходного файла.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
      <param name="inputfile">URL-адрес исходного документа для преобразования.</param>
      <param name="outputfile">URL-адрес выходного файла.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Поток, в который требуется направить вывод.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Поток, в который требуется направить вывод.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
      <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>Устанавливает значение свойства <see cref="T:System.Xml.XmlResolver" />, используемого для обработки внешних ресурсов при вызове метода<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlResolver" /> для использования во время преобразования. Если задано <see langword="null" />значение, функция XSLT <c>Document ()</c> не разрешается.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary>Указывает функциональные возможности XSLT, которые будут поддерживаться во время выполнения таблицы стилей XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltSettings" /> с параметрами по умолчанию.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltSettings" /> с указанными параметрами.</summary>
      <param name="enableDocumentFunction">Значение <see langword="true" /> для включения поддержки функции XSLT <c>document()</c>; в противном случае значение <see langword="false" />.</param>
      <param name="enableScript">Значение <see langword="true" /> для включения поддержки встроенных блоков скриптов; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary>Возвращает объект <see cref="T:System.Xml.Xsl.XsltSettings" /> с параметрами по умолчанию. Поддержка функции XSLT <c>document()</c> и встроенных блоков скриптов отключена.</summary>
      <returns>Объект <see cref="T:System.Xml.Xsl.XsltSettings" /> со свойствами <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> и <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" />, равными <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary>Возвращает или задает значение, указывающее, следует ли включить поддержку функции XSLT <c>document()</c>.</summary>
      <returns>
        <see langword="true" />для поддержки функции XSLT <c>Document ()</c> ; в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary>Возвращает или задает значение, указывающее, следует ли включить поддержку встроенных блоков скриптов.</summary>
      <returns>Значение <see langword="true" /> для поддержки блоков скриптов в таблице стилей XSLT; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary>Возвращает объект <see cref="T:System.Xml.Xsl.XsltSettings" />, с помощью которого включается поддержка функции XSLT <c>document()</c> и внедренных блоков скриптов.</summary>
      <returns>Объект <see cref="T:System.Xml.Xsl.XsltSettings" /> со свойствами <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> и <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" />, равными <see langword="true" />.</returns>
    </member>
  </members>
</doc>