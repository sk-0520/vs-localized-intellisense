<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary>Задает параметры формата даты-времени.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DateTimeFormat" />, используя строку формата.</summary>
      <param name="formatString">Строка формата.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DateTimeFormat" />, используя строку формата и поставщик формата.</summary>
      <param name="formatString">Строка формата.</param>
      <param name="formatProvider">Поставщик формата.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary>Получает или задает параметры форматирования, задающие пользовательские настройки синтаксического анализа строки для ряда методов синтаксического анализа даты и времени.</summary>
      <returns>Параметры форматирования, задающие пользовательские настройки синтаксического анализа строки для ряда методов синтаксического анализа даты и времени.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary>Возвращает объект, управляющий форматированием.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary>Получает строки формата для управления форматированием, получаемым, когда дата или время представлены в виде строки.</summary>
      <returns>Строки формата для управления форматированием, получаемым, когда дата или время представлены в виде строки.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary>Определяет частоту выдачи сведений о типе.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary>Всегда для создания информации о типе.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary>По необходимости сообщать сведения о типе.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary>Никогда не сообщать сведения о типе.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Сериализует объекты в нотацию объектов JavaScript (JSON) и десериализует данные JSON в объекты. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с помощью коллекции известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа и параметров сериализатора.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="settings">Параметры сериализатора для сериализатора JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром, с коллекцией известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Имя XML-элемента, содержащего данные для сериализации или десериализации. Значение по умолчанию — "root".</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром типа <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> для сериализации или десериализации объекта указанного типа с использованием корневого элемента XML, заданного параметром типа <see cref="T:System.Xml.XmlDictionaryString" />, с коллекцией известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
      <param name="knownTypes">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary>Получает формат элементов типа "дата и время" в графе объектов.</summary>
      <returns>Формат элементов типа "дата и время" в графе объектов.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary>Получает или задает параметры сериализатора контракта данных JSON для выдачи сведений о типе.</summary>
      <returns>Параметры сериализатора контракта данных JSON для выдачи сведений о типе.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>Возвращает значение, указывающее, игнорируются ли неизвестные данные при десериализации и игнорируется ли интерфейс <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> при сериализации.</summary>
      <returns>Значение <see langword="true" />, если требуется игнорировать неизвестные данные и интерфейс <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Возвращает значение, указывающее, расположен ли объект <see cref="T:System.Xml.XmlDictionaryReader" /> над XML-элементом, представляющим объект, из которого сериализатор может выполнить десериализацию.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-потока, полученного из JSON.</param>
      <returns>Значение <see langword="true" />, если средство чтения расположено правильно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Определяет, расположен ли объект <see cref="T:System.Xml.XmlReader" /> на объекте, который может быть десериализован.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
      <returns>Значение <see langword="true" />, если средство чтения расположено правильно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Возвращает коллекцию типов, которые могут присутствовать в графе объекта, сериализованном с помощью этого экземпляра класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая ожидаемые типы, переданные в качестве известных типов в конструктор <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>Возвращает максимальное количество элементов в графе объекта, которое сериализатор сериализует или десериализует в одном вызове на чтение или запись.</summary>
      <returns>Максимальное количество элементов для сериализации или десериализации.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество элементов превышает максимальное значение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Выполняет чтение потока документа в формате JSON (нотации объектов JavaScript) и возвращает десериализованный объект.</summary>
      <param name="stream">Поток <see cref="T:System.IO.Stream" />, подлежащий чтению.</param>
      <returns>Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Выполняет чтение XML-документа, полученного из JSON (нотации объектов JavaScript), с помощью <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
      <returns>Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Выполняет чтение XML-документа, полученного из JSON, с помощью <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также позволяет задать, должен ли сериализатор перед попыткой выполнить десериализацию проверить, что он расположен на соответствующем элементе.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
      <param name="verifyObjectName">Значение <see langword="true" /> — для проверки соответствия имени и пространства имен включающего XML-элемента ожидаемым имени и пространству имен; в противном случае — значение <see langword="false" /> (для пропуска проверки). Значение по умолчанию — <see langword="true" />.</param>
      <returns>Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Выполняет чтение XML-документа, полученного из JSON (нотации объектов JavaScript), с помощью <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
      <returns>Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Выполняет чтение XML-документа, полученного из JSON, с помощью <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект; также позволяет задать, должен ли сериализатор перед попыткой выполнить десериализацию проверить, что он расположен на соответствующем элементе.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-документа, полученного из JSON.</param>
      <param name="verifyObjectName">Значение <see langword="true" /> — для проверки соответствия имени и пространства имен включающего XML-элемента ожидаемым имени и пространству имен; в противном случае — значение <see langword="false" /> (для пропуска проверки). Значение по умолчанию — <see langword="true" />.</param>
      <returns>Десериализованный объект.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary>Получает или задает значение, указывающее, следует ли сериализовать типы, доступные только для чтения.</summary>
      <returns>Значение <see langword="true" /> для сериализации доступных только для чтения типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary>Получает значение, указывающее, следует ли использовать простой формат словаря.</summary>
      <returns>Значение <see langword="true" /> для использования простого формата словаря; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает закрывающий XML-элемент в XML-документ (используя <see cref="T:System.Xml.XmlDictionaryWriter" />), который может быть сопоставлен нотации объектов JavaScript (JSON).</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи в XML-документ для сопоставления данным JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Записывает закрывающий XML-элемент в XML-документ (используя <see cref="T:System.Xml.XmlWriter" />), который может быть сопоставлен нотации объектов JavaScript (JSON).</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи в XML-документ, сопоставленный данным JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Сериализует указанный объект в данные нотации объектов JavaScript (JSON) и записывает полученные данные JSON в поток.</summary>
      <param name="stream">Поток <see cref="T:System.IO.Stream" />, в который осуществляется запись.</param>
      <param name="graph">Объект, содержащий данные для записи в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Сериализует объект в код XML, который может быть сопоставлен нотации объектов JavaScript (JSON). Записывает все данные объекта, включая начальный XML-элемент, содержимое и закрывающий элемент, с помощью <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи в XML-документ или поток для сопоставления данным JSON.</param>
      <param name="graph">Объект, содержащий данные для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Сериализует объект в код XML, который может быть сопоставлен нотации объектов JavaScript (JSON). Записывает все данные объекта, включая начальный XML-элемент, содержимое и закрывающий элемент, с помощью <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи в XML-документ для сопоставления данным JSON.</param>
      <param name="graph">Объект, содержащий данные для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Записывает содержимое XML, которое может быть сопоставлено нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />, в который выполняется запись.</param>
      <param name="graph">Записываемый объект.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает содержимое XML, которое может быть сопоставлено нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="graph">Записываемый объект.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Возникла проблема с записываемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Записывает открывающий XML-элемент для сериализации объекта в XML-код, который может быть сопоставлен нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph">Записываемый объект.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Записывает открывающий XML-элемент для сериализации объекта в XML-код, который может быть сопоставлен нотации объектов JavaScript (JSON), используя <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph">Записываемый объект.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary>Задает параметры <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary>Получает или задает DateTimeFormat, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</summary>
      <returns>DateTimeFormat, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary>Получает или задает параметры сериализатора контракта данных JSON для выдачи сведений о типе.</summary>
      <returns>Параметры сериализатора контракта данных JSON для выдачи сведений о типе.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary>Получает или задает значение, указывающее, должны ли пропускаться данные, предоставляемые расширением класса, при сериализации или десериализации класса.</summary>
      <returns>Значение <see langword="true" /> для пропуска данных, предоставляемых расширением класса, при сериализации или десериализации класса; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary>Получает или задает коллекцию типов, которые могут присутствовать в графе объекта, сериализованном с помощью этого DataContractJsonSerializerSettings.</summary>
      <returns>Коллекция типов, которые могут присутствовать в графе объекта, сериализованном с помощью этого экземпляра класса DataContractJsonSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary>Получает или задает максимальное количество элементов в графе объекта для сериализации или десериализации.</summary>
      <returns>Максимальное количество элементов в графе объекта для сериализации или десериализации.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary>Получает или задает корневое имя выбранного объекта.</summary>
      <returns>Имя корневого объекта выбранного объекта.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary>Получает или задает значение, указывающее, следует ли сериализовать типы, доступные только для чтения.</summary>
      <returns>Значение <see langword="true" /> для сериализации доступных только для чтения типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary>Получает или задает значение, указывающее, следует ли использовать простой формат словаря.</summary>
      <returns>Значение <see langword="true" /> для использования простого формата словаря; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>Задает интерфейс для инициализации средства чтения нотации объектов JavaScript (JSON) при его повторном использовании для чтения из конкретного потока или буфера.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Повторно инициализирует средство чтения нотации объектов JavaScript (JSON) для заданного буфера, содержащего данные с кодированием JSON.</summary>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding">Кодировка <see cref="T:System.Text.Encoding" />, используемая средством чтения.</param>
      <param name="quotas">Применяемый режим <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> .</param>
      <param name="onClose">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />, вызываемый при закрытии средства чтения.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Повторно инициализирует средство чтения нотации объектов JavaScript (JSON) для заданного потока, содержащего данные с кодированием JSON.</summary>
      <param name="stream">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="encoding">Кодировка <see cref="T:System.Text.Encoding" />, используемая средством чтения.</param>
      <param name="quotas">Применяемый объект<see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> .</param>
      <param name="onClose">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>Задает интерфейс для инициализации модуля записи нотации объектов JavaScript (JSON) при его повторном использовании для записи в конкретный выходной поток.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует (или повторно инициализирует) модуль записи нотации объектов JavaScript (JSON) для заданного выходного потока с заданной кодировкой.</summary>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" />, в который модуль записи осуществляет запись.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку выходного потока.</param>
      <param name="ownsStream">Значение <see langword="true" />, если выходной поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Создает экземпляры <see cref="T:System.Xml.XmlDictionaryReader" />, которые могут осуществлять чтение данных, кодированных с использованием нотации объектов JavaScript (JSON), из потока или буфера и сопоставлять их набору сведений XML, а также экземпляры <see cref="T:System.Xml.XmlDictionaryWriter" />, которые могут сопоставлять набор сведений XML данным JSON и записывать данные с кодированием JSON в поток.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы с заданными размером, смещением и кодировкой, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством чтения. Если в качестве значения задана <see langword="null" />, средство чтения пытается обнаружить кодировку автоматически.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</param>
      <param name="onClose">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> , вызываемый при закрытии средства чтения. Значение по умолчанию — <see langword="null" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы заданных размера и смещения, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="offset">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <param name="buffer">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может обрабатывать данные нотации объектов JavaScript (JSON).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять потоки заданных размера и смещения, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <param name="stream">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" /> , указывающий кодировку, используемую средством чтения. Если в качестве значения задана <see langword="null" />, средство чтения пытается обнаружить кодировку автоматически.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</param>
      <param name="onClose">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />, вызываемый при закрытии средства чтения.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять потоки, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</summary>
      <param name="stream">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="quotas">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток.</summary>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданной кодировкой.</summary>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи. Кодировка по умолчанию — UTF-8.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданной кодировкой.</summary>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи. Кодировка по умолчанию — UTF-8.</param>
      <param name="ownsStream">Значение <see langword="true" />, если выходной поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданным символом.</summary>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи. Кодировка по умолчанию — UTF-8.</param>
      <param name="ownsStream">Значение <see langword="true" />, если выходной поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</param>
      <param name="indent">Если значение равно <see langword="true" />, в выходных данных используется многострочный формат с надлежащим отступом для каждого уровня; в противном случае значение равно <see langword="false" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданным символом.</summary>
      <param name="stream">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</param>
      <param name="encoding">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи. Кодировка по умолчанию — UTF-8.</param>
      <param name="ownsStream">Значение <see langword="true" />, если выходной поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</param>
      <param name="indent">Если значение равно <see langword="true" />, в выходных данных используется многострочный формат с надлежащим отступом для каждого уровня; в противном случае значение равно <see langword="false" />.</param>
      <param name="indentChars">Строка, используемая для задания отступа каждого уровня.</param>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</returns>
    </member>
  </members>
</doc>