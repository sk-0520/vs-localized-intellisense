<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">Определяет поведение при записи в канал с ограниченной емкостью, который уже заполнен.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">Удаляет и не использует новый элемент в канале, чтобы освободить место для записываемого элемента.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">Удаляет и не использует наиболее старый элемент в канале, чтобы освободить место для записываемого элемента.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">Удаляет записываемый элемент.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">Ожидает, когда освободится место для завершения операции записи.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Предоставляет параметры, которые позволяют управлять поведением связанных экземпляров <see cref="T:System.Threading.Channels.Channel`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">Инициализирует параметры.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">Максимальное количество элементов, которое может содержать канал с ограниченной емкостью.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">Возвращает или задает максимальное количество элементов, которое может содержать канал с ограниченной емкостью.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">Возвращает или задает поведение, вызываемое операциями записи, если канал заполнен.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">Предоставляет статические методы для создания каналов.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Создает канал с указанной максимальной емкостью.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">Максимальное количество элементов, которое может содержать канал.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Указывает тип данных в канале.</typeparam>
      <returns vsli:raw="The created channel.">Созданный канал.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Создает канал с указанной максимальной емкостью.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Параметры, которые позволяют управлять поведением канала.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Указывает тип данных в канале.</typeparam>
      <returns vsli:raw="The created channel.">Созданный канал.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">Создает канал с неограниченной емкостью, который может использоваться любым количеством объектов чтения и записи одновременно.</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel." />
      <returns vsli:raw="The created channel.">Созданный канал.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">Создает канал с неограниченной емкостью с учетом предоставленных параметров.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Параметры, которые позволяют управлять поведением канала.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Указывает тип данных в канале.</typeparam>
      <returns vsli:raw="The created channel.">Созданный канал.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">Предоставляет базовый класс для каналов, поддерживающих чтение и запись элементов с типом <typeparamref name="T" />.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">Указывает тип данных, доступных для чтения и записи в канале.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor" />
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">Предоставляет базовый класс для каналов, поддерживающих чтение элементов с типом <typeparamref name="TRead" /> и запись элементов с типом <typeparamref name="TWrite" />.</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">Указывает тип данных, которые могут быть записаны в канал.</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">Указывает тип данных, которые могут быть считаны из канала.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor" />
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">Неявное приведение из <see cref="T:System.Threading.Channels.Channel`2" /> к его доступной для чтения половине.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Приводимое <see cref="T:System.Threading.Channels.Channel`2" />.</param>
      <returns vsli:raw="The readable half.">Доступная для чтения половина.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">Неявное приведение из <see cref="T:System.Threading.Channels.Channel`2" /> к его доступной для записи половине.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Приводимое <see cref="T:System.Threading.Channels.Channel`2" />.</param>
      <returns vsli:raw="The writable half.">Доступная для записи половина.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">Возвращает объект, выполняющий чтение из канала.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">Возвращает объект, выполняющий запись в канал.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">Исключение, возникающее при использовании канала после того, как он был закрыт.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Исключение, являющееся причиной этого исключения.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Channels.ChannelClosedException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Сообщение, описывающее ошибку.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Исключение, являющееся причиной этого исключения.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">Предоставляет параметры, которые позволяют управлять поведением экземпляров канала.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor" />
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">Имеет значение <see langword="true" />, если выполняемые с каналом операции могут синхронно вызывать продолжения, подписанные на уведомления об ожидающих асинхронных операциях. Имеет значение <see langword="false" />, если все продолжения должны вызываться асинхронно.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">Имеет значение <see langword="true" />, если гарантируется, что объекты чтения из канала будут выполнять не больше одной операции чтения одновременно. Имеет значение <see langword="false" />, если такое ограничение не гарантируется.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">Имеет значение <see langword="true" />, если гарантируется, что объекты записи из канала будут выполнять не больше одной операции записи одновременно. Имеет значение <see langword="false" />, если такое ограничение не гарантируется.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">Предоставляет базовый класс для считывания данных из канала.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">Указывает тип данных, которые могут быть считаны из канала.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor" />
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">Возвращает задачу <see cref="T:System.Threading.Tasks.Task" />, которая будет выполнена, когда из этого канала будут считаны все данные.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">Создает интерфейс <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" />, позволяющий считывать все данные из канала.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">Токен отмены для отмены перечисления.</param>
      <returns vsli:raw="The created async enumerable.">Созданное асинхронное перечисление.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">Асинхронно считывает элемент из канала.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">Метод <see cref="T:System.Threading.CancellationToken" />, используемый для отмены операции чтения.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">Задача <see cref="T:System.Threading.Tasks.ValueTask`1" />, представляющая асинхронную операцию чтения.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">Пытается считать элемент из канала.</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">Считываемый элемент или значение по умолчанию, если нет элементов для чтения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Если значение успешно считано, возвращается <see langword="true" />. В противном случае возвращается <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">Возвращает задачу <see cref="T:System.Threading.Tasks.Task`1" />, которая будет выполнена, когда данные станут доступны для чтения.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Параметр <see cref="T:System.Threading.CancellationToken" /> используется для отмены операции ожидания.</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">Задача <see cref="T:System.Threading.Tasks.Task`1" />, которая будет выполнена с результатом <see langword="true" />, если данные доступны для чтения. Если же данные для чтения отсутствуют, результатом будет <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">Предоставляет базовый класс для записи в канал.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">Указывает тип данных, которые могут быть записаны в канал.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor" />
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">Помечает канал как заполненный. То есть в него уже нельзя записать элементы.</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">Необязательное исключение, указывающее на ошибку, которая приводит к заполнению канала.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">Канал уже помечен как заполненный.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">Предпринимает попытку пометить канал как заполненный. То есть в него уже нельзя записать данные.</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">
        <see cref="T:System.Exception" /> указывает на ошибку, из-за которой больше невозможно записать данные. Либо возвращает значение null в случае успешного выполнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">Если в результате этой операции канал успешно помечен как заполненный, возвращается значение <see langword="true" />. Если не удалось пометить канал (уже помечен или не поддерживает заполнение), возвращается <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">Предпринимает попытку записать указанный элемент в канал.</summary>
      <param name="item" vsli:raw="The item to write.">Элемент для записи.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Если элемент был записан, возвращается <see langword="true" />. В противном случае возвращается <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">Возвращает операцию <see cref="T:System.Threading.Tasks.Task`1" />, которая будет выполнена, когда освободиться место для записи элемента.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Параметр <see cref="T:System.Threading.CancellationToken" /> используется для отмены операции ожидания.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">Операция <see cref="T:System.Threading.Tasks.Task`1" /> завершится с результатом <see langword="true" />, если будет доступно место для записи элемента, либо с результатом <see langword="false" />, если запись не будет разрешена.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">Асинхронно записывает элемент в канал.</summary>
      <param name="item" vsli:raw="The value to write to the channel.">Значение, которое нужно записать в канал.</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">Параметр <see cref="T:System.Threading.CancellationToken" /> используется для отмены операции записи.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">Задача <see cref="T:System.Threading.Tasks.Task" />, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Предоставляет параметры, которые позволяют управлять поведением несвязанных экземпляров <see cref="T:System.Threading.Channels.Channel`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor" />
  </members>
</doc>