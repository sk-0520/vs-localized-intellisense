<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ValueWebSocketReceiveResult">
      <summary>Представляет результат выполнения одной операции <see cref="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" /> для <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ValueWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" />. Экземпляр этой структуры представляет результат выполнения одной операции <c>ReceiveAsync</c> для <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="count">Количество байтов, полученных <see cref="T:System.Net.WebSockets.WebSocket" />.</param>
      <param name="messageType">Одно из значений перечисления, указывающее, является ли текущее сообщение сообщением UTF-8 или двоичным сообщением.</param>
      <param name="endOfMessage">Значение <see langword="true" />, чтобы указать, что сообщение было получено полностью, в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.Count" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.EndOfMessage" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.MessageType" />
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>Класс WebSocket позволяет приложениям отправлять и получать данные после завершения обновления WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>Отменяет соединение WebSocket и отменяет все ожидающие операции ввода-вывода.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Закрывает подключение WebSocket в качестве асинхронной операции, используя подтверждение закрытия, которое определено в разделе 7 спецификации протокола WebSocket.</summary>
      <param name="closeStatus">Указывает причину закрытия соединения WebSocket.</param>
      <param name="statusDescription">Задает объяснение причины закрытия соединения в понятном для человека формате.</param>
      <param name="cancellationToken">Токен, который может использоваться для распространения уведомления о том, что операции следует отменить.</param>
      <returns>Объект задачи, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Инициирует или завершает подтверждение закрытия, определенное в разделе 7 спецификации протокола WebSocket.</summary>
      <param name="closeStatus">Указывает причину закрытия соединения WebSocket.</param>
      <param name="statusDescription">Разрешает приложениям задавать доступное для чтения людьми объяснение о том, почему соединение закрыто.</param>
      <param name="cancellationToken">Токен, который может использоваться для распространения уведомления о том, что операции следует отменить.</param>
      <returns>Объект задачи, представляющий асинхронную операцию.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>Указывает причину инициирования удаленной конечной точкой подтверждения закрытия.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>Разрешает удаленной конечной точке описывать причины, почему соединение было закрыто.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
      <summary>Создайте буферы клиента для использования с этим экземпляром <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="receiveBufferSize">Размер буфера получения клиента (в байтах).</param>
      <param name="sendBufferSize">Размер буфера отправки (в байтах).</param>
      <returns>Массив с буферами клиента.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
      <summary>Позволяет вызывающим объектам создать класс WebSocket на стороне клиента, который будет использовать WSPC для кадрирования.</summary>
      <param name="innerStream">Подключение, которое необходимо использовать операций ввода-вывода.</param>
      <param name="subProtocol">Подпротокол, принятый клиентом.</param>
      <param name="receiveBufferSize">Размер в байтах буфера получения WebSocket клиента.</param>
      <param name="sendBufferSize">Размер в байтах буфера передачи клиента WebSocket.</param>
      <param name="keepAliveInterval">Определяет, как регулярно кадр передается через соединение для поддержание активности. Применяется только в том случае, если соединение бездействует.</param>
      <param name="useZeroMaskingKey">Указывает, случайный ключ или статический ключ (нули) должен использоваться для маскирования WebSocket.</param>
      <param name="internalBuffer">Используется как внутренний буфер в WPC. Размер должен быть ко крайней мере равен <c>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (16 в 32-разрядной версии)</c>.</param>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)">
      <summary>Создает новый <see cref="T:System.Net.WebSockets.WebSocket" />, работающий в указанном потоке, который представляет подключение к веб-сокету.</summary>
      <param name="stream">Поток для подключения.</param>
      <param name="isServer">
        <see langword="true" />, чтобы указать, что это серверная часть соединения; <see langword="false" />, если это клиентская часть.</param>
      <param name="subProtocol">Согласованный подпротокол, который использовался при создании соединения.</param>
      <param name="keepAliveInterval">Используемый интервал проверки активности или <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> для отключения проверки активности.</param>
      <returns>Новый веб-сокет.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
      <summary>Создает буфер сервера WebSocket.</summary>
      <param name="receiveBufferSize">Размер требуемого буфера (в байтах).</param>
      <returns>Возвращает <see cref="T:System.ArraySegment`1" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
      <summary>Возвращает интервал проверки активности протокола WebSocket.</summary>
      <returns>Интервал проверки активности протокола WebSocket по умолчанию. Типичное значение для этого интервала составляет 30 секунд (как определено операционной системой или платформой .NET). Он используется для инициализации <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> значения.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>Используется для очистки неуправляемых ресурсов для реализаций ASP.NET и резидентных реализаций.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
      <summary>Возвращает значение, которое указывает, является ли для экземпляра WebSocket целевым .NET Framework 4.5.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Net.WebSockets.WebSocket" /> имеет целью .NET Framework 4.5; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
      <summary>Возвращает значение, указывающее, какое состояние экземпляра WebSocket - закрыто или прервано.</summary>
      <param name="state">Текущее состояние WebSocket.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Net.WebSockets.WebSocket" /> закрыт или отменен, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Асинхронно получает данные через соединение <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="buffer">Ссылается на буфер приложения, который является местом хранения полученных данных.</param>
      <param name="cancellationToken">Распространяет уведомление о том, что операции следует отменить.</param>
      <returns>Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> объекта задачи возвращает массив <see cref="T:System.Byte" />, содержащий полученные данные.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
      <summary>Разрешает вызывающим объектам  регистрировать префиксы для запросов WebSocket (ws и wss).</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Асинхронно отправляет данные по соединению <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="buffer">Буфер, передаваемый по этому соединению.</param>
      <param name="messageType">Указывает, какое сообщение отправляет приложение — двоичное или текстовое.</param>
      <param name="endOfMessage">Указывает, являются ли данные в "буфере" последней частью сообщения.</param>
      <param name="cancellationToken">Токен, распространяющий уведомление о том, что операции следует отменить.</param>
      <returns>Объект задачи, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="messageType" />
      <param name="endOfMessage" />
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>Возвращает текущее состояние подключения WebSocket.</summary>
      <returns>Текущее состояние подключения WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>Возвращает подпротокол, который был согласован во время подтверждения открытия.</summary>
      <returns>Подпротокол, который был согласован во время подтверждения открытия.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
      <summary>Проверяет, находится ли соединение в ожидаемом состоянии.</summary>
      <param name="state">Текущее состояние объекта WebSocket, который необходимо проверить на соответствие списку допустимых состояний.</param>
      <param name="validStates">Список допустимых состояний соединения.</param>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>Представляет известные коды закрытия WebSocket, как определено в разделе 11.7 спецификации протокола WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>Ошибка не указана.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) Указывает на то, что конечная точка удалена. Клиент или сервер становятся недоступными.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>Соединение будет закрыто сервером из-за ошибки на сервере.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) Клиент или сервер завершает подключение, так как он не может принять полученный тип данных.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) Клиент или сервер завершает подключение, так как он получил данные, не соответствующие типу сообщения.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) Клиент завершает подключение, поскольку ожидалось, что расширение будет согласовано сервером.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004) Зарезервировано для дальнейшего использования.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) Соединение закрыто после того, как запрос был выполнен.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) Соединение будет закрыто из-за того, что конечная точка получала сообщение, которое нарушает его политику.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) Клиент или сервер завершает подключение из-за ошибки протокола.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketContext">
      <summary>Используется для доступа к сведениям в подтверждении WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketContext.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketContext" />.</summary>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.CookieCollection">
      <summary>Файлы cookie, переданные на сервер во время начала установления связи.</summary>
      <returns>Возвращает <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Headers">
      <summary>Заголовки HTTP, отправленные на сервер во время начала установления связи.</summary>
      <returns>Возвращает <see cref="T:System.Collections.Specialized.NameValueCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsAuthenticated">
      <summary>Прошел ли клиент WebSocket проверку подлинности.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsLocal">
      <summary>Подключен ли клиент WebSocket с локального компьютера.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsSecureConnection">
      <summary>Защищается ли соединение WebSocket с помощью протокола SSL.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Origin">
      <summary>Значение HTTP-заголовка Origin, включенного в начало установления связи.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.RequestUri">
      <summary>URI, запрашиваемый клиентом WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketKey">
      <summary>Значение HTTP-заголовка SecWebSocketKey, включенного в начало установления связи.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
      <summary>Значение HTTP-заголовка SecWebSocketKey, включенного в начало установления связи.</summary>
      <returns>Возвращает <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
      <summary>Список подпротоколов, запрошенных клиентом WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.User">
      <summary>Объект, используемый для получения удостоверения, сведений проверки подлинности и ролей безопасности для клиента WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.WebSocket">
      <summary>Экземпляр WebSocket, используемый для взаимодействия (отправка, получение, закрытие и т. д.) с соединением WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>Содержит список возможных ошибок WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>Указывает, что подключение было неожиданно прервано.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>Показывает общую ошибку.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>Указывает, что произошла ошибка при разборе заголовков HTTP во время подтверждения открытия.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>Указывает, что был получен кадр WebSocket с неизвестным кодом операции.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>Указывает, что WebSocket находится в недопустимом состоянии для заданной операции (например, закрывается или прерывается).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>Указывает, что произошла неизвестная собственная ошибка.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>Указывает, что входящий запрос не был допустимым запросом WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>Указывает, что для исключения не было никаких собственных сведений об ошибке.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>Указывает, что клиент запросил неподдерживаемую версию подпротокола WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>Указывает, что клиент запросил неподдерживаемую версию протокола WebSocket.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>Представляет исключение, возникшее при выполнении операции на соединении WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" /> .</summary>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="message">Описание ошибки</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" /> .</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="message">Описание ошибки</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="message">Описание ошибки</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="message">Описание ошибки</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="message">Описание ошибки</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Описание ошибки</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Описание ошибки</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>Машинный код ошибки для возникшего исключения.</summary>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает объект SerializationInfo с именем файла и номером строки, в которых возникло исключение.</summary>
      <param name="info">Объект SerializationInfo.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>Возвращает WebSocketError, указывающий тип происшедшей ошибки.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketError" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>Указывает тип сообщения.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>Сообщение должно быть в двоичном формате.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>Получение завершено из-за того, что было получено сообщение закрывания.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>Сообщение в виде открытого текста.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>Экземпляр этого класса представляет результат выполнения одной операции ReceiveAsync на WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Количество полученных байтов.</param>
      <param name="messageType">Тип сообщения, которое было получено.</param>
      <param name="endOfMessage">Указывает, является ли это сообщение последним.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Количество полученных байтов.</param>
      <param name="messageType">Тип сообщения, которое было получено.</param>
      <param name="endOfMessage">Указывает, является ли это сообщение последним.</param>
      <param name="closeStatus">Указывает <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> подключения.</param>
      <param name="closeStatusDescription">Описание <paramref name="closeStatus" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>Указывает причину, по которой удаленная конечная точка инициировала подтверждение закрытия.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>Возвращает необязательное описание, описывающее, почему удаленная конечная точка инициировала подтверждение закрытия.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>Указывает число байтов, полученных WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>Указывает, было ли сообщение получено полностью.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>Указывает, является ли текущее сообщение сообщением UTF-8 или двоичным сообщением.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketMessageType" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary>Указывает различные состояния, в которых может быть экземпляр WebSockets.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>Указывает, что подтверждение закрытия WebSocket завершилось правильно.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>Сообщение о закрытии было получено от удаленной конечной точки.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>Сообщение о закрытии было отправлено удаленной конечной точке.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>Соединение согласовывает подтверждение с удаленной конечной точкой.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>Начальное состояние после завершения подтверждения HTTP.</summary>
    </member>
  </members>
</doc>