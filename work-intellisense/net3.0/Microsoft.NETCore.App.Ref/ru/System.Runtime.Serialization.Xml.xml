<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">Предоставляет механизм динамического сопоставления типов с представлением <see langword="xsi:type" /> во время сериализации и десериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">Переопределение этого метода, чтобы во время десериализации сопоставить указанное имя <see langword="xsi:type" /> и пространство имен с типом контракта данных.</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">Имя <see langword="xsi:type" /> для сопоставления.</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">Пространство имен <see langword="xsi:type" /> для сопоставления.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Тип данных объявлен в контракте данных.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Известный арбитр типов.</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">Тип, с которым сопоставляются имя и пространство имен <see langword="xsi:type" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">Переопределение этого метода, чтобы во время сериализации сопоставить тип контракта данных с именем <see langword="xsi:type" /> и пространством имен.</summary>
      <param name="type" vsli:raw="The type to map.">Сопоставляемый тип.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Тип данных объявлен в контракте данных.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Известный арбитр типов.</param>
      <param name="typeName" vsli:raw="The xsi:type name.">Имя xsi:type.</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">Пространство имен xsi:type.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сопоставление успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">Сериализует и десериализует экземпляр типа в XML-поток или документ с помощью предоставленного контракта данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Тип сериализуемых или десериализуемых экземпляров.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для выполнения сериализации или десериализации объекта указанного типа и инициализирует коллекцию известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа и параметров.</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">Тип сериализуемого или десериализуемого экземпляра.</param>
      <param name="settings" vsli:raw="The serializer settings.">Параметры сериализатора.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для выполнения сериализации или десериализации объекта указанного типа с помощью предоставленных корневых элемента и пространства имен XML.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">Имя XML-элемента, содержащего данные для сериализации или десериализации.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">Пространство имен XML-элемента, содержащего данные для сериализации или десериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа. Этот метод также задает корневые XML-элемент и пространство имен в двух строковых параметрах, а также список известных типов, которые могут присутствовать в графе объектов.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName" vsli:raw="The root element name of the content.">Имя корневого элемента содержимого.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">Пространство имен корневого элемента.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для выполнения сериализации или десериализации объекта указанного типа с помощью предоставленных корневых элемента и пространства имен XML, заданных посредством параметров типа <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий пространство имен корневого элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> для сериализации или десериализации объекта указанного типа. Этот метод также задает корневые XML-элемент и пространство имен в двух параметрах <see cref="T:System.Xml.XmlDictionaryString" />, а также список известных типов, которые могут присутствовать в графе объекта.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Тип сериализуемых или десериализуемых экземпляров.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий имя корневого элемента содержимого.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Объект <see cref="T:System.Xml.XmlDictionaryString" />, содержащий пространство имен корневого элемента.</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">Интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий к типу <see cref="T:System.Type" />, в котором содержатся известные типы, которые могут присутствовать в графе объекта.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">Получает компонент, используемый для динамического сопоставления объявлений <see langword="xsi:type" /> с типами известных контрактов.</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Реализация класса <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Возвращает значение, указывающее, должны ли игнорироваться данные, предоставляемые расширением класса, при сериализации или десериализации класса.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данные расширения опускаются; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">Определяет, расположен ли объект <see cref="T:System.Xml.XmlDictionaryReader" /> на объекте, который может быть десериализован.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-потока.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если модуль чтения установлен на начальном элементе считываемого потока; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Определяет, расположен ли объект <see cref="T:System.Xml.XmlReader" /> на объекте, который может быть десериализован.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если модуль чтения установлен на начальном элементе считываемого потока; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Возвращает коллекцию типов, которые могут присутствовать в графе объекта, сериализованном с помощью этого экземпляра класса <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая ожидаемые типы, переданные в качестве известных типов в конструктор <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">Возвращает максимальное количество элементов в графе объекта для сериализации или десериализации.</summary>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Максимальное количество элементов для сериализации или десериализации. Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">Количество элементов превышает максимальное значение.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Возвращает значение, указывающее, следует ли использовать нестандартные конструкции XML для сохранения данных ссылок на объект.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если требуется сохранить ссылки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Считывает XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также указывает, была ли выполнена проверка имени объекта перед чтением его значения.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, используемый для чтения XML-потока.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если требуется проверить соответствие имени объекта предоставленному в конструкторе значению корневого имени; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Параметру <paramref name="verifyObjectName" /> задано значение <see langword="true" /> и имя и пространство имен элемента не соответствуют значениям, заданным в конструкторе.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Считывает XML-документ или поток XML-документов и возвращает десериализованный объект.  Метод включает параметр, определяющий, проверяется ли имя объекта, и сопоставитель для сопоставления объявлений <see langword="xsi:type" /> во время выполнения.</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">Модуль чтения XML, используемый для чтения содержимого.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если нужно проверять имя объекта; в противном случае — значение <see langword="false" />.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">Реализация <see cref="T:System.Runtime.Serialization.DataContractResolver" /> для сопоставления объявлений <see langword="xsi:type" /> типам контракта данных.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Считывает XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Считывает XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект; также указывает, была ли выполнена проверка имени объекта перед чтением его значения.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения XML-потока.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если требуется проверить соответствие имени объекта предоставленному в конструкторе значению корневого имени; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Параметру <paramref name="verifyObjectName" /> задано значение <see langword="true" /> и имя и пространство имен элемента не соответствуют значениям, заданным в конструкторе.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">Получает значение, указывающее, сериализованы ли типы, доступные только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">Значение <see langword="true" />, если сериализуются типы только для чтения; значение <see langword="false" />, если сериализуются все типы.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Выполняет запись закрывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Возникла проблема с записываемым экземпляром.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Выполняет запись закрывающего XML-элемента с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Возникла проблема с записываемым экземпляром.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Записывает все данные объекта (начальный XML-элемент, содержимое и включающий элемент) в XML-документ или поток с помощью указанного модуля записи XmlDictionaryWriter. Метод включает сопоставитель для сопоставления объявлений <see langword="xsi:type" /> во время выполнения.</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">Модуль записи XmlDictionaryWriter, используемый для записи содержимого в XML-документ или XML-поток.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Объект, в котором находится содержимое для записи.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">Реализация <see cref="T:System.Runtime.Serialization.DataContractResolver" />, используемая для сопоставления объявлений <see langword="xsi:type" /> с известными контрактами данных.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает все данные объекта (начальный XML-элемент, содержимое и закрывающий элемент) в XML-документ или поток с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Объект, содержащий данные для записи в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Возникла проблема с записываемым экземпляром.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Выполняет запись содержимого XML с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи потока.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Объект, записываемый в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Возникла проблема с записываемым экземпляром.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Выполняет запись содержимого XML с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи потока.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Объект, записываемый в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не соответствует правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Возникла проблема с записываемым экземпляром.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Выполняет запись открывающего XML-элемента с помощью модуля записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph" vsli:raw="The object to write.">Записываемый объект.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Выполняет запись открывающего XML-элемента с помощью модуля записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи начального элемента XML.</param>
      <param name="graph" vsli:raw="The object to write.">Записываемый объект.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">Расширяет класс <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> за счет предоставления методов для задания и получения <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">Возвращает суррогатный поставщик сериализации для этого сериализатора.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Сериализатор, который становится суррогатным.</param>
      <returns vsli:raw="The surrogate serializer.">Суррогатный сериализатор.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Указывает суррогатный поставщик сериализации для этого <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Сериализатор, который становится суррогатным.</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">Суррогатный поставщик сериализации.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">Задает параметры сериализатора контракта данных.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">Получает или задает компонент, используемый для динамического сопоставления объявлений xsi:type с типами известных контрактов.</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">Компонент, используемый для динамического сопоставления объявлений xsi:type с типами известных контрактов.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Получает или задает значение, указывающее, должны ли пропускаться данные, предоставляемые расширением класса, при сериализации или десериализации класса.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для пропуска данных, предоставляемых расширением класса, при сериализации или десериализации класса; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Получает или задает коллекцию типов, которые могут присутствовать в графе объекта, сериализованном с помощью этого DataContractSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Коллекция типов, которые могут присутствовать в графе объекта, сериализованном с помощью этого экземпляра класса DataContractSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Получает или задает максимальное количество элементов в графе объекта для сериализации или десериализации.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Максимальное количество элементов в графе объекта для сериализации или десериализации.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Получает или задает значение, указывающее, следует ли использовать нестандартные конструкции XML для сохранения данных ссылок на объект.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если требуется использовать нестандартные конструкции XML для сохранения данных ссылок на объект; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Получает или задает корневое имя выбранного объекта.</summary>
      <returns vsli:raw="The root name of the selected object.">Имя корневого объекта выбранного объекта.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">Получает или задает корневое пространство имен для указанного объекта.</summary>
      <returns vsli:raw="The root namespace for the specified object.">Корневое пространство имен для указанного объекта.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Получает или задает значение, указывающее, следует ли сериализовать типы, доступные только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для сериализации доступных только для чтения типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Представляет параметры, которые могут устанавливаться для <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">Возвращает коллекцию типов, которые могли быть обнаружены в процессе сериализации или десериализации.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Коллекция <see langword="KnownTypes" />, содержащая типы, которые могли быть обнаружены в процессе сериализации или десериализации. Представления схемы XML экспортируются для всех типов, заданных в этой коллекции <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">Сохраняет данные из контракта данных с возможностью управления версиями, который был расширен посредством добавления новых элементов.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">Предоставляет структуру данных для хранения дополнительных данных, обнаруженных <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> при десериализации типа, отмеченного атрибутом <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">Возвращает или задает структуру, содержащую дополнительные данные.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">Объект <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />, содержащий данные, которые не были распознаны как принадлежащие к контракту данных.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">Предоставляет базовый класс для сериализации объектов в XML-потоки или XML-документы. Это абстрактный класс.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">Возвращает значение, указывающее, расположено ли средство чтения <see cref="T:System.Xml.XmlDictionaryReader" /> на элементе XML, который можно считать.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">Средство чтения <see cref="T:System.Xml.XmlDictionaryReader" />, используемое для чтения XML-потока или XML-документа.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство чтения может считать данные; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">Возвращает значение, указывающее, расположено ли средство чтения <see cref="T:System.Xml.XmlReader" /> на элементе XML, который можно считать.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-потока или XML-документа.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство чтения расположено на начальном элементе; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">Считывает XML-поток или XML-документ с помощью средства чтения <see cref="T:System.IO.Stream" /> и возвращает десериализованный объект.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">Средство чтения <see cref="T:System.IO.Stream" />, используемое для чтения XML-потока или XML-документа.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Считывает XML-документ или XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Средство чтения <see cref="T:System.Xml.XmlDictionaryReader" />, используемое для чтения документа XML.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Считывает XML-поток или XML-документ с помощью средства чтения <see cref="T:System.Xml.XmlDictionaryReader" /> и возвращает десериализованный объект; также позволяет указать до попытки чтения, может ли сериализатор считать данные.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Средство чтения <see cref="T:System.Xml.XmlDictionaryReader" />, используемое для чтения документа XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">Значение <see langword="true" />, если требуется проверить соответствие имени и пространства имен включающего XML-элемента ожидаемым корневым имени и пространству имен; в противном случае — значение <see langword="false" />, если следует пропустить проверку.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Считывает XML-документ или XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-потока или XML-документа.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Считывает XML-документ или XML-поток с помощью средства чтения <see cref="T:System.Xml.XmlReader" /> и возвращает десериализованный объект; также позволяет указать перед попыткой чтения, может ли сериализатор считать данные.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения XML-документа или XML-потока.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">Значение <see langword="true" />, если требуется проверить соответствие имени и пространства имен включающего XML-элемента ожидаемым корневым имени и пространству имен; значение <see langword="false" />, если следует пропустить проверку.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Записывает завершающий элемент данных объекта в качестве закрывающего XML-элемента в XML-документ или XML-поток с помощью средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи XML-документа или потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает завершающий элемент данных объекта в качестве закрывающего XML-элемента в XML-документ или XML-поток с помощью средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Записывает полное содержимое объекта (начало записи, запись содержимого и завершение записи) в XML-документ или поток с помощью указанного средства записи <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">Средство записи <see cref="T:System.IO.Stream" />, используемое для записи в XML-документ или XML-поток.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Объект, содержащий данные для записи в поток.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Записывает полное содержимое объекта (начало записи, запись содержимого и завершение записи) в XML-документ или поток с помощью указанного средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">Средство записи <see cref="T:System.Xml.XmlDictionaryWriter" />, используемое для записи содержимого в XML-документ или XML-поток.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает полное содержимое объекта (начало записи, запись содержимого и завершение записи) в XML-документ или поток с помощью указанного средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Записывает только содержимое объекта в XML-документ или XML-поток с помощью указанного средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает только содержимое объекта в XML-документ или XML-поток с помощью указанного средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа или потока.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Объект, в котором находится содержимое для записи.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Записывает начальный элемент данных объекта в качестве открывающего XML-элемента с помощью указанного средства записи <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">Средство записи <see cref="T:System.Xml.XmlDictionaryWriter" />, используемое для записи документа XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">Объект для сериализации.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает начальный элемент данных объекта в качестве открывающего XML-элемента с помощью указанного средства записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Средство записи <see cref="T:System.Xml.XmlWriter" />, используемое для записи документа XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">Объект для сериализации.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Сериализуемый тип не удовлетворяет правилам контракта данных. Например, к этому типу не применен атрибут <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">возникла проблема с сериализуемым экземпляром.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">было превышено максимально допустимое количество объектов для сериализации. Проверьте свойство <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">Содержит методы для чтения и записи XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">Создает тип схемы по умолчанию с заданным именем типа и добавляет ее в указанный набор схем.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в который добавляется созданный тип схемы.</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">Объект <see cref="T:System.Xml.XmlQualifiedName" />, указывающий имя типа, которому присваивается схема.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="schemas" /> или аргумент <paramref name="typeQName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">Считывает набор узлов XML из указанного средства чтения и возвращает результат.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Массив типа <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="xmlReader" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">При считывании был обнаружен узел со значением <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">Выполняет запись предоставленных узлов с помощью указанного средства записи.</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">Объект <see cref="T:System.Xml.XmlWriter" />, используемый для записи.</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">Массив типа <see cref="T:System.Xml.XmlNode" />, который требуется записать.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="xmlWriter" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">Если заданы класс, представляющий контракт данных, и метаданные, представляющие участника контракта, создает запрос XPath для участника.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">Создает XPath из контракта данных, используя заданный тип контракта данных, массив элементов метаданных, элемент верхнего уровня и пространства имен.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Тип, представляющий контракт данных.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Метаданные, сформированные с использованием метода <see cref="Overload:System.Type.GetMember" /> класса <see cref="T:System.Type" />, указывающего определенный элемент данных, использованный для формирования запроса.</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">Элемент верхнего уровня в xpath.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Пространства имен XML и их префиксы, встречающиеся в контракте данных.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  

XPath, созданный из типа и данных члена.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">Создает XPath из контракта данных, используя заданный тип контракта данных, массив элементов метаданных и пространства имен.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Тип, представляющий контракт данных.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Метаданные, сформированные с использованием метода <see cref="Overload:System.Type.GetMember" /> класса <see cref="T:System.Type" />, указывающего определенный элемент данных, использованный для формирования запроса.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Пространства имен XML и их префиксы, встречающиеся в контракте данных.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  

XPath, созданный из типа и данных члена.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">Предоставляет возможность преобразования набора типов .NET Framework, используемых в контрактах данных, в файл схемы XML (XSD).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> с указанным набором схем.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий экспортируемые схемы.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">Возвращает значение, указывающее, возможен ли экспорт набора типов среды CLR, содержащегося в наборе сборок.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> класса <see cref="T:System.Reflection.Assembly" />, содержащий сборки с экспортируемыми типами.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если типы можно экспортировать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">Возвращает значение, указывающее, возможен ли экспорт набора типов среды CLR, содержащегося в <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">Объект <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий указанные экспортируемые типы.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если типы можно экспортировать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">Возвращает значение, указывающее, возможен ли экспорт заданного типа среды CLR.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">Экспортируемый тип <see cref="T:System.Type" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если тип можно экспортировать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">Преобразует типы, содержащиеся в указанной коллекции сборок.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> (класса <see cref="T:System.Reflection.Assembly" />), содержащий экспортируемые типы.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="assemblies" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.Assembly" /> в коллекции имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">Преобразует типы, содержащиеся в <see cref="T:System.Collections.Generic.ICollection`1" />, переданной в этот метод.</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> (класса <see cref="T:System.Type" />), содержащий экспортируемые типы.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="types" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Тип в коллекции имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">Преобразует указанный тип .NET Framework в схему языка определения схемы XML (XSD).</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">Тип <see cref="T:System.Type" />, преобразуемый в схему XML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Возвращает имя верхнего уровня и пространство имен для типа <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">Объект <see cref="T:System.Type" />, которому направляется запрос.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя верхнего уровня и пространство имен для типа <see cref="T:System.Type" />, который записывается в поток при записи этого объекта.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">Возвращает схему XML для заданного типа.</summary>
      <param name="type" vsli:raw="The type to return a schema for.">Тип, для которого возвращается схема.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />, содержащий схему XML.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Возвращает имя контракта и пространство имен контракта для типа <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">Экспортированный тип <see cref="T:System.Type" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя контракта и пространство имен типа.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">Возвращает или задает объект <see cref="T:System.Runtime.Serialization.ExportOptions" />, содержащий параметры, которые могут быть заданы для операции экспорта.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">Объект <see cref="T:System.Runtime.Serialization.ExportOptions" />, содержащий параметры, используемые для настройки экспорта типов в схемы.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">Возвращает коллекцию экспортированных схем XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы, преобразованные из набора типов среды CLR после вызова метода <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">Содержит свойства и методы, которые, при реализации с помощью <see cref="T:System.Xml.XmlDictionaryWriter" />, позволяют обрабатывать фрагменты XML.</summary>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">Возвращает значение, указывающее, может ли этот объект <see cref="T:System.Xml.XmlDictionaryWriter" /> обработать фрагменты XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если этот <see cref="T:System.Xml.XmlDictionaryWriter" /> может обрабатывать фрагменты XML; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">Завершает обработку фрагмента XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">Начинает обработку фрагмента XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">Если <see langword="true" />, любое пространство имен, объявленное за пределами фрагмента, объявляется снова, если используется внутри него; если <see langword="false" />, то пространства имен не объявляются вновь.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">Записывает фрагмент XML в основной поток модуля записи.</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">Буфер для записи.</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для записи в параметре <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">Число байтов для записи в объект <paramref name="buffer" />.</param>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">Представляет интерфейс, который может реализовываться классами, предоставляющими потоки.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">Получает поток.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Объект <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">Освобождает поток для вывода.</summary>
      <param name="stream" vsli:raw="The stream being released.">Освобожденный поток.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">Предоставляет методы для повторной инициализации средства чтения двоичных данных для считывания нового документа.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">Повторно инициализирует модуль чтения двоичных данных, используя предоставленный входной буфер.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемый объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">Повторно инициализирует средство чтения двоичных данных, используя предоставленный входной поток.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемый объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">Указывает требования реализации для модулей записи двоичных данных XML, полученных из этого интерфейса.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">Указывает требования инициализации для модулей записи двоичных данных XML, реализующих этот метод.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">
        <see langword="interface" />, определяющий контракт, который должен реализовать словарь XML, чтобы быть использованным реализациями <see cref="T:System.Xml.XmlDictionaryReader" /> и <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Попытки найти запись в словаре.</summary>
      <param name="key" vsli:raw="Key to look up.">Искомый ключ.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Если параметр <paramref name="key" /> определен, <see cref="T:System.Xml.XmlDictionaryString" />, сопоставляется с ключом; в противном случае — <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если ключ присутствует в словаре; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Выполняет поиск указанного значения в словаре.</summary>
      <param name="value" vsli:raw="String value being checked for.">Искомое строковое значение.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если обнаружена; в противном случае — <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение присутствует в словаре; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Проверяет наличие в словаре указанной строки <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">Строка <see cref="T:System.Xml.XmlDictionaryString" />, наличие которой проверяется.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если обнаружена; в противном случае — <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Xml.XmlDictionaryString" /> присутствует в словаре; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">Указывает требования реализации для модулей чтения текста XML, полученных из этого интерфейса.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">Указывает требования инициализации для модулей чтения текста XML, выполняющие считывание из буфера.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Кодировка в потоке.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемый режим <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">Указывает требования инициализации для модулей чтения текста XML, выполняющие считывание потока.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Кодировка в потоке.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемый режим <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">Указывает требования реализации для модулей записи текста XML, полученных из этого интерфейса.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">Указывает требования инициализации для модулей записи текста XML, реализующих этот метод.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Кодировка в потоке.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">
        <see langword="delegate" /> для метода обратного вызова при закрытии модуля чтения.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который инициирует событие <c>OnClose</c>.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">Уникальный идентификатор, оптимизированный для GUID.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">Создает новый экземпляр этого класса с новым GUID.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Создает новый экземпляр этого класса, используя массив байтов, представляющий идентификатор <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Массив байтов, представляющий идентификатор <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="guid" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">Параметр <paramref name="guid" /> предоставляет менее 16 допустимых байтов.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Создает новый экземпляр данного класса, начиная со смещения в пределах массива <see langword="byte" />, представляющего <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Массив <see langword="byte" />, представляющий <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Позиция смещения внутри массива <see langword="byte" />, представляющего <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">Параметры <paramref name="guid" /> и <paramref name="offset" /> предоставляют менее 16 допустимых байтов.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">Создает новый экземпляр данного класса, начиная со смещения в пределах массива <see langword="char" />, используя заданное количество записей.</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Массив <see langword="char" />, представляющий <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Позиция смещения внутри массива <see langword="char" />, представляющего <see cref="T:System.Guid" />.</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">Количество используемых записей массива, начиная со смещения <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.

или -

Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины массива минус смещение <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">Параметр <paramref name="count" /> равен нулю.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Создает новый экземпляр данного класса, используя идентификатор <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Объект <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">Создает новый экземпляр данного класса, используя строку.</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Строка, используемая для создания объекта <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">Длина параметра <paramref name="value" /> равна нулю.</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Возвращает значение длины строкового представления <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Длина строкового представления <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Проверяет, равен ли объект этому идентификатору <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="obj" vsli:raw="The object to compare.">Объект для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект равен этому <see cref="T:System.Xml.UniqueId" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Создает хэш-код, представляющий идентификатор <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Целочисленный хэш-код, представляющий <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Указывает, является ли идентификатор <see cref="T:System.Xml.UniqueId" /> объектом <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <see cref="T:System.Xml.UniqueId" /> имеет значение <see cref="T:System.Guid" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Переопределяет оператор равенства для проверки равенства двух объектов <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Первая коллекция <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Второй объект <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">Значение <see langword="true" />, если оба объекта <see cref="T:System.Xml.UniqueId" /> равны или оба имеют значение <see langword="null" />; значение <see langword="false" />, если объекты не равны или только один из них имеет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Переопределяет оператор равенства для проверки неравенства двух объектов <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Первая коллекция <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Вторая категория <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если переопределенный оператор равенства возвращает значение <see langword="false" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">Помещает значение <see cref="T:System.Xml.UniqueId" /> в массив <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">Массив <see langword="char" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Позиция в массиве <see langword="char" /> для начала вставки значения <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Количество записей в массиве <see langword="char" />, заполненных значением <see cref="T:System.Xml.UniqueId" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">Параметры <paramref name="guid" /> и <paramref name="offset" /> предоставляют менее 16 допустимых байтов.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">Отображает значение <see cref="T:System.Xml.UniqueId" /> в строковом формате.</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Строковое представление значения <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">Предпринимает попытку получения значения <see cref="T:System.Xml.UniqueId" /> в виде <see cref="T:System.Guid" /> и сохранения его в данном массиве байтов после заданного смещения.</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Массив <see langword="byte" />, который будет содержать объект <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Позиция в массиве <see langword="byte" /> для начала вставки значения <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение, хранящееся в экземпляре <see cref="T:System.Xml.UniqueId" /> является <see cref="T:System.Guid" />; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины массива.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">Параметры <paramref name="buffer" /> и <paramref name="offset" /> предоставляют менее 16 допустимых байтов.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Предпринимает попытку получения значения <see cref="T:System.Xml.UniqueId" /> в виде <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Имеет значение <see cref="T:System.Guid" /> в случае успешного выполнения; иначе — <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если UniqueId представляет элемент <see cref="T:System.Guid" />, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">Параметры <paramref name="buffer" /> и <paramref name="offset" /> предоставляют менее 16 допустимых байтов.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">Обеспечивает динамическое управление оптимизированными строками</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlBinaryReaderSession" />.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">Создает объект <see cref="T:System.Xml.XmlDictionaryString" /> из входного параметра и добавляет его во внутреннюю коллекцию.</summary>
      <param name="id" vsli:raw="The key value.">Значение ключа.</param>
      <param name="value" vsli:raw="The value.">Значение.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">Новый созданный объект <see cref="T:System.Xml.XmlDictionaryString" />, который добавляется во внутреннюю коллекцию.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">Значение параметра <paramref name="id" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">Запись с ключом <paramref name="id" /> уже существует.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">Очищает внутреннюю коллекцию от всего содержимого.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">Проверяет, содержит ли внутренняя коллекция запись, соответствующую ключу.</summary>
      <param name="key" vsli:raw="The key to search on.">Искомый ключ.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Когда выполнение этого метода завершается, содержит строку, если запись была найдена; в противном случае — значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись, соответствующая <paramref name="key" />, найдена; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Проверяет, содержит ли внутренняя коллекция запись, соответствующую значению.</summary>
      <param name="value" vsli:raw="The value to search for.">Значение, которое нужно найти.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Когда выполнение этого метода завершается, содержит строку, если запись была найдена; в противном случае — значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись, соответствующая <paramref name="value" />, найдена; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Проверяет, содержит ли внутренняя коллекция запись, соответствующую значению.</summary>
      <param name="value" vsli:raw="The value to search for.">Значение, которое нужно найти.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Когда выполнение этого метода завершается, содержит строку, если запись была найдена; в противном случае — значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись, соответствующая <paramref name="value" />, найдена; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">Позволяет использовать динамический словарь для сжатия общих строк, присутствующих в сообщении и сохраняющих состояние.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">Создает экземпляр этого класса.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">Удаляет внутренние коллекции.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">Предпринимает попытку добавления строки <see cref="T:System.Xml.XmlDictionaryString" /> во внутреннюю коллекцию.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Xml.XmlDictionaryString" />.</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">Ключ <see cref="T:System.Xml.XmlDictionaryString" />, который был успешно добавлен.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если строку удалось добавить; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">Запись с ключом <paramref name="key" /> уже существует.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">Реализует словарь, используемый для оптимизации реализаций модулей чтения и записи XML в Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Создает пустой словарь <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">Создает <see cref="T:System.Xml.XmlDictionary" /> с начальной емкостью.</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">Начальный размер словаря.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Добавляет строку в <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">Строка, добавляемая в словарь.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">Добавленный объект <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Возвращает <see langword="static" /> пустой словарь <see cref="T:System.Xml.IXmlDictionary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">
        <see langword="static" /> пустой словарь <see cref="T:System.Xml.IXmlDictionary" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Попытки найти запись в словаре.</summary>
      <param name="key" vsli:raw="Key to look up.">Искомый ключ.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Если параметр <paramref name="key" /> определен, <see cref="T:System.Xml.XmlDictionaryString" />, сопоставляется с ключом; в противном случае — <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если ключ присутствует в словаре; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Выполняет поиск указанного значения в словаре.</summary>
      <param name="value" vsli:raw="String value being checked for.">Искомое строковое значение.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если обнаружена; в противном случае — <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение присутствует в словаре; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Проверяет наличие в словаре указанной строки <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">Строка <see cref="T:System.Xml.XmlDictionaryString" />, наличие которой проверяется.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Соответствующая строка <see cref="T:System.Xml.XmlDictionaryString" />, если обнаружена; в противном случае — <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Xml.XmlDictionaryString" /> присутствует в словаре; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> — <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">Класс <see langword="abstract" />, который Windows Communication Foundation (WCF) наследует от <see cref="T:System.Xml.XmlReader" /> для выполнения сериализации и десериализации.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">Создает экземпляр этого класса.  Вызывается только производными классами.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Данное свойство всегда возвращает значение <see langword="false" />. Производные классы могут переопределять параметры для возврата значения <see langword="true" />, если поддерживают канонизацию.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">Возвращает <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Квоты, применимые к этой операции.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.

или -

Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемый режим <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.
-или-
Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlDictionary" />.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемый режим <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlBinaryReaderSession" />.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.

или -

Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Квоты, применимые к этой операции.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">Параметр <paramref name="count" /> имеет значение меньше нуля или больше длины буфера минус величина смещения.
-или-
Параметр <paramref name="offset" /> имеет значение меньше нуля или больше длины буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Квоты, применимые к этой операции.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> редактора.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Квоты, применимые к этой операции.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="stream" /> или <paramref name="quotas" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> редактора.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Квоты, применимые к этой операции.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемый объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Объект <see cref="T:System.Xml.XmlBinaryReaderSession" />, который следует использовать.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, который может читать формат двоичных XML-данных .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Квоты, применимые к этой операции.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" /> из существующего объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="reader" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">Возможная кодировка на входе.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Возможные кодировки на входе.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Тип MIME Content-Type сообщения.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Возможные кодировки на входе.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Тип MIME Content-Type сообщения.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">Действие <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, к которому должно быть применено изменение.</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">Максимально допустимый размер буфера.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Возможные кодировки на входе.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">Возможная кодировка в потоке.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Возможные кодировки в потоке.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Тип MIME Content-Type сообщения.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Возможные кодировки в потоке.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Тип MIME Content-Type сообщения.</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">Тип MIME сообщения.</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">Действие <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, к которому должно быть применено изменение.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryReader" />, читающего XML-данные в формате MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Возможные кодировки в потоке.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">Объект <see cref="T:System.Text.Encoding" />, указывающий свойства кодировки, которые нужно применить.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Создает экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Создает экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">Объект <see cref="T:System.Text.Encoding" />, указывающий свойства кодировки, которые нужно применить.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">Применяемое семейство <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Делегат, вызываемый при закрытии модуля чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Создает экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Квоты, применимые к этому модулю чтения.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">Этот метод еще не реализован.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Всегда.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">При переопределении в производном классе получает значение атрибута.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая локальное имя атрибута.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая пространство имен атрибута.</param>
      <returns vsli:raw="The value of the attribute.">Значение атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">Возвращает неатомарные имена.</summary>
      <param name="localName" vsli:raw="The local name.">Локальное имя.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">Пространство имен для локального параметра <paramref name="localName" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Возвращает индекс локального имени текущего узла в массиве имен.</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">Массив строк локальных имен для поиска.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Пространство имен текущего узла.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">Индекс локального имени текущего узла в массиве имен.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> или любое из имен в массиве имеет значение <see langword="null" />.
-или-
<paramref name="namespaceUri" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Возвращает индекс локального имени текущего узла в массиве имен.</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">Массив <see cref="T:System.Xml.XmlDictionaryString" /> локальных имен для поиска.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Пространство имен текущего узла.</param>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">Индекс локального имени текущего узла в массиве имен.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> или любое из имен в массиве имеет значение <see langword="null" />.

или -

Свойство <paramref name="namespaceUri" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Проверяет, является ли параметр <paramref name="localName" /> локальным именем текущего узла.</summary>
      <param name="localName" vsli:raw="The local name of the current node.">Локальное имя текущего узла.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="localName" /> соответствует локальному имени текущего узла; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Проверяет, является ли параметр <paramref name="localName" /> локальным именем текущего узла.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая локальное имя текущего узла.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="localName" /> соответствует локальному имени текущего узла; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Проверяет, является ли параметр <paramref name="namespaceUri" /> пространством имен текущего узла.</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">Пространство имен текущего узла.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="namespaceUri" /> соответствует пространству имен текущего узла; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="namespaceUri" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Проверяет, является ли параметр <paramref name="namespaceUri" /> пространством имен текущего узла.</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">Пространство имен текущего узла.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="namespaceUri" /> соответствует пространству имен текущего узла; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="namespaceUri" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">Проверяет, установлен ли модуль чтения в начале массива. Этот класс возвращает значение <see langword="false" />, но производные классы, имеющие концепцию массивов, могут вернуть значение <see langword="true" />.</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Тип узла, если узел допустим; в противном случае — <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если модуль чтения размещен в начале узла массива; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">Проверяет, является ли первый тег открывающим или пустым тегом элемента, а также соответствует ли локальное имя и URI пространства таким же значениям текущего узла.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая локальное имя атрибута.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Строка <see cref="T:System.Xml.XmlDictionaryString" />, представляющая пространство имен атрибута.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если первый тег в массиве является открывающим тегом или пустым тегом элемента и соответствует <paramref name="localName" /> и <paramref name="namespaceUri" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">Проверяет, является ли текущий узел текстовым узлом.</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">Тип проверяемого узла.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если тип узла <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" /> или <see cref="F:System.Xml.XmlNodeType.Attribute" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом и соответствует ли свойство <see cref="P:System.Xml.XmlReader.Name" /> элемента данному аргументу.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">Свойство <see cref="P:System.Xml.XmlReader.Name" /> элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом и соответствуют ли свойства <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> элемента данным аргументам.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">URI пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">Проверяет, является ли текущий узел содержимого открывающим элементом или пустым элементом и соответствуют ли свойства <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> элемента данного аргумента.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">Получает значения квот, применимые к текущему экземпляру данного класса.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">Выражение <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, применяющееся к текущему экземпляру данного класса.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.DateTime" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Decimal" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Double" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Guid" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Считывает повторяющиеся вхождения целочисленных значений <see langword="short" /> в типизированном массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Массив, в который помещаются целые значения.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Количество целочисленных значений, помещаемых в массив.</param>
      <returns vsli:raw="The number of integers put in the array.">Количество целочисленных значений, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Считывает повторяющиеся вхождения целочисленных значений в типизированный массив.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Массив, в который помещаются целые значения.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Количество целочисленных значений, помещаемых в массив.</param>
      <returns vsli:raw="The number of integers put in the array.">Количество целочисленных значений, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Считывает повторяющиеся вхождения целочисленных значений <see langword="long" /> в типизированном массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Массив, в который помещаются целые значения.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Количество целочисленных значений, помещаемых в массив.</param>
      <returns vsli:raw="The number of integers put in the array.">Количество целочисленных значений, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Считывает повторяющиеся вхождения чисел с плавающей запятой <see langword="float" /> в типизированном массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">Массив, в который помещаются числа с плавающей запятой.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Количество чисел с плавающей запятой, помещаемых в массив.</param>
      <returns vsli:raw="The umber of float numbers put in the array.">Количество чисел с плавающей запятой, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.TimeSpan" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.DateTime" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Decimal" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">Считывает повторяющиеся вхождения типов узлов <see cref="T:System.Double" /> в типизированный массив.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Guid" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Считывает повторяющиеся вхождения целочисленных значений <see langword="short" /> в типизированном массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Массив, в который помещаются целые значения.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Количество целочисленных значений, помещаемых в массив.</param>
      <returns vsli:raw="The number of integers put in the array.">Количество целочисленных значений, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Считывает повторяющиеся вхождения целочисленных значений в типизированный массив.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Массив, в который помещаются целые значения.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Количество целочисленных значений, помещаемых в массив.</param>
      <returns vsli:raw="The number of integers put in the array.">Количество целочисленных значений, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Считывает повторяющиеся вхождения целочисленных значений <see langword="long" /> в типизированном массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Массив, в который помещаются целые значения.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Количество целочисленных значений, помещаемых в массив.</param>
      <returns vsli:raw="The number of integers put in the array.">Количество целочисленных значений, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Считывает повторяющиеся вхождения чисел с плавающей запятой <see langword="float" /> в типизированном массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">Массив, в который помещаются числа с плавающей запятой.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Количество чисел с плавающей запятой, помещаемых в массив.</param>
      <returns vsli:raw="The number of float numbers put in the array.">Количество чисел с плавающей запятой, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.TimeSpan" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Массив, в который помещаются узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Количество узлов для размещения в массиве.</param>
      <returns vsli:raw="The number of nodes put in the array.">Количество узлов, помещаемых в массив.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Массив <see cref="T:System.Boolean" /> узлов <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Считывает повторяющиеся вхождения узлов типа <see cref="T:System.Boolean" /> в типизированный массиве.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Массив <see cref="T:System.Boolean" /> узлов <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">Преобразует содержимое узла в заданный тип.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">Тип <see cref="T:System.Type" /> возвращаемого значения.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов. Например, этот объект можно использовать при преобразовании объекта <see cref="T:System.Xml.XmlQualifiedName" /> в <c>xs:string</c>. Это значение может быть пустой ссылкой.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Объединенное текстовое содержимое или значение атрибута, преобразованное в требуемый тип.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">Байтовый массив, содержащий раскодированные двоичные байты Base64.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">Размер массива больше значения квоты MaxArrayLength для данного модуля чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Считывает содержимое и возвращает раскодированные двоичные байты <see langword="BinHex" />.</summary>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Байтовый массив, содержащий раскодированные двоичные байты <see langword="BinHex" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Размер массива больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Считывает содержимое и возвращает раскодированные двоичные байты <see langword="BinHex" />.</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">Максимальная длина массива.</param>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Байтовый массив, содержащий раскодированные двоичные байты <see langword="BinHex" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">Размер массива больше <paramref name="maxByteArrayContentLength" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">Выполняет чтение содержимого в массиве <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">Массив, в который помещаются символы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">Количество символов, помещаемых в массив.</param>
      <returns vsli:raw="Number of characters read.">Количество прочитанных символов.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">Преобразует содержимое узла в <see langword="decimal" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">Представление <see langword="decimal" /> содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">Преобразует содержимое узла в <see langword="float" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">Представление <see langword="float" /> содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">Преобразует содержимое узла в <see langword="guid" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">Представление <see langword="guid" /> содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">Преобразует содержимое узла в представление полного имени.</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Часть <see cref="P:System.Xml.XmlReader.LocalName" /> полного имени (параметр <see langword="out" />).</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Часть <see cref="P:System.Xml.XmlReader.NamespaceURI" /> полного имени (параметр <see langword="out" />).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">Преобразует содержимое узла в строку.</summary>
      <returns vsli:raw="The node content in a string representation.">Содержимое узла в строковом представлении.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">Преобразует содержимое узла в строку.</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">Максимальная длина строки.</param>
      <returns vsli:raw="Node content in string representation.">Содержимое узла в строковом представлении.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Преобразует содержимое узла в строку.</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">Массив строк, с которым сопоставляется содержимое.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Индекс записи в <paramref name="strings" />, соответствующий содержимому.</param>
      <returns vsli:raw="The node content in a string representation.">Содержимое узла в строковом представлении.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="strings" /> имеет значение <see langword="null" />.
-или-
Запись в <paramref name="strings" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Преобразует содержимое узла в строку.</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">Массив объектов <see cref="T:System.Xml.XmlDictionaryString" />, с которым сопоставляется содержимое.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Индекс записи в <paramref name="strings" />, соответствующий содержимому.</param>
      <returns vsli:raw="The node content in a string representation.">Содержимое узла в строковом представлении.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> — <see langword="null" />.
-или-
Запись в <paramref name="strings" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Преобразует содержимое узла в <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">Представление <see cref="T:System.TimeSpan" /> содержимого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">Преобразует содержимое узла в уникальный идентификатор.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">Содержимое узла, представленное в виде уникального идентификатора.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Содержимое узла, представленное в виде массива <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Преобразует содержимое узла в массив <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Содержимое узла, представленное в виде массива <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Преобразует содержимое узла в массив <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Содержимое узла, представленное в виде массива <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Преобразует содержимое узла в массив <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Содержимое узла, представленное в виде массива <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Преобразует содержимое узла в массив <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Содержимое узла, представленное в виде массива <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Преобразует содержимое узла в массив <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Содержимое узла, представленное в виде массива <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">Преобразует содержимое узла в массив байтов Base64.</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">Содержимое узла, представленное в виде массива байтов Base64.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Преобразует содержимое узла в массив байтов <see langword="BinHex" />.</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Содержимое узла, представленное в виде массива байтов <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Преобразует содержимое элемента в <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Содержимое узла, представленное в виде <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Преобразует содержимое элемента в <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Содержимое узла, представленное в виде <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Элемент имеет недопустимый формат.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Элемент имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Преобразует содержимое элемента в <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Содержимое узла, представленное в виде <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Преобразует содержимое элемента в <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Содержимое узла, представленное в виде <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Преобразует содержимое элемента в число с плавающей запятой (<see cref="T:System.Single" />).</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Содержимое узла, представленное в виде числа с плавающей запятой (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Преобразует содержимое элемента в <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Содержимое узла, представленное в виде <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Элемент имеет недопустимый формат.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Элемент имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Преобразует содержимое элемента в целое число (<see cref="T:System.Int32" />).</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Содержимое узла, представленное в виде целого числа (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Преобразует содержимое элемента в длинное целое число (<see cref="T:System.Int64" />).</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Содержимое узла, представленное в виде длинного целого числа (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует содержимое элемента в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Содержимое узла, представленное в виде <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Преобразует содержимое элемента в <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Содержимое узла, представленное в виде <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">Преобразует содержимое элемента в уникальный идентификатор.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">Содержимое узла, представленное в виде уникального идентификатора.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Элемент имеет недопустимый формат.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Элемент имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">Проверяет, является ли текущий узел элементом, и перемещает модуль чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">Проверяет, является ли текущий узел элементом <paramref name="name" /> и перемещает модуль чтения на следующий узел.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Проверенное имя элемента.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Проверяет, является ли текущий узел элементом сданным <paramref name="localName" /> и <paramref name="namespaceUri" />, и перемещает модуль чтения на следующий узел.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Проверяет, является ли текущий узел элементом сданным <paramref name="localName" /> и <paramref name="namespaceUri" />, и перемещает модуль чтения на следующий узел.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> возвращает <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Массив дескрипторов вывода <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Массив дескрипторов вывода <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Массив целых чисел <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Массив целых чисел <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Массив целых чисел <see cref="T:System.Int32" /> ().</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Массив целых чисел <see cref="T:System.Int32" /> ().</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Массив целых чисел <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив целых чисел <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Массив целых чисел <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив чисел <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Массив чисел <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Считывает содержимое последовательности узлов с данными <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив чисел <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Массив чисел <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Проверяет, является ли текущий узел элементом сданным <paramref name="localName" /> и <paramref name="namespaceUri" />, и перемещает модуль чтения на следующий узел.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">Считывает содержимое текущего узла в строку.</summary>
      <returns vsli:raw="A string that contains the contents of the current node.">Строка, содержащая содержимое текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Не удалось выполнить чтение содержимого текущего узла.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Превышена максимально допустимая длина строки.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">Считывает содержимое текущего узла в строку данной максимальной длины.</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">Максимально допустимая длина строки.</param>
      <returns vsli:raw="A string that contains the contents of the current node.">Строка, содержащая содержимое текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Не удалось выполнить чтение содержимого текущего узла.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Превышена максимально допустимая длина строки.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Массив <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Считывает содержимое последовательности узлов с данным <paramref name="localName" /> и <paramref name="namespaceUri" /> в массив <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Массив <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">Не реализовано.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">Буфер, из которого выполняется чтение.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Начальное положение для чтения из параметра <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Число байтов, которое может быть считано из буфера, заданного параметром <paramref name="buffer" />.</param>
      <returns vsli:raw="Not implemented.">Не реализован.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Всегда.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">Этот метод еще не реализован.</summary>
      <param name="stream" vsli:raw="The stream to read from.">Поток, из которого требуется выполнить чтение.</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">Определяет, включаются ли комментарии.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Префиксы, подлежащие включению.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Всегда.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Не реализовано в данном классе (всегда возвращается <see langword="false" />). Может переопределяться в производных классах.</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">Возвращает 0, если не переопределено в производном классе.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">Значение <see langword="false" />, если не переопределено в производном классе.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Не реализовано в данном классе (всегда возвращается <see langword="false" />). Может переопределяться в производных классах.</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">Возвращает 0, если не переопределено в производном классе.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">Значение <see langword="false" />, если не переопределено в производном классе.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Не реализовано в данном классе (всегда возвращается <see langword="false" />). Может переопределяться в производных классах.</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">Возвращает <see langword="null" />, если не переопределено в производном классе. .</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">Значение <see langword="false" />, если не переопределено в производном классе.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Не реализовано в данном классе (всегда возвращается <see langword="false" />). Может переопределяться в производных классах.</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Возвращает <see langword="null" />, если не переопределено в производном классе.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">Значение <see langword="false" />, если не переопределено в производном классе.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Не реализовано в данном классе (всегда возвращается <see langword="false" />). Может переопределяться в производных классах.</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Возвращает <see langword="null" />, если не переопределено в производном классе.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">Значение <see langword="false" />, если не переопределено в производном классе.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">Содержит настраиваемые значения квоты для XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">Создает новый экземпляр данного класса.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">Задает свойства для переданного экземпляра квот, основываясь на значениях в данном экземпляре.</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в который следует выполнить копирование значение.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">Попытка <see langword="set" /> значение при доступе только для чтения к значению квоты для переданного экземпляра.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Переданные целевые <paramref name="quotas" /> равны <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">Возвращает экземпляр данного класса с максимальными значениями для всех свойств.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> со значениями свойств <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">Получает или задает максимально допустимую длину массива.</summary>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">Максимально допустимая длина массива. Значение по умолчанию — 16384.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Попытка <see langword="set" /> значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Попытка <see langword="set" /> значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">Получает или задает максимально допустимое число байтов, возвращаемых для каждой операции чтения.</summary>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">Максимально допустимое число байтов, возвращаемых для каждой операции чтения. Значение по умолчанию — 4096.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Попытка <see langword="set" /> значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Попытка <see langword="set" /> значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">Получает или задает максимальную глубину вложенного узла.</summary>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">Максимальная глубина вложенного узла. Значение по умолчанию — 32.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">Попытка <see langword="set" /> значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">Попытка <see langword="set" /> значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">Получает или задает максимальное количество символов в имени таблицы.</summary>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">Максимально допустимое количество символов в имени таблицы. Значение по умолчанию — 16384.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Попытка <see langword="set" /> значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Попытка <see langword="set" /> значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">Получает или задает максимальную длину строки, возвращаемую модулем чтения.</summary>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">Максимальная длина строки, возвращаемой модулем чтения. Значение по умолчанию — 8192.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Попытка <see langword="set" /> значение при доступе только для чтения к значению квоты для данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Попытка <see langword="set" /> значение меньше нуля.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Получает измененные квоты для <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Измененные квоты для <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">Перечисляет настраиваемые значения квоты для класса XmlDictionaryReaders.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">Указывает максимально допустимую длину массива.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">Указывает максимальное допустимое число байтов, возвращаемых для каждой операции чтения.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">Указывает максимальную глубину вложенного узла.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">Указывает максимально допустимое количество символов в имени таблицы.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">Указывает максимальную длину строки, возвращаемой средством чтения.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Представляет запись, которая хранится в <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">Создает экземпляр этого класса.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">Класс <see cref="T:System.Xml.IXmlDictionary" />, содержащий этот экземпляр.</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">Строка, являющаяся значением записи словаря.</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">Целое число, являющееся ключом записи словаря.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dictionary" /> или <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">Параметр <paramref name="key" /> имеет значение меньше 0 или больше <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Представляет <see cref="T:System.Xml.IXmlDictionary" />, передаваемый конструктору экземпляра <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">
        <see cref="T:System.Xml.IXmlDictionary" /> для этой записи словаря.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Возвращает объект <see cref="T:System.Xml.XmlDictionaryString" />, представляющий пустую строку.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Объект <see cref="T:System.Xml.XmlDictionaryString" />, представляющий пустую строку.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">Возвращает целочисленный ключ для экземпляра класса.</summary>
      <returns vsli:raw="The integer key for this instance of the class.">Целочисленный ключ для этого экземпляра класса.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">Отображает текстовое представление объекта.</summary>
      <returns vsli:raw="The string value for this instance of the class.">Строковое значение для этого экземпляра класса.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">Возвращает строковое значение для этого экземпляра класса.</summary>
      <returns vsli:raw="The string value for this instance of the class.">Строковое значение для этого экземпляра класса.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">Представляет абстрактный класс, который Windows Communication Foundation (WCF) наследует от <see cref="T:System.Xml.XmlWriter" /> для выполнения сериализации и десериализации.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Данное свойство всегда возвращает значение <see langword="false" />. Производные классы могут переопределять параметры для возврата значения <see langword="true" />, если поддерживают канонизацию.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать в качестве общего словаря.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать в качестве общего словаря.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML в двоичном формате WCF.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Поток, из которого требуется выполнить чтение.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">Объект <see cref="T:System.Xml.XmlDictionary" />, который следует использовать в качестве общего словаря.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlBinaryWriterSession" />.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Создает экземпляр класса <see cref="T:System.Xml.XmlDictionaryWriter" /> из существующего объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlWriter" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="writer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML-данные в формате MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Кодировка в потоке.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Максимальное число копируемых в буфер модуля записи байтов.</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">Атрибут в заголовке SOAP ContentType.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего XML-данные в формате MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Кодировка в потоке.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Максимальное число копируемых в буфер модуля записи байтов.</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">Тип содержимого части MIME, содержащий набор сведений.</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">Граница MIME в сообщении.</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">Универсальный код ресурса (URI) идентификатора одержимого части MIME, содержащей набор сведений.</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">Значение <see langword="true" /> для записи заголовков сообщений.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего текстовый XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего текстовый XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">Кодировка в выходе.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Создает экземпляр объекта <see cref="T:System.Xml.XmlDictionaryWriter" />, записывающего текстовый XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">Кодировка в потоке.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">При реализации производным классом прекращает канонизацию, начатую соответствующим вызовом <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Этот метод еще не реализован.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">При реализации производным классом, запускает канонизацию.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Поток, в который требуется выполнить запись.</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если комментарии необходимо включить; в противном случае — значение <see langword="false" />.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Префиксы, подлежащие включению.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Этот метод еще не реализован.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the data.">Массив, содержащий данные.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of values to write from the array.">Количество значений, записываемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.

или -

Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Записывает узлы из массива <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Массив, содержащий узлы.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Количество узлов, возвращаемых из массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">Значение параметра <paramref name="offset" /> &lt; 0 или &gt; длины <paramref name="array" />.
-или-
Значение параметра <paramref name="count" /> &lt; 0 или &gt; длины <paramref name="array" /> минус <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Записывает полное имя и значение атрибута.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">Префикс атрибута.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Локальное имя атрибута.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <param name="value" vsli:raw="The attribute.">Атрибут.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Записывает полное имя и значение атрибута.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Локальное имя атрибута.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Универсальный код ресурса (URI) пространства имен атрибута.</param>
      <param name="value" vsli:raw="The attribute.">Атрибут.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Асинхронно преобразует указанный набор двоичных байтов в кодировку Base64 и записывает получившийся текст.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Кодируемый массив байтов.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Количество записываемых байтов.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Задача, представляющая асинхронную операцию <see langword="WriteBase64" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Метод <see cref="T:System.Xml.XmlDictionaryWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlDictionaryWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Записывает элемент с текстовым содержимым.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Префикс элемента.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="value" vsli:raw="The element content.">Содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Записывает элемент с текстовым содержимым.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <param name="value" vsli:raw="The element content.">Содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Записывает текущий XML-узел из объекта <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы скопировать атрибуты по умолчанию из <see langword="XmlReader" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="reader" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Записывает текущий XML-узел из объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы скопировать атрибуты по умолчанию из <see cref="T:System.Xml.XmlReader" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="reader" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Записывает полное имя пространства имен. Этот метод выполняет поиск префикса для пространства имен в его области.</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">Локальное имя полного имени.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">URI-код пространства имен полного имени.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">Записывает начальное значение атрибута с заданным префиксом, локальным именем и URI пространства имен.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Префикс пространства имен.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Локальное имя атрибута.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Универсальный код ресурса (URI) пространства имен атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">Записывает начала атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Локальное имя атрибута.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">Универсальный код ресурса (URI) пространства имен атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Префикс элемента.</param>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Модуль записи закрыт.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">Записывает указанный открывающий тег и связывает его с заданным пространством имен.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Локальное имя элемента.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Универсальный код ресурса (URI) пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Модуль записи закрыт.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">Записывает заданное текстовое содержимое.</summary>
      <param name="value" vsli:raw="The text to write.">Текст для записи.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">Записывает текстовый узел, на котором в данный момент расположен объект <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, из которого возвращается текстовое значение.</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что средство чтения расположено в значении атрибута или содержимом элемента; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Записывает значение <see cref="T:System.Guid" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">Значение <see cref="T:System.Guid" /> для записи.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Записывает значение <see cref="T:System.TimeSpan" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">Значение <see cref="T:System.TimeSpan" /> для записи.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Записывает значение из <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Значение <see cref="T:System.Xml.IStreamProvider" /> для записи.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">Параметр <paramref name="value" /> возвращает потоковый объект <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Метод <see cref="T:System.Xml.XmlDictionaryWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">Записывает значение уникального идентификатора.</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">Значение уникального идентификатора для записи.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Записывает значение <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Значение <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Асинхронно записывает значение из <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Значение <see cref="T:System.Xml.IStreamProvider" /> для записи.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">Задача, представляющая асинхронную операцию <see langword="WriteValue" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Метод <see cref="T:System.Xml.XmlDictionaryWriter" /> вызван перед завершением предыдущей асинхронной операции. В этом случае возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Асинхронная операция уже выполняется".

или -

Асинхронный метод <see cref="T:System.Xml.XmlDictionaryWriter" /> вызван без присваивания флагу <see cref="P:System.Xml.XmlWriterSettings.Async" /> значения <see langword="true" />. В этом случае вызывается исключение <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">Записывает стандартный атрибут XML в текущий узел.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Локальное имя атрибута.</param>
      <param name="value" vsli:raw="The value of the attribute.">Значение атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">Записывает атрибут XML в текущий узел.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Локальное имя атрибута.</param>
      <param name="value" vsli:raw="The value of the attribute.">Значение атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Записывает атрибут объявления пространства имен.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Префикс, привязанный к данному пространству имен.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">Пространство имен, к которому привязан префикс.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="namespaceUri" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Записывает атрибут объявления пространства имен.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Префикс, привязанный к данному пространству имен.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">Пространство имен, к которому привязан префикс.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="namespaceUri" /> имеет значение <see langword="null" />.</exception>
    </member>
  </members>
</doc>